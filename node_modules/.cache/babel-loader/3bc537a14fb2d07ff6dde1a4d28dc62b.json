{"ast":null,"code":"import _regeneratorRuntime from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _inherits from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _createForOfIteratorHelper from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar A;\nvar I = new Array(32).fill(void 0);\nfunction g(A) {\n  return I[A];\n}\nI.push(void 0, null, !0, !1);\nvar C,\n  B,\n  Q = I.length;\nfunction E(A) {\n  var C = g(A);\n  return function (A) {\n    A < 36 || (I[A] = Q, Q = A);\n  }(A), C;\n}\nfunction i(A) {\n  Q === I.length && I.push(I.length + 1);\n  var g = Q;\n  return Q = I[g], I[g] = A, g;\n}\nfunction D(A) {\n  return null == A;\n}\nfunction o() {\n  return 0 === C.byteLength && (C = new Float64Array(A.memory.buffer)), C;\n}\nfunction G() {\n  return 0 === B.byteLength && (B = new Int32Array(A.memory.buffer)), B;\n}\nvar S = new TextDecoder(\"utf-8\", {\n  ignoreBOM: !0,\n  fatal: !0\n});\nvar w;\nfunction k(I, g) {\n  return S.decode((0 === w.byteLength && (w = new Uint8Array(A.memory.buffer)), w).subarray(I, I + g));\n}\nfunction U(A, I) {\n  if (!(A instanceof I)) throw new Error(\"expected instance of \".concat(I.name));\n  return A.ptr;\n}\nS.decode();\nvar K,\n  a,\n  J = 32;\nfunction y(A) {\n  if (1 == J) throw new Error(\"out of js stack\");\n  return I[--J] = A, J;\n}\nfunction M() {\n  return 0 === K.byteLength && (K = new Float32Array(A.memory.buffer)), K;\n}\nfunction h(A, I) {\n  return M().subarray(A / 4, A / 4 + I);\n}\nfunction N() {\n  return 0 === a.byteLength && (a = new Uint32Array(A.memory.buffer)), a;\n}\nvar F = 0;\nfunction R(A, I) {\n  var g = I(4 * A.length);\n  return M().set(A, g / 4), F = A.length, g;\n}\nfunction q(A, I) {\n  var g = I(4 * A.length);\n  return N().set(A, g / 4), F = A.length, g;\n}\nfunction s(I, g) {\n  try {\n    return I.apply(this, g);\n  } catch (I) {\n    A.__wbindgen_exn_store(i(I));\n  }\n}\nObject.freeze({\n  Revolute: 0,\n  0: \"Revolute\",\n  Fixed: 1,\n  1: \"Fixed\",\n  Prismatic: 2,\n  2: \"Prismatic\",\n  Spherical: 3,\n  3: \"Spherical\",\n  Generic: 4,\n  4: \"Generic\"\n}), Object.freeze({\n  AccelerationBased: 0,\n  0: \"AccelerationBased\",\n  ForceBased: 1,\n  1: \"ForceBased\"\n});\nvar c = Object.freeze({\n  X: 0,\n  0: \"X\",\n  Y: 1,\n  1: \"Y\",\n  Z: 2,\n  2: \"Z\",\n  AngX: 3,\n  3: \"AngX\",\n  AngY: 4,\n  4: \"AngY\",\n  AngZ: 5,\n  5: \"AngZ\"\n});\nObject.freeze({\n  Dynamic: 0,\n  0: \"Dynamic\",\n  Fixed: 1,\n  1: \"Fixed\",\n  KinematicPositionBased: 2,\n  2: \"KinematicPositionBased\",\n  KinematicVelocityBased: 3,\n  3: \"KinematicVelocityBased\"\n}), Object.freeze({\n  Vertex: 0,\n  0: \"Vertex\",\n  Edge: 1,\n  1: \"Edge\",\n  Face: 2,\n  2: \"Face\",\n  Unknown: 3,\n  3: \"Unknown\"\n}), Object.freeze({\n  Ball: 0,\n  0: \"Ball\",\n  Cuboid: 1,\n  1: \"Cuboid\",\n  Capsule: 2,\n  2: \"Capsule\",\n  Segment: 3,\n  3: \"Segment\",\n  Polyline: 4,\n  4: \"Polyline\",\n  Triangle: 5,\n  5: \"Triangle\",\n  TriMesh: 6,\n  6: \"TriMesh\",\n  HeightField: 7,\n  7: \"HeightField\",\n  Compound: 8,\n  8: \"Compound\",\n  ConvexPolyhedron: 9,\n  9: \"ConvexPolyhedron\",\n  Cylinder: 10,\n  10: \"Cylinder\",\n  Cone: 11,\n  11: \"Cone\",\n  RoundCuboid: 12,\n  12: \"RoundCuboid\",\n  RoundTriangle: 13,\n  13: \"RoundTriangle\",\n  RoundCylinder: 14,\n  14: \"RoundCylinder\",\n  RoundCone: 15,\n  15: \"RoundCone\",\n  RoundConvexPolyhedron: 16,\n  16: \"RoundConvexPolyhedron\"\n});\nvar Y = /*#__PURE__*/function () {\n  function Y() {\n    _classCallCheck(this, Y);\n    var I = A.rawbroadphase_new();\n    return Y.__wrap(I);\n  }\n  _createClass(Y, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawbroadphase_free(I);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(Y.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return Y;\n}();\nvar L = /*#__PURE__*/function () {\n  function L() {\n    _classCallCheck(this, L);\n    var I = A.rawccdsolver_new();\n    return L.__wrap(I);\n  }\n  _createClass(L, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawccdsolver_free(I);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(L.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return L;\n}();\nvar H = /*#__PURE__*/function () {\n  function H() {\n    _classCallCheck(this, H);\n    var I = A.rawcolliderset_new();\n    return H.__wrap(I);\n  }\n  _createClass(H, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawcolliderset_free(I);\n    }\n  }, {\n    key: \"coTranslation\",\n    value: function coTranslation(I) {\n      var g = A.rawcolliderset_coTranslation(this.ptr, I);\n      return gA.__wrap(g);\n    }\n  }, {\n    key: \"coRotation\",\n    value: function coRotation(I) {\n      var g = A.rawcolliderset_coRotation(this.ptr, I);\n      return u.__wrap(g);\n    }\n  }, {\n    key: \"coSetTranslation\",\n    value: function coSetTranslation(I, g, C, B) {\n      A.rawcolliderset_coSetTranslation(this.ptr, I, g, C, B);\n    }\n  }, {\n    key: \"coSetTranslationWrtParent\",\n    value: function coSetTranslationWrtParent(I, g, C, B) {\n      A.rawcolliderset_coSetTranslationWrtParent(this.ptr, I, g, C, B);\n    }\n  }, {\n    key: \"coSetRotation\",\n    value: function coSetRotation(I, g, C, B, Q) {\n      A.rawcolliderset_coSetRotation(this.ptr, I, g, C, B, Q);\n    }\n  }, {\n    key: \"coSetRotationWrtParent\",\n    value: function coSetRotationWrtParent(I, g, C, B, Q) {\n      A.rawcolliderset_coSetRotationWrtParent(this.ptr, I, g, C, B, Q);\n    }\n  }, {\n    key: \"coIsSensor\",\n    value: function coIsSensor(I) {\n      return 0 !== A.rawcolliderset_coIsSensor(this.ptr, I);\n    }\n  }, {\n    key: \"coShapeType\",\n    value: function coShapeType(I) {\n      return A.rawcolliderset_coShapeType(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"coHalfExtents\",\n    value: function coHalfExtents(I) {\n      var g = A.rawcolliderset_coHalfExtents(this.ptr, I);\n      return 0 === g ? void 0 : gA.__wrap(g);\n    }\n  }, {\n    key: \"coRadius\",\n    value: function coRadius(I) {\n      try {\n        var _B = A.__wbindgen_add_to_stack_pointer(-16);\n        A.rawcolliderset_coRadius(_B, this.ptr, I);\n        var g = G()[_B / 4 + 0],\n          C = M()[_B / 4 + 1];\n        return 0 === g ? void 0 : C;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }, {\n    key: \"coHalfHeight\",\n    value: function coHalfHeight(I) {\n      try {\n        var _B2 = A.__wbindgen_add_to_stack_pointer(-16);\n        A.rawcolliderset_coHalfHeight(_B2, this.ptr, I);\n        var g = G()[_B2 / 4 + 0],\n          C = M()[_B2 / 4 + 1];\n        return 0 === g ? void 0 : C;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }, {\n    key: \"coRoundRadius\",\n    value: function coRoundRadius(I) {\n      try {\n        var _B3 = A.__wbindgen_add_to_stack_pointer(-16);\n        A.rawcolliderset_coRoundRadius(_B3, this.ptr, I);\n        var g = G()[_B3 / 4 + 0],\n          C = M()[_B3 / 4 + 1];\n        return 0 === g ? void 0 : C;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }, {\n    key: \"coVertices\",\n    value: function coVertices(I) {\n      try {\n        var _B4 = A.__wbindgen_add_to_stack_pointer(-16);\n        A.rawcolliderset_coVertices(_B4, this.ptr, I);\n        var g = G()[_B4 / 4 + 0],\n          C = G()[_B4 / 4 + 1];\n        var _Q;\n        return 0 !== g && (_Q = h(g, C).slice(), A.__wbindgen_free(g, 4 * C)), _Q;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }, {\n    key: \"coIndices\",\n    value: function coIndices(I) {\n      try {\n        var _B5 = A.__wbindgen_add_to_stack_pointer(-16);\n        A.rawcolliderset_coIndices(_B5, this.ptr, I);\n        var g = G()[_B5 / 4 + 0],\n          C = G()[_B5 / 4 + 1];\n        var _Q2;\n        return 0 !== g && (_Q2 = function (A, I) {\n          return N().subarray(A / 4, A / 4 + I);\n        }(g, C).slice(), A.__wbindgen_free(g, 4 * C)), _Q2;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }, {\n    key: \"coHeightfieldHeights\",\n    value: function coHeightfieldHeights(I) {\n      try {\n        var _B6 = A.__wbindgen_add_to_stack_pointer(-16);\n        A.rawcolliderset_coHeightfieldHeights(_B6, this.ptr, I);\n        var g = G()[_B6 / 4 + 0],\n          C = G()[_B6 / 4 + 1];\n        var _Q3;\n        return 0 !== g && (_Q3 = h(g, C).slice(), A.__wbindgen_free(g, 4 * C)), _Q3;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }, {\n    key: \"coHeightfieldScale\",\n    value: function coHeightfieldScale(I) {\n      var g = A.rawcolliderset_coHeightfieldScale(this.ptr, I);\n      return 0 === g ? void 0 : gA.__wrap(g);\n    }\n  }, {\n    key: \"coHeightfieldNRows\",\n    value: function coHeightfieldNRows(I) {\n      try {\n        var _B7 = A.__wbindgen_add_to_stack_pointer(-16);\n        A.rawcolliderset_coHeightfieldNRows(_B7, this.ptr, I);\n        var g = G()[_B7 / 4 + 0],\n          C = G()[_B7 / 4 + 1];\n        return 0 === g ? void 0 : C >>> 0;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }, {\n    key: \"coHeightfieldNCols\",\n    value: function coHeightfieldNCols(I) {\n      try {\n        var _B8 = A.__wbindgen_add_to_stack_pointer(-16);\n        A.rawcolliderset_coHeightfieldNCols(_B8, this.ptr, I);\n        var g = G()[_B8 / 4 + 0],\n          C = G()[_B8 / 4 + 1];\n        return 0 === g ? void 0 : C >>> 0;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }, {\n    key: \"coParent\",\n    value: function coParent(I) {\n      try {\n        var _B9 = A.__wbindgen_add_to_stack_pointer(-16);\n        A.rawcolliderset_coParent(_B9, this.ptr, I);\n        var g = G()[_B9 / 4 + 0],\n          C = o()[_B9 / 8 + 1];\n        return 0 === g ? void 0 : C;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }, {\n    key: \"coFriction\",\n    value: function coFriction(I) {\n      return A.rawcolliderset_coFriction(this.ptr, I);\n    }\n  }, {\n    key: \"coRestitution\",\n    value: function coRestitution(I) {\n      return A.rawcolliderset_coRestitution(this.ptr, I);\n    }\n  }, {\n    key: \"coDensity\",\n    value: function coDensity(I) {\n      return A.rawcolliderset_coDensity(this.ptr, I);\n    }\n  }, {\n    key: \"coMass\",\n    value: function coMass(I) {\n      return A.rawcolliderset_coMass(this.ptr, I);\n    }\n  }, {\n    key: \"coVolume\",\n    value: function coVolume(I) {\n      return A.rawcolliderset_coVolume(this.ptr, I);\n    }\n  }, {\n    key: \"coCollisionGroups\",\n    value: function coCollisionGroups(I) {\n      return A.rawcolliderset_coCollisionGroups(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"coSolverGroups\",\n    value: function coSolverGroups(I) {\n      return A.rawcolliderset_coSolverGroups(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"coActiveHooks\",\n    value: function coActiveHooks(I) {\n      return A.rawcolliderset_coActiveHooks(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"coActiveCollisionTypes\",\n    value: function coActiveCollisionTypes(I) {\n      return A.rawcolliderset_coActiveCollisionTypes(this.ptr, I);\n    }\n  }, {\n    key: \"coActiveEvents\",\n    value: function coActiveEvents(I) {\n      return A.rawcolliderset_coActiveEvents(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"coContactForceEventThreshold\",\n    value: function coContactForceEventThreshold(I) {\n      return A.rawcolliderset_coContactForceEventThreshold(this.ptr, I);\n    }\n  }, {\n    key: \"coContainsPoint\",\n    value: function coContainsPoint(I, g) {\n      U(g, gA);\n      return 0 !== A.rawcolliderset_coContainsPoint(this.ptr, I, g.ptr);\n    }\n  }, {\n    key: \"coCastShape\",\n    value: function coCastShape(I, g, C, B, Q, E, i) {\n      U(g, gA), U(C, _), U(B, gA), U(Q, u), U(E, gA);\n      var D = A.rawcolliderset_coCastShape(this.ptr, I, g.ptr, C.ptr, B.ptr, Q.ptr, E.ptr, i);\n      return 0 === D ? void 0 : IA.__wrap(D);\n    }\n  }, {\n    key: \"coCastCollider\",\n    value: function coCastCollider(I, g, C, B, Q) {\n      U(g, gA), U(B, gA);\n      var E = A.rawcolliderset_coCastCollider(this.ptr, I, g.ptr, C, B.ptr, Q);\n      return 0 === E ? void 0 : $.__wrap(E);\n    }\n  }, {\n    key: \"coIntersectsShape\",\n    value: function coIntersectsShape(I, g, C, B) {\n      U(g, _), U(C, gA), U(B, u);\n      return 0 !== A.rawcolliderset_coIntersectsShape(this.ptr, I, g.ptr, C.ptr, B.ptr);\n    }\n  }, {\n    key: \"coContactShape\",\n    value: function coContactShape(I, g, C, B, Q) {\n      U(g, _), U(C, gA), U(B, u);\n      var E = A.rawcolliderset_coContactShape(this.ptr, I, g.ptr, C.ptr, B.ptr, Q);\n      return 0 === E ? void 0 : AA.__wrap(E);\n    }\n  }, {\n    key: \"coContactCollider\",\n    value: function coContactCollider(I, g, C) {\n      var B = A.rawcolliderset_coContactCollider(this.ptr, I, g, C);\n      return 0 === B ? void 0 : AA.__wrap(B);\n    }\n  }, {\n    key: \"coProjectPoint\",\n    value: function coProjectPoint(I, g, C) {\n      U(g, gA);\n      var B = A.rawcolliderset_coProjectPoint(this.ptr, I, g.ptr, C);\n      return V.__wrap(B);\n    }\n  }, {\n    key: \"coIntersectsRay\",\n    value: function coIntersectsRay(I, g, C, B) {\n      U(g, gA), U(C, gA);\n      return 0 !== A.rawcolliderset_coIntersectsRay(this.ptr, I, g.ptr, C.ptr, B);\n    }\n  }, {\n    key: \"coCastRay\",\n    value: function coCastRay(I, g, C, B, Q) {\n      U(g, gA), U(C, gA);\n      return A.rawcolliderset_coCastRay(this.ptr, I, g.ptr, C.ptr, B, Q);\n    }\n  }, {\n    key: \"coCastRayAndGetNormal\",\n    value: function coCastRayAndGetNormal(I, g, C, B, Q) {\n      U(g, gA), U(C, gA);\n      var E = A.rawcolliderset_coCastRayAndGetNormal(this.ptr, I, g.ptr, C.ptr, B, Q);\n      return 0 === E ? void 0 : X.__wrap(E);\n    }\n  }, {\n    key: \"coSetSensor\",\n    value: function coSetSensor(I, g) {\n      A.rawcolliderset_coSetSensor(this.ptr, I, g);\n    }\n  }, {\n    key: \"coSetRestitution\",\n    value: function coSetRestitution(I, g) {\n      A.rawcolliderset_coSetRestitution(this.ptr, I, g);\n    }\n  }, {\n    key: \"coSetFriction\",\n    value: function coSetFriction(I, g) {\n      A.rawcolliderset_coSetFriction(this.ptr, I, g);\n    }\n  }, {\n    key: \"coFrictionCombineRule\",\n    value: function coFrictionCombineRule(I) {\n      return A.rawcolliderset_coFrictionCombineRule(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"coSetFrictionCombineRule\",\n    value: function coSetFrictionCombineRule(I, g) {\n      A.rawcolliderset_coSetFrictionCombineRule(this.ptr, I, g);\n    }\n  }, {\n    key: \"coRestitutionCombineRule\",\n    value: function coRestitutionCombineRule(I) {\n      return A.rawcolliderset_coRestitutionCombineRule(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"coSetRestitutionCombineRule\",\n    value: function coSetRestitutionCombineRule(I, g) {\n      A.rawcolliderset_coSetRestitutionCombineRule(this.ptr, I, g);\n    }\n  }, {\n    key: \"coSetCollisionGroups\",\n    value: function coSetCollisionGroups(I, g) {\n      A.rawcolliderset_coSetCollisionGroups(this.ptr, I, g);\n    }\n  }, {\n    key: \"coSetSolverGroups\",\n    value: function coSetSolverGroups(I, g) {\n      A.rawcolliderset_coSetSolverGroups(this.ptr, I, g);\n    }\n  }, {\n    key: \"coSetActiveHooks\",\n    value: function coSetActiveHooks(I, g) {\n      A.rawcolliderset_coSetActiveHooks(this.ptr, I, g);\n    }\n  }, {\n    key: \"coSetActiveEvents\",\n    value: function coSetActiveEvents(I, g) {\n      A.rawcolliderset_coSetActiveEvents(this.ptr, I, g);\n    }\n  }, {\n    key: \"coSetActiveCollisionTypes\",\n    value: function coSetActiveCollisionTypes(I, g) {\n      A.rawcolliderset_coSetActiveCollisionTypes(this.ptr, I, g);\n    }\n  }, {\n    key: \"coSetShape\",\n    value: function coSetShape(I, g) {\n      U(g, _), A.rawcolliderset_coSetShape(this.ptr, I, g.ptr);\n    }\n  }, {\n    key: \"coSetContactForceEventThreshold\",\n    value: function coSetContactForceEventThreshold(I, g) {\n      A.rawcolliderset_coSetContactForceEventThreshold(this.ptr, I, g);\n    }\n  }, {\n    key: \"coSetDensity\",\n    value: function coSetDensity(I, g) {\n      A.rawcolliderset_coSetDensity(this.ptr, I, g);\n    }\n  }, {\n    key: \"coSetMass\",\n    value: function coSetMass(I, g) {\n      A.rawcolliderset_coSetMass(this.ptr, I, g);\n    }\n  }, {\n    key: \"coSetMassProperties\",\n    value: function coSetMassProperties(I, g, C, B, Q) {\n      U(C, gA), U(B, gA), U(Q, u), A.rawcolliderset_coSetMassProperties(this.ptr, I, g, C.ptr, B.ptr, Q.ptr);\n    }\n  }, {\n    key: \"len\",\n    value: function len() {\n      return A.rawcolliderset_len(this.ptr) >>> 0;\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(I) {\n      return 0 !== A.rawcolliderset_contains(this.ptr, I);\n    }\n  }, {\n    key: \"createCollider\",\n    value: function createCollider(I, g, C, B, Q, E, i, D, S, w, k, K, a, J, y, M, h, N, F, R, q, s, c) {\n      try {\n        var _H2 = A.__wbindgen_add_to_stack_pointer(-16);\n        U(I, _), U(g, gA), U(C, u), U(E, gA), U(i, gA), U(D, u), U(c, z), A.rawcolliderset_createCollider(_H2, this.ptr, I.ptr, g.ptr, C.ptr, B, Q, E.ptr, i.ptr, D.ptr, S, w, k, K, a, J, y, M, h, N, F, R, q, s, c.ptr);\n        var Y = G()[_H2 / 4 + 0],\n          L = o()[_H2 / 8 + 1];\n        return 0 === Y ? void 0 : L;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(I, g, C, B) {\n      U(g, Z), U(C, z), A.rawcolliderset_remove(this.ptr, I, g.ptr, C.ptr, B);\n    }\n  }, {\n    key: \"isHandleValid\",\n    value: function isHandleValid(I) {\n      return 0 !== A.rawcolliderset_contains(this.ptr, I);\n    }\n  }, {\n    key: \"forEachColliderHandle\",\n    value: function forEachColliderHandle(g) {\n      try {\n        A.rawcolliderset_forEachColliderHandle(this.ptr, y(g));\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(H.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return H;\n}();\nvar l = /*#__PURE__*/function () {\n  function l() {\n    _classCallCheck(this, l);\n  }\n  _createClass(l, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawcontactforceevent_free(I);\n    }\n  }, {\n    key: \"collider1\",\n    value: function collider1() {\n      return A.rawcontactforceevent_collider1(this.ptr);\n    }\n  }, {\n    key: \"collider2\",\n    value: function collider2() {\n      return A.rawcontactforceevent_collider2(this.ptr);\n    }\n  }, {\n    key: \"total_force\",\n    value: function total_force() {\n      var I = A.rawcontactforceevent_total_force(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"total_force_magnitude\",\n    value: function total_force_magnitude() {\n      return A.rawcontactforceevent_total_force_magnitude(this.ptr);\n    }\n  }, {\n    key: \"max_force_direction\",\n    value: function max_force_direction() {\n      var I = A.rawcontactforceevent_max_force_direction(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"max_force_magnitude\",\n    value: function max_force_magnitude() {\n      return A.rawcontactforceevent_max_force_magnitude(this.ptr);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(l.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return l;\n}();\nvar t = /*#__PURE__*/function () {\n  function t() {\n    _classCallCheck(this, t);\n  }\n  _createClass(t, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawcontactmanifold_free(I);\n    }\n  }, {\n    key: \"normal\",\n    value: function normal() {\n      var I = A.rawcontactmanifold_normal(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"local_n1\",\n    value: function local_n1() {\n      var I = A.rawcontactmanifold_local_n1(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"local_n2\",\n    value: function local_n2() {\n      var I = A.rawcontactmanifold_local_n2(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"subshape1\",\n    value: function subshape1() {\n      return A.rawcontactmanifold_subshape1(this.ptr) >>> 0;\n    }\n  }, {\n    key: \"subshape2\",\n    value: function subshape2() {\n      return A.rawcontactmanifold_subshape2(this.ptr) >>> 0;\n    }\n  }, {\n    key: \"num_contacts\",\n    value: function num_contacts() {\n      return A.rawcontactmanifold_num_contacts(this.ptr) >>> 0;\n    }\n  }, {\n    key: \"contact_local_p1\",\n    value: function contact_local_p1(I) {\n      var g = A.rawcontactmanifold_contact_local_p1(this.ptr, I);\n      return 0 === g ? void 0 : gA.__wrap(g);\n    }\n  }, {\n    key: \"contact_local_p2\",\n    value: function contact_local_p2(I) {\n      var g = A.rawcontactmanifold_contact_local_p2(this.ptr, I);\n      return 0 === g ? void 0 : gA.__wrap(g);\n    }\n  }, {\n    key: \"contact_dist\",\n    value: function contact_dist(I) {\n      return A.rawcontactmanifold_contact_dist(this.ptr, I);\n    }\n  }, {\n    key: \"contact_fid1\",\n    value: function contact_fid1(I) {\n      return A.rawcontactmanifold_contact_fid1(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"contact_fid2\",\n    value: function contact_fid2(I) {\n      return A.rawcontactmanifold_contact_fid2(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"contact_impulse\",\n    value: function contact_impulse(I) {\n      return A.rawcontactmanifold_contact_impulse(this.ptr, I);\n    }\n  }, {\n    key: \"contact_tangent_impulse_x\",\n    value: function contact_tangent_impulse_x(I) {\n      return A.rawcontactmanifold_contact_tangent_impulse_x(this.ptr, I);\n    }\n  }, {\n    key: \"contact_tangent_impulse_y\",\n    value: function contact_tangent_impulse_y(I) {\n      return A.rawcontactmanifold_contact_tangent_impulse_y(this.ptr, I);\n    }\n  }, {\n    key: \"num_solver_contacts\",\n    value: function num_solver_contacts() {\n      return A.rawcontactmanifold_num_solver_contacts(this.ptr) >>> 0;\n    }\n  }, {\n    key: \"solver_contact_point\",\n    value: function solver_contact_point(I) {\n      var g = A.rawcontactmanifold_solver_contact_point(this.ptr, I);\n      return 0 === g ? void 0 : gA.__wrap(g);\n    }\n  }, {\n    key: \"solver_contact_dist\",\n    value: function solver_contact_dist(I) {\n      return A.rawcontactmanifold_solver_contact_dist(this.ptr, I);\n    }\n  }, {\n    key: \"solver_contact_friction\",\n    value: function solver_contact_friction(I) {\n      return A.rawcontactmanifold_solver_contact_friction(this.ptr, I);\n    }\n  }, {\n    key: \"solver_contact_restitution\",\n    value: function solver_contact_restitution(I) {\n      return A.rawcontactmanifold_solver_contact_restitution(this.ptr, I);\n    }\n  }, {\n    key: \"solver_contact_tangent_velocity\",\n    value: function solver_contact_tangent_velocity(I) {\n      var g = A.rawcontactmanifold_solver_contact_tangent_velocity(this.ptr, I);\n      return gA.__wrap(g);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(t.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return t;\n}();\nvar p = /*#__PURE__*/function () {\n  function p() {\n    _classCallCheck(this, p);\n  }\n  _createClass(p, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawcontactpair_free(I);\n    }\n  }, {\n    key: \"collider1\",\n    value: function collider1() {\n      return A.rawcontactpair_collider1(this.ptr);\n    }\n  }, {\n    key: \"collider2\",\n    value: function collider2() {\n      return A.rawcontactpair_collider2(this.ptr);\n    }\n  }, {\n    key: \"numContactManifolds\",\n    value: function numContactManifolds() {\n      return A.rawcontactpair_numContactManifolds(this.ptr) >>> 0;\n    }\n  }, {\n    key: \"contactManifold\",\n    value: function contactManifold(I) {\n      var g = A.rawcontactpair_contactManifold(this.ptr, I);\n      return 0 === g ? void 0 : t.__wrap(g);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(p.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return p;\n}();\nvar e = /*#__PURE__*/function () {\n  function e() {\n    _classCallCheck(this, e);\n    var I = A.rawdebugrenderpipeline_new();\n    return e.__wrap(I);\n  }\n  _createClass(e, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawdebugrenderpipeline_free(I);\n    }\n  }, {\n    key: \"vertices\",\n    value: function vertices() {\n      return E(A.rawdebugrenderpipeline_vertices(this.ptr));\n    }\n  }, {\n    key: \"colors\",\n    value: function colors() {\n      return E(A.rawdebugrenderpipeline_colors(this.ptr));\n    }\n  }, {\n    key: \"render\",\n    value: function render(I, g, C, B, Q) {\n      U(I, z), U(g, H), U(C, O), U(B, x), U(Q, W), A.rawdebugrenderpipeline_render(this.ptr, I.ptr, g.ptr, C.ptr, B.ptr, Q.ptr);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(e.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return e;\n}();\nvar r = /*#__PURE__*/function () {\n  function r() {\n    _classCallCheck(this, r);\n  }\n  _createClass(r, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawdeserializedworld_free(I);\n    }\n  }, {\n    key: \"takeGravity\",\n    value: function takeGravity() {\n      var I = A.rawdeserializedworld_takeGravity(this.ptr);\n      return 0 === I ? void 0 : gA.__wrap(I);\n    }\n  }, {\n    key: \"takeIntegrationParameters\",\n    value: function takeIntegrationParameters() {\n      var I = A.rawdeserializedworld_takeIntegrationParameters(this.ptr);\n      return 0 === I ? void 0 : n.__wrap(I);\n    }\n  }, {\n    key: \"takeIslandManager\",\n    value: function takeIslandManager() {\n      var I = A.rawdeserializedworld_takeIslandManager(this.ptr);\n      return 0 === I ? void 0 : Z.__wrap(I);\n    }\n  }, {\n    key: \"takeBroadPhase\",\n    value: function takeBroadPhase() {\n      var I = A.rawdeserializedworld_takeBroadPhase(this.ptr);\n      return 0 === I ? void 0 : Y.__wrap(I);\n    }\n  }, {\n    key: \"takeNarrowPhase\",\n    value: function takeNarrowPhase() {\n      var I = A.rawdeserializedworld_takeNarrowPhase(this.ptr);\n      return 0 === I ? void 0 : W.__wrap(I);\n    }\n  }, {\n    key: \"takeBodies\",\n    value: function takeBodies() {\n      var I = A.rawdeserializedworld_takeBodies(this.ptr);\n      return 0 === I ? void 0 : z.__wrap(I);\n    }\n  }, {\n    key: \"takeColliders\",\n    value: function takeColliders() {\n      var I = A.rawdeserializedworld_takeColliders(this.ptr);\n      return 0 === I ? void 0 : H.__wrap(I);\n    }\n  }, {\n    key: \"takeImpulseJoints\",\n    value: function takeImpulseJoints() {\n      var I = A.rawdeserializedworld_takeImpulseJoints(this.ptr);\n      return 0 === I ? void 0 : O.__wrap(I);\n    }\n  }, {\n    key: \"takeMultibodyJoints\",\n    value: function takeMultibodyJoints() {\n      var I = A.rawdeserializedworld_takeMultibodyJoints(this.ptr);\n      return 0 === I ? void 0 : x.__wrap(I);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(r.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return r;\n}();\nvar T = /*#__PURE__*/function () {\n  function T(I) {\n    _classCallCheck(this, T);\n    var g = A.raweventqueue_new(I);\n    return T.__wrap(g);\n  }\n  _createClass(T, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_raweventqueue_free(I);\n    }\n  }, {\n    key: \"drainCollisionEvents\",\n    value: function drainCollisionEvents(g) {\n      try {\n        A.raweventqueue_drainCollisionEvents(this.ptr, y(g));\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"drainContactForceEvents\",\n    value: function drainContactForceEvents(g) {\n      try {\n        A.raweventqueue_drainContactForceEvents(this.ptr, y(g));\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      A.raweventqueue_clear(this.ptr);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(T.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return T;\n}();\nvar d = /*#__PURE__*/function () {\n  function d() {\n    _classCallCheck(this, d);\n  }\n  _createClass(d, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawgenericjoint_free(I);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(d.prototype);\n      return I.ptr = A, I;\n    }\n  }, {\n    key: \"spherical\",\n    value: function spherical(I, g) {\n      U(I, gA), U(g, gA);\n      var C = A.rawgenericjoint_spherical(I.ptr, g.ptr);\n      return d.__wrap(C);\n    }\n  }, {\n    key: \"prismatic\",\n    value: function prismatic(I, g, C, B, Q, E) {\n      U(I, gA), U(g, gA), U(C, gA);\n      var i = A.rawgenericjoint_prismatic(I.ptr, g.ptr, C.ptr, B, Q, E);\n      return 0 === i ? void 0 : d.__wrap(i);\n    }\n  }, {\n    key: \"fixed\",\n    value: function fixed(I, g, C, B) {\n      U(I, gA), U(g, u), U(C, gA), U(B, u);\n      var Q = A.rawgenericjoint_fixed(I.ptr, g.ptr, C.ptr, B.ptr);\n      return d.__wrap(Q);\n    }\n  }, {\n    key: \"revolute\",\n    value: function revolute(I, g, C) {\n      U(I, gA), U(g, gA), U(C, gA);\n      var B = A.rawgenericjoint_revolute(I.ptr, g.ptr, C.ptr);\n      return 0 === B ? void 0 : d.__wrap(B);\n    }\n  }]);\n  return d;\n}();\nvar O = /*#__PURE__*/function () {\n  function O() {\n    _classCallCheck(this, O);\n    var I = A.rawimpulsejointset_new();\n    return O.__wrap(I);\n  }\n  _createClass(O, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawimpulsejointset_free(I);\n    }\n  }, {\n    key: \"jointType\",\n    value: function jointType(I) {\n      return A.rawimpulsejointset_jointType(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"jointBodyHandle1\",\n    value: function jointBodyHandle1(I) {\n      return A.rawimpulsejointset_jointBodyHandle1(this.ptr, I);\n    }\n  }, {\n    key: \"jointBodyHandle2\",\n    value: function jointBodyHandle2(I) {\n      return A.rawimpulsejointset_jointBodyHandle2(this.ptr, I);\n    }\n  }, {\n    key: \"jointFrameX1\",\n    value: function jointFrameX1(I) {\n      var g = A.rawimpulsejointset_jointFrameX1(this.ptr, I);\n      return u.__wrap(g);\n    }\n  }, {\n    key: \"jointFrameX2\",\n    value: function jointFrameX2(I) {\n      var g = A.rawimpulsejointset_jointFrameX2(this.ptr, I);\n      return u.__wrap(g);\n    }\n  }, {\n    key: \"jointAnchor1\",\n    value: function jointAnchor1(I) {\n      var g = A.rawimpulsejointset_jointAnchor1(this.ptr, I);\n      return gA.__wrap(g);\n    }\n  }, {\n    key: \"jointAnchor2\",\n    value: function jointAnchor2(I) {\n      var g = A.rawimpulsejointset_jointAnchor2(this.ptr, I);\n      return gA.__wrap(g);\n    }\n  }, {\n    key: \"jointSetAnchor1\",\n    value: function jointSetAnchor1(I, g) {\n      U(g, gA), A.rawimpulsejointset_jointSetAnchor1(this.ptr, I, g.ptr);\n    }\n  }, {\n    key: \"jointSetAnchor2\",\n    value: function jointSetAnchor2(I, g) {\n      U(g, gA), A.rawimpulsejointset_jointSetAnchor2(this.ptr, I, g.ptr);\n    }\n  }, {\n    key: \"jointContactsEnabled\",\n    value: function jointContactsEnabled(I) {\n      return 0 !== A.rawimpulsejointset_jointContactsEnabled(this.ptr, I);\n    }\n  }, {\n    key: \"jointSetContactsEnabled\",\n    value: function jointSetContactsEnabled(I, g) {\n      A.rawimpulsejointset_jointSetContactsEnabled(this.ptr, I, g);\n    }\n  }, {\n    key: \"jointLimitsEnabled\",\n    value: function jointLimitsEnabled(I, g) {\n      return 0 !== A.rawimpulsejointset_jointLimitsEnabled(this.ptr, I, g);\n    }\n  }, {\n    key: \"jointLimitsMin\",\n    value: function jointLimitsMin(I, g) {\n      return A.rawimpulsejointset_jointLimitsMin(this.ptr, I, g);\n    }\n  }, {\n    key: \"jointLimitsMax\",\n    value: function jointLimitsMax(I, g) {\n      return A.rawimpulsejointset_jointLimitsMax(this.ptr, I, g);\n    }\n  }, {\n    key: \"jointSetLimits\",\n    value: function jointSetLimits(I, g, C, B) {\n      A.rawimpulsejointset_jointSetLimits(this.ptr, I, g, C, B);\n    }\n  }, {\n    key: \"jointConfigureMotorModel\",\n    value: function jointConfigureMotorModel(I, g, C) {\n      A.rawimpulsejointset_jointConfigureMotorModel(this.ptr, I, g, C);\n    }\n  }, {\n    key: \"jointConfigureMotorVelocity\",\n    value: function jointConfigureMotorVelocity(I, g, C, B) {\n      A.rawimpulsejointset_jointConfigureMotorVelocity(this.ptr, I, g, C, B);\n    }\n  }, {\n    key: \"jointConfigureMotorPosition\",\n    value: function jointConfigureMotorPosition(I, g, C, B, Q) {\n      A.rawimpulsejointset_jointConfigureMotorPosition(this.ptr, I, g, C, B, Q);\n    }\n  }, {\n    key: \"jointConfigureMotor\",\n    value: function jointConfigureMotor(I, g, C, B, Q, E) {\n      A.rawimpulsejointset_jointConfigureMotor(this.ptr, I, g, C, B, Q, E);\n    }\n  }, {\n    key: \"createJoint\",\n    value: function createJoint(I, g, C, B) {\n      U(I, d);\n      return A.rawimpulsejointset_createJoint(this.ptr, I.ptr, g, C, B);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(I, g) {\n      A.rawimpulsejointset_remove(this.ptr, I, g);\n    }\n  }, {\n    key: \"len\",\n    value: function len() {\n      return A.rawimpulsejointset_len(this.ptr) >>> 0;\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(I) {\n      return 0 !== A.rawimpulsejointset_contains(this.ptr, I);\n    }\n  }, {\n    key: \"forEachJointHandle\",\n    value: function forEachJointHandle(g) {\n      try {\n        A.rawimpulsejointset_forEachJointHandle(this.ptr, y(g));\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"forEachJointAttachedToRigidBody\",\n    value: function forEachJointAttachedToRigidBody(g, C) {\n      try {\n        A.rawimpulsejointset_forEachJointAttachedToRigidBody(this.ptr, g, y(C));\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(O.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return O;\n}();\nvar n = /*#__PURE__*/function () {\n  function n() {\n    _classCallCheck(this, n);\n    var I = A.rawintegrationparameters_new();\n    return n.__wrap(I);\n  }\n  _createClass(n, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawintegrationparameters_free(I);\n    }\n  }, {\n    key: \"dt\",\n    get: function get() {\n      return A.rawintegrationparameters_dt(this.ptr);\n    },\n    set: function set(I) {\n      A.rawintegrationparameters_set_dt(this.ptr, I);\n    }\n  }, {\n    key: \"erp\",\n    get: function get() {\n      return A.rawintegrationparameters_erp(this.ptr);\n    },\n    set: function set(I) {\n      A.rawintegrationparameters_set_erp(this.ptr, I);\n    }\n  }, {\n    key: \"allowedLinearError\",\n    get: function get() {\n      return A.rawintegrationparameters_allowedLinearError(this.ptr);\n    },\n    set: function set(I) {\n      A.rawintegrationparameters_set_allowedLinearError(this.ptr, I);\n    }\n  }, {\n    key: \"predictionDistance\",\n    get: function get() {\n      return A.rawintegrationparameters_predictionDistance(this.ptr);\n    },\n    set: function set(I) {\n      A.rawintegrationparameters_set_predictionDistance(this.ptr, I);\n    }\n  }, {\n    key: \"maxVelocityIterations\",\n    get: function get() {\n      return A.rawintegrationparameters_maxVelocityIterations(this.ptr) >>> 0;\n    },\n    set: function set(I) {\n      A.rawintegrationparameters_set_maxVelocityIterations(this.ptr, I);\n    }\n  }, {\n    key: \"maxVelocityFrictionIterations\",\n    get: function get() {\n      return A.rawintegrationparameters_maxVelocityFrictionIterations(this.ptr) >>> 0;\n    },\n    set: function set(I) {\n      A.rawintegrationparameters_set_maxVelocityFrictionIterations(this.ptr, I);\n    }\n  }, {\n    key: \"maxStabilizationIterations\",\n    get: function get() {\n      return A.rawintegrationparameters_maxStabilizationIterations(this.ptr) >>> 0;\n    },\n    set: function set(I) {\n      A.rawintegrationparameters_set_maxStabilizationIterations(this.ptr, I);\n    }\n  }, {\n    key: \"minIslandSize\",\n    get: function get() {\n      return A.rawintegrationparameters_minIslandSize(this.ptr) >>> 0;\n    },\n    set: function set(I) {\n      A.rawintegrationparameters_set_minIslandSize(this.ptr, I);\n    }\n  }, {\n    key: \"maxCcdSubsteps\",\n    get: function get() {\n      return A.rawintegrationparameters_maxCcdSubsteps(this.ptr) >>> 0;\n    },\n    set: function set(I) {\n      A.rawintegrationparameters_set_maxCcdSubsteps(this.ptr, I);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(n.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return n;\n}();\nvar Z = /*#__PURE__*/function () {\n  function Z() {\n    _classCallCheck(this, Z);\n    var I = A.rawislandmanager_new();\n    return Z.__wrap(I);\n  }\n  _createClass(Z, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawislandmanager_free(I);\n    }\n  }, {\n    key: \"forEachActiveRigidBodyHandle\",\n    value: function forEachActiveRigidBodyHandle(g) {\n      try {\n        A.rawislandmanager_forEachActiveRigidBodyHandle(this.ptr, y(g));\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(Z.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return Z;\n}();\nvar x = /*#__PURE__*/function () {\n  function x() {\n    _classCallCheck(this, x);\n    var I = A.rawmultibodyjointset_new();\n    return x.__wrap(I);\n  }\n  _createClass(x, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawmultibodyjointset_free(I);\n    }\n  }, {\n    key: \"jointType\",\n    value: function jointType(I) {\n      return A.rawmultibodyjointset_jointType(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"jointFrameX1\",\n    value: function jointFrameX1(I) {\n      var g = A.rawmultibodyjointset_jointFrameX1(this.ptr, I);\n      return u.__wrap(g);\n    }\n  }, {\n    key: \"jointFrameX2\",\n    value: function jointFrameX2(I) {\n      var g = A.rawmultibodyjointset_jointFrameX2(this.ptr, I);\n      return u.__wrap(g);\n    }\n  }, {\n    key: \"jointAnchor1\",\n    value: function jointAnchor1(I) {\n      var g = A.rawmultibodyjointset_jointAnchor1(this.ptr, I);\n      return gA.__wrap(g);\n    }\n  }, {\n    key: \"jointAnchor2\",\n    value: function jointAnchor2(I) {\n      var g = A.rawmultibodyjointset_jointAnchor2(this.ptr, I);\n      return gA.__wrap(g);\n    }\n  }, {\n    key: \"jointContactsEnabled\",\n    value: function jointContactsEnabled(I) {\n      return 0 !== A.rawmultibodyjointset_jointContactsEnabled(this.ptr, I);\n    }\n  }, {\n    key: \"jointSetContactsEnabled\",\n    value: function jointSetContactsEnabled(I, g) {\n      A.rawmultibodyjointset_jointSetContactsEnabled(this.ptr, I, g);\n    }\n  }, {\n    key: \"jointLimitsEnabled\",\n    value: function jointLimitsEnabled(I, g) {\n      return 0 !== A.rawmultibodyjointset_jointLimitsEnabled(this.ptr, I, g);\n    }\n  }, {\n    key: \"jointLimitsMin\",\n    value: function jointLimitsMin(I, g) {\n      return A.rawmultibodyjointset_jointLimitsMin(this.ptr, I, g);\n    }\n  }, {\n    key: \"jointLimitsMax\",\n    value: function jointLimitsMax(I, g) {\n      return A.rawmultibodyjointset_jointLimitsMax(this.ptr, I, g);\n    }\n  }, {\n    key: \"createJoint\",\n    value: function createJoint(I, g, C, B) {\n      U(I, d);\n      return A.rawmultibodyjointset_createJoint(this.ptr, I.ptr, g, C, B);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(I, g) {\n      A.rawmultibodyjointset_remove(this.ptr, I, g);\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(I) {\n      return 0 !== A.rawmultibodyjointset_contains(this.ptr, I);\n    }\n  }, {\n    key: \"forEachJointHandle\",\n    value: function forEachJointHandle(g) {\n      try {\n        A.rawmultibodyjointset_forEachJointHandle(this.ptr, y(g));\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"forEachJointAttachedToRigidBody\",\n    value: function forEachJointAttachedToRigidBody(g, C) {\n      try {\n        A.rawmultibodyjointset_forEachJointAttachedToRigidBody(this.ptr, g, y(C));\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(x.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return x;\n}();\nvar W = /*#__PURE__*/function () {\n  function W() {\n    _classCallCheck(this, W);\n    var I = A.rawnarrowphase_new();\n    return W.__wrap(I);\n  }\n  _createClass(W, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawnarrowphase_free(I);\n    }\n  }, {\n    key: \"contacts_with\",\n    value: function contacts_with(I, g) {\n      A.rawnarrowphase_contacts_with(this.ptr, I, i(g));\n    }\n  }, {\n    key: \"contact_pair\",\n    value: function contact_pair(I, g) {\n      var C = A.rawnarrowphase_contact_pair(this.ptr, I, g);\n      return 0 === C ? void 0 : p.__wrap(C);\n    }\n  }, {\n    key: \"intersections_with\",\n    value: function intersections_with(I, g) {\n      A.rawnarrowphase_intersections_with(this.ptr, I, i(g));\n    }\n  }, {\n    key: \"intersection_pair\",\n    value: function intersection_pair(I, g) {\n      return 0 !== A.rawnarrowphase_intersection_pair(this.ptr, I, g);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(W.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return W;\n}();\nvar b = /*#__PURE__*/function () {\n  function b() {\n    _classCallCheck(this, b);\n    var I = A.rawphysicspipeline_new();\n    return b.__wrap(I);\n  }\n  _createClass(b, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawphysicspipeline_free(I);\n    }\n  }, {\n    key: \"step\",\n    value: function step(I, g, C, B, Q, E, i, D, o, G) {\n      U(I, gA), U(g, n), U(C, Z), U(B, Y), U(Q, W), U(E, z), U(i, H), U(D, O), U(o, x), U(G, L), A.rawphysicspipeline_step(this.ptr, I.ptr, g.ptr, C.ptr, B.ptr, Q.ptr, E.ptr, i.ptr, D.ptr, o.ptr, G.ptr);\n    }\n  }, {\n    key: \"stepWithEvents\",\n    value: function stepWithEvents(I, g, C, B, Q, E, D, o, G, S, w, k, K, a) {\n      U(I, gA), U(g, n), U(C, Z), U(B, Y), U(Q, W), U(E, z), U(D, H), U(o, O), U(G, x), U(S, L), U(w, T), A.rawphysicspipeline_stepWithEvents(this.ptr, I.ptr, g.ptr, C.ptr, B.ptr, Q.ptr, E.ptr, D.ptr, o.ptr, G.ptr, S.ptr, w.ptr, i(k), i(K), i(a));\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(b.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return b;\n}();\nvar j = /*#__PURE__*/function () {\n  function j() {\n    _classCallCheck(this, j);\n  }\n  _createClass(j, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawpointcolliderprojection_free(I);\n    }\n  }, {\n    key: \"colliderHandle\",\n    value: function colliderHandle() {\n      return A.rawcontactforceevent_collider1(this.ptr);\n    }\n  }, {\n    key: \"point\",\n    value: function point() {\n      var I = A.rawpointcolliderprojection_point(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"isInside\",\n    value: function isInside() {\n      return 0 !== A.rawpointcolliderprojection_isInside(this.ptr);\n    }\n  }, {\n    key: \"featureType\",\n    value: function featureType() {\n      return A.rawpointcolliderprojection_featureType(this.ptr) >>> 0;\n    }\n  }, {\n    key: \"featureId\",\n    value: function featureId() {\n      try {\n        var _C = A.__wbindgen_add_to_stack_pointer(-16);\n        A.rawpointcolliderprojection_featureId(_C, this.ptr);\n        var I = G()[_C / 4 + 0],\n          g = G()[_C / 4 + 1];\n        return 0 === I ? void 0 : g >>> 0;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(j.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return j;\n}();\nvar V = /*#__PURE__*/function () {\n  function V() {\n    _classCallCheck(this, V);\n  }\n  _createClass(V, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawpointprojection_free(I);\n    }\n  }, {\n    key: \"point\",\n    value: function point() {\n      var I = A.rawpointprojection_point(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"isInside\",\n    value: function isInside() {\n      return 0 !== A.rawpointprojection_isInside(this.ptr);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(V.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return V;\n}();\nvar f = /*#__PURE__*/function () {\n  function f() {\n    _classCallCheck(this, f);\n    var I = A.rawquerypipeline_new();\n    return f.__wrap(I);\n  }\n  _createClass(f, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawquerypipeline_free(I);\n    }\n  }, {\n    key: \"update\",\n    value: function update(I, g, C) {\n      U(I, Z), U(g, z), U(C, H), A.rawquerypipeline_update(this.ptr, I.ptr, g.ptr, C.ptr);\n    }\n  }, {\n    key: \"castRay\",\n    value: function castRay(g, C, B, Q, E, i, o, G, S, w, k) {\n      try {\n        U(g, z), U(C, H), U(B, gA), U(Q, gA);\n        var _K = A.rawquerypipeline_castRay(this.ptr, g.ptr, C.ptr, B.ptr, Q.ptr, E, i, o, !D(G), D(G) ? 0 : G, !D(S), D(S) ? 0 : S, !D(w), D(w) ? 0 : w, y(k));\n        return 0 === _K ? void 0 : m.__wrap(_K);\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"castRayAndGetNormal\",\n    value: function castRayAndGetNormal(g, C, B, Q, E, i, o, G, S, w, k) {\n      try {\n        U(g, z), U(C, H), U(B, gA), U(Q, gA);\n        var _K2 = A.rawquerypipeline_castRayAndGetNormal(this.ptr, g.ptr, C.ptr, B.ptr, Q.ptr, E, i, o, !D(G), D(G) ? 0 : G, !D(S), D(S) ? 0 : S, !D(w), D(w) ? 0 : w, y(k));\n        return 0 === _K2 ? void 0 : P.__wrap(_K2);\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"intersectionsWithRay\",\n    value: function intersectionsWithRay(g, C, B, Q, E, i, o, G, S, w, k, K) {\n      try {\n        U(g, z), U(C, H), U(B, gA), U(Q, gA), A.rawquerypipeline_intersectionsWithRay(this.ptr, g.ptr, C.ptr, B.ptr, Q.ptr, E, i, y(o), G, !D(S), D(S) ? 0 : S, !D(w), D(w) ? 0 : w, !D(k), D(k) ? 0 : k, y(K));\n      } finally {\n        I[J++] = void 0, I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"intersectionWithShape\",\n    value: function intersectionWithShape(g, C, B, Q, E, i, S, w, k, K) {\n      try {\n        var _h = A.__wbindgen_add_to_stack_pointer(-16);\n        U(g, z), U(C, H), U(B, gA), U(Q, u), U(E, _), A.rawquerypipeline_intersectionWithShape(_h, this.ptr, g.ptr, C.ptr, B.ptr, Q.ptr, E.ptr, i, !D(S), D(S) ? 0 : S, !D(w), D(w) ? 0 : w, !D(k), D(k) ? 0 : k, y(K));\n        var a = G()[_h / 4 + 0],\n          M = o()[_h / 8 + 1];\n        return 0 === a ? void 0 : M;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16), I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"projectPoint\",\n    value: function projectPoint(g, C, B, Q, E, i, o, G, S) {\n      try {\n        U(g, z), U(C, H), U(B, gA);\n        var _w = A.rawquerypipeline_projectPoint(this.ptr, g.ptr, C.ptr, B.ptr, Q, E, !D(i), D(i) ? 0 : i, !D(o), D(o) ? 0 : o, !D(G), D(G) ? 0 : G, y(S));\n        return 0 === _w ? void 0 : j.__wrap(_w);\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"projectPointAndGetFeature\",\n    value: function projectPointAndGetFeature(g, C, B, Q, E, i, o, G) {\n      try {\n        U(g, z), U(C, H), U(B, gA);\n        var _S = A.rawquerypipeline_projectPointAndGetFeature(this.ptr, g.ptr, C.ptr, B.ptr, Q, !D(E), D(E) ? 0 : E, !D(i), D(i) ? 0 : i, !D(o), D(o) ? 0 : o, y(G));\n        return 0 === _S ? void 0 : j.__wrap(_S);\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"intersectionsWithPoint\",\n    value: function intersectionsWithPoint(g, C, B, Q, E, i, o, G, S) {\n      try {\n        U(g, z), U(C, H), U(B, gA), A.rawquerypipeline_intersectionsWithPoint(this.ptr, g.ptr, C.ptr, B.ptr, y(Q), E, !D(i), D(i) ? 0 : i, !D(o), D(o) ? 0 : o, !D(G), D(G) ? 0 : G, y(S));\n      } finally {\n        I[J++] = void 0, I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"castShape\",\n    value: function castShape(g, C, B, Q, E, i, o, G, S, w, k, K) {\n      try {\n        U(g, z), U(C, H), U(B, gA), U(Q, u), U(E, gA), U(i, _);\n        var _a = A.rawquerypipeline_castShape(this.ptr, g.ptr, C.ptr, B.ptr, Q.ptr, E.ptr, i.ptr, o, G, !D(S), D(S) ? 0 : S, !D(w), D(w) ? 0 : w, !D(k), D(k) ? 0 : k, y(K));\n        return 0 === _a ? void 0 : $.__wrap(_a);\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"intersectionsWithShape\",\n    value: function intersectionsWithShape(g, C, B, Q, E, i, o, G, S, w, k) {\n      try {\n        U(g, z), U(C, H), U(B, gA), U(Q, u), U(E, _), A.rawquerypipeline_intersectionsWithShape(this.ptr, g.ptr, C.ptr, B.ptr, Q.ptr, E.ptr, y(i), o, !D(G), D(G) ? 0 : G, !D(S), D(S) ? 0 : S, !D(w), D(w) ? 0 : w, y(k));\n      } finally {\n        I[J++] = void 0, I[J++] = void 0;\n      }\n    }\n  }, {\n    key: \"collidersWithAabbIntersectingAabb\",\n    value: function collidersWithAabbIntersectingAabb(g, C, B) {\n      try {\n        U(g, gA), U(C, gA), A.rawquerypipeline_collidersWithAabbIntersectingAabb(this.ptr, g.ptr, C.ptr, y(B));\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(f.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return f;\n}();\nvar P = /*#__PURE__*/function () {\n  function P() {\n    _classCallCheck(this, P);\n  }\n  _createClass(P, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawraycolliderintersection_free(I);\n    }\n  }, {\n    key: \"colliderHandle\",\n    value: function colliderHandle() {\n      return A.rawcontactforceevent_collider1(this.ptr);\n    }\n  }, {\n    key: \"normal\",\n    value: function normal() {\n      var I = A.rawraycolliderintersection_normal(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"toi\",\n    value: function toi() {\n      return A.rawraycolliderintersection_toi(this.ptr);\n    }\n  }, {\n    key: \"featureType\",\n    value: function featureType() {\n      return A.rawpointcolliderprojection_featureType(this.ptr) >>> 0;\n    }\n  }, {\n    key: \"featureId\",\n    value: function featureId() {\n      try {\n        var _C2 = A.__wbindgen_add_to_stack_pointer(-16);\n        A.rawpointcolliderprojection_featureId(_C2, this.ptr);\n        var I = G()[_C2 / 4 + 0],\n          g = G()[_C2 / 4 + 1];\n        return 0 === I ? void 0 : g >>> 0;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(P.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return P;\n}();\nvar m = /*#__PURE__*/function () {\n  function m() {\n    _classCallCheck(this, m);\n  }\n  _createClass(m, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawraycollidertoi_free(I);\n    }\n  }, {\n    key: \"colliderHandle\",\n    value: function colliderHandle() {\n      return A.rawcontactforceevent_collider1(this.ptr);\n    }\n  }, {\n    key: \"toi\",\n    value: function toi() {\n      return A.rawraycolliderintersection_toi(this.ptr);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(m.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return m;\n}();\nvar X = /*#__PURE__*/function () {\n  function X() {\n    _classCallCheck(this, X);\n  }\n  _createClass(X, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawrayintersection_free(I);\n    }\n  }, {\n    key: \"normal\",\n    value: function normal() {\n      var I = A.rawrayintersection_normal(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"toi\",\n    value: function toi() {\n      return A.rawintegrationparameters_dt(this.ptr);\n    }\n  }, {\n    key: \"featureType\",\n    value: function featureType() {\n      return A.rawrayintersection_featureType(this.ptr) >>> 0;\n    }\n  }, {\n    key: \"featureId\",\n    value: function featureId() {\n      try {\n        var _C3 = A.__wbindgen_add_to_stack_pointer(-16);\n        A.rawrayintersection_featureId(_C3, this.ptr);\n        var I = G()[_C3 / 4 + 0],\n          g = G()[_C3 / 4 + 1];\n        return 0 === I ? void 0 : g >>> 0;\n      } finally {\n        A.__wbindgen_add_to_stack_pointer(16);\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(X.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return X;\n}();\nvar z = /*#__PURE__*/function () {\n  function z() {\n    _classCallCheck(this, z);\n    var I = A.rawrigidbodyset_new();\n    return z.__wrap(I);\n  }\n  _createClass(z, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawrigidbodyset_free(I);\n    }\n  }, {\n    key: \"rbTranslation\",\n    value: function rbTranslation(I) {\n      var g = A.rawrigidbodyset_rbTranslation(this.ptr, I);\n      return gA.__wrap(g);\n    }\n  }, {\n    key: \"rbRotation\",\n    value: function rbRotation(I) {\n      var g = A.rawrigidbodyset_rbRotation(this.ptr, I);\n      return u.__wrap(g);\n    }\n  }, {\n    key: \"rbSleep\",\n    value: function rbSleep(I) {\n      A.rawrigidbodyset_rbSleep(this.ptr, I);\n    }\n  }, {\n    key: \"rbIsSleeping\",\n    value: function rbIsSleeping(I) {\n      return 0 !== A.rawrigidbodyset_rbIsSleeping(this.ptr, I);\n    }\n  }, {\n    key: \"rbIsMoving\",\n    value: function rbIsMoving(I) {\n      return 0 !== A.rawrigidbodyset_rbIsMoving(this.ptr, I);\n    }\n  }, {\n    key: \"rbNextTranslation\",\n    value: function rbNextTranslation(I) {\n      var g = A.rawrigidbodyset_rbNextTranslation(this.ptr, I);\n      return gA.__wrap(g);\n    }\n  }, {\n    key: \"rbNextRotation\",\n    value: function rbNextRotation(I) {\n      var g = A.rawrigidbodyset_rbNextRotation(this.ptr, I);\n      return u.__wrap(g);\n    }\n  }, {\n    key: \"rbSetTranslation\",\n    value: function rbSetTranslation(I, g, C, B, Q) {\n      A.rawrigidbodyset_rbSetTranslation(this.ptr, I, g, C, B, Q);\n    }\n  }, {\n    key: \"rbSetRotation\",\n    value: function rbSetRotation(I, g, C, B, Q, E) {\n      A.rawrigidbodyset_rbSetRotation(this.ptr, I, g, C, B, Q, E);\n    }\n  }, {\n    key: \"rbSetLinvel\",\n    value: function rbSetLinvel(I, g, C) {\n      U(g, gA), A.rawrigidbodyset_rbSetLinvel(this.ptr, I, g.ptr, C);\n    }\n  }, {\n    key: \"rbSetAngvel\",\n    value: function rbSetAngvel(I, g, C) {\n      U(g, gA), A.rawrigidbodyset_rbSetAngvel(this.ptr, I, g.ptr, C);\n    }\n  }, {\n    key: \"rbSetNextKinematicTranslation\",\n    value: function rbSetNextKinematicTranslation(I, g, C, B) {\n      A.rawrigidbodyset_rbSetNextKinematicTranslation(this.ptr, I, g, C, B);\n    }\n  }, {\n    key: \"rbSetNextKinematicRotation\",\n    value: function rbSetNextKinematicRotation(I, g, C, B, Q) {\n      A.rawrigidbodyset_rbSetNextKinematicRotation(this.ptr, I, g, C, B, Q);\n    }\n  }, {\n    key: \"rbRecomputeMassPropertiesFromColliders\",\n    value: function rbRecomputeMassPropertiesFromColliders(I, g) {\n      U(g, H), A.rawrigidbodyset_rbRecomputeMassPropertiesFromColliders(this.ptr, I, g.ptr);\n    }\n  }, {\n    key: \"rbSetAdditionalMass\",\n    value: function rbSetAdditionalMass(I, g, C) {\n      A.rawrigidbodyset_rbSetAdditionalMass(this.ptr, I, g, C);\n    }\n  }, {\n    key: \"rbSetAdditionalMassProperties\",\n    value: function rbSetAdditionalMassProperties(I, g, C, B, Q, E) {\n      U(C, gA), U(B, gA), U(Q, u), A.rawrigidbodyset_rbSetAdditionalMassProperties(this.ptr, I, g, C.ptr, B.ptr, Q.ptr, E);\n    }\n  }, {\n    key: \"rbLinvel\",\n    value: function rbLinvel(I) {\n      var g = A.rawrigidbodyset_rbLinvel(this.ptr, I);\n      return gA.__wrap(g);\n    }\n  }, {\n    key: \"rbAngvel\",\n    value: function rbAngvel(I) {\n      var g = A.rawrigidbodyset_rbAngvel(this.ptr, I);\n      return gA.__wrap(g);\n    }\n  }, {\n    key: \"rbLockTranslations\",\n    value: function rbLockTranslations(I, g, C) {\n      A.rawrigidbodyset_rbLockTranslations(this.ptr, I, g, C);\n    }\n  }, {\n    key: \"rbSetEnabledTranslations\",\n    value: function rbSetEnabledTranslations(I, g, C, B, Q) {\n      A.rawrigidbodyset_rbSetEnabledTranslations(this.ptr, I, g, C, B, Q);\n    }\n  }, {\n    key: \"rbLockRotations\",\n    value: function rbLockRotations(I, g, C) {\n      A.rawrigidbodyset_rbLockRotations(this.ptr, I, g, C);\n    }\n  }, {\n    key: \"rbSetEnabledRotations\",\n    value: function rbSetEnabledRotations(I, g, C, B, Q) {\n      A.rawrigidbodyset_rbSetEnabledRotations(this.ptr, I, g, C, B, Q);\n    }\n  }, {\n    key: \"rbDominanceGroup\",\n    value: function rbDominanceGroup(I) {\n      return A.rawrigidbodyset_rbDominanceGroup(this.ptr, I);\n    }\n  }, {\n    key: \"rbSetDominanceGroup\",\n    value: function rbSetDominanceGroup(I, g) {\n      A.rawrigidbodyset_rbSetDominanceGroup(this.ptr, I, g);\n    }\n  }, {\n    key: \"rbEnableCcd\",\n    value: function rbEnableCcd(I, g) {\n      A.rawrigidbodyset_rbEnableCcd(this.ptr, I, g);\n    }\n  }, {\n    key: \"rbMass\",\n    value: function rbMass(I) {\n      return A.rawrigidbodyset_rbMass(this.ptr, I);\n    }\n  }, {\n    key: \"rbWakeUp\",\n    value: function rbWakeUp(I) {\n      A.rawrigidbodyset_rbWakeUp(this.ptr, I);\n    }\n  }, {\n    key: \"rbIsCcdEnabled\",\n    value: function rbIsCcdEnabled(I) {\n      return 0 !== A.rawrigidbodyset_rbIsCcdEnabled(this.ptr, I);\n    }\n  }, {\n    key: \"rbNumColliders\",\n    value: function rbNumColliders(I) {\n      return A.rawrigidbodyset_rbNumColliders(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"rbCollider\",\n    value: function rbCollider(I, g) {\n      return A.rawrigidbodyset_rbCollider(this.ptr, I, g);\n    }\n  }, {\n    key: \"rbBodyType\",\n    value: function rbBodyType(I) {\n      return A.rawrigidbodyset_rbBodyType(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"rbSetBodyType\",\n    value: function rbSetBodyType(I, g) {\n      A.rawrigidbodyset_rbSetBodyType(this.ptr, I, g);\n    }\n  }, {\n    key: \"rbIsFixed\",\n    value: function rbIsFixed(I) {\n      return 0 !== A.rawrigidbodyset_rbIsFixed(this.ptr, I);\n    }\n  }, {\n    key: \"rbIsKinematic\",\n    value: function rbIsKinematic(I) {\n      return 0 !== A.rawrigidbodyset_rbIsKinematic(this.ptr, I);\n    }\n  }, {\n    key: \"rbIsDynamic\",\n    value: function rbIsDynamic(I) {\n      return 0 !== A.rawrigidbodyset_rbIsDynamic(this.ptr, I);\n    }\n  }, {\n    key: \"rbLinearDamping\",\n    value: function rbLinearDamping(I) {\n      return A.rawrigidbodyset_rbLinearDamping(this.ptr, I);\n    }\n  }, {\n    key: \"rbAngularDamping\",\n    value: function rbAngularDamping(I) {\n      return A.rawrigidbodyset_rbAngularDamping(this.ptr, I);\n    }\n  }, {\n    key: \"rbSetLinearDamping\",\n    value: function rbSetLinearDamping(I, g) {\n      A.rawrigidbodyset_rbSetLinearDamping(this.ptr, I, g);\n    }\n  }, {\n    key: \"rbSetAngularDamping\",\n    value: function rbSetAngularDamping(I, g) {\n      A.rawrigidbodyset_rbSetAngularDamping(this.ptr, I, g);\n    }\n  }, {\n    key: \"rbGravityScale\",\n    value: function rbGravityScale(I) {\n      return A.rawrigidbodyset_rbGravityScale(this.ptr, I);\n    }\n  }, {\n    key: \"rbSetGravityScale\",\n    value: function rbSetGravityScale(I, g, C) {\n      A.rawrigidbodyset_rbSetGravityScale(this.ptr, I, g, C);\n    }\n  }, {\n    key: \"rbResetForces\",\n    value: function rbResetForces(I, g) {\n      A.rawrigidbodyset_rbResetForces(this.ptr, I, g);\n    }\n  }, {\n    key: \"rbResetTorques\",\n    value: function rbResetTorques(I, g) {\n      A.rawrigidbodyset_rbResetTorques(this.ptr, I, g);\n    }\n  }, {\n    key: \"rbAddForce\",\n    value: function rbAddForce(I, g, C) {\n      U(g, gA), A.rawrigidbodyset_rbAddForce(this.ptr, I, g.ptr, C);\n    }\n  }, {\n    key: \"rbApplyImpulse\",\n    value: function rbApplyImpulse(I, g, C) {\n      U(g, gA), A.rawrigidbodyset_rbApplyImpulse(this.ptr, I, g.ptr, C);\n    }\n  }, {\n    key: \"rbAddTorque\",\n    value: function rbAddTorque(I, g, C) {\n      U(g, gA), A.rawrigidbodyset_rbAddTorque(this.ptr, I, g.ptr, C);\n    }\n  }, {\n    key: \"rbApplyTorqueImpulse\",\n    value: function rbApplyTorqueImpulse(I, g, C) {\n      U(g, gA), A.rawrigidbodyset_rbApplyTorqueImpulse(this.ptr, I, g.ptr, C);\n    }\n  }, {\n    key: \"rbAddForceAtPoint\",\n    value: function rbAddForceAtPoint(I, g, C, B) {\n      U(g, gA), U(C, gA), A.rawrigidbodyset_rbAddForceAtPoint(this.ptr, I, g.ptr, C.ptr, B);\n    }\n  }, {\n    key: \"rbApplyImpulseAtPoint\",\n    value: function rbApplyImpulseAtPoint(I, g, C, B) {\n      U(g, gA), U(C, gA), A.rawrigidbodyset_rbApplyImpulseAtPoint(this.ptr, I, g.ptr, C.ptr, B);\n    }\n  }, {\n    key: \"rbUserData\",\n    value: function rbUserData(I) {\n      return A.rawrigidbodyset_rbUserData(this.ptr, I) >>> 0;\n    }\n  }, {\n    key: \"rbSetUserData\",\n    value: function rbSetUserData(I, g) {\n      A.rawrigidbodyset_rbSetUserData(this.ptr, I, g);\n    }\n  }, {\n    key: \"createRigidBody\",\n    value: function createRigidBody(I, g, C, B, Q, E, i, D, o, G, S, w, k, K, a, J, y, M, h, N, F, R, q) {\n      U(I, gA), U(g, u), U(E, gA), U(i, gA), U(D, gA), U(o, gA), U(G, u);\n      return A.rawrigidbodyset_createRigidBody(this.ptr, I.ptr, g.ptr, C, B, Q, E.ptr, i.ptr, D.ptr, o.ptr, G.ptr, S, w, k, K, a, J, y, M, h, N, F, R, q);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(I, g, C, B, Q) {\n      U(g, Z), U(C, H), U(B, O), U(Q, x), A.rawrigidbodyset_remove(this.ptr, I, g.ptr, C.ptr, B.ptr, Q.ptr);\n    }\n  }, {\n    key: \"len\",\n    value: function len() {\n      return A.rawrigidbodyset_len(this.ptr) >>> 0;\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(I) {\n      return 0 !== A.rawrigidbodyset_contains(this.ptr, I);\n    }\n  }, {\n    key: \"forEachRigidBodyHandle\",\n    value: function forEachRigidBodyHandle(g) {\n      try {\n        A.rawrigidbodyset_forEachRigidBodyHandle(this.ptr, y(g));\n      } finally {\n        I[J++] = void 0;\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(z.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return z;\n}();\nvar u = /*#__PURE__*/function () {\n  function u(I, g, C, B) {\n    _classCallCheck(this, u);\n    var Q = A.rawrotation_new(I, g, C, B);\n    return u.__wrap(Q);\n  }\n  _createClass(u, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawrotation_free(I);\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return A.rawintegrationparameters_dt(this.ptr);\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return A.rawrotation_y(this.ptr);\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return A.rawintegrationparameters_erp(this.ptr);\n    }\n  }, {\n    key: \"w\",\n    get: function get() {\n      return A.rawrotation_w(this.ptr);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(u.prototype);\n      return I.ptr = A, I;\n    }\n  }, {\n    key: \"identity\",\n    value: function identity() {\n      var I = A.rawrotation_identity();\n      return u.__wrap(I);\n    }\n  }]);\n  return u;\n}();\nvar v = /*#__PURE__*/function () {\n  function v() {\n    _classCallCheck(this, v);\n    var I = A.rawserializationpipeline_new();\n    return v.__wrap(I);\n  }\n  _createClass(v, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawserializationpipeline_free(I);\n    }\n  }, {\n    key: \"serializeAll\",\n    value: function serializeAll(I, g, C, B, Q, i, D, o, G) {\n      U(I, gA), U(g, n), U(C, Z), U(B, Y), U(Q, W), U(i, z), U(D, H), U(o, O), U(G, x);\n      return E(A.rawserializationpipeline_serializeAll(this.ptr, I.ptr, g.ptr, C.ptr, B.ptr, Q.ptr, i.ptr, D.ptr, o.ptr, G.ptr));\n    }\n  }, {\n    key: \"deserializeAll\",\n    value: function deserializeAll(I) {\n      var g = A.rawserializationpipeline_deserializeAll(this.ptr, i(I));\n      return 0 === g ? void 0 : r.__wrap(g);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(v.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return v;\n}();\nvar _ = /*#__PURE__*/function () {\n  function _() {\n    _classCallCheck(this, _);\n  }\n  _createClass(_, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawshape_free(I);\n    }\n  }, {\n    key: \"castShape\",\n    value: function castShape(I, g, C, B, Q, E, i, D) {\n      U(I, gA), U(g, u), U(C, gA), U(B, _), U(Q, gA), U(E, u), U(i, gA);\n      var o = A.rawshape_castShape(this.ptr, I.ptr, g.ptr, C.ptr, B.ptr, Q.ptr, E.ptr, i.ptr, D);\n      return 0 === o ? void 0 : IA.__wrap(o);\n    }\n  }, {\n    key: \"intersectsShape\",\n    value: function intersectsShape(I, g, C, B, Q) {\n      U(I, gA), U(g, u), U(C, _), U(B, gA), U(Q, u);\n      return 0 !== A.rawshape_intersectsShape(this.ptr, I.ptr, g.ptr, C.ptr, B.ptr, Q.ptr);\n    }\n  }, {\n    key: \"contactShape\",\n    value: function contactShape(I, g, C, B, Q, E) {\n      U(I, gA), U(g, u), U(C, _), U(B, gA), U(Q, u);\n      var i = A.rawshape_contactShape(this.ptr, I.ptr, g.ptr, C.ptr, B.ptr, Q.ptr, E);\n      return 0 === i ? void 0 : AA.__wrap(i);\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(I, g, C) {\n      U(I, gA), U(g, u), U(C, gA);\n      return 0 !== A.rawshape_containsPoint(this.ptr, I.ptr, g.ptr, C.ptr);\n    }\n  }, {\n    key: \"projectPoint\",\n    value: function projectPoint(I, g, C, B) {\n      U(I, gA), U(g, u), U(C, gA);\n      var Q = A.rawshape_projectPoint(this.ptr, I.ptr, g.ptr, C.ptr, B);\n      return V.__wrap(Q);\n    }\n  }, {\n    key: \"intersectsRay\",\n    value: function intersectsRay(I, g, C, B, Q) {\n      U(I, gA), U(g, u), U(C, gA), U(B, gA);\n      return 0 !== A.rawshape_intersectsRay(this.ptr, I.ptr, g.ptr, C.ptr, B.ptr, Q);\n    }\n  }, {\n    key: \"castRay\",\n    value: function castRay(I, g, C, B, Q, E) {\n      U(I, gA), U(g, u), U(C, gA), U(B, gA);\n      return A.rawshape_castRay(this.ptr, I.ptr, g.ptr, C.ptr, B.ptr, Q, E);\n    }\n  }, {\n    key: \"castRayAndGetNormal\",\n    value: function castRayAndGetNormal(I, g, C, B, Q, E) {\n      U(I, gA), U(g, u), U(C, gA), U(B, gA);\n      var i = A.rawshape_castRayAndGetNormal(this.ptr, I.ptr, g.ptr, C.ptr, B.ptr, Q, E);\n      return 0 === i ? void 0 : X.__wrap(i);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(_.prototype);\n      return I.ptr = A, I;\n    }\n  }, {\n    key: \"cuboid\",\n    value: function cuboid(I, g, C) {\n      var B = A.rawshape_cuboid(I, g, C);\n      return _.__wrap(B);\n    }\n  }, {\n    key: \"roundCuboid\",\n    value: function roundCuboid(I, g, C, B) {\n      var Q = A.rawshape_roundCuboid(I, g, C, B);\n      return _.__wrap(Q);\n    }\n  }, {\n    key: \"ball\",\n    value: function ball(I) {\n      var g = A.rawshape_ball(I);\n      return _.__wrap(g);\n    }\n  }, {\n    key: \"capsule\",\n    value: function capsule(I, g) {\n      var C = A.rawshape_capsule(I, g);\n      return _.__wrap(C);\n    }\n  }, {\n    key: \"cylinder\",\n    value: function cylinder(I, g) {\n      var C = A.rawshape_cylinder(I, g);\n      return _.__wrap(C);\n    }\n  }, {\n    key: \"roundCylinder\",\n    value: function roundCylinder(I, g, C) {\n      var B = A.rawshape_roundCylinder(I, g, C);\n      return _.__wrap(B);\n    }\n  }, {\n    key: \"cone\",\n    value: function cone(I, g) {\n      var C = A.rawshape_cone(I, g);\n      return _.__wrap(C);\n    }\n  }, {\n    key: \"roundCone\",\n    value: function roundCone(I, g, C) {\n      var B = A.rawshape_roundCone(I, g, C);\n      return _.__wrap(B);\n    }\n  }, {\n    key: \"polyline\",\n    value: function polyline(I, g) {\n      var C = R(I, A.__wbindgen_malloc),\n        B = F,\n        Q = q(g, A.__wbindgen_malloc),\n        E = F,\n        i = A.rawshape_polyline(C, B, Q, E);\n      return _.__wrap(i);\n    }\n  }, {\n    key: \"trimesh\",\n    value: function trimesh(I, g) {\n      var C = R(I, A.__wbindgen_malloc),\n        B = F,\n        Q = q(g, A.__wbindgen_malloc),\n        E = F,\n        i = A.rawshape_trimesh(C, B, Q, E);\n      return _.__wrap(i);\n    }\n  }, {\n    key: \"heightfield\",\n    value: function heightfield(I, g, C, B) {\n      var Q = R(C, A.__wbindgen_malloc),\n        E = F;\n      U(B, gA);\n      var i = A.rawshape_heightfield(I, g, Q, E, B.ptr);\n      return _.__wrap(i);\n    }\n  }, {\n    key: \"segment\",\n    value: function segment(I, g) {\n      U(I, gA), U(g, gA);\n      var C = A.rawshape_segment(I.ptr, g.ptr);\n      return _.__wrap(C);\n    }\n  }, {\n    key: \"triangle\",\n    value: function triangle(I, g, C) {\n      U(I, gA), U(g, gA), U(C, gA);\n      var B = A.rawshape_triangle(I.ptr, g.ptr, C.ptr);\n      return _.__wrap(B);\n    }\n  }, {\n    key: \"roundTriangle\",\n    value: function roundTriangle(I, g, C, B) {\n      U(I, gA), U(g, gA), U(C, gA);\n      var Q = A.rawshape_roundTriangle(I.ptr, g.ptr, C.ptr, B);\n      return _.__wrap(Q);\n    }\n  }, {\n    key: \"convexHull\",\n    value: function convexHull(I) {\n      var g = R(I, A.__wbindgen_malloc),\n        C = F,\n        B = A.rawshape_convexHull(g, C);\n      return 0 === B ? void 0 : _.__wrap(B);\n    }\n  }, {\n    key: \"roundConvexHull\",\n    value: function roundConvexHull(I, g) {\n      var C = R(I, A.__wbindgen_malloc),\n        B = F,\n        Q = A.rawshape_roundConvexHull(C, B, g);\n      return 0 === Q ? void 0 : _.__wrap(Q);\n    }\n  }, {\n    key: \"convexMesh\",\n    value: function convexMesh(I, g) {\n      var C = R(I, A.__wbindgen_malloc),\n        B = F,\n        Q = q(g, A.__wbindgen_malloc),\n        E = F,\n        i = A.rawshape_convexMesh(C, B, Q, E);\n      return 0 === i ? void 0 : _.__wrap(i);\n    }\n  }, {\n    key: \"roundConvexMesh\",\n    value: function roundConvexMesh(I, g, C) {\n      var B = R(I, A.__wbindgen_malloc),\n        Q = F,\n        E = q(g, A.__wbindgen_malloc),\n        i = F,\n        D = A.rawshape_roundConvexMesh(B, Q, E, i, C);\n      return 0 === D ? void 0 : _.__wrap(D);\n    }\n  }]);\n  return _;\n}();\nvar $ = /*#__PURE__*/function () {\n  function $() {\n    _classCallCheck(this, $);\n  }\n  _createClass($, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawshapecollidertoi_free(I);\n    }\n  }, {\n    key: \"colliderHandle\",\n    value: function colliderHandle() {\n      return A.rawcontactforceevent_collider1(this.ptr);\n    }\n  }, {\n    key: \"toi\",\n    value: function toi() {\n      return A.rawraycolliderintersection_toi(this.ptr);\n    }\n  }, {\n    key: \"witness1\",\n    value: function witness1() {\n      var I = A.rawraycolliderintersection_normal(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"witness2\",\n    value: function witness2() {\n      var I = A.rawshapecollidertoi_witness2(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"normal1\",\n    value: function normal1() {\n      var I = A.rawshapecollidertoi_normal1(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"normal2\",\n    value: function normal2() {\n      var I = A.rawshapecollidertoi_normal2(this.ptr);\n      return gA.__wrap(I);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create($.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return $;\n}();\nvar AA = /*#__PURE__*/function () {\n  function AA() {\n    _classCallCheck(this, AA);\n  }\n  _createClass(AA, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawshapecontact_free(I);\n    }\n  }, {\n    key: \"distance\",\n    value: function distance() {\n      return A.rawshapecontact_distance(this.ptr);\n    }\n  }, {\n    key: \"point1\",\n    value: function point1() {\n      var I = A.rawpointprojection_point(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"point2\",\n    value: function point2() {\n      var I = A.rawshapecontact_point2(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"normal1\",\n    value: function normal1() {\n      var I = A.rawshapecontact_normal1(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"normal2\",\n    value: function normal2() {\n      var I = A.rawshapecontact_normal2(this.ptr);\n      return gA.__wrap(I);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(AA.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return AA;\n}();\nvar IA = /*#__PURE__*/function () {\n  function IA() {\n    _classCallCheck(this, IA);\n  }\n  _createClass(IA, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawshapetoi_free(I);\n    }\n  }, {\n    key: \"toi\",\n    value: function toi() {\n      return A.rawintegrationparameters_dt(this.ptr);\n    }\n  }, {\n    key: \"witness1\",\n    value: function witness1() {\n      var I = A.rawrayintersection_normal(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"witness2\",\n    value: function witness2() {\n      var I = A.rawshapetoi_witness2(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"normal1\",\n    value: function normal1() {\n      var I = A.rawshapetoi_normal1(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"normal2\",\n    value: function normal2() {\n      var I = A.rawshapetoi_normal2(this.ptr);\n      return gA.__wrap(I);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(IA.prototype);\n      return I.ptr = A, I;\n    }\n  }]);\n  return IA;\n}();\nvar gA = /*#__PURE__*/function () {\n  function gA(I, g, C) {\n    _classCallCheck(this, gA);\n    var B = A.rawvector_new(I, g, C);\n    return gA.__wrap(B);\n  }\n  _createClass(gA, [{\n    key: \"__destroy_into_raw\",\n    value: function __destroy_into_raw() {\n      var A = this.ptr;\n      return this.ptr = 0, A;\n    }\n  }, {\n    key: \"free\",\n    value: function free() {\n      var I = this.__destroy_into_raw();\n      A.__wbg_rawvector_free(I);\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return A.rawintegrationparameters_dt(this.ptr);\n    },\n    set: function set(I) {\n      A.rawintegrationparameters_set_dt(this.ptr, I);\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return A.rawrotation_y(this.ptr);\n    },\n    set: function set(I) {\n      A.rawvector_set_y(this.ptr, I);\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return A.rawintegrationparameters_erp(this.ptr);\n    },\n    set: function set(I) {\n      A.rawintegrationparameters_set_erp(this.ptr, I);\n    }\n  }, {\n    key: \"xyz\",\n    value: function xyz() {\n      var I = A.rawvector_xyz(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"yxz\",\n    value: function yxz() {\n      var I = A.rawvector_yxz(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"zxy\",\n    value: function zxy() {\n      var I = A.rawvector_zxy(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"xzy\",\n    value: function xzy() {\n      var I = A.rawvector_xzy(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"yzx\",\n    value: function yzx() {\n      var I = A.rawvector_yzx(this.ptr);\n      return gA.__wrap(I);\n    }\n  }, {\n    key: \"zyx\",\n    value: function zyx() {\n      var I = A.rawvector_zyx(this.ptr);\n      return gA.__wrap(I);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(A) {\n      var I = Object.create(gA.prototype);\n      return I.ptr = A, I;\n    }\n  }, {\n    key: \"zero\",\n    value: function zero() {\n      var I = A.rawvector_zero();\n      return gA.__wrap(I);\n    }\n  }]);\n  return gA;\n}();\nfunction CA(_x) {\n  return _CA.apply(this, arguments);\n}\nfunction _CA() {\n  _CA = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(I) {\n    var Q, _yield, S, U;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            void 0 === I && (I = new URL(\"rapier_wasm3d_bg.wasm\", \"<deleted>\"));\n            Q = function () {\n              var I = {\n                wbg: {}\n              };\n              return I.wbg.__wbindgen_object_drop_ref = function (A) {\n                E(A);\n              }, I.wbg.__wbindgen_number_new = function (A) {\n                return i(A);\n              }, I.wbg.__wbindgen_number_get = function (A, I) {\n                var C = g(I),\n                  B = \"number\" == typeof C ? C : void 0;\n                o()[A / 8 + 1] = D(B) ? 0 : B, G()[A / 4 + 0] = !D(B);\n              }, I.wbg.__wbindgen_boolean_get = function (A) {\n                var I = g(A);\n                return \"boolean\" == typeof I ? I ? 1 : 0 : 2;\n              }, I.wbg.__wbg_rawraycolliderintersection_new = function (A) {\n                return i(P.__wrap(A));\n              }, I.wbg.__wbg_rawcontactforceevent_new = function (A) {\n                return i(l.__wrap(A));\n              }, I.wbg.__wbindgen_is_function = function (A) {\n                return \"function\" == typeof g(A);\n              }, I.wbg.__wbg_call_9855a4612eb496cb = function () {\n                return s(function (A, I, C) {\n                  return i(g(A).call(g(I), g(C)));\n                }, arguments);\n              }, I.wbg.__wbg_call_8e1338b908441bd2 = function () {\n                return s(function (A, I, C, B) {\n                  return i(g(A).call(g(I), g(C), g(B)));\n                }, arguments);\n              }, I.wbg.__wbg_call_0a54fa4fb42023f0 = function () {\n                return s(function (A, I, C, B, Q) {\n                  return i(g(A).call(g(I), g(C), g(B), g(Q)));\n                }, arguments);\n              }, I.wbg.__wbg_bind_2ae44992222e2f45 = function (A, I, C, B) {\n                return i(g(A).bind(g(I), g(C), g(B)));\n              }, I.wbg.__wbg_buffer_de1150f91b23aa89 = function (A) {\n                return i(g(A).buffer);\n              }, I.wbg.__wbg_newwithbyteoffsetandlength_9ca61320599a2c84 = function (A, I, C) {\n                return i(new Uint8Array(g(A), I >>> 0, C >>> 0));\n              }, I.wbg.__wbg_new_97cf52648830a70d = function (A) {\n                return i(new Uint8Array(g(A)));\n              }, I.wbg.__wbg_set_a0172b213e2469e9 = function (A, I, C) {\n                g(A).set(g(I), C >>> 0);\n              }, I.wbg.__wbg_length_e09c0b925ab8de5d = function (A) {\n                return g(A).length;\n              }, I.wbg.__wbg_newwithbyteoffsetandlength_b0ff18b468a0d3f8 = function (A, I, C) {\n                return i(new Float32Array(g(A), I >>> 0, C >>> 0));\n              }, I.wbg.__wbg_set_66067e08ab6cefb5 = function (A, I, C) {\n                g(A).set(g(I), C >>> 0);\n              }, I.wbg.__wbg_length_211080f5c116c01f = function (A) {\n                return g(A).length;\n              }, I.wbg.__wbg_newwithlength_f28ac7a9191c7e26 = function (A) {\n                return i(new Float32Array(A >>> 0));\n              }, I.wbg.__wbindgen_throw = function (A, I) {\n                throw new Error(k(A, I));\n              }, I.wbg.__wbindgen_memory = function () {\n                return i(A.memory);\n              }, I;\n            }();\n            (\"string\" == typeof I || \"function\" == typeof Request && I instanceof Request || \"function\" == typeof URL && I instanceof URL) && (I = fetch(I));\n            _context3.t0 = function () {\n              var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(A, I) {\n                var _g, _g2;\n                return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        if (!(\"function\" == typeof Response && A instanceof Response)) {\n                          _context2.next = 19;\n                          break;\n                        }\n                        if (!(\"function\" == typeof WebAssembly.instantiateStreaming)) {\n                          _context2.next = 13;\n                          break;\n                        }\n                        _context2.prev = 2;\n                        _context2.next = 5;\n                        return WebAssembly.instantiateStreaming(A, I);\n                      case 5:\n                        return _context2.abrupt(\"return\", _context2.sent);\n                      case 8:\n                        _context2.prev = 8;\n                        _context2.t0 = _context2[\"catch\"](2);\n                        if (!(\"application/wasm\" == A.headers.get(\"Content-Type\"))) {\n                          _context2.next = 12;\n                          break;\n                        }\n                        throw _context2.t0;\n                      case 12:\n                        console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", _context2.t0);\n                      case 13:\n                        _context2.next = 15;\n                        return A.arrayBuffer();\n                      case 15:\n                        _g = _context2.sent;\n                        _context2.next = 18;\n                        return WebAssembly.instantiate(_g, I);\n                      case 18:\n                        return _context2.abrupt(\"return\", _context2.sent);\n                      case 19:\n                        _context2.next = 21;\n                        return WebAssembly.instantiate(A, I);\n                      case 21:\n                        _g2 = _context2.sent;\n                        return _context2.abrupt(\"return\", _g2 instanceof WebAssembly.Instance ? {\n                          instance: _g2,\n                          module: A\n                        } : _g2);\n                      case 23:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2, null, [[2, 8]]);\n              }));\n              return function (_x2, _x3) {\n                return _ref.apply(this, arguments);\n              };\n            }();\n            _context3.next = 6;\n            return I;\n          case 6:\n            _context3.t1 = _context3.sent;\n            _context3.t2 = Q;\n            _context3.next = 10;\n            return (0, _context3.t0)(_context3.t1, _context3.t2);\n          case 10:\n            _yield = _context3.sent;\n            S = _yield.instance;\n            U = _yield.module;\n            return _context3.abrupt(\"return\", function (I, g) {\n              return A = I.exports, CA.__wbindgen_wasm_module = g, K = new Float32Array(A.memory.buffer), C = new Float64Array(A.memory.buffer), B = new Int32Array(A.memory.buffer), a = new Uint32Array(A.memory.buffer), w = new Uint8Array(A.memory.buffer), A;\n            }(S, U));\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _CA.apply(this, arguments);\n}\nvar BA = /*#__PURE__*/_createClass(function BA(A, I, g) {\n  _classCallCheck(this, BA);\n  this.x = A, this.y = I, this.z = g;\n});\nvar QA = /*#__PURE__*/function () {\n  function QA() {\n    _classCallCheck(this, QA);\n  }\n  _createClass(QA, null, [{\n    key: \"new\",\n    value: function _new(A, I, g) {\n      return new BA(A, I, g);\n    }\n  }, {\n    key: \"intoRaw\",\n    value: function intoRaw(A) {\n      return new gA(A.x, A.y, A.z);\n    }\n  }, {\n    key: \"zeros\",\n    value: function zeros() {\n      return QA.new(0, 0, 0);\n    }\n  }, {\n    key: \"fromRaw\",\n    value: function fromRaw(A) {\n      if (!A) return null;\n      var I = QA.new(A.x, A.y, A.z);\n      return A.free(), I;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(A, I) {\n      A.x = I.x, A.y = I.y, A.z = I.z;\n    }\n  }]);\n  return QA;\n}();\nvar EA = /*#__PURE__*/_createClass(function EA(A, I, g, C) {\n  _classCallCheck(this, EA);\n  this.x = A, this.y = I, this.z = g, this.w = C;\n});\nvar iA = /*#__PURE__*/function () {\n  function iA() {\n    _classCallCheck(this, iA);\n  }\n  _createClass(iA, null, [{\n    key: \"identity\",\n    value: function identity() {\n      return new EA(0, 0, 0, 1);\n    }\n  }, {\n    key: \"fromRaw\",\n    value: function fromRaw(A) {\n      if (!A) return null;\n      var I = new EA(A.x, A.y, A.z, A.w);\n      return A.free(), I;\n    }\n  }, {\n    key: \"intoRaw\",\n    value: function intoRaw(A) {\n      return new u(A.x, A.y, A.z, A.w);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(A, I) {\n      A.x = I.x, A.y = I.y, A.z = I.z, A.w = I.w;\n    }\n  }]);\n  return iA;\n}();\nvar DA, oA, GA, SA, wA, kA, UA, KA, aA, JA, yA, MA;\n!function (A) {\n  A[A.Dynamic = 0] = \"Dynamic\", A[A.Fixed = 1] = \"Fixed\", A[A.KinematicPositionBased = 2] = \"KinematicPositionBased\", A[A.KinematicVelocityBased = 3] = \"KinematicVelocityBased\";\n}(DA || (DA = {}));\nvar hA = /*#__PURE__*/function () {\n  function hA(A, I, g) {\n    _classCallCheck(this, hA);\n    this.rawSet = A, this.colliderSet = I, this.handle = g;\n  }\n  _createClass(hA, [{\n    key: \"finalizeDeserialization\",\n    value: function finalizeDeserialization(A) {\n      this.colliderSet = A;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return this.rawSet.contains(this.handle);\n    }\n  }, {\n    key: \"lockTranslations\",\n    value: function lockTranslations(A, I) {\n      return this.rawSet.rbLockTranslations(this.handle, A, I);\n    }\n  }, {\n    key: \"lockRotations\",\n    value: function lockRotations(A, I) {\n      return this.rawSet.rbLockRotations(this.handle, A, I);\n    }\n  }, {\n    key: \"setEnabledTranslations\",\n    value: function setEnabledTranslations(A, I, g, C) {\n      return this.rawSet.rbSetEnabledTranslations(this.handle, A, I, g, C);\n    }\n  }, {\n    key: \"restrictTranslations\",\n    value: function restrictTranslations(A, I, g, C) {\n      this.setEnabledTranslations(A, I, g, C);\n    }\n  }, {\n    key: \"setEnabledRotations\",\n    value: function setEnabledRotations(A, I, g, C) {\n      return this.rawSet.rbSetEnabledRotations(this.handle, A, I, g, C);\n    }\n  }, {\n    key: \"restrictRotations\",\n    value: function restrictRotations(A, I, g, C) {\n      this.setEnabledRotations(A, I, g, C);\n    }\n  }, {\n    key: \"dominanceGroup\",\n    value: function dominanceGroup() {\n      return this.rawSet.rbDominanceGroup(this.handle);\n    }\n  }, {\n    key: \"setDominanceGroup\",\n    value: function setDominanceGroup(A) {\n      this.rawSet.rbSetDominanceGroup(this.handle, A);\n    }\n  }, {\n    key: \"enableCcd\",\n    value: function enableCcd(A) {\n      this.rawSet.rbEnableCcd(this.handle, A);\n    }\n  }, {\n    key: \"translation\",\n    value: function translation() {\n      var A = this.rawSet.rbTranslation(this.handle);\n      return QA.fromRaw(A);\n    }\n  }, {\n    key: \"rotation\",\n    value: function rotation() {\n      var A = this.rawSet.rbRotation(this.handle);\n      return iA.fromRaw(A);\n    }\n  }, {\n    key: \"nextTranslation\",\n    value: function nextTranslation() {\n      var A = this.rawSet.rbNextTranslation(this.handle);\n      return QA.fromRaw(A);\n    }\n  }, {\n    key: \"nextRotation\",\n    value: function nextRotation() {\n      var A = this.rawSet.rbNextRotation(this.handle);\n      return iA.fromRaw(A);\n    }\n  }, {\n    key: \"setTranslation\",\n    value: function setTranslation(A, I) {\n      this.rawSet.rbSetTranslation(this.handle, A.x, A.y, A.z, I);\n    }\n  }, {\n    key: \"setLinvel\",\n    value: function setLinvel(A, I) {\n      var g = QA.intoRaw(A);\n      this.rawSet.rbSetLinvel(this.handle, g, I), g.free();\n    }\n  }, {\n    key: \"gravityScale\",\n    value: function gravityScale() {\n      return this.rawSet.rbGravityScale(this.handle);\n    }\n  }, {\n    key: \"setGravityScale\",\n    value: function setGravityScale(A, I) {\n      this.rawSet.rbSetGravityScale(this.handle, A, I);\n    }\n  }, {\n    key: \"setRotation\",\n    value: function setRotation(A, I) {\n      this.rawSet.rbSetRotation(this.handle, A.x, A.y, A.z, A.w, I);\n    }\n  }, {\n    key: \"setAngvel\",\n    value: function setAngvel(A, I) {\n      var g = QA.intoRaw(A);\n      this.rawSet.rbSetAngvel(this.handle, g, I), g.free();\n    }\n  }, {\n    key: \"setNextKinematicTranslation\",\n    value: function setNextKinematicTranslation(A) {\n      this.rawSet.rbSetNextKinematicTranslation(this.handle, A.x, A.y, A.z);\n    }\n  }, {\n    key: \"setNextKinematicRotation\",\n    value: function setNextKinematicRotation(A) {\n      this.rawSet.rbSetNextKinematicRotation(this.handle, A.x, A.y, A.z, A.w);\n    }\n  }, {\n    key: \"linvel\",\n    value: function linvel() {\n      return QA.fromRaw(this.rawSet.rbLinvel(this.handle));\n    }\n  }, {\n    key: \"angvel\",\n    value: function angvel() {\n      return QA.fromRaw(this.rawSet.rbAngvel(this.handle));\n    }\n  }, {\n    key: \"mass\",\n    value: function mass() {\n      return this.rawSet.rbMass(this.handle);\n    }\n  }, {\n    key: \"sleep\",\n    value: function sleep() {\n      this.rawSet.rbSleep(this.handle);\n    }\n  }, {\n    key: \"wakeUp\",\n    value: function wakeUp() {\n      this.rawSet.rbWakeUp(this.handle);\n    }\n  }, {\n    key: \"isCcdEnabled\",\n    value: function isCcdEnabled() {\n      this.rawSet.rbIsCcdEnabled(this.handle);\n    }\n  }, {\n    key: \"numColliders\",\n    value: function numColliders() {\n      return this.rawSet.rbNumColliders(this.handle);\n    }\n  }, {\n    key: \"collider\",\n    value: function collider(A) {\n      return this.colliderSet.get(this.rawSet.rbCollider(this.handle, A));\n    }\n  }, {\n    key: \"bodyType\",\n    value: function bodyType() {\n      return this.rawSet.rbBodyType(this.handle);\n    }\n  }, {\n    key: \"setBodyType\",\n    value: function setBodyType(A) {\n      return this.rawSet.rbSetBodyType(this.handle, A);\n    }\n  }, {\n    key: \"isSleeping\",\n    value: function isSleeping() {\n      return this.rawSet.rbIsSleeping(this.handle);\n    }\n  }, {\n    key: \"isMoving\",\n    value: function isMoving() {\n      return this.rawSet.rbIsMoving(this.handle);\n    }\n  }, {\n    key: \"isFixed\",\n    value: function isFixed() {\n      return this.rawSet.rbIsFixed(this.handle);\n    }\n  }, {\n    key: \"isKinematic\",\n    value: function isKinematic() {\n      return this.rawSet.rbIsKinematic(this.handle);\n    }\n  }, {\n    key: \"isDynamic\",\n    value: function isDynamic() {\n      return this.rawSet.rbIsDynamic(this.handle);\n    }\n  }, {\n    key: \"linearDamping\",\n    value: function linearDamping() {\n      return this.rawSet.rbLinearDamping(this.handle);\n    }\n  }, {\n    key: \"angularDamping\",\n    value: function angularDamping() {\n      return this.rawSet.rbAngularDamping(this.handle);\n    }\n  }, {\n    key: \"setLinearDamping\",\n    value: function setLinearDamping(A) {\n      this.rawSet.rbSetLinearDamping(this.handle, A);\n    }\n  }, {\n    key: \"recomputeMassPropertiesFromColliders\",\n    value: function recomputeMassPropertiesFromColliders() {\n      this.rawSet.rbRecomputeMassPropertiesFromColliders(this.handle, this.colliderSet.raw);\n    }\n  }, {\n    key: \"setAdditionalMass\",\n    value: function setAdditionalMass(A, I) {\n      this.rawSet.rbSetAdditionalMass(this.handle, A, I);\n    }\n  }, {\n    key: \"setAdditionalMassProperties\",\n    value: function setAdditionalMassProperties(A, I, g, C, B) {\n      var Q = QA.intoRaw(I),\n        E = QA.intoRaw(g),\n        i = iA.intoRaw(C);\n      this.rawSet.rbSetAdditionalMassProperties(this.handle, A, Q, E, i, B), Q.free(), E.free(), i.free();\n    }\n  }, {\n    key: \"setAngularDamping\",\n    value: function setAngularDamping(A) {\n      this.rawSet.rbSetAngularDamping(this.handle, A);\n    }\n  }, {\n    key: \"resetForces\",\n    value: function resetForces(A) {\n      this.rawSet.rbResetForces(this.handle, A);\n    }\n  }, {\n    key: \"resetTorques\",\n    value: function resetTorques(A) {\n      this.rawSet.rbResetTorques(this.handle, A);\n    }\n  }, {\n    key: \"addForce\",\n    value: function addForce(A, I) {\n      var g = QA.intoRaw(A);\n      this.rawSet.rbAddForce(this.handle, g, I), g.free();\n    }\n  }, {\n    key: \"applyImpulse\",\n    value: function applyImpulse(A, I) {\n      var g = QA.intoRaw(A);\n      this.rawSet.rbApplyImpulse(this.handle, g, I), g.free();\n    }\n  }, {\n    key: \"addTorque\",\n    value: function addTorque(A, I) {\n      var g = QA.intoRaw(A);\n      this.rawSet.rbAddTorque(this.handle, g, I), g.free();\n    }\n  }, {\n    key: \"applyTorqueImpulse\",\n    value: function applyTorqueImpulse(A, I) {\n      var g = QA.intoRaw(A);\n      this.rawSet.rbApplyTorqueImpulse(this.handle, g, I), g.free();\n    }\n  }, {\n    key: \"addForceAtPoint\",\n    value: function addForceAtPoint(A, I, g) {\n      var C = QA.intoRaw(A),\n        B = QA.intoRaw(I);\n      this.rawSet.rbAddForceAtPoint(this.handle, C, B, g), C.free(), B.free();\n    }\n  }, {\n    key: \"applyImpulseAtPoint\",\n    value: function applyImpulseAtPoint(A, I, g) {\n      var C = QA.intoRaw(A),\n        B = QA.intoRaw(I);\n      this.rawSet.rbApplyImpulseAtPoint(this.handle, C, B, g), C.free(), B.free();\n    }\n  }]);\n  return hA;\n}();\nvar NA = /*#__PURE__*/function () {\n  function NA(A) {\n    _classCallCheck(this, NA);\n    this.status = A, this.translation = QA.zeros(), this.rotation = iA.identity(), this.gravityScale = 1, this.linvel = QA.zeros(), this.mass = 0, this.massOnly = !1, this.centerOfMass = QA.zeros(), this.translationsEnabledX = !0, this.translationsEnabledY = !0, this.angvel = QA.zeros(), this.principalAngularInertia = QA.zeros(), this.angularInertiaLocalFrame = iA.identity(), this.translationsEnabledZ = !0, this.rotationsEnabledX = !0, this.rotationsEnabledY = !0, this.rotationsEnabledZ = !0, this.linearDamping = 0, this.angularDamping = 0, this.canSleep = !0, this.sleeping = !1, this.ccdEnabled = !1, this.dominanceGroup = 0;\n  }\n  _createClass(NA, [{\n    key: \"setDominanceGroup\",\n    value: function setDominanceGroup(A) {\n      return this.dominanceGroup = A, this;\n    }\n  }, {\n    key: \"setTranslation\",\n    value: function setTranslation(A, I, g) {\n      if (\"number\" != typeof A || \"number\" != typeof I || \"number\" != typeof g) throw TypeError(\"The translation components must be numbers.\");\n      return this.translation = {\n        x: A,\n        y: I,\n        z: g\n      }, this;\n    }\n  }, {\n    key: \"setRotation\",\n    value: function setRotation(A) {\n      return iA.copy(this.rotation, A), this;\n    }\n  }, {\n    key: \"setGravityScale\",\n    value: function setGravityScale(A) {\n      return this.gravityScale = A, this;\n    }\n  }, {\n    key: \"setAdditionalMass\",\n    value: function setAdditionalMass(A) {\n      return this.mass = A, this.massOnly = !0, this;\n    }\n  }, {\n    key: \"setLinvel\",\n    value: function setLinvel(A, I, g) {\n      if (\"number\" != typeof A || \"number\" != typeof I || \"number\" != typeof g) throw TypeError(\"The linvel components must be numbers.\");\n      return this.linvel = {\n        x: A,\n        y: I,\n        z: g\n      }, this;\n    }\n  }, {\n    key: \"setAngvel\",\n    value: function setAngvel(A) {\n      return QA.copy(this.angvel, A), this;\n    }\n  }, {\n    key: \"setAdditionalMassProperties\",\n    value: function setAdditionalMassProperties(A, I, g, C) {\n      return this.mass = A, QA.copy(this.centerOfMass, I), QA.copy(this.principalAngularInertia, g), iA.copy(this.angularInertiaLocalFrame, C), this.massOnly = !1, this;\n    }\n  }, {\n    key: \"enabledTranslations\",\n    value: function enabledTranslations(A, I, g) {\n      return this.translationsEnabledX = A, this.translationsEnabledY = I, this.translationsEnabledZ = g, this;\n    }\n  }, {\n    key: \"restrictTranslations\",\n    value: function restrictTranslations(A, I, g) {\n      return this.enabledTranslations(A, I, g);\n    }\n  }, {\n    key: \"lockTranslations\",\n    value: function lockTranslations() {\n      return this.enabledTranslations(!1, !1, !1);\n    }\n  }, {\n    key: \"enabledRotations\",\n    value: function enabledRotations(A, I, g) {\n      return this.rotationsEnabledX = A, this.rotationsEnabledY = I, this.rotationsEnabledZ = g, this;\n    }\n  }, {\n    key: \"restrictRotations\",\n    value: function restrictRotations(A, I, g) {\n      return this.enabledRotations(A, I, g);\n    }\n  }, {\n    key: \"lockRotations\",\n    value: function lockRotations() {\n      return this.restrictRotations(!1, !1, !1);\n    }\n  }, {\n    key: \"setLinearDamping\",\n    value: function setLinearDamping(A) {\n      return this.linearDamping = A, this;\n    }\n  }, {\n    key: \"setAngularDamping\",\n    value: function setAngularDamping(A) {\n      return this.angularDamping = A, this;\n    }\n  }, {\n    key: \"setCanSleep\",\n    value: function setCanSleep(A) {\n      return this.canSleep = A, this;\n    }\n  }, {\n    key: \"setSleeping\",\n    value: function setSleeping(A) {\n      return this.sleeping = A, this;\n    }\n  }, {\n    key: \"setCcdEnabled\",\n    value: function setCcdEnabled(A) {\n      return this.ccdEnabled = A, this;\n    }\n  }, {\n    key: \"setUserData\",\n    value: function setUserData(A) {\n      return this.userData = A, this;\n    }\n  }], [{\n    key: \"dynamic\",\n    value: function dynamic() {\n      return new NA(DA.Dynamic);\n    }\n  }, {\n    key: \"kinematicPositionBased\",\n    value: function kinematicPositionBased() {\n      return new NA(DA.KinematicPositionBased);\n    }\n  }, {\n    key: \"kinematicVelocityBased\",\n    value: function kinematicVelocityBased() {\n      return new NA(DA.KinematicVelocityBased);\n    }\n  }, {\n    key: \"fixed\",\n    value: function fixed() {\n      return new NA(DA.Fixed);\n    }\n  }, {\n    key: \"newDynamic\",\n    value: function newDynamic() {\n      return new NA(DA.Dynamic);\n    }\n  }, {\n    key: \"newKinematicPositionBased\",\n    value: function newKinematicPositionBased() {\n      return new NA(DA.KinematicPositionBased);\n    }\n  }, {\n    key: \"newKinematicVelocityBased\",\n    value: function newKinematicVelocityBased() {\n      return new NA(DA.KinematicVelocityBased);\n    }\n  }, {\n    key: \"newStatic\",\n    value: function newStatic() {\n      return new NA(DA.Fixed);\n    }\n  }]);\n  return NA;\n}();\nvar FA = /*#__PURE__*/function () {\n  function FA() {\n    _classCallCheck(this, FA);\n    this.fconv = new Float64Array(1), this.uconv = new Uint32Array(this.fconv.buffer), this.data = new Array(), this.size = 0;\n  }\n  _createClass(FA, [{\n    key: \"set\",\n    value: function set(A, I) {\n      var g = this.index(A);\n      for (; this.data.length <= g;) {\n        this.data.push(null);\n      }\n      null == this.data[g] && (this.size += 1), this.data[g] = I;\n    }\n  }, {\n    key: \"len\",\n    value: function len() {\n      return this.size;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(A) {\n      var I = this.index(A);\n      I < this.data.length && (null != this.data[I] && (this.size -= 1), this.data[I] = null);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.data = new Array();\n    }\n  }, {\n    key: \"get\",\n    value: function get(A) {\n      var I = this.index(A);\n      return I < this.data.length ? this.data[I] : null;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(A) {\n      var _iterator = _createForOfIteratorHelper(this.data),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _I = _step.value;\n          null != _I && A(_I);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      return this.data.filter(function (A) {\n        return null != A;\n      });\n    }\n  }, {\n    key: \"index\",\n    value: function index(A) {\n      return this.fconv[0] = A, this.uconv[0];\n    }\n  }]);\n  return FA;\n}();\nvar RA = /*#__PURE__*/function () {\n  function RA(A) {\n    var _this = this;\n    _classCallCheck(this, RA);\n    this.raw = A || new z(), this.map = new FA(), A && A.forEachRigidBodyHandle(function (I) {\n      _this.map.set(I, new hA(A, null, I));\n    });\n  }\n  _createClass(RA, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0, this.map.clear(), this.map = void 0;\n    }\n  }, {\n    key: \"finalizeDeserialization\",\n    value: function finalizeDeserialization(A) {\n      this.map.forEach(function (I) {\n        return I.finalizeDeserialization(A);\n      });\n    }\n  }, {\n    key: \"createRigidBody\",\n    value: function createRigidBody(A, I) {\n      var g = QA.intoRaw(I.translation),\n        C = iA.intoRaw(I.rotation),\n        B = QA.intoRaw(I.linvel),\n        Q = QA.intoRaw(I.centerOfMass),\n        E = QA.intoRaw(I.angvel),\n        i = QA.intoRaw(I.principalAngularInertia),\n        D = iA.intoRaw(I.angularInertiaLocalFrame),\n        o = this.raw.createRigidBody(g, C, I.gravityScale, I.mass, I.massOnly, Q, B, E, i, D, I.translationsEnabledX, I.translationsEnabledY, I.translationsEnabledZ, I.rotationsEnabledX, I.rotationsEnabledY, I.rotationsEnabledZ, I.linearDamping, I.angularDamping, I.status, I.canSleep, I.sleeping, I.ccdEnabled, I.dominanceGroup);\n      g.free(), C.free(), B.free(), Q.free(), E.free(), i.free(), D.free();\n      var G = new hA(this.raw, A, o);\n      return G.userData = I.userData, this.map.set(o, G), G;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(A, I, g, C, B) {\n      for (var _I2 = 0; _I2 < this.raw.rbNumColliders(A); _I2 += 1) {\n        g.unmap(this.raw.rbCollider(A, _I2));\n      }\n      C.forEachJointHandleAttachedToRigidBody(A, function (A) {\n        return C.unmap(A);\n      }), B.forEachJointHandleAttachedToRigidBody(A, function (A) {\n        return B.unmap(A);\n      }), this.raw.remove(A, I.raw, g.raw, C.raw, B.raw), this.map.delete(A);\n    }\n  }, {\n    key: \"len\",\n    value: function len() {\n      return this.map.len();\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(A) {\n      return null != this.get(A);\n    }\n  }, {\n    key: \"get\",\n    value: function get(A) {\n      return this.map.get(A);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(A) {\n      this.map.forEach(A);\n    }\n  }, {\n    key: \"forEachActiveRigidBody\",\n    value: function forEachActiveRigidBody(A, I) {\n      var _this2 = this;\n      A.forEachActiveRigidBodyHandle(function (A) {\n        I(_this2.get(A));\n      });\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      return this.map.getAll();\n    }\n  }]);\n  return RA;\n}();\nvar qA = /*#__PURE__*/function () {\n  function qA(A) {\n    _classCallCheck(this, qA);\n    this.raw = A || new n();\n  }\n  _createClass(qA, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0;\n    }\n  }, {\n    key: \"dt\",\n    get: function get() {\n      return this.raw.dt;\n    },\n    set: function set(A) {\n      this.raw.dt = A;\n    }\n  }, {\n    key: \"erp\",\n    get: function get() {\n      return this.raw.erp;\n    },\n    set: function set(A) {\n      this.raw.erp = A;\n    }\n  }, {\n    key: \"allowedLinearError\",\n    get: function get() {\n      return this.raw.allowedLinearError;\n    },\n    set: function set(A) {\n      this.raw.allowedLinearError = A;\n    }\n  }, {\n    key: \"predictionDistance\",\n    get: function get() {\n      return this.raw.predictionDistance;\n    },\n    set: function set(A) {\n      this.raw.predictionDistance = A;\n    }\n  }, {\n    key: \"maxVelocityIterations\",\n    get: function get() {\n      return this.raw.maxVelocityIterations;\n    },\n    set: function set(A) {\n      this.raw.maxVelocityIterations = A;\n    }\n  }, {\n    key: \"maxVelocityFrictionIterations\",\n    get: function get() {\n      return this.raw.maxVelocityFrictionIterations;\n    },\n    set: function set(A) {\n      this.raw.maxVelocityFrictionIterations = A;\n    }\n  }, {\n    key: \"maxStabilizationIterations\",\n    get: function get() {\n      return this.raw.maxStabilizationIterations;\n    },\n    set: function set(A) {\n      this.raw.maxStabilizationIterations = A;\n    }\n  }, {\n    key: \"minIslandSize\",\n    get: function get() {\n      return this.raw.minIslandSize;\n    },\n    set: function set(A) {\n      this.raw.minIslandSize = A;\n    }\n  }, {\n    key: \"maxCcdSubsteps\",\n    get: function get() {\n      return this.raw.maxCcdSubsteps;\n    },\n    set: function set(A) {\n      this.raw.maxCcdSubsteps = A;\n    }\n  }]);\n  return qA;\n}();\n!function (A) {\n  A[A.Revolute = 0] = \"Revolute\", A[A.Fixed = 1] = \"Fixed\", A[A.Prismatic = 2] = \"Prismatic\", A[A.Spherical = 3] = \"Spherical\";\n}(oA || (oA = {})), function (A) {\n  A[A.AccelerationBased = 0] = \"AccelerationBased\", A[A.ForceBased = 1] = \"ForceBased\";\n}(GA || (GA = {}));\nvar sA = /*#__PURE__*/function () {\n  function sA(A, I, g) {\n    _classCallCheck(this, sA);\n    this.rawSet = A, this.bodySet = I, this.handle = g;\n  }\n  _createClass(sA, [{\n    key: \"finalizeDeserialization\",\n    value: function finalizeDeserialization(A) {\n      this.bodySet = A;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return this.rawSet.contains(this.handle);\n    }\n  }, {\n    key: \"body1\",\n    value: function body1() {\n      return this.bodySet.get(this.rawSet.jointBodyHandle1(this.handle));\n    }\n  }, {\n    key: \"body2\",\n    value: function body2() {\n      return this.bodySet.get(this.rawSet.jointBodyHandle2(this.handle));\n    }\n  }, {\n    key: \"type\",\n    value: function type() {\n      return this.rawSet.jointType(this.handle);\n    }\n  }, {\n    key: \"frameX1\",\n    value: function frameX1() {\n      return iA.fromRaw(this.rawSet.jointFrameX1(this.handle));\n    }\n  }, {\n    key: \"frameX2\",\n    value: function frameX2() {\n      return iA.fromRaw(this.rawSet.jointFrameX2(this.handle));\n    }\n  }, {\n    key: \"anchor1\",\n    value: function anchor1() {\n      return QA.fromRaw(this.rawSet.jointAnchor1(this.handle));\n    }\n  }, {\n    key: \"anchor2\",\n    value: function anchor2() {\n      return QA.fromRaw(this.rawSet.jointAnchor2(this.handle));\n    }\n  }, {\n    key: \"setAnchor1\",\n    value: function setAnchor1(A) {\n      var I = QA.intoRaw(A);\n      this.rawSet.jointSetAnchor1(this.handle, I), I.free();\n    }\n  }, {\n    key: \"setAnchor2\",\n    value: function setAnchor2(A) {\n      var I = QA.intoRaw(A);\n      this.rawSet.jointSetAnchor2(this.handle, I), I.free();\n    }\n  }, {\n    key: \"setContactsEnabled\",\n    value: function setContactsEnabled(A) {\n      this.rawSet.jointSetContactsEnabled(this.handle, A);\n    }\n  }, {\n    key: \"contactsEnabled\",\n    value: function contactsEnabled() {\n      return this.rawSet.jointContactsEnabled(this.handle);\n    }\n  }], [{\n    key: \"newTyped\",\n    value: function newTyped(A, I, g) {\n      switch (A.jointType(g)) {\n        case oA.Revolute:\n          return new HA(A, I, g);\n        case oA.Prismatic:\n          return new LA(A, I, g);\n        case oA.Fixed:\n          return new YA(A, I, g);\n        case oA.Spherical:\n          return new lA(A, I, g);\n        default:\n          return new sA(A, I, g);\n      }\n    }\n  }]);\n  return sA;\n}();\nvar cA = /*#__PURE__*/function (_sA) {\n  _inherits(cA, _sA);\n  var _super = _createSuper(cA);\n  function cA() {\n    _classCallCheck(this, cA);\n    return _super.apply(this, arguments);\n  }\n  _createClass(cA, [{\n    key: \"limitsEnabled\",\n    value: function limitsEnabled() {\n      return this.rawSet.jointLimitsEnabled(this.handle, this.rawAxis());\n    }\n  }, {\n    key: \"limitsMin\",\n    value: function limitsMin() {\n      return this.rawSet.jointLimitsMin(this.handle, this.rawAxis());\n    }\n  }, {\n    key: \"limitsMax\",\n    value: function limitsMax() {\n      return this.rawSet.jointLimitsMax(this.handle, this.rawAxis());\n    }\n  }, {\n    key: \"setLimits\",\n    value: function setLimits(A, I) {\n      this.rawSet.jointSetLimits(this.handle, this.rawAxis(), A, I);\n    }\n  }, {\n    key: \"configureMotorModel\",\n    value: function configureMotorModel(A) {\n      this.rawSet.jointConfigureMotorModel(this.handle, this.rawAxis(), A);\n    }\n  }, {\n    key: \"configureMotorVelocity\",\n    value: function configureMotorVelocity(A, I) {\n      this.rawSet.jointConfigureMotorVelocity(this.handle, this.rawAxis(), A, I);\n    }\n  }, {\n    key: \"configureMotorPosition\",\n    value: function configureMotorPosition(A, I, g) {\n      this.rawSet.jointConfigureMotorPosition(this.handle, this.rawAxis(), A, I, g);\n    }\n  }, {\n    key: \"configureMotor\",\n    value: function configureMotor(A, I, g, C) {\n      this.rawSet.jointConfigureMotor(this.handle, this.rawAxis(), A, I, g, C);\n    }\n  }]);\n  return cA;\n}(sA);\nvar YA = /*#__PURE__*/function (_sA2) {\n  _inherits(YA, _sA2);\n  var _super2 = _createSuper(YA);\n  function YA() {\n    _classCallCheck(this, YA);\n    return _super2.apply(this, arguments);\n  }\n  return _createClass(YA);\n}(sA);\nvar LA = /*#__PURE__*/function (_cA) {\n  _inherits(LA, _cA);\n  var _super3 = _createSuper(LA);\n  function LA() {\n    _classCallCheck(this, LA);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(LA, [{\n    key: \"rawAxis\",\n    value: function rawAxis() {\n      return c.X;\n    }\n  }]);\n  return LA;\n}(cA);\nvar HA = /*#__PURE__*/function (_cA2) {\n  _inherits(HA, _cA2);\n  var _super4 = _createSuper(HA);\n  function HA() {\n    _classCallCheck(this, HA);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(HA, [{\n    key: \"rawAxis\",\n    value: function rawAxis() {\n      return c.AngX;\n    }\n  }]);\n  return HA;\n}(cA);\nvar lA = /*#__PURE__*/function (_sA3) {\n  _inherits(lA, _sA3);\n  var _super5 = _createSuper(lA);\n  function lA() {\n    _classCallCheck(this, lA);\n    return _super5.apply(this, arguments);\n  }\n  return _createClass(lA);\n}(sA);\nvar tA = /*#__PURE__*/function () {\n  function tA() {\n    _classCallCheck(this, tA);\n  }\n  _createClass(tA, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      var A,\n        I,\n        g = QA.intoRaw(this.anchor1),\n        C = QA.intoRaw(this.anchor2),\n        B = !1,\n        Q = 0,\n        E = 0;\n      switch (this.jointType) {\n        case oA.Fixed:\n          var _i = iA.intoRaw(this.frame1),\n            _D = iA.intoRaw(this.frame2);\n          I = d.fixed(g, _i, C, _D), _i.free(), _D.free();\n          break;\n        case oA.Prismatic:\n          A = QA.intoRaw(this.axis), this.limitsEnabled && (B = !0, Q = this.limits[0], E = this.limits[1]), I = d.prismatic(g, C, A, B, Q, E), A.free();\n          break;\n        case oA.Spherical:\n          I = d.spherical(g, C);\n          break;\n        case oA.Revolute:\n          A = QA.intoRaw(this.axis), I = d.revolute(g, C, A), A.free();\n      }\n      return g.free(), C.free(), I;\n    }\n  }], [{\n    key: \"fixed\",\n    value: function fixed(A, I, g, C) {\n      var B = new tA();\n      return B.anchor1 = A, B.anchor2 = g, B.frame1 = I, B.frame2 = C, B.jointType = oA.Fixed, B;\n    }\n  }, {\n    key: \"spherical\",\n    value: function spherical(A, I) {\n      var g = new tA();\n      return g.anchor1 = A, g.anchor2 = I, g.jointType = oA.Spherical, g;\n    }\n  }, {\n    key: \"prismatic\",\n    value: function prismatic(A, I, g) {\n      var C = new tA();\n      return C.anchor1 = A, C.anchor2 = I, C.axis = g, C.jointType = oA.Prismatic, C;\n    }\n  }, {\n    key: \"revolute\",\n    value: function revolute(A, I, g) {\n      var C = new tA();\n      return C.anchor1 = A, C.anchor2 = I, C.axis = g, C.jointType = oA.Revolute, C;\n    }\n  }]);\n  return tA;\n}();\nvar pA = /*#__PURE__*/function () {\n  function pA(A) {\n    var _this3 = this;\n    _classCallCheck(this, pA);\n    this.raw = A || new O(), this.map = new FA(), A && A.forEachJointHandle(function (I) {\n      _this3.map.set(I, sA.newTyped(A, null, I));\n    });\n  }\n  _createClass(pA, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0, this.map.clear(), this.map = void 0;\n    }\n  }, {\n    key: \"finalizeDeserialization\",\n    value: function finalizeDeserialization(A) {\n      this.map.forEach(function (I) {\n        return I.finalizeDeserialization(A);\n      });\n    }\n  }, {\n    key: \"createJoint\",\n    value: function createJoint(A, I, g, C, B) {\n      var Q = I.intoRaw(),\n        E = this.raw.createJoint(Q, g, C, B);\n      Q.free();\n      var i = sA.newTyped(this.raw, A, E);\n      return this.map.set(E, i), i;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(A, I) {\n      this.raw.remove(A, I), this.unmap(A);\n    }\n  }, {\n    key: \"forEachJointHandleAttachedToRigidBody\",\n    value: function forEachJointHandleAttachedToRigidBody(A, I) {\n      this.raw.forEachJointAttachedToRigidBody(A, I);\n    }\n  }, {\n    key: \"unmap\",\n    value: function unmap(A) {\n      this.map.delete(A);\n    }\n  }, {\n    key: \"len\",\n    value: function len() {\n      return this.map.len();\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(A) {\n      return null != this.get(A);\n    }\n  }, {\n    key: \"get\",\n    value: function get(A) {\n      return this.map.get(A);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(A) {\n      this.map.forEach(A);\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      return this.map.getAll();\n    }\n  }]);\n  return pA;\n}();\nvar eA = /*#__PURE__*/function () {\n  function eA(A, I) {\n    _classCallCheck(this, eA);\n    this.rawSet = A, this.handle = I;\n  }\n  _createClass(eA, [{\n    key: \"isValid\",\n    value: function isValid() {\n      return this.rawSet.contains(this.handle);\n    }\n  }, {\n    key: \"setContactsEnabled\",\n    value: function setContactsEnabled(A) {\n      this.rawSet.jointSetContactsEnabled(this.handle, A);\n    }\n  }, {\n    key: \"contactsEnabled\",\n    value: function contactsEnabled() {\n      return this.rawSet.jointContactsEnabled(this.handle);\n    }\n  }], [{\n    key: \"newTyped\",\n    value: function newTyped(A, I) {\n      switch (A.jointType(I)) {\n        case oA.Revolute:\n          return new OA(A, I);\n        case oA.Prismatic:\n          return new dA(A, I);\n        case oA.Fixed:\n          return new TA(A, I);\n        case oA.Spherical:\n          return new nA(A, I);\n        default:\n          return new eA(A, I);\n      }\n    }\n  }]);\n  return eA;\n}();\nvar rA = /*#__PURE__*/function (_eA) {\n  _inherits(rA, _eA);\n  var _super6 = _createSuper(rA);\n  function rA() {\n    _classCallCheck(this, rA);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(rA);\n}(eA);\nvar TA = /*#__PURE__*/function (_eA2) {\n  _inherits(TA, _eA2);\n  var _super7 = _createSuper(TA);\n  function TA() {\n    _classCallCheck(this, TA);\n    return _super7.apply(this, arguments);\n  }\n  return _createClass(TA);\n}(eA);\nvar dA = /*#__PURE__*/function (_rA) {\n  _inherits(dA, _rA);\n  var _super8 = _createSuper(dA);\n  function dA() {\n    _classCallCheck(this, dA);\n    return _super8.apply(this, arguments);\n  }\n  _createClass(dA, [{\n    key: \"rawAxis\",\n    value: function rawAxis() {\n      return c.X;\n    }\n  }]);\n  return dA;\n}(rA);\nvar OA = /*#__PURE__*/function (_rA2) {\n  _inherits(OA, _rA2);\n  var _super9 = _createSuper(OA);\n  function OA() {\n    _classCallCheck(this, OA);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(OA, [{\n    key: \"rawAxis\",\n    value: function rawAxis() {\n      return c.AngX;\n    }\n  }]);\n  return OA;\n}(rA);\nvar nA = /*#__PURE__*/function (_eA3) {\n  _inherits(nA, _eA3);\n  var _super10 = _createSuper(nA);\n  function nA() {\n    _classCallCheck(this, nA);\n    return _super10.apply(this, arguments);\n  }\n  return _createClass(nA);\n}(eA);\nvar ZA = /*#__PURE__*/function () {\n  function ZA(A) {\n    var _this4 = this;\n    _classCallCheck(this, ZA);\n    this.raw = A || new x(), this.map = new FA(), A && A.forEachJointHandle(function (A) {\n      _this4.map.set(A, eA.newTyped(_this4.raw, A));\n    });\n  }\n  _createClass(ZA, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0, this.map.clear(), this.map = void 0;\n    }\n  }, {\n    key: \"createJoint\",\n    value: function createJoint(A, I, g, C) {\n      var B = A.intoRaw(),\n        Q = this.raw.createJoint(B, I, g, C);\n      B.free();\n      var E = eA.newTyped(this.raw, Q);\n      return this.map.set(Q, E), E;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(A, I) {\n      this.raw.remove(A, I), this.map.delete(A);\n    }\n  }, {\n    key: \"unmap\",\n    value: function unmap(A) {\n      this.map.delete(A);\n    }\n  }, {\n    key: \"len\",\n    value: function len() {\n      return this.map.len();\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(A) {\n      return null != this.get(A);\n    }\n  }, {\n    key: \"get\",\n    value: function get(A) {\n      return this.map.get(A);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(A) {\n      this.map.forEach(A);\n    }\n  }, {\n    key: \"forEachJointHandleAttachedToRigidBody\",\n    value: function forEachJointHandleAttachedToRigidBody(A, I) {\n      this.raw.forEachJointAttachedToRigidBody(A, I);\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      return this.map.getAll();\n    }\n  }]);\n  return ZA;\n}();\n!function (A) {\n  A[A.Average = 0] = \"Average\", A[A.Min = 1] = \"Min\", A[A.Multiply = 2] = \"Multiply\", A[A.Max = 3] = \"Max\";\n}(SA || (SA = {}));\nvar xA = /*#__PURE__*/function () {\n  function xA(A) {\n    _classCallCheck(this, xA);\n    this.raw = A || new L();\n  }\n  _createClass(xA, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0;\n    }\n  }]);\n  return xA;\n}();\nvar WA = /*#__PURE__*/function () {\n  function WA(A) {\n    _classCallCheck(this, WA);\n    this.raw = A || new Z();\n  }\n  _createClass(WA, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0;\n    }\n  }, {\n    key: \"forEachActiveRigidBodyHandle\",\n    value: function forEachActiveRigidBodyHandle(A) {\n      this.raw.forEachActiveRigidBodyHandle(A);\n    }\n  }]);\n  return WA;\n}();\nvar bA = /*#__PURE__*/function () {\n  function bA(A) {\n    _classCallCheck(this, bA);\n    this.raw = A || new Y();\n  }\n  _createClass(bA, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0;\n    }\n  }]);\n  return bA;\n}();\nvar jA = /*#__PURE__*/function () {\n  function jA(A) {\n    _classCallCheck(this, jA);\n    this.raw = A || new W(), this.tempManifold = new VA(null);\n  }\n  _createClass(jA, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0;\n    }\n  }, {\n    key: \"contactsWith\",\n    value: function contactsWith(A, I) {\n      this.raw.contacts_with(A, I);\n    }\n  }, {\n    key: \"intersectionsWith\",\n    value: function intersectionsWith(A, I) {\n      this.raw.intersections_with(A, I);\n    }\n  }, {\n    key: \"contactPair\",\n    value: function contactPair(A, I, g) {\n      var C = this.raw.contact_pair(A, I);\n      if (C) {\n        var _I3 = C.collider1() != A;\n        var _B10;\n        for (_B10 = 0; _B10 < C.numContactManifolds(); ++_B10) {\n          this.tempManifold.raw = C.contactManifold(_B10), this.tempManifold.raw && g(this.tempManifold, _I3), this.tempManifold.free();\n        }\n        C.free();\n      }\n    }\n  }, {\n    key: \"intersectionPair\",\n    value: function intersectionPair(A, I) {\n      return this.raw.intersection_pair(A, I);\n    }\n  }]);\n  return jA;\n}();\nvar VA = /*#__PURE__*/function () {\n  function VA(A) {\n    _classCallCheck(this, VA);\n    this.raw = A;\n  }\n  _createClass(VA, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0;\n    }\n  }, {\n    key: \"normal\",\n    value: function normal() {\n      return QA.fromRaw(this.raw.normal());\n    }\n  }, {\n    key: \"localNormal1\",\n    value: function localNormal1() {\n      return QA.fromRaw(this.raw.local_n1());\n    }\n  }, {\n    key: \"localNormal2\",\n    value: function localNormal2() {\n      return QA.fromRaw(this.raw.local_n2());\n    }\n  }, {\n    key: \"subshape1\",\n    value: function subshape1() {\n      return this.raw.subshape1();\n    }\n  }, {\n    key: \"subshape2\",\n    value: function subshape2() {\n      return this.raw.subshape2();\n    }\n  }, {\n    key: \"numContacts\",\n    value: function numContacts() {\n      return this.raw.num_contacts();\n    }\n  }, {\n    key: \"localContactPoint1\",\n    value: function localContactPoint1(A) {\n      return QA.fromRaw(this.raw.contact_local_p1(A));\n    }\n  }, {\n    key: \"localContactPoint2\",\n    value: function localContactPoint2(A) {\n      return QA.fromRaw(this.raw.contact_local_p2(A));\n    }\n  }, {\n    key: \"contactDist\",\n    value: function contactDist(A) {\n      return this.raw.contact_dist(A);\n    }\n  }, {\n    key: \"contactFid1\",\n    value: function contactFid1(A) {\n      return this.raw.contact_fid1(A);\n    }\n  }, {\n    key: \"contactFid2\",\n    value: function contactFid2(A) {\n      return this.raw.contact_fid2(A);\n    }\n  }, {\n    key: \"contactImpulse\",\n    value: function contactImpulse(A) {\n      return this.raw.contact_impulse(A);\n    }\n  }, {\n    key: \"contactTangentImpulseX\",\n    value: function contactTangentImpulseX(A) {\n      return this.raw.contact_tangent_impulse_x(A);\n    }\n  }, {\n    key: \"contactTangentImpulseY\",\n    value: function contactTangentImpulseY(A) {\n      return this.raw.contact_tangent_impulse_y(A);\n    }\n  }, {\n    key: \"numSolverContacts\",\n    value: function numSolverContacts() {\n      return this.raw.num_solver_contacts();\n    }\n  }, {\n    key: \"solverContactPoint\",\n    value: function solverContactPoint(A) {\n      return QA.fromRaw(this.raw.solver_contact_point(A));\n    }\n  }, {\n    key: \"solverContactDist\",\n    value: function solverContactDist(A) {\n      return this.raw.solver_contact_dist(A);\n    }\n  }, {\n    key: \"solverContactFriction\",\n    value: function solverContactFriction(A) {\n      return this.raw.solver_contact_friction(A);\n    }\n  }, {\n    key: \"solverContactRestitution\",\n    value: function solverContactRestitution(A) {\n      return this.raw.solver_contact_restitution(A);\n    }\n  }, {\n    key: \"solverContactTangentVelocity\",\n    value: function solverContactTangentVelocity(A) {\n      return QA.fromRaw(this.raw.solver_contact_tangent_velocity(A));\n    }\n  }]);\n  return VA;\n}();\nvar fA = /*#__PURE__*/function () {\n  function fA(A, I, g, C, B) {\n    _classCallCheck(this, fA);\n    this.distance = A, this.point1 = I, this.point2 = g, this.normal1 = C, this.normal2 = B;\n  }\n  _createClass(fA, null, [{\n    key: \"fromRaw\",\n    value: function fromRaw(A) {\n      if (!A) return null;\n      var I = new fA(A.distance(), QA.fromRaw(A.point1()), QA.fromRaw(A.point2()), QA.fromRaw(A.normal1()), QA.fromRaw(A.normal2()));\n      return A.free(), I;\n    }\n  }]);\n  return fA;\n}();\n!function (A) {\n  A[A.Vertex = 0] = \"Vertex\", A[A.Edge = 1] = \"Edge\", A[A.Face = 2] = \"Face\", A[A.Unknown = 3] = \"Unknown\";\n}(wA || (wA = {}));\nvar PA = /*#__PURE__*/function () {\n  function PA(A, I) {\n    _classCallCheck(this, PA);\n    this.point = A, this.isInside = I;\n  }\n  _createClass(PA, null, [{\n    key: \"fromRaw\",\n    value: function fromRaw(A) {\n      if (!A) return null;\n      var I = new PA(QA.fromRaw(A.point()), A.isInside());\n      return A.free(), I;\n    }\n  }]);\n  return PA;\n}();\nvar mA = /*#__PURE__*/function () {\n  function mA(A, I, g, C, B) {\n    _classCallCheck(this, mA);\n    this.featureType = wA.Unknown, this.featureId = void 0, this.collider = A, this.point = I, this.isInside = g, void 0 !== B && (this.featureId = B), void 0 !== C && (this.featureType = C);\n  }\n  _createClass(mA, null, [{\n    key: \"fromRaw\",\n    value: function fromRaw(A, I) {\n      if (!I) return null;\n      var g = new mA(A.get(I.colliderHandle()), QA.fromRaw(I.point()), I.isInside(), I.featureType(), I.featureId());\n      return I.free(), g;\n    }\n  }]);\n  return mA;\n}();\nvar XA = /*#__PURE__*/function () {\n  function XA(A, I) {\n    _classCallCheck(this, XA);\n    this.origin = A, this.dir = I;\n  }\n  _createClass(XA, [{\n    key: \"pointAt\",\n    value: function pointAt(A) {\n      return {\n        x: this.origin.x + this.dir.x * A,\n        y: this.origin.y + this.dir.y * A,\n        z: this.origin.z + this.dir.z * A\n      };\n    }\n  }]);\n  return XA;\n}();\nvar zA = /*#__PURE__*/function () {\n  function zA(A, I, g, C) {\n    _classCallCheck(this, zA);\n    this.featureType = wA.Unknown, this.featureId = void 0, this.toi = A, this.normal = I, void 0 !== C && (this.featureId = C), void 0 !== g && (this.featureType = g);\n  }\n  _createClass(zA, null, [{\n    key: \"fromRaw\",\n    value: function fromRaw(A) {\n      if (!A) return null;\n      var I = new zA(A.toi(), QA.fromRaw(A.normal()), A.featureType(), A.featureId());\n      return A.free(), I;\n    }\n  }]);\n  return zA;\n}();\nvar uA = /*#__PURE__*/function () {\n  function uA(A, I, g, C, B) {\n    _classCallCheck(this, uA);\n    this.featureType = wA.Unknown, this.featureId = void 0, this.collider = A, this.toi = I, this.normal = g, void 0 !== B && (this.featureId = B), void 0 !== C && (this.featureType = C);\n  }\n  _createClass(uA, null, [{\n    key: \"fromRaw\",\n    value: function fromRaw(A, I) {\n      if (!I) return null;\n      var g = new uA(A.get(I.colliderHandle()), I.toi(), QA.fromRaw(I.normal()), I.featureType(), I.featureId());\n      return I.free(), g;\n    }\n  }]);\n  return uA;\n}();\nvar vA = /*#__PURE__*/function () {\n  function vA(A, I) {\n    _classCallCheck(this, vA);\n    this.collider = A, this.toi = I;\n  }\n  _createClass(vA, null, [{\n    key: \"fromRaw\",\n    value: function fromRaw(A, I) {\n      if (!I) return null;\n      var g = new vA(A.get(I.colliderHandle()), I.toi());\n      return I.free(), g;\n    }\n  }]);\n  return vA;\n}();\nvar _A = /*#__PURE__*/function () {\n  function _A(A, I, g, C, B) {\n    _classCallCheck(this, _A);\n    this.toi = A, this.witness1 = I, this.witness2 = g, this.normal1 = C, this.normal2 = B;\n  }\n  _createClass(_A, null, [{\n    key: \"fromRaw\",\n    value: function fromRaw(A, I) {\n      if (!I) return null;\n      var g = new _A(I.toi(), QA.fromRaw(I.witness1()), QA.fromRaw(I.witness2()), QA.fromRaw(I.normal1()), QA.fromRaw(I.normal2()));\n      return I.free(), g;\n    }\n  }]);\n  return _A;\n}();\nvar $A = /*#__PURE__*/function (_A2) {\n  _inherits($A, _A2);\n  var _super11 = _createSuper($A);\n  function $A(A, I, g, C, B, Q) {\n    var _this5;\n    _classCallCheck(this, $A);\n    _this5 = _super11.call(this, I, g, C, B, Q), _this5.collider = A;\n    return _this5;\n  }\n  _createClass($A, null, [{\n    key: \"fromRaw\",\n    value: function fromRaw(A, I) {\n      if (!I) return null;\n      var g = new $A(A.get(I.colliderHandle()), I.toi(), QA.fromRaw(I.witness1()), QA.fromRaw(I.witness2()), QA.fromRaw(I.normal1()), QA.fromRaw(I.normal2()));\n      return I.free(), g;\n    }\n  }]);\n  return $A;\n}(_A);\nvar AI = /*#__PURE__*/function () {\n  function AI() {\n    _classCallCheck(this, AI);\n  }\n  _createClass(AI, [{\n    key: \"castShape\",\n    value: function castShape(A, I, g, C, B, Q, E, i) {\n      var D = QA.intoRaw(A),\n        o = iA.intoRaw(I),\n        G = QA.intoRaw(g),\n        S = QA.intoRaw(B),\n        w = iA.intoRaw(Q),\n        k = QA.intoRaw(E),\n        U = this.intoRaw(),\n        K = C.intoRaw(),\n        a = _A.fromRaw(null, U.castShape(D, o, G, K, S, w, k, i));\n      return D.free(), o.free(), G.free(), S.free(), w.free(), k.free(), U.free(), K.free(), a;\n    }\n  }, {\n    key: \"intersectsShape\",\n    value: function intersectsShape(A, I, g, C, B) {\n      var Q = QA.intoRaw(A),\n        E = iA.intoRaw(I),\n        i = QA.intoRaw(C),\n        D = iA.intoRaw(B),\n        o = this.intoRaw(),\n        G = g.intoRaw(),\n        S = o.intersectsShape(Q, E, G, i, D);\n      return Q.free(), E.free(), i.free(), D.free(), o.free(), G.free(), S;\n    }\n  }, {\n    key: \"contactShape\",\n    value: function contactShape(A, I, g, C, B, Q) {\n      var E = QA.intoRaw(A),\n        i = iA.intoRaw(I),\n        D = QA.intoRaw(C),\n        o = iA.intoRaw(B),\n        G = this.intoRaw(),\n        S = g.intoRaw(),\n        w = fA.fromRaw(G.contactShape(E, i, S, D, o, Q));\n      return E.free(), i.free(), D.free(), o.free(), G.free(), S.free(), w;\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(A, I, g) {\n      var C = QA.intoRaw(A),\n        B = iA.intoRaw(I),\n        Q = QA.intoRaw(g),\n        E = this.intoRaw(),\n        i = E.containsPoint(C, B, Q);\n      return C.free(), B.free(), Q.free(), E.free(), i;\n    }\n  }, {\n    key: \"projectPoint\",\n    value: function projectPoint(A, I, g, C) {\n      var B = QA.intoRaw(A),\n        Q = iA.intoRaw(I),\n        E = QA.intoRaw(g),\n        i = this.intoRaw(),\n        D = PA.fromRaw(i.projectPoint(B, Q, E, C));\n      return B.free(), Q.free(), E.free(), i.free(), D;\n    }\n  }, {\n    key: \"intersectsRay\",\n    value: function intersectsRay(A, I, g, C) {\n      var B = QA.intoRaw(I),\n        Q = iA.intoRaw(g),\n        E = QA.intoRaw(A.origin),\n        i = QA.intoRaw(A.dir),\n        D = this.intoRaw(),\n        o = D.intersectsRay(B, Q, E, i, C);\n      return B.free(), Q.free(), E.free(), i.free(), D.free(), o;\n    }\n  }, {\n    key: \"castRay\",\n    value: function castRay(A, I, g, C, B) {\n      var Q = QA.intoRaw(I),\n        E = iA.intoRaw(g),\n        i = QA.intoRaw(A.origin),\n        D = QA.intoRaw(A.dir),\n        o = this.intoRaw(),\n        G = o.castRay(Q, E, i, D, C, B);\n      return Q.free(), E.free(), i.free(), D.free(), o.free(), G;\n    }\n  }, {\n    key: \"castRayAndGetNormal\",\n    value: function castRayAndGetNormal(A, I, g, C, B) {\n      var Q = QA.intoRaw(I),\n        E = iA.intoRaw(g),\n        i = QA.intoRaw(A.origin),\n        D = QA.intoRaw(A.dir),\n        o = this.intoRaw(),\n        G = zA.fromRaw(o.castRayAndGetNormal(Q, E, i, D, C, B));\n      return Q.free(), E.free(), i.free(), D.free(), o.free(), G;\n    }\n  }], [{\n    key: \"fromRaw\",\n    value: function fromRaw(A, I) {\n      var g = A.coShapeType(I);\n      var C, B, Q, E, i, D;\n      switch (g) {\n        case kA.Ball:\n          return new II(A.coRadius(I));\n        case kA.Cuboid:\n          return C = A.coHalfExtents(I), new gI(C.x, C.y, C.z);\n        case kA.RoundCuboid:\n          return C = A.coHalfExtents(I), B = A.coRoundRadius(I), new CI(C.x, C.y, C.z, B);\n        case kA.Capsule:\n          return i = A.coHalfHeight(I), D = A.coRadius(I), new BI(i, D);\n        case kA.Segment:\n          return Q = A.coVertices(I), new QI(QA.new(Q[0], Q[1], Q[2]), QA.new(Q[3], Q[4], Q[5]));\n        case kA.Polyline:\n          return Q = A.coVertices(I), E = A.coIndices(I), new DI(Q, E);\n        case kA.Triangle:\n          return Q = A.coVertices(I), new EI(QA.new(Q[0], Q[1], Q[2]), QA.new(Q[3], Q[4], Q[5]), QA.new(Q[6], Q[7], Q[8]));\n        case kA.RoundTriangle:\n          return Q = A.coVertices(I), B = A.coRoundRadius(I), new iI(QA.new(Q[0], Q[1], Q[2]), QA.new(Q[3], Q[4], Q[5]), QA.new(Q[6], Q[7], Q[8]), B);\n        case kA.TriMesh:\n          return Q = A.coVertices(I), E = A.coIndices(I), new oI(Q, E);\n        case kA.HeightField:\n          var _o = A.coHeightfieldScale(I),\n            _G = A.coHeightfieldHeights(I),\n            _S2 = A.coHeightfieldNRows(I),\n            _w2 = A.coHeightfieldNCols(I);\n          return new wI(_S2, _w2, _G, _o);\n        case kA.ConvexPolyhedron:\n          return Q = A.coVertices(I), E = A.coIndices(I), new GI(Q, E);\n        case kA.RoundConvexPolyhedron:\n          return Q = A.coVertices(I), E = A.coIndices(I), B = A.coRoundRadius(I), new SI(Q, E, B);\n        case kA.Cylinder:\n          return i = A.coHalfHeight(I), D = A.coRadius(I), new kI(i, D);\n        case kA.RoundCylinder:\n          return i = A.coHalfHeight(I), D = A.coRadius(I), B = A.coRoundRadius(I), new UI(i, D, B);\n        case kA.Cone:\n          return i = A.coHalfHeight(I), D = A.coRadius(I), new KI(i, D);\n        case kA.RoundCone:\n          return i = A.coHalfHeight(I), D = A.coRadius(I), B = A.coRoundRadius(I), new aI(i, D, B);\n        default:\n          throw new Error(\"unknown shape type: \" + g);\n      }\n    }\n  }]);\n  return AI;\n}();\n!function (A) {\n  A[A.Ball = 0] = \"Ball\", A[A.Cuboid = 1] = \"Cuboid\", A[A.Capsule = 2] = \"Capsule\", A[A.Segment = 3] = \"Segment\", A[A.Polyline = 4] = \"Polyline\", A[A.Triangle = 5] = \"Triangle\", A[A.TriMesh = 6] = \"TriMesh\", A[A.HeightField = 7] = \"HeightField\", A[A.ConvexPolyhedron = 9] = \"ConvexPolyhedron\", A[A.Cylinder = 10] = \"Cylinder\", A[A.Cone = 11] = \"Cone\", A[A.RoundCuboid = 12] = \"RoundCuboid\", A[A.RoundTriangle = 13] = \"RoundTriangle\", A[A.RoundCylinder = 14] = \"RoundCylinder\", A[A.RoundCone = 15] = \"RoundCone\", A[A.RoundConvexPolyhedron = 16] = \"RoundConvexPolyhedron\";\n}(kA || (kA = {}));\nvar II = /*#__PURE__*/function (_AI) {\n  _inherits(II, _AI);\n  var _super12 = _createSuper(II);\n  function II(A) {\n    var _this6;\n    _classCallCheck(this, II);\n    _this6 = _super12.call(this), _this6.type = kA.Ball, _this6.radius = A;\n    return _this6;\n  }\n  _createClass(II, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      return _.ball(this.radius);\n    }\n  }]);\n  return II;\n}(AI);\nvar gI = /*#__PURE__*/function (_AI2) {\n  _inherits(gI, _AI2);\n  var _super13 = _createSuper(gI);\n  function gI(A, I, g) {\n    var _this7;\n    _classCallCheck(this, gI);\n    _this7 = _super13.call(this), _this7.type = kA.Cuboid, _this7.halfExtents = QA.new(A, I, g);\n    return _this7;\n  }\n  _createClass(gI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      return _.cuboid(this.halfExtents.x, this.halfExtents.y, this.halfExtents.z);\n    }\n  }]);\n  return gI;\n}(AI);\nvar CI = /*#__PURE__*/function (_AI3) {\n  _inherits(CI, _AI3);\n  var _super14 = _createSuper(CI);\n  function CI(A, I, g, C) {\n    var _this8;\n    _classCallCheck(this, CI);\n    _this8 = _super14.call(this), _this8.type = kA.RoundCuboid, _this8.halfExtents = QA.new(A, I, g), _this8.borderRadius = C;\n    return _this8;\n  }\n  _createClass(CI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      return _.roundCuboid(this.halfExtents.x, this.halfExtents.y, this.halfExtents.z, this.borderRadius);\n    }\n  }]);\n  return CI;\n}(AI);\nvar BI = /*#__PURE__*/function (_AI4) {\n  _inherits(BI, _AI4);\n  var _super15 = _createSuper(BI);\n  function BI(A, I) {\n    var _this9;\n    _classCallCheck(this, BI);\n    _this9 = _super15.call(this), _this9.type = kA.Capsule, _this9.halfHeight = A, _this9.radius = I;\n    return _this9;\n  }\n  _createClass(BI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      return _.capsule(this.halfHeight, this.radius);\n    }\n  }]);\n  return BI;\n}(AI);\nvar QI = /*#__PURE__*/function (_AI5) {\n  _inherits(QI, _AI5);\n  var _super16 = _createSuper(QI);\n  function QI(A, I) {\n    var _this10;\n    _classCallCheck(this, QI);\n    _this10 = _super16.call(this), _this10.type = kA.Segment, _this10.a = A, _this10.b = I;\n    return _this10;\n  }\n  _createClass(QI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      var A = QA.intoRaw(this.a),\n        I = QA.intoRaw(this.b),\n        g = _.segment(A, I);\n      return A.free(), I.free(), g;\n    }\n  }]);\n  return QI;\n}(AI);\nvar EI = /*#__PURE__*/function (_AI6) {\n  _inherits(EI, _AI6);\n  var _super17 = _createSuper(EI);\n  function EI(A, I, g) {\n    var _this11;\n    _classCallCheck(this, EI);\n    _this11 = _super17.call(this), _this11.type = kA.Triangle, _this11.a = A, _this11.b = I, _this11.c = g;\n    return _this11;\n  }\n  _createClass(EI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      var A = QA.intoRaw(this.a),\n        I = QA.intoRaw(this.b),\n        g = QA.intoRaw(this.c),\n        C = _.triangle(A, I, g);\n      return A.free(), I.free(), g.free(), C;\n    }\n  }]);\n  return EI;\n}(AI);\nvar iI = /*#__PURE__*/function (_AI7) {\n  _inherits(iI, _AI7);\n  var _super18 = _createSuper(iI);\n  function iI(A, I, g, C) {\n    var _this12;\n    _classCallCheck(this, iI);\n    _this12 = _super18.call(this), _this12.type = kA.RoundTriangle, _this12.a = A, _this12.b = I, _this12.c = g, _this12.borderRadius = C;\n    return _this12;\n  }\n  _createClass(iI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      var A = QA.intoRaw(this.a),\n        I = QA.intoRaw(this.b),\n        g = QA.intoRaw(this.c),\n        C = _.roundTriangle(A, I, g, this.borderRadius);\n      return A.free(), I.free(), g.free(), C;\n    }\n  }]);\n  return iI;\n}(AI);\nvar DI = /*#__PURE__*/function (_AI8) {\n  _inherits(DI, _AI8);\n  var _super19 = _createSuper(DI);\n  function DI(A, I) {\n    var _this13;\n    _classCallCheck(this, DI);\n    _this13 = _super19.call(this), _this13.type = kA.Polyline, _this13.vertices = A, _this13.indices = null != I ? I : new Uint32Array(0);\n    return _this13;\n  }\n  _createClass(DI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      return _.polyline(this.vertices, this.indices);\n    }\n  }]);\n  return DI;\n}(AI);\nvar oI = /*#__PURE__*/function (_AI9) {\n  _inherits(oI, _AI9);\n  var _super20 = _createSuper(oI);\n  function oI(A, I) {\n    var _this14;\n    _classCallCheck(this, oI);\n    _this14 = _super20.call(this), _this14.type = kA.TriMesh, _this14.vertices = A, _this14.indices = I;\n    return _this14;\n  }\n  _createClass(oI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      return _.trimesh(this.vertices, this.indices);\n    }\n  }]);\n  return oI;\n}(AI);\nvar GI = /*#__PURE__*/function (_AI10) {\n  _inherits(GI, _AI10);\n  var _super21 = _createSuper(GI);\n  function GI(A, I) {\n    var _this15;\n    _classCallCheck(this, GI);\n    _this15 = _super21.call(this), _this15.type = kA.ConvexPolyhedron, _this15.vertices = A, _this15.indices = I;\n    return _this15;\n  }\n  _createClass(GI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      return this.indices ? _.convexMesh(this.vertices, this.indices) : _.convexHull(this.vertices);\n    }\n  }]);\n  return GI;\n}(AI);\nvar SI = /*#__PURE__*/function (_AI11) {\n  _inherits(SI, _AI11);\n  var _super22 = _createSuper(SI);\n  function SI(A, I, g) {\n    var _this16;\n    _classCallCheck(this, SI);\n    _this16 = _super22.call(this), _this16.type = kA.RoundConvexPolyhedron, _this16.vertices = A, _this16.indices = I, _this16.borderRadius = g;\n    return _this16;\n  }\n  _createClass(SI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      return this.indices ? _.roundConvexMesh(this.vertices, this.indices, this.borderRadius) : _.roundConvexHull(this.vertices, this.borderRadius);\n    }\n  }]);\n  return SI;\n}(AI);\nvar wI = /*#__PURE__*/function (_AI12) {\n  _inherits(wI, _AI12);\n  var _super23 = _createSuper(wI);\n  function wI(A, I, g, C) {\n    var _this17;\n    _classCallCheck(this, wI);\n    _this17 = _super23.call(this), _this17.type = kA.HeightField, _this17.nrows = A, _this17.ncols = I, _this17.heights = g, _this17.scale = C;\n    return _this17;\n  }\n  _createClass(wI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      var A = QA.intoRaw(this.scale),\n        I = _.heightfield(this.nrows, this.ncols, this.heights, A);\n      return A.free(), I;\n    }\n  }]);\n  return wI;\n}(AI);\nvar kI = /*#__PURE__*/function (_AI13) {\n  _inherits(kI, _AI13);\n  var _super24 = _createSuper(kI);\n  function kI(A, I) {\n    var _this18;\n    _classCallCheck(this, kI);\n    _this18 = _super24.call(this), _this18.type = kA.Cylinder, _this18.halfHeight = A, _this18.radius = I;\n    return _this18;\n  }\n  _createClass(kI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      return _.cylinder(this.halfHeight, this.radius);\n    }\n  }]);\n  return kI;\n}(AI);\nvar UI = /*#__PURE__*/function (_AI14) {\n  _inherits(UI, _AI14);\n  var _super25 = _createSuper(UI);\n  function UI(A, I, g) {\n    var _this19;\n    _classCallCheck(this, UI);\n    _this19 = _super25.call(this), _this19.type = kA.RoundCylinder, _this19.borderRadius = g, _this19.halfHeight = A, _this19.radius = I;\n    return _this19;\n  }\n  _createClass(UI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      return _.roundCylinder(this.halfHeight, this.radius, this.borderRadius);\n    }\n  }]);\n  return UI;\n}(AI);\nvar KI = /*#__PURE__*/function (_AI15) {\n  _inherits(KI, _AI15);\n  var _super26 = _createSuper(KI);\n  function KI(A, I) {\n    var _this20;\n    _classCallCheck(this, KI);\n    _this20 = _super26.call(this), _this20.type = kA.Cone, _this20.halfHeight = A, _this20.radius = I;\n    return _this20;\n  }\n  _createClass(KI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      return _.cone(this.halfHeight, this.radius);\n    }\n  }]);\n  return KI;\n}(AI);\nvar aI = /*#__PURE__*/function (_AI16) {\n  _inherits(aI, _AI16);\n  var _super27 = _createSuper(aI);\n  function aI(A, I, g) {\n    var _this21;\n    _classCallCheck(this, aI);\n    _this21 = _super27.call(this), _this21.type = kA.RoundCone, _this21.halfHeight = A, _this21.radius = I, _this21.borderRadius = g;\n    return _this21;\n  }\n  _createClass(aI, [{\n    key: \"intoRaw\",\n    value: function intoRaw() {\n      return _.roundCone(this.halfHeight, this.radius, this.borderRadius);\n    }\n  }]);\n  return aI;\n}(AI);\n!function (A) {\n  A[A.DYNAMIC_DYNAMIC = 1] = \"DYNAMIC_DYNAMIC\", A[A.DYNAMIC_KINEMATIC = 12] = \"DYNAMIC_KINEMATIC\", A[A.DYNAMIC_FIXED = 2] = \"DYNAMIC_FIXED\", A[A.KINEMATIC_KINEMATIC = 52224] = \"KINEMATIC_KINEMATIC\", A[A.KINEMATIC_FIXED = 8704] = \"KINEMATIC_FIXED\", A[A.FIXED_FIXED = 32] = \"FIXED_FIXED\", A[A.DEFAULT = 15] = \"DEFAULT\", A[A.ALL = 60943] = \"ALL\";\n}(UA || (UA = {}));\nvar JI = /*#__PURE__*/function () {\n  function JI(A, I, g, C) {\n    _classCallCheck(this, JI);\n    this.colliderSet = A, this.handle = I, this._parent = g, this._shape = C;\n  }\n  _createClass(JI, [{\n    key: \"finalizeDeserialization\",\n    value: function finalizeDeserialization(A) {\n      null != this.handle && (this._parent = A.get(this.colliderSet.raw.coParent(this.handle)));\n    }\n  }, {\n    key: \"ensureShapeIsCached\",\n    value: function ensureShapeIsCached() {\n      this._shape || (this._shape = AI.fromRaw(this.colliderSet.raw, this.handle));\n    }\n  }, {\n    key: \"shape\",\n    get: function get() {\n      return this.ensureShapeIsCached(), this._shape;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return this.colliderSet.raw.contains(this.handle);\n    }\n  }, {\n    key: \"translation\",\n    value: function translation() {\n      return QA.fromRaw(this.colliderSet.raw.coTranslation(this.handle));\n    }\n  }, {\n    key: \"rotation\",\n    value: function rotation() {\n      return iA.fromRaw(this.colliderSet.raw.coRotation(this.handle));\n    }\n  }, {\n    key: \"isSensor\",\n    value: function isSensor() {\n      return this.colliderSet.raw.coIsSensor(this.handle);\n    }\n  }, {\n    key: \"setSensor\",\n    value: function setSensor(A) {\n      this.colliderSet.raw.coSetSensor(this.handle, A);\n    }\n  }, {\n    key: \"setShape\",\n    value: function setShape(A) {\n      var I = A.intoRaw();\n      this.colliderSet.raw.coSetShape(this.handle, I), I.free(), this._shape = A;\n    }\n  }, {\n    key: \"setRestitution\",\n    value: function setRestitution(A) {\n      this.colliderSet.raw.coSetRestitution(this.handle, A);\n    }\n  }, {\n    key: \"setFriction\",\n    value: function setFriction(A) {\n      this.colliderSet.raw.coSetFriction(this.handle, A);\n    }\n  }, {\n    key: \"frictionCombineRule\",\n    value: function frictionCombineRule() {\n      return this.colliderSet.raw.coFrictionCombineRule(this.handle);\n    }\n  }, {\n    key: \"setFrictionCombineRule\",\n    value: function setFrictionCombineRule(A) {\n      this.colliderSet.raw.coSetFrictionCombineRule(this.handle, A);\n    }\n  }, {\n    key: \"restitutionCombineRule\",\n    value: function restitutionCombineRule() {\n      return this.colliderSet.raw.coRestitutionCombineRule(this.handle);\n    }\n  }, {\n    key: \"setRestitutionCombineRule\",\n    value: function setRestitutionCombineRule(A) {\n      this.colliderSet.raw.coSetRestitutionCombineRule(this.handle, A);\n    }\n  }, {\n    key: \"setCollisionGroups\",\n    value: function setCollisionGroups(A) {\n      this.colliderSet.raw.coSetCollisionGroups(this.handle, A);\n    }\n  }, {\n    key: \"setSolverGroups\",\n    value: function setSolverGroups(A) {\n      this.colliderSet.raw.coSetSolverGroups(this.handle, A);\n    }\n  }, {\n    key: \"activeHooks\",\n    value: function activeHooks() {\n      return this.colliderSet.raw.coActiveHooks(this.handle);\n    }\n  }, {\n    key: \"setActiveHooks\",\n    value: function setActiveHooks(A) {\n      this.colliderSet.raw.coSetActiveHooks(this.handle, A);\n    }\n  }, {\n    key: \"activeEvents\",\n    value: function activeEvents() {\n      return this.colliderSet.raw.coActiveEvents(this.handle);\n    }\n  }, {\n    key: \"setActiveEvents\",\n    value: function setActiveEvents(A) {\n      this.colliderSet.raw.coSetActiveEvents(this.handle, A);\n    }\n  }, {\n    key: \"activeCollisionTypes\",\n    value: function activeCollisionTypes() {\n      return this.colliderSet.raw.coActiveCollisionTypes(this.handle);\n    }\n  }, {\n    key: \"setContactForceEventThreshold\",\n    value: function setContactForceEventThreshold(A) {\n      return this.colliderSet.raw.coSetContactForceEventThreshold(this.handle, A);\n    }\n  }, {\n    key: \"contactForceEventThreshold\",\n    value: function contactForceEventThreshold() {\n      return this.colliderSet.raw.coContactForceEventThreshold(this.handle);\n    }\n  }, {\n    key: \"setActiveCollisionTypes\",\n    value: function setActiveCollisionTypes(A) {\n      this.colliderSet.raw.coSetActiveCollisionTypes(this.handle, A);\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity(A) {\n      this.colliderSet.raw.coSetDensity(this.handle, A);\n    }\n  }, {\n    key: \"setMass\",\n    value: function setMass(A) {\n      this.colliderSet.raw.coSetMass(this.handle, A);\n    }\n  }, {\n    key: \"setMassProperties\",\n    value: function setMassProperties(A, I, g, C) {\n      var B = QA.intoRaw(I),\n        Q = QA.intoRaw(g),\n        E = iA.intoRaw(C);\n      this.colliderSet.raw.coSetMassProperties(this.handle, A, B, Q, E), B.free(), Q.free(), E.free();\n    }\n  }, {\n    key: \"setTranslation\",\n    value: function setTranslation(A) {\n      this.colliderSet.raw.coSetTranslation(this.handle, A.x, A.y, A.z);\n    }\n  }, {\n    key: \"setTranslationWrtParent\",\n    value: function setTranslationWrtParent(A) {\n      this.colliderSet.raw.coSetTranslationWrtParent(this.handle, A.x, A.y, A.z);\n    }\n  }, {\n    key: \"setRotation\",\n    value: function setRotation(A) {\n      this.colliderSet.raw.coSetRotation(this.handle, A.x, A.y, A.z, A.w);\n    }\n  }, {\n    key: \"setRotationWrtParent\",\n    value: function setRotationWrtParent(A) {\n      this.colliderSet.raw.coSetRotationWrtParent(this.handle, A.x, A.y, A.z, A.w);\n    }\n  }, {\n    key: \"shapeType\",\n    value: function shapeType() {\n      return this.colliderSet.raw.coShapeType(this.handle);\n    }\n  }, {\n    key: \"halfExtents\",\n    value: function halfExtents() {\n      return QA.fromRaw(this.colliderSet.raw.coHalfExtents(this.handle));\n    }\n  }, {\n    key: \"radius\",\n    value: function radius() {\n      return this.colliderSet.raw.coRadius(this.handle);\n    }\n  }, {\n    key: \"roundRadius\",\n    value: function roundRadius() {\n      return this.colliderSet.raw.coRoundRadius(this.handle);\n    }\n  }, {\n    key: \"halfHeight\",\n    value: function halfHeight() {\n      return this.colliderSet.raw.coHalfHeight(this.handle);\n    }\n  }, {\n    key: \"vertices\",\n    value: function vertices() {\n      return this.colliderSet.raw.coVertices(this.handle);\n    }\n  }, {\n    key: \"indices\",\n    value: function indices() {\n      return this.colliderSet.raw.coIndices(this.handle);\n    }\n  }, {\n    key: \"heightfieldHeights\",\n    value: function heightfieldHeights() {\n      return this.colliderSet.raw.coHeightfieldHeights(this.handle);\n    }\n  }, {\n    key: \"heightfieldScale\",\n    value: function heightfieldScale() {\n      var A = this.colliderSet.raw.coHeightfieldScale(this.handle);\n      return QA.fromRaw(A);\n    }\n  }, {\n    key: \"heightfieldNRows\",\n    value: function heightfieldNRows() {\n      return this.colliderSet.raw.coHeightfieldNRows(this.handle);\n    }\n  }, {\n    key: \"heightfieldNCols\",\n    value: function heightfieldNCols() {\n      return this.colliderSet.raw.coHeightfieldNCols(this.handle);\n    }\n  }, {\n    key: \"parent\",\n    value: function parent() {\n      return this._parent;\n    }\n  }, {\n    key: \"friction\",\n    value: function friction() {\n      return this.colliderSet.raw.coFriction(this.handle);\n    }\n  }, {\n    key: \"restitution\",\n    value: function restitution() {\n      return this.colliderSet.raw.coRestitution(this.handle);\n    }\n  }, {\n    key: \"density\",\n    value: function density() {\n      return this.colliderSet.raw.coDensity(this.handle);\n    }\n  }, {\n    key: \"mass\",\n    value: function mass() {\n      return this.colliderSet.raw.coMass(this.handle);\n    }\n  }, {\n    key: \"volume\",\n    value: function volume() {\n      return this.colliderSet.raw.coVolume(this.handle);\n    }\n  }, {\n    key: \"collisionGroups\",\n    value: function collisionGroups() {\n      return this.colliderSet.raw.coCollisionGroups(this.handle);\n    }\n  }, {\n    key: \"solverGroups\",\n    value: function solverGroups() {\n      return this.colliderSet.raw.coSolverGroups(this.handle);\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(A) {\n      var I = QA.intoRaw(A),\n        g = this.colliderSet.raw.coContainsPoint(this.handle, I);\n      return I.free(), g;\n    }\n  }, {\n    key: \"projectPoint\",\n    value: function projectPoint(A, I) {\n      var g = QA.intoRaw(A),\n        C = PA.fromRaw(this.colliderSet.raw.coProjectPoint(this.handle, g, I));\n      return g.free(), C;\n    }\n  }, {\n    key: \"intersectsRay\",\n    value: function intersectsRay(A, I) {\n      var g = QA.intoRaw(A.origin),\n        C = QA.intoRaw(A.dir),\n        B = this.colliderSet.raw.coIntersectsRay(this.handle, g, C, I);\n      return g.free(), C.free(), B;\n    }\n  }, {\n    key: \"castShape\",\n    value: function castShape(A, I, g, C, B, Q) {\n      var E = QA.intoRaw(A),\n        i = QA.intoRaw(g),\n        D = iA.intoRaw(C),\n        o = QA.intoRaw(B),\n        G = I.intoRaw(),\n        S = _A.fromRaw(this.colliderSet, this.colliderSet.raw.coCastShape(this.handle, E, G, i, D, o, Q));\n      return E.free(), i.free(), D.free(), o.free(), G.free(), S;\n    }\n  }, {\n    key: \"castCollider\",\n    value: function castCollider(A, I, g, C) {\n      var B = QA.intoRaw(A),\n        Q = QA.intoRaw(g),\n        E = $A.fromRaw(this.colliderSet, this.colliderSet.raw.coCastCollider(this.handle, B, I.handle, Q, C));\n      return B.free(), Q.free(), E;\n    }\n  }, {\n    key: \"intersectsShape\",\n    value: function intersectsShape(A, I, g) {\n      var C = QA.intoRaw(I),\n        B = iA.intoRaw(g),\n        Q = A.intoRaw(),\n        E = this.colliderSet.raw.coIntersectsShape(this.handle, Q, C, B);\n      return C.free(), B.free(), Q.free(), E;\n    }\n  }, {\n    key: \"contactShape\",\n    value: function contactShape(A, I, g, C) {\n      var B = QA.intoRaw(I),\n        Q = iA.intoRaw(g),\n        E = A.intoRaw(),\n        i = fA.fromRaw(this.colliderSet.raw.coContactShape(this.handle, E, B, Q, C));\n      return B.free(), Q.free(), E.free(), i;\n    }\n  }, {\n    key: \"contactCollider\",\n    value: function contactCollider(A, I) {\n      return fA.fromRaw(this.colliderSet.raw.coContactCollider(this.handle, A.handle, I));\n    }\n  }, {\n    key: \"castRay\",\n    value: function castRay(A, I, g) {\n      var C = QA.intoRaw(A.origin),\n        B = QA.intoRaw(A.dir),\n        Q = this.colliderSet.raw.coCastRay(this.handle, C, B, I, g);\n      return C.free(), B.free(), Q;\n    }\n  }, {\n    key: \"castRayAndGetNormal\",\n    value: function castRayAndGetNormal(A, I, g) {\n      var C = QA.intoRaw(A.origin),\n        B = QA.intoRaw(A.dir),\n        Q = zA.fromRaw(this.colliderSet.raw.coCastRayAndGetNormal(this.handle, C, B, I, g));\n      return C.free(), B.free(), Q;\n    }\n  }]);\n  return JI;\n}();\n!function (A) {\n  A[A.Density = 0] = \"Density\", A[A.Mass = 1] = \"Mass\", A[A.MassProps = 2] = \"MassProps\";\n}(KA || (KA = {}));\nvar yI = /*#__PURE__*/function () {\n  function yI(A) {\n    _classCallCheck(this, yI);\n    this.shape = A, this.massPropsMode = KA.Density, this.density = 1, this.friction = .5, this.restitution = 0, this.rotation = iA.identity(), this.translation = QA.zeros(), this.isSensor = !1, this.collisionGroups = 4294967295, this.solverGroups = 4294967295, this.frictionCombineRule = SA.Average, this.restitutionCombineRule = SA.Average, this.activeCollisionTypes = UA.DEFAULT, this.activeEvents = 0, this.activeHooks = 0, this.mass = 0, this.centerOfMass = QA.zeros(), this.contactForceEventThreshold = 0, this.principalAngularInertia = QA.zeros(), this.angularInertiaLocalFrame = iA.identity();\n  }\n  _createClass(yI, [{\n    key: \"setTranslation\",\n    value: function setTranslation(A, I, g) {\n      if (\"number\" != typeof A || \"number\" != typeof I || \"number\" != typeof g) throw TypeError(\"The translation components must be numbers.\");\n      return this.translation = {\n        x: A,\n        y: I,\n        z: g\n      }, this;\n    }\n  }, {\n    key: \"setRotation\",\n    value: function setRotation(A) {\n      return iA.copy(this.rotation, A), this;\n    }\n  }, {\n    key: \"setSensor\",\n    value: function setSensor(A) {\n      return this.isSensor = A, this;\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity(A) {\n      return this.massPropsMode = KA.Density, this.density = A, this;\n    }\n  }, {\n    key: \"setMass\",\n    value: function setMass(A) {\n      return this.massPropsMode = KA.Mass, this.mass = A, this;\n    }\n  }, {\n    key: \"setMassProperties\",\n    value: function setMassProperties(A, I, g, C) {\n      return this.massPropsMode = KA.MassProps, this.mass = A, QA.copy(this.centerOfMass, I), QA.copy(this.principalAngularInertia, g), iA.copy(this.angularInertiaLocalFrame, C), this;\n    }\n  }, {\n    key: \"setRestitution\",\n    value: function setRestitution(A) {\n      return this.restitution = A, this;\n    }\n  }, {\n    key: \"setFriction\",\n    value: function setFriction(A) {\n      return this.friction = A, this;\n    }\n  }, {\n    key: \"setFrictionCombineRule\",\n    value: function setFrictionCombineRule(A) {\n      return this.frictionCombineRule = A, this;\n    }\n  }, {\n    key: \"setRestitutionCombineRule\",\n    value: function setRestitutionCombineRule(A) {\n      return this.restitutionCombineRule = A, this;\n    }\n  }, {\n    key: \"setCollisionGroups\",\n    value: function setCollisionGroups(A) {\n      return this.collisionGroups = A, this;\n    }\n  }, {\n    key: \"setSolverGroups\",\n    value: function setSolverGroups(A) {\n      return this.solverGroups = A, this;\n    }\n  }, {\n    key: \"setActiveHooks\",\n    value: function setActiveHooks(A) {\n      return this.activeHooks = A, this;\n    }\n  }, {\n    key: \"setActiveEvents\",\n    value: function setActiveEvents(A) {\n      return this.activeEvents = A, this;\n    }\n  }, {\n    key: \"setActiveCollisionTypes\",\n    value: function setActiveCollisionTypes(A) {\n      return this.activeCollisionTypes = A, this;\n    }\n  }, {\n    key: \"setContactForceEventThreshold\",\n    value: function setContactForceEventThreshold(A) {\n      return this.contactForceEventThreshold = A, this;\n    }\n  }], [{\n    key: \"ball\",\n    value: function ball(A) {\n      var I = new II(A);\n      return new yI(I);\n    }\n  }, {\n    key: \"capsule\",\n    value: function capsule(A, I) {\n      var g = new BI(A, I);\n      return new yI(g);\n    }\n  }, {\n    key: \"segment\",\n    value: function segment(A, I) {\n      var g = new QI(A, I);\n      return new yI(g);\n    }\n  }, {\n    key: \"triangle\",\n    value: function triangle(A, I, g) {\n      var C = new EI(A, I, g);\n      return new yI(C);\n    }\n  }, {\n    key: \"roundTriangle\",\n    value: function roundTriangle(A, I, g, C) {\n      var B = new iI(A, I, g, C);\n      return new yI(B);\n    }\n  }, {\n    key: \"polyline\",\n    value: function polyline(A, I) {\n      var g = new DI(A, I);\n      return new yI(g);\n    }\n  }, {\n    key: \"trimesh\",\n    value: function trimesh(A, I) {\n      var g = new oI(A, I);\n      return new yI(g);\n    }\n  }, {\n    key: \"cuboid\",\n    value: function cuboid(A, I, g) {\n      var C = new gI(A, I, g);\n      return new yI(C);\n    }\n  }, {\n    key: \"roundCuboid\",\n    value: function roundCuboid(A, I, g, C) {\n      var B = new CI(A, I, g, C);\n      return new yI(B);\n    }\n  }, {\n    key: \"heightfield\",\n    value: function heightfield(A, I, g, C) {\n      var B = new wI(A, I, g, C);\n      return new yI(B);\n    }\n  }, {\n    key: \"cylinder\",\n    value: function cylinder(A, I) {\n      var g = new kI(A, I);\n      return new yI(g);\n    }\n  }, {\n    key: \"roundCylinder\",\n    value: function roundCylinder(A, I, g) {\n      var C = new UI(A, I, g);\n      return new yI(C);\n    }\n  }, {\n    key: \"cone\",\n    value: function cone(A, I) {\n      var g = new KI(A, I);\n      return new yI(g);\n    }\n  }, {\n    key: \"roundCone\",\n    value: function roundCone(A, I, g) {\n      var C = new aI(A, I, g);\n      return new yI(C);\n    }\n  }, {\n    key: \"convexHull\",\n    value: function convexHull(A) {\n      var I = new GI(A, null);\n      return new yI(I);\n    }\n  }, {\n    key: \"convexMesh\",\n    value: function convexMesh(A, I) {\n      var g = new GI(A, I);\n      return new yI(g);\n    }\n  }, {\n    key: \"roundConvexHull\",\n    value: function roundConvexHull(A, I) {\n      var g = new SI(A, null, I);\n      return new yI(g);\n    }\n  }, {\n    key: \"roundConvexMesh\",\n    value: function roundConvexMesh(A, I, g) {\n      var C = new SI(A, I, g);\n      return new yI(C);\n    }\n  }]);\n  return yI;\n}();\nvar MI = /*#__PURE__*/function () {\n  function MI(A) {\n    var _this22 = this;\n    _classCallCheck(this, MI);\n    this.raw = A || new H(), this.map = new FA(), A && A.forEachColliderHandle(function (A) {\n      _this22.map.set(A, new JI(_this22, A, null));\n    });\n  }\n  _createClass(MI, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0, this.map.clear(), this.map = void 0;\n    }\n  }, {\n    key: \"finalizeDeserialization\",\n    value: function finalizeDeserialization(A) {\n      this.map.forEach(function (I) {\n        return I.finalizeDeserialization(A);\n      });\n    }\n  }, {\n    key: \"createCollider\",\n    value: function createCollider(A, I, g) {\n      var C = null != g && null != g;\n      if (C && isNaN(g)) throw Error(\"Cannot create a collider with a parent rigid-body handle that is not a number.\");\n      var B = I.shape.intoRaw(),\n        Q = QA.intoRaw(I.translation),\n        E = iA.intoRaw(I.rotation),\n        i = QA.intoRaw(I.centerOfMass),\n        D = QA.intoRaw(I.principalAngularInertia),\n        o = iA.intoRaw(I.angularInertiaLocalFrame),\n        G = this.raw.createCollider(B, Q, E, I.massPropsMode, I.mass, i, D, o, I.density, I.friction, I.restitution, I.frictionCombineRule, I.restitutionCombineRule, I.isSensor, I.collisionGroups, I.solverGroups, I.activeCollisionTypes, I.activeHooks, I.activeEvents, I.contactForceEventThreshold, C, C ? g : 0, A.raw);\n      B.free(), Q.free(), E.free(), i.free(), D.free(), o.free();\n      var S = C ? A.get(g) : null,\n        w = new JI(this, G, S, I.shape);\n      return this.map.set(G, w), w;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(A, I, g, C) {\n      this.raw.remove(A, I.raw, g.raw, C), this.unmap(A);\n    }\n  }, {\n    key: \"unmap\",\n    value: function unmap(A) {\n      this.map.delete(A);\n    }\n  }, {\n    key: \"get\",\n    value: function get(A) {\n      return this.map.get(A);\n    }\n  }, {\n    key: \"len\",\n    value: function len() {\n      return this.map.len();\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(A) {\n      return null != this.get(A);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(A) {\n      this.map.forEach(A);\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      return this.map.getAll();\n    }\n  }]);\n  return MI;\n}();\nvar hI = /*#__PURE__*/function () {\n  function hI(A) {\n    _classCallCheck(this, hI);\n    this.raw = A || new b();\n  }\n  _createClass(hI, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0;\n    }\n  }, {\n    key: \"step\",\n    value: function step(A, I, g, C, B, Q, E, i, D, o, G, S) {\n      var w = QA.intoRaw(A);\n      G ? this.raw.stepWithEvents(w, I.raw, g.raw, C.raw, B.raw, Q.raw, E.raw, i.raw, D.raw, o.raw, G.raw, S, S ? S.filterContactPair : null, S ? S.filterIntersectionPair : null) : this.raw.step(w, I.raw, g.raw, C.raw, B.raw, Q.raw, E.raw, i.raw, D.raw, o.raw), w.free();\n    }\n  }]);\n  return hI;\n}();\n!function (A) {\n  A[A.EXCLUDE_FIXED = 1] = \"EXCLUDE_FIXED\", A[A.EXCLUDE_KINEMATIC = 2] = \"EXCLUDE_KINEMATIC\", A[A.EXCLUDE_DYNAMIC = 4] = \"EXCLUDE_DYNAMIC\", A[A.EXCLUDE_SENSORS = 8] = \"EXCLUDE_SENSORS\", A[A.EXCLUDE_SOLIDS = 16] = \"EXCLUDE_SOLIDS\", A[A.ONLY_DYNAMIC = 3] = \"ONLY_DYNAMIC\", A[A.ONLY_KINEMATIC = 5] = \"ONLY_KINEMATIC\", A[A.ONLY_FIXED = 6] = \"ONLY_FIXED\";\n}(aA || (aA = {}));\nvar NI = /*#__PURE__*/function () {\n  function NI(A) {\n    _classCallCheck(this, NI);\n    this.raw = A || new f();\n  }\n  _createClass(NI, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0;\n    }\n  }, {\n    key: \"update\",\n    value: function update(A, I, g) {\n      this.raw.update(A.raw, I.raw, g.raw);\n    }\n  }, {\n    key: \"castRay\",\n    value: function castRay(A, I, g, C, B, Q, E, i, D, o) {\n      var G = QA.intoRaw(g.origin),\n        S = QA.intoRaw(g.dir),\n        w = vA.fromRaw(I, this.raw.castRay(A.raw, I.raw, G, S, C, B, Q, E, i, D, o));\n      return G.free(), S.free(), w;\n    }\n  }, {\n    key: \"castRayAndGetNormal\",\n    value: function castRayAndGetNormal(A, I, g, C, B, Q, E, i, D, o) {\n      var G = QA.intoRaw(g.origin),\n        S = QA.intoRaw(g.dir),\n        w = uA.fromRaw(I, this.raw.castRayAndGetNormal(A.raw, I.raw, G, S, C, B, Q, E, i, D, o));\n      return G.free(), S.free(), w;\n    }\n  }, {\n    key: \"intersectionsWithRay\",\n    value: function intersectionsWithRay(A, I, g, C, B, Q, E, i, D, o, G) {\n      var S = QA.intoRaw(g.origin),\n        w = QA.intoRaw(g.dir);\n      this.raw.intersectionsWithRay(A.raw, I.raw, S, w, C, B, function (A) {\n        return Q(uA.fromRaw(I, A));\n      }, E, i, D, o, G), S.free(), w.free();\n    }\n  }, {\n    key: \"intersectionWithShape\",\n    value: function intersectionWithShape(A, I, g, C, B, Q, E, i, D, o) {\n      var G = QA.intoRaw(g),\n        S = iA.intoRaw(C),\n        w = B.intoRaw(),\n        k = this.raw.intersectionWithShape(A.raw, I.raw, G, S, w, Q, E, i, D, o);\n      return G.free(), S.free(), w.free(), k;\n    }\n  }, {\n    key: \"projectPoint\",\n    value: function projectPoint(A, I, g, C, B, Q, E, i, D) {\n      var o = QA.intoRaw(g),\n        G = mA.fromRaw(I, this.raw.projectPoint(A.raw, I.raw, o, C, B, Q, E, i, D));\n      return o.free(), G;\n    }\n  }, {\n    key: \"projectPointAndGetFeature\",\n    value: function projectPointAndGetFeature(A, I, g, C, B, Q, E, i) {\n      var D = QA.intoRaw(g),\n        o = mA.fromRaw(I, this.raw.projectPointAndGetFeature(A.raw, I.raw, D, C, B, Q, E, i));\n      return D.free(), o;\n    }\n  }, {\n    key: \"intersectionsWithPoint\",\n    value: function intersectionsWithPoint(A, I, g, C, B, Q, E, i, D) {\n      var o = QA.intoRaw(g);\n      this.raw.intersectionsWithPoint(A.raw, I.raw, o, C, B, Q, E, i, D), o.free();\n    }\n  }, {\n    key: \"castShape\",\n    value: function castShape(A, I, g, C, B, Q, E, i, D, o, G, S) {\n      var w = QA.intoRaw(g),\n        k = iA.intoRaw(C),\n        U = QA.intoRaw(B),\n        K = Q.intoRaw(),\n        a = $A.fromRaw(I, this.raw.castShape(A.raw, I.raw, w, k, U, K, E, i, D, o, G, S));\n      return w.free(), k.free(), U.free(), K.free(), a;\n    }\n  }, {\n    key: \"intersectionsWithShape\",\n    value: function intersectionsWithShape(A, I, g, C, B, Q, E, i, D, o, G) {\n      var S = QA.intoRaw(g),\n        w = iA.intoRaw(C),\n        k = B.intoRaw();\n      this.raw.intersectionsWithShape(A.raw, I.raw, S, w, k, Q, E, i, D, o, G), S.free(), w.free(), k.free();\n    }\n  }, {\n    key: \"collidersWithAabbIntersectingAabb\",\n    value: function collidersWithAabbIntersectingAabb(A, I, g) {\n      var C = QA.intoRaw(A),\n        B = QA.intoRaw(I);\n      this.raw.collidersWithAabbIntersectingAabb(C, B, g), C.free(), B.free();\n    }\n  }]);\n  return NI;\n}();\nvar FI = /*#__PURE__*/function () {\n  function FI(A) {\n    _classCallCheck(this, FI);\n    this.raw = A || new v();\n  }\n  _createClass(FI, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0;\n    }\n  }, {\n    key: \"serializeAll\",\n    value: function serializeAll(A, I, g, C, B, Q, E, i, D) {\n      var o = QA.intoRaw(A);\n      var G = this.raw.serializeAll(o, I.raw, g.raw, C.raw, B.raw, Q.raw, E.raw, i.raw, D.raw);\n      return o.free(), G;\n    }\n  }, {\n    key: \"deserializeAll\",\n    value: function deserializeAll(A) {\n      return sI.fromRaw(this.raw.deserializeAll(A));\n    }\n  }]);\n  return FI;\n}();\nvar RI = /*#__PURE__*/_createClass(function RI(A, I) {\n  _classCallCheck(this, RI);\n  this.vertices = A, this.colors = I;\n});\nvar qI = /*#__PURE__*/function () {\n  function qI(A) {\n    _classCallCheck(this, qI);\n    this.raw = A || new e();\n  }\n  _createClass(qI, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0, this.vertices = void 0, this.colors = void 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render(A, I, g, C, B) {\n      this.raw.render(A.raw, I.raw, g.raw, C.raw, B.raw), this.vertices = this.raw.vertices(), this.colors = this.raw.colors();\n    }\n  }]);\n  return qI;\n}();\nvar sI = /*#__PURE__*/function () {\n  function sI(A, I, g, C, B, Q, E, i, D, o, G, S, w, k) {\n    _classCallCheck(this, sI);\n    this.gravity = A, this.integrationParameters = new qA(I), this.islands = new WA(g), this.broadPhase = new bA(C), this.narrowPhase = new jA(B), this.bodies = new RA(Q), this.colliders = new MI(E), this.impulseJoints = new pA(i), this.multibodyJoints = new ZA(D), this.ccdSolver = new xA(o), this.queryPipeline = new NI(G), this.physicsPipeline = new hI(S), this.serializationPipeline = new FI(w), this.debugRenderPipeline = new qI(k), this.impulseJoints.finalizeDeserialization(this.bodies), this.bodies.finalizeDeserialization(this.colliders), this.colliders.finalizeDeserialization(this.bodies);\n  }\n  _createClass(sI, [{\n    key: \"free\",\n    value: function free() {\n      this.integrationParameters.free(), this.islands.free(), this.broadPhase.free(), this.narrowPhase.free(), this.bodies.free(), this.colliders.free(), this.impulseJoints.free(), this.multibodyJoints.free(), this.ccdSolver.free(), this.queryPipeline.free(), this.physicsPipeline.free(), this.serializationPipeline.free(), this.debugRenderPipeline.free(), this.integrationParameters = void 0, this.islands = void 0, this.broadPhase = void 0, this.narrowPhase = void 0, this.bodies = void 0, this.colliders = void 0, this.ccdSolver = void 0, this.impulseJoints = void 0, this.multibodyJoints = void 0, this.queryPipeline = void 0, this.physicsPipeline = void 0, this.serializationPipeline = void 0, this.debugRenderPipeline = void 0;\n    }\n  }, {\n    key: \"takeSnapshot\",\n    value: function takeSnapshot() {\n      return this.serializationPipeline.serializeAll(this.gravity, this.integrationParameters, this.islands, this.broadPhase, this.narrowPhase, this.bodies, this.colliders, this.impulseJoints, this.multibodyJoints);\n    }\n  }, {\n    key: \"debugRender\",\n    value: function debugRender() {\n      return this.debugRenderPipeline.render(this.bodies, this.colliders, this.impulseJoints, this.multibodyJoints, this.narrowPhase), new RI(this.debugRenderPipeline.vertices, this.debugRenderPipeline.colors);\n    }\n  }, {\n    key: \"step\",\n    value: function step(A, I) {\n      this.physicsPipeline.step(this.gravity, this.integrationParameters, this.islands, this.broadPhase, this.narrowPhase, this.bodies, this.colliders, this.impulseJoints, this.multibodyJoints, this.ccdSolver, A, I), this.queryPipeline.update(this.islands, this.bodies, this.colliders);\n    }\n  }, {\n    key: \"timestep\",\n    get: function get() {\n      return this.integrationParameters.dt;\n    },\n    set: function set(A) {\n      this.integrationParameters.dt = A;\n    }\n  }, {\n    key: \"maxVelocityIterations\",\n    get: function get() {\n      return this.integrationParameters.maxVelocityIterations;\n    },\n    set: function set(A) {\n      this.integrationParameters.maxVelocityIterations = A;\n    }\n  }, {\n    key: \"maxVelocityFrictionIterations\",\n    get: function get() {\n      return this.integrationParameters.maxVelocityFrictionIterations;\n    },\n    set: function set(A) {\n      this.integrationParameters.maxVelocityFrictionIterations = A;\n    }\n  }, {\n    key: \"maxStabilizationIterations\",\n    get: function get() {\n      return this.integrationParameters.maxStabilizationIterations;\n    },\n    set: function set(A) {\n      this.integrationParameters.maxStabilizationIterations = A;\n    }\n  }, {\n    key: \"createRigidBody\",\n    value: function createRigidBody(A) {\n      return this.bodies.createRigidBody(this.colliders, A);\n    }\n  }, {\n    key: \"createCollider\",\n    value: function createCollider(A, I) {\n      var g = I ? I.handle : void 0;\n      return this.colliders.createCollider(this.bodies, A, g);\n    }\n  }, {\n    key: \"createImpulseJoint\",\n    value: function createImpulseJoint(A, I, g, C) {\n      return this.impulseJoints.createJoint(this.bodies, A, I.handle, g.handle, C);\n    }\n  }, {\n    key: \"createMultibodyJoint\",\n    value: function createMultibodyJoint(A, I, g, C) {\n      return this.multibodyJoints.createJoint(A, I.handle, g.handle, C);\n    }\n  }, {\n    key: \"getRigidBody\",\n    value: function getRigidBody(A) {\n      return this.bodies.get(A);\n    }\n  }, {\n    key: \"getCollider\",\n    value: function getCollider(A) {\n      return this.colliders.get(A);\n    }\n  }, {\n    key: \"getImpulseJoint\",\n    value: function getImpulseJoint(A) {\n      return this.impulseJoints.get(A);\n    }\n  }, {\n    key: \"getMultibodyJoint\",\n    value: function getMultibodyJoint(A) {\n      return this.multibodyJoints.get(A);\n    }\n  }, {\n    key: \"removeRigidBody\",\n    value: function removeRigidBody(A) {\n      this.bodies && this.bodies.remove(A.handle, this.islands, this.colliders, this.impulseJoints, this.multibodyJoints);\n    }\n  }, {\n    key: \"removeCollider\",\n    value: function removeCollider(A, I) {\n      this.colliders && this.colliders.remove(A.handle, this.islands, this.bodies, I);\n    }\n  }, {\n    key: \"removeImpulseJoint\",\n    value: function removeImpulseJoint(A, I) {\n      this.impulseJoints && this.impulseJoints.remove(A.handle, I);\n    }\n  }, {\n    key: \"removeMultibodyJoint\",\n    value: function removeMultibodyJoint(A, I) {\n      this.impulseJoints && this.multibodyJoints.remove(A.handle, I);\n    }\n  }, {\n    key: \"forEachCollider\",\n    value: function forEachCollider(A) {\n      this.colliders.forEach(A);\n    }\n  }, {\n    key: \"forEachRigidBody\",\n    value: function forEachRigidBody(A) {\n      this.bodies.forEach(A);\n    }\n  }, {\n    key: \"forEachActiveRigidBody\",\n    value: function forEachActiveRigidBody(A) {\n      this.bodies.forEachActiveRigidBody(this.islands, A);\n    }\n  }, {\n    key: \"castRay\",\n    value: function castRay(A, I, g, C, B, Q, E, i) {\n      return this.queryPipeline.castRay(this.bodies, this.colliders, A, I, g, C, B, Q ? Q.handle : null, E ? E.handle : null, cI(this.colliders, i));\n    }\n  }, {\n    key: \"castRayAndGetNormal\",\n    value: function castRayAndGetNormal(A, I, g, C, B, Q, E, i) {\n      return this.queryPipeline.castRayAndGetNormal(this.bodies, this.colliders, A, I, g, C, B, Q ? Q.handle : null, E ? E.handle : null, cI(this.colliders, i));\n    }\n  }, {\n    key: \"intersectionsWithRay\",\n    value: function intersectionsWithRay(A, I, g, C, B, Q, E, i, D) {\n      this.queryPipeline.intersectionsWithRay(this.bodies, this.colliders, A, I, g, C, B, Q, E ? E.handle : null, i ? i.handle : null, cI(this.colliders, D));\n    }\n  }, {\n    key: \"intersectionWithShape\",\n    value: function intersectionWithShape(A, I, g, C, B, Q, E, i) {\n      var D = this.queryPipeline.intersectionWithShape(this.bodies, this.colliders, A, I, g, C, B, Q ? Q.handle : null, E ? E.handle : null, cI(this.colliders, i));\n      return null != D ? this.colliders.get(D) : null;\n    }\n  }, {\n    key: \"projectPoint\",\n    value: function projectPoint(A, I, g, C, B, Q, E) {\n      return this.queryPipeline.projectPoint(this.bodies, this.colliders, A, I, g, C, B ? B.handle : null, Q ? Q.handle : null, cI(this.colliders, E));\n    }\n  }, {\n    key: \"projectPointAndGetFeature\",\n    value: function projectPointAndGetFeature(A, I, g, C, B, Q) {\n      return this.queryPipeline.projectPointAndGetFeature(this.bodies, this.colliders, A, I, g, C ? C.handle : null, B ? B.handle : null, cI(this.colliders, Q));\n    }\n  }, {\n    key: \"intersectionsWithPoint\",\n    value: function intersectionsWithPoint(A, I, g, C, B, Q, E) {\n      this.queryPipeline.intersectionsWithPoint(this.bodies, this.colliders, A, cI(this.colliders, I), g, C, B ? B.handle : null, Q ? Q.handle : null, cI(this.colliders, E));\n    }\n  }, {\n    key: \"castShape\",\n    value: function castShape(A, I, g, C, B, Q, E, i, D, o) {\n      return this.queryPipeline.castShape(this.bodies, this.colliders, A, I, g, C, B, Q, E, i ? i.handle : null, D ? D.handle : null, cI(this.colliders, o));\n    }\n  }, {\n    key: \"intersectionsWithShape\",\n    value: function intersectionsWithShape(A, I, g, C, B, Q, E, i, D) {\n      this.queryPipeline.intersectionsWithShape(this.bodies, this.colliders, A, I, g, cI(this.colliders, C), B, Q, E ? E.handle : null, i ? i.handle : null, cI(this.colliders, D));\n    }\n  }, {\n    key: \"collidersWithAabbIntersectingAabb\",\n    value: function collidersWithAabbIntersectingAabb(A, I, g) {\n      this.queryPipeline.collidersWithAabbIntersectingAabb(A, I, cI(this.colliders, g));\n    }\n  }, {\n    key: \"contactsWith\",\n    value: function contactsWith(A, I) {\n      this.narrowPhase.contactsWith(A.handle, cI(this.colliders, I));\n    }\n  }, {\n    key: \"intersectionsWith\",\n    value: function intersectionsWith(A, I) {\n      this.narrowPhase.intersectionsWith(A.handle, cI(this.colliders, I));\n    }\n  }, {\n    key: \"contactPair\",\n    value: function contactPair(A, I, g) {\n      this.narrowPhase.contactPair(A.handle, I.handle, g);\n    }\n  }, {\n    key: \"intersectionPair\",\n    value: function intersectionPair(A, I) {\n      return this.narrowPhase.intersectionPair(A.handle, I.handle);\n    }\n  }], [{\n    key: \"fromRaw\",\n    value: function fromRaw(A) {\n      return A ? new sI(QA.fromRaw(A.takeGravity()), A.takeIntegrationParameters(), A.takeIslandManager(), A.takeBroadPhase(), A.takeNarrowPhase(), A.takeBodies(), A.takeColliders(), A.takeImpulseJoints(), A.takeMultibodyJoints()) : null;\n    }\n  }, {\n    key: \"restoreSnapshot\",\n    value: function restoreSnapshot(A) {\n      return new FI().deserializeAll(A);\n    }\n  }]);\n  return sI;\n}();\nfunction cI(A, I) {\n  return function (g) {\n    return I ? I(A.get(g)) : void 0;\n  };\n}\n!function (A) {\n  A[A.COLLISION_EVENTS = 1] = \"COLLISION_EVENTS\", A[A.CONTACT_FORCE_EVENTS = 2] = \"CONTACT_FORCE_EVENTS\";\n}(JA || (JA = {}));\nvar YI = /*#__PURE__*/function () {\n  function YI() {\n    _classCallCheck(this, YI);\n  }\n  _createClass(YI, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0;\n    }\n  }, {\n    key: \"collider1\",\n    value: function collider1() {\n      return this.raw.collider1();\n    }\n  }, {\n    key: \"collider2\",\n    value: function collider2() {\n      return this.raw.collider2();\n    }\n  }, {\n    key: \"totalForce\",\n    value: function totalForce() {\n      return QA.fromRaw(this.raw.total_force());\n    }\n  }, {\n    key: \"totalForceMagnitude\",\n    value: function totalForceMagnitude() {\n      return this.raw.total_force_magnitude();\n    }\n  }, {\n    key: \"maxForceDirection\",\n    value: function maxForceDirection() {\n      return QA.fromRaw(this.raw.max_force_direction());\n    }\n  }, {\n    key: \"maxForceMagnitude\",\n    value: function maxForceMagnitude() {\n      return this.raw.max_force_magnitude();\n    }\n  }]);\n  return YI;\n}();\nvar LI = /*#__PURE__*/function () {\n  function LI(A, I) {\n    _classCallCheck(this, LI);\n    this.raw = I || new T(A);\n  }\n  _createClass(LI, [{\n    key: \"free\",\n    value: function free() {\n      this.raw.free(), this.raw = void 0;\n    }\n  }, {\n    key: \"drainCollisionEvents\",\n    value: function drainCollisionEvents(A) {\n      this.raw.drainCollisionEvents(A);\n    }\n  }, {\n    key: \"drainContactForceEvents\",\n    value: function drainContactForceEvents(A) {\n      var I = new YI();\n      this.raw.drainContactForceEvents(function (g) {\n        I.raw = g, A(I), I.free();\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.raw.clear();\n    }\n  }]);\n  return LI;\n}(); /*! *****************************************************************************\n     Copyright (c) Microsoft Corporation.\n     \n     Permission to use, copy, modify, and/or distribute this software for any\n     purpose with or without fee is hereby granted.\n     \n     THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n     REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n     AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n     INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n     LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n     OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n     PERFORMANCE OF THIS SOFTWARE.\n     ***************************************************************************** */\nfunction HI(A, I, g, C) {\n  return new (g || (g = Promise))(function (B, Q) {\n    function E(A) {\n      try {\n        D(C.next(A));\n      } catch (A) {\n        Q(A);\n      }\n    }\n    function i(A) {\n      try {\n        D(C.throw(A));\n      } catch (A) {\n        Q(A);\n      }\n    }\n    function D(A) {\n      var I;\n      A.done ? B(A.value) : (I = A.value, I instanceof g ? I : new g(function (A) {\n        A(I);\n      })).then(E, i);\n    }\n    D((C = C.apply(A, I || [])).next());\n  });\n}\n!function (A) {\n  A[A.FILTER_CONTACT_PAIRS = 1] = \"FILTER_CONTACT_PAIRS\", A[A.FILTER_INTERSECTION_PAIRS = 2] = \"FILTER_INTERSECTION_PAIRS\";\n}(yA || (yA = {})), function (A) {\n  A[A.EMPTY = 0] = \"EMPTY\", A[A.COMPUTE_IMPULSE = 1] = \"COMPUTE_IMPULSE\";\n}(MA || (MA = {}));\nfor (var lI = {\n    byteLength: function byteLength(A) {\n      var I = OI(A),\n        g = I[0],\n        C = I[1];\n      return 3 * (g + C) / 4 - C;\n    },\n    toByteArray: function toByteArray(A) {\n      var I,\n        g,\n        C = OI(A),\n        B = C[0],\n        Q = C[1],\n        E = new eI(function (A, I, g) {\n          return 3 * (I + g) / 4 - g;\n        }(0, B, Q)),\n        i = 0,\n        D = Q > 0 ? B - 4 : B;\n      for (g = 0; g < D; g += 4) {\n        I = pI[A.charCodeAt(g)] << 18 | pI[A.charCodeAt(g + 1)] << 12 | pI[A.charCodeAt(g + 2)] << 6 | pI[A.charCodeAt(g + 3)], E[i++] = I >> 16 & 255, E[i++] = I >> 8 & 255, E[i++] = 255 & I;\n      }\n      2 === Q && (I = pI[A.charCodeAt(g)] << 2 | pI[A.charCodeAt(g + 1)] >> 4, E[i++] = 255 & I);\n      1 === Q && (I = pI[A.charCodeAt(g)] << 10 | pI[A.charCodeAt(g + 1)] << 4 | pI[A.charCodeAt(g + 2)] >> 2, E[i++] = I >> 8 & 255, E[i++] = 255 & I);\n      return E;\n    },\n    fromByteArray: function fromByteArray(A) {\n      for (var I, g = A.length, C = g % 3, B = [], Q = 16383, E = 0, i = g - C; E < i; E += Q) {\n        B.push(nI(A, E, E + Q > i ? i : E + Q));\n      }\n      1 === C ? (I = A[g - 1], B.push(tI[I >> 2] + tI[I << 4 & 63] + \"==\")) : 2 === C && (I = (A[g - 2] << 8) + A[g - 1], B.push(tI[I >> 10] + tI[I >> 4 & 63] + tI[I << 2 & 63] + \"=\"));\n      return B.join(\"\");\n    }\n  }, tI = [], pI = [], eI = \"undefined\" != typeof Uint8Array ? Uint8Array : Array, rI = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", TI = 0, dI = rI.length; TI < dI; ++TI) {\n  tI[TI] = rI[TI], pI[rI.charCodeAt(TI)] = TI;\n}\nfunction OI(A) {\n  var I = A.length;\n  if (I % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\");\n  var g = A.indexOf(\"=\");\n  return -1 === g && (g = I), [g, g === I ? 0 : 4 - g % 4];\n}\nfunction nI(A, I, g) {\n  for (var C, B, Q = [], E = I; E < g; E += 3) {\n    C = (A[E] << 16 & 16711680) + (A[E + 1] << 8 & 65280) + (255 & A[E + 2]), Q.push(tI[(B = C) >> 18 & 63] + tI[B >> 12 & 63] + tI[B >> 6 & 63] + tI[63 & B]);\n  }\n  return Q.join(\"\");\n}\nfunction ZI() {\n  return HI(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return CA(lI.toByteArray(\"AGFzbQEAAAABygqJAWACf38AYAR/f39/AGADf39/AGACf38Bf2ABfwF/YAN/f38Bf2ABfwF+YAF/AGAFf39/f38AYAZ/f39/fX8AYAJ/fAF/YAF/AX1gBX9/f31/AGAFf39/f30AYAN/fH8AYAZ/f39/f30AYAR/f399AX9gAAF/YAN/f38BfWAEf39/fwF9YAN/f30AYAN/f30Bf2AEf39/fwF/YAZ/f39/f38Bf2AGf39/f39/AGAEf3x/fwBgAn98AX1gCH9/f39/f31/AX9gAX0BfWACf38BfWADf398AGAFf39/f38Bf2ACf30AYAd/f39/f39/AGAIf39/f39/f38AYAN/fH0AYAAAYAh/f39/f39/fQBgCX9/f39/f39/fQBgA398fwF9YAF/AXxgA319fQF/YA9/f39/f39/f39/f39/f38AYAZ/fX9/f30AYAt/f39/f39/f319fwBgBX9/fX9/AGAGf3x/f39/AGAFf3x/f38AYAN/fH8Bf2AFf3x9fX0AYAJ9fQF/YAZ/fH19fX0AYAl/f39/f399f38Bf2AHf39/f31/fwBgCX9/f39/fX9/fwBgCn9/f39/f31/f38AYAd/fX19f399AGALf39/f39/f39/f38AYAZ/fX1/f30AYAR/fX9/AX9gA35+fwF+YA9/f39/f31/f39/f3x/fH8Bf2APf39/f39/f39/f398f3x/AGACfX0BfWADf3x8AX9gBX98f319AGACf3wBfGAEf3x9fwBgAn98AGAFf398fH8BfGAEfX19fQF/YAF8AX9gCX99fX1/f31/fwBgD39/f39/f39/f39/f319fwBgC39/f31/f31/fX1/AGASf39/f39/f39/f39/fX99fX19AGAGf39/f39/AX1gCH9/f399fX9/AGALf39/f31/f39/f38AYAl/f39/f399f38AYAp/f39/fX9/f39/AGAJf39/f39/f399AX9gDH99f39/fX19fX19fwBgDH99f39/f39/fX19fwBgBH9/f30AYAd/f39/f399AX9gBn99f39/fwBgC39/fX19f39/f39/AGAEf39+fwBgB39/f39/f30AYAp/fX99f319fX1/AGAEf399fwBgA39+fwF/YAp/f39/f39/f399AGAQf39/f39/f31/f39/fH98fwF/YAl/f39/f39/f38AYAd/f39/f31/AX9gDX9/f39/f399fX19fX0AYAp/f39/f39/f39/AX9gCH98f39/f399AX9gBX9/f39/AX1gBn98fX9/fwBgB399fX19fX0AYAd/fH1/f39/AGAYf39/fX1/f39/f39/f39/f399fX9/f39/AXxgCX9/f39/f35+fgBgA399fQBgB39/f39/fX8BfWAZf39/f39/fX9/f319fX9/f39/f39/fX98fwBgBn9/f39/fQF/YAZ/fH9/f30Bf2AGf3x/fH99AX9gDX9/f39/f39/f3x/fH8Bf2AHf39/f39/fwF/YAx/f39/f39/f3x/fH8Bf2ADfn9/AX9gEH9/f39/fX9/f39/f3x/fH8AYAR/fH9/AX9gBn98f399fwF/YA1/f39/f39/f398f3x/AGAGf39/f319AX9gBH98fH0Bf2ACf34AYAV/fH9/fwF/YBJ/fX9/f39/f39/f39/f39/f38AYAZ/fH99fX0AYAd/fH99fX19AGAGf3x/f31/AX1gBX98f399AX9gBX9/f399AX9gAX0Bf2AGf399fX19AGADf3x/AXxgB398fX19fX8AYAZ/fH19fX8AYAR/fX9/AGAFf398f38AAoUGFgN3YmcaX193YmluZGdlbl9vYmplY3RfZHJvcF9yZWYABwN3YmcVX193YmluZGdlbl9udW1iZXJfbmV3AEcDd2JnFV9fd2JpbmRnZW5fbnVtYmVyX2dldAAAA3diZxZfX3diaW5kZ2VuX2Jvb2xlYW5fZ2V0AAQDd2JnJF9fd2JnX3Jhd3JheWNvbGxpZGVyaW50ZXJzZWN0aW9uX25ldwAEA3diZx5fX3diZ19yYXdjb250YWN0Zm9yY2VldmVudF9uZXcABAN3YmcWX193YmluZGdlbl9pc19mdW5jdGlvbgAEA3diZxtfX3diZ19jYWxsXzk4NTVhNDYxMmViNDk2Y2IABQN3YmcbX193YmdfY2FsbF84ZTEzMzhiOTA4NDQxYmQyABYDd2JnG19fd2JnX2NhbGxfMGE1NGZhNGZiNDIwMjNmMAAfA3diZxtfX3diZ19iaW5kXzJhZTQ0OTkyMjIyZTJmNDUAFgN3YmcdX193YmdfYnVmZmVyX2RlMTE1MGY5MWIyM2FhODkABAN3YmcxX193YmdfbmV3d2l0aGJ5dGVvZmZzZXRhbmRs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AAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAAMBAQEBAAEBAQEICAgLAwMDAgAFAwQDAwMDAwAkJAMDAgILAAAAAwUFBQMDAAIECD8HCwsLBgYGBAMGBgYGBgYGBgYGBgYGBgYGBgYGBgYDBQQLBAsEBAQEBAQECwQLBAQLBAQEBAQEBgYHAAgrBAcBcAG9B70HBQMBABEGCQF/AUGAgMAACwf8YfgCBm1lbW9yeQIAB3ZlcnNpb24A9wkXX193YmdfcmF3Y2Nkc29sdmVyX2ZyZWUAvQgQcmF3Y2Nkc29sdmVyX25ldwC6CRxyYXdpbXB1bHNlam9pbnRzZXRfam9pbnRUeXBlANUGI3Jhd2ltcHVsc2Vqb2ludHNldF9qb2ludEJvZHlIYW5kbGUxAIkHI3Jhd2ltcHVsc2Vqb2ludHNldF9qb2ludEJvZHlIYW5kbGUyAP8GH3Jhd2ltcHVsc2Vqb2ludHNldF9qb2ludEZyYW1lWDEApQYfcmF3aW1wdWxzZWpvaW50c2V0X2pvaW50RnJhbWVYMgCmBh9yYXdpbXB1bHNlam9pbnRzZXRfam9pbnRBbmNob3IxAKcGH3Jhd2ltcHVsc2Vqb2ludHNldF9qb2ludEFuY2hvcjIAqAYicmF3aW1wdWxzZWpvaW50c2V0X2pvaW50U2V0QW5jaG9yMQDFBiJyYXdpbXB1bHNlam9pbnRzZXRfam9pbnRTZXRBbmNob3IyAMYGJ3Jhd2ltcHVsc2Vqb2ludHNldF9qb2ludENvbnRhY3RzRW5hYmxlZACZBypyYXdpbXB1bHNlam9pbnRzZXRfam9pbnRTZXRDb250YWN0c0VuYWJsZWQA8QclcmF3aW1wdWxzZWpvaW50c2V0X2pvaW50TGltaXRzRW5hYmxlZAC7BiFyYXdpbXB1bHNlam9pbnRzZXRfam9pbnRMaW1pdHNNaW4A6QYhcmF3aW1wdWxzZWpvaW50c2V0X2pvaW50TGltaXRzTWF4AOoGIXJhd2ltcHVsc2Vqb2ludHNldF9qb2ludFNldExpbWl0cwDbBityYXdpbXB1bHNlam9pbnRzZXRfam9pbnRDb25maWd1cmVNb3Rvck1vZGVsANwGLnJhd2ltcHVsc2Vqb2ludHNldF9qb2ludENvbmZpZ3VyZU1vdG9yVmVsb2NpdHkA4AYucmF3aW1wdWxzZWpvaW50c2V0X2pvaW50Q29uZmlndXJlTW90b3JQb3NpdGlvbgDhBiZyYXdpbXB1bHNlam9pbnRzZXRfam9pbnRDb25maWd1cmVNb3RvcgDiBh1fX3diZ19yYXdpbXB1bHNlam9pbnRzZXRfZnJlZQDaCBZyYXdpbXB1bHNlam9pbnRzZXRfbmV3ALsJHnJhd2ltcHVsc2Vqb2ludHNldF9jcmVhdGVKb2ludACyCBlyYXdpbXB1bHNlam9pbnRzZXRfcmVtb3ZlAKcIFnJhd2ltcHVsc2Vqb2ludHNldF9sZW4AswkbcmF3aW1wdWxzZWpvaW50c2V0X2NvbnRhaW5zAIoIJXJhd2ltcHVsc2Vqb2ludHNldF9mb3JFYWNoSm9pbnRIYW5kbGUA6ggycmF3aW1wdWxzZWpvaW50c2V0X2ZvckVhY2hKb2ludEF0dGFjaGVkVG9SaWdpZEJvZHkA2wgjX193YmdfcmF3aW50ZWdyYXRpb25wYXJhbWV0ZXJzX2ZyZWUAswoccmF3aW50ZWdyYXRpb25wYXJhbWV0ZXJzX25ldwDmBhtyYXdpbnRlZ3JhdGlvbnBhcmFtZXRlcnNfZHQA2goccmF3aW50ZWdyYXRpb25wYXJhbWV0ZXJzX2VycAC8CityYXdpbnRlZ3JhdGlvbnBhcmFtZXRlcnNfYWxsb3dlZExpbmVhckVycm9yAL0KK3Jhd2ludGVncmF0aW9ucGFyYW1ldGVyc19wcmVkaWN0aW9uRGlzdGFuY2UAvgoucmF3aW50ZWdyYXRpb25wYXJhbWV0ZXJzX21heFZlbG9jaXR5SXRlcmF0aW9ucwC/CjZyYXdpbnRlZ3JhdGlvbnBhcmFtZXRlcnNfbWF4VmVsb2NpdHlGcmljdGlvbkl0ZXJhdGlvbnMAwAozcmF3aW50ZWdyYXRpb25wYXJhbWV0ZXJzX21heFN0YWJpbGl6YXRpb25JdGVyYXRpb25zAMEKJnJhd2ludGVncmF0aW9ucGFyYW1ldGVyc19taW5Jc2xhbmRTaXplAMIKJ3Jhd2ludGVncmF0aW9ucGFyYW1ldGVyc19tYXhDY2RTdWJzdGVwcwDDCh9yYXdpbnRlZ3JhdGlvbnBhcmFtZXRlcnNfc2V0X2R0AMQKIHJhd2ludGVncmF0aW9ucGFyYW1ldGVyc19zZXRfZXJwAKgKL3Jhd2ludGVncmF0aW9ucGFyYW1ldGVyc19zZXRfYWxsb3dlZExpbmVhckVycm9yAKkKL3Jhd2ludGVncmF0aW9ucGFyYW1ldGVyc19zZXRfcHJlZGljdGlvbkRpc3RhbmNlAKoKMnJhd2ludGVncmF0aW9ucGFyYW1ldGVyc19zZXRfbWF4VmVsb2NpdHlJdGVyYXRpb25zAKsKOnJhd2ludGVncmF0aW9ucGFyYW1ldGVyc19zZXRfbWF4VmVsb2NpdHlGcmljdGlvbkl0ZXJhdGlvbnMArAo3cmF3aW50ZWdyYXRpb25wYXJhbWV0ZXJzX3NldF9tYXhTdGFiaWxpemF0aW9uSXRlcmF0aW9ucwCtCipyYXdpbnRlZ3JhdGlvbnBhcmFtZXRlcnNfc2V0X21pbklzbGFuZFNpemUArgorcmF3aW50ZWdyYXRpb25wYXJhbWV0ZXJzX3NldF9tYXhDY2RTdWJzdGVwcwCvChtfX3diZ19yYXdpc2xhbmRtYW5hZ2VyX2ZyZWUAvAYUcmF3aXNsYW5kbWFuYWdlcl9uZXcA5wYtcmF3aXNsYW5kbWFuYWdlcl9mb3JFYWNoQWN0aXZlUmlnaWRCb2R5SGFuZGxlAOsIGl9fd2JnX3Jhd2dlbmVyaWNqb2ludF9mcmVlALMKGXJhd2dlbmVyaWNqb2ludF9zcGhlcmljYWwAqQUZcmF3Z2VuZXJpY2pvaW50X3ByaXNtYXRpYwCYBRVyYXdnZW5lcmljam9pbnRfZml4ZWQA3AIYcmF3Z2VuZXJpY2pvaW50X3Jldm9sdXRlAKsFHnJhd211bHRpYm9keWpvaW50c2V0X2pvaW50VHlwZQCdCSFyYXdtdWx0aWJvZHlqb2ludHNldF9qb2ludEZyYW1lWDEArAUhcmF3bXVsdGlib2R5am9pbnRzZXRfam9pbnRGcmFtZVgyALMFIXJhd211bHRpYm9keWpvaW50c2V0X2pvaW50QW5jaG9yMQC0BSFyYXdtdWx0aWJvZHlqb2ludHNldF9qb2ludEFuY2hvcjIArQUpcmF3bXVsdGlib2R5am9pbnRzZXRfam9pbnRDb250YWN0c0VuYWJsZWQAzgYscmF3bXVsdGlib2R5am9pbnRzZXRfam9pbnRTZXRDb250YWN0c0VuYWJsZWQA7gYncmF3bXVsdGlib2R5am9pbnRzZXRfam9pbnRMaW1pdHNFbmFibGVkAPkII3Jhd211bHRpYm9keWpvaW50c2V0X2pvaW50TGltaXRzTWluAKEGI3Jhd211bHRpYm9keWpvaW50c2V0X2pvaW50TGltaXRzTWF4AKIGH19fd2JnX3Jhd211bHRpYm9keWpvaW50c2V0X2ZyZWUA3AgYcmF3bXVsdGlib2R5am9pbnRzZXRfbmV3ALwJIHJhd211bHRpYm9keWpvaW50c2V0X2NyZWF0ZUpvaW50ALMIG3Jhd211bHRpYm9keWpvaW50c2V0X3JlbW92ZQC+CB1yYXdtdWx0aWJvZHlqb2ludHNldF9jb250YWlucwDqBydyYXdtdWx0aWJvZHlqb2ludHNldF9mb3JFYWNoSm9pbnRIYW5kbGUA7Ag0cmF3bXVsdGlib2R5am9pbnRzZXRfZm9yRWFjaEpvaW50QXR0YWNoZWRUb1JpZ2lkQm9keQDdCB1yYXdyaWdpZGJvZHlzZXRfcmJUcmFuc2xhdGlvbgCpBhpyYXdyaWdpZGJvZHlzZXRfcmJSb3RhdGlvbgCqBhdyYXdyaWdpZGJvZHlzZXRfcmJTbGVlcACaCBxyYXdyaWdpZGJvZHlzZXRfcmJJc1NsZWVwaW5nALQHGnJhd3JpZ2lkYm9keXNldF9yYklzTW92aW5nALUHIXJhd3JpZ2lkYm9keXNldF9yYk5leHRUcmFuc2xhdGlvbgCPBh5yYXdyaWdpZGJvZHlzZXRfcmJOZXh0Um90YXRpb24AgAYgcmF3cmlnaWRib2R5c2V0X3JiU2V0VHJhbnNsYXRpb24AxgkdcmF3cmlnaWRib2R5c2V0X3JiU2V0Um90YXRpb24AvwkbcmF3cmlnaWRib2R5c2V0X3JiU2V0TGludmVsAMcGG3Jhd3JpZ2lkYm9keXNldF9yYlNldEFuZ3ZlbADIBi1yYXdyaWdpZGJvZHlzZXRfcmJTZXROZXh0S2luZW1hdGljVHJhbnNsYXRpb24AogcqcmF3cmlnaWRib2R5c2V0X3JiU2V0TmV4dEtpbmVtYXRpY1JvdGF0aW9uAOoJNnJhd3JpZ2lkYm9keXNldF9yYlJlY29tcHV0ZU1hc3NQcm9wZXJ0aWVzRnJvbUNvbGxpZGVycwDxBiNyYXdyaWdpZGJvZHlzZXRfcmJTZXRBZGRpdGlvbmFsTWFzcwCjBy1yYXdyaWdpZGJvZHlzZXRfcmJTZXRBZGRpdGlvbmFsTWFzc1Byb3BlcnRpZXMArAMYcmF3cmlnaWRib2R5c2V0X3JiTGludmVsAIEGGHJhd3JpZ2lkYm9keXNldF9yYkFuZ3ZlbACCBiJyYXdyaWdpZGJvZHlzZXRfcmJMb2NrVHJhbnNsYXRpb25zAMcJKHJhd3JpZ2lkYm9keXNldF9yYlNldEVuYWJsZWRUcmFuc2xhdGlvbnMAngkfcmF3cmlnaWRib2R5c2V0X3JiTG9ja1JvdGF0aW9ucwDICSVyYXdyaWdpZGJvZHlzZXRfcmJTZXRFbmFibGVkUm90YXRpb25zAJ8JIHJhd3JpZ2lkYm9keXNldF9yYkRvbWluYW5jZUdyb3VwAJoHI3Jhd3JpZ2lkYm9keXNldF9yYlNldERvbWluYW5jZUdyb3VwAIsIG3Jhd3JpZ2lkYm9keXNldF9yYkVuYWJsZUNjZADyBxZyYXdyaWdpZGJvZHlzZXRfcmJNYXNzALYHGHJhd3JpZ2lkYm9keXNldF9yYldha2VVcACMCB5yYXdyaWdpZGJvZHlzZXRfcmJJc0NjZEVuYWJsZWQAtwcecmF3cmlnaWRib2R5c2V0X3JiTnVtQ29sbGlkZXJzAJ0HGnJhd3JpZ2lkYm9keXNldF9yYkNvbGxpZGVyAKsJGnJhd3JpZ2lkYm9keXNldF9yYkJvZHlUeXBlAIUHHXJhd3JpZ2lkYm9keXNldF9yYlNldEJvZHlUeXBlAIoHGXJhd3JpZ2lkYm9keXNldF9yYklzRml4ZWQAuAcdcmF3cmlnaWRib2R5c2V0X3JiSXNLaW5lbWF0aWMAuQcbcmF3cmlnaWRib2R5c2V0X3JiSXNEeW5hbWljALoHH3Jhd3JpZ2lkYm9keXNldF9yYkxpbmVhckRhbXBpbmcApAcgcmF3cmlnaWRib2R5c2V0X3JiQW5ndWxhckRhbXBpbmcApQcicmF3cmlnaWRib2R5c2V0X3JiU2V0TGluZWFyRGFtcGluZwCNCCNyYXdyaWdpZGJvZHlzZXRfcmJTZXRBbmd1bGFyRGFtcGluZwCOCB5yYXdyaWdpZGJvZHlzZXRfcmJHcmF2aXR5U2NhbGUAuwchcmF3cmlnaWRib2R5c2V0X3JiU2V0R3Jhdml0eVNjYWxlAOsHHXJhd3JpZ2lkYm9keXNldF9yYlJlc2V0Rm9yY2VzAPMHHnJhd3JpZ2lkYm9keXNldF9yYlJlc2V0VG9ycXVlcwD0BxpyYXdyaWdpZGJvZHlzZXRfcmJBZGRGb3JjZQDJBh5yYXdyaWdpZGJvZHlzZXRfcmJBcHBseUltcHVsc2UAygYbcmF3cmlnaWRib2R5c2V0X3JiQWRkVG9ycXVlAMsGJHJhd3JpZ2lkYm9keXNldF9yYkFwcGx5VG9ycXVlSW1wdWxzZQDMBiFyYXdyaWdpZGJvZHlzZXRfcmJBZGRGb3JjZUF0UG9pbnQAlAUlcmF3cmlnaWRib2R5c2V0X3JiQXBwbHlJbXB1bHNlQXRQb2ludACVBRpyYXdyaWdpZGJvZHlzZXRfcmJVc2VyRGF0YQC8Bx1yYXdyaWdpZGJvZHlzZXRfcmJTZXRVc2VyRGF0YQDdBxpfX3diZ19yYXdyaWdpZGJvZHlzZXRfZnJlZQCqBRNyYXdyaWdpZGJvZHlzZXRfbmV3AOwHH3Jhd3JpZ2lkYm9keXNldF9jcmVhdGVSaWdpZEJvZHkAugMWcmF3cmlnaWRib2R5c2V0X3JlbW92ZQD8BBNyYXdyaWdpZGJvZHlzZXRfbGVuALQJGHJhd3JpZ2lkYm9keXNldF9jb250YWlucwCPCCZyYXdyaWdpZGJvZHlzZXRfZm9yRWFjaFJpZ2lkQm9keUhhbmRsZQDtCBhfX3diZ19yYXdicm9hZHBoYXNlX2ZyZWUA3ggRcmF3YnJvYWRwaGFzZV9uZXcAoAkccmF3Y29sbGlkZXJzZXRfY29UcmFuc2xhdGlvbgCQBhlyYXdjb2xsaWRlcnNldF9jb1JvdGF0aW9uAIMGH3Jhd2NvbGxpZGVyc2V0X2NvU2V0VHJhbnNsYXRpb24ApgcocmF3Y29sbGlkZXJzZXRfY29TZXRUcmFuc2xhdGlvbldydFBhcmVudACnBxxyYXdjb2xsaWRlcnNldF9jb1NldFJvdGF0aW9uAOsJJXJhd2NvbGxpZGVyc2V0X2NvU2V0Um90YXRpb25XcnRQYXJlbnQA7AkZcmF3Y29sbGlkZXJzZXRfY29Jc1NlbnNvcgC9BxpyYXdjb2xsaWRlcnNldF9jb1NoYXBlVHlwZQChCRxyYXdjb2xsaWRlcnNldF9jb0hhbGZFeHRlbnRzAPgGF3Jhd2NvbGxpZGVyc2V0X2NvUmFkaXVzAPkHG3Jhd2NvbGxpZGVyc2V0X2NvSGFsZkhlaWdodAD6BxxyYXdjb2xsaWRlcnNldF9jb1JvdW5kUmFkaXVzAPsHGXJhd2NvbGxpZGVyc2V0X2NvVmVydGljZXMAqwYYcmF3Y29sbGlkZXJzZXRfY29JbmRpY2VzAKwGI3Jhd2NvbGxpZGVyc2V0X2NvSGVpZ2h0ZmllbGRIZWlnaHRzAK0GIXJhd2NvbGxpZGVyc2V0X2NvSGVpZ2h0ZmllbGRTY2FsZQD5BiFyYXdjb2xsaWRlcnNldF9jb0hlaWdodGZpZWxkTlJvd3MA/AchcmF3Y29sbGlkZXJzZXRfY29IZWlnaHRmaWVsZE5Db2xzAP0HF3Jhd2NvbGxpZGVyc2V0X2NvUGFyZW50AMEGGXJhd2NvbGxpZGVyc2V0X2NvRnJpY3Rpb24ArQcccmF3Y29sbGlkZXJzZXRfY29SZXN0aXR1dGlvbgCuBxhyYXdjb2xsaWRlcnNldF9jb0RlbnNpdHkAvgcVcmF3Y29sbGlkZXJzZXRfY29NYXNzAL8HF3Jhd2NvbGxpZGVyc2V0X2NvVm9sdW1lAMAHIHJhd2NvbGxpZGVyc2V0X2NvQ29sbGlzaW9uR3JvdXBzAIAHHXJhd2NvbGxpZGVyc2V0X2NvU29sdmVyR3JvdXBzAIEHHHJhd2NvbGxpZGVyc2V0X2NvQWN0aXZlSG9va3MAwQclcmF3Y29sbGlkZXJzZXRfY29BY3RpdmVDb2xsaXNpb25UeXBlcwCoBx1yYXdjb2xsaWRlcnNldF9jb0FjdGl2ZUV2ZW50cwDCBytyYXdjb2xsaWRlcnNldF9jb0NvbnRhY3RGb3JjZUV2ZW50VGhyZXNob2xkAMMHHnJhd2NvbGxpZGVyc2V0X2NvQ29udGFpbnNQb2ludADSBRpyYXdjb2xsaWRlcnNldF9jb0Nhc3RTaGFwZQD5Ah1yYXdjb2xsaWRlcnNldF9jb0Nhc3RDb2xsaWRlcgCkBCByYXdjb2xsaWRlcnNldF9jb0ludGVyc2VjdHNTaGFwZQC0Bh1yYXdjb2xsaWRlcnNldF9jb0NvbnRhY3RTaGFwZQCgBCByYXdjb2xsaWRlcnNldF9jb0NvbnRhY3RDb2xsaWRlcgC5BR1yYXdjb2xsaWRlcnNldF9jb1Byb2plY3RQb2ludADyBB5yYXdjb2xsaWRlcnNldF9jb0ludGVyc2VjdHNSYXkA9AYYcmF3Y29sbGlkZXJzZXRfY29DYXN0UmF5AOsGJHJhd2NvbGxpZGVyc2V0X2NvQ2FzdFJheUFuZEdldE5vcm1hbACJBRpyYXdjb2xsaWRlcnNldF9jb1NldFNlbnNvcgD1Bx9yYXdjb2xsaWRlcnNldF9jb1NldFJlc3RpdHV0aW9uAJAIHHJhd2NvbGxpZGVyc2V0X2NvU2V0RnJpY3Rpb24AkQgkcmF3Y29sbGlkZXJzZXRfY29GcmljdGlvbkNvbWJpbmVSdWxlAKkHJ3Jhd2NvbGxpZGVyc2V0X2NvU2V0RnJpY3Rpb25Db21iaW5lUnVsZQDXBydyYXdjb2xsaWRlcnNldF9jb1Jlc3RpdHV0aW9uQ29tYmluZVJ1bGUAqgcqcmF3Y29sbGlkZXJzZXRfY29TZXRSZXN0aXR1dGlvbkNvbWJpbmVSdWxlANgHI3Jhd2NvbGxpZGVyc2V0X2NvU2V0Q29sbGlzaW9uR3JvdXBzAJEHIHJhd2NvbGxpZGVyc2V0X2NvU2V0U29sdmVyR3JvdXBzAJIHH3Jhd2NvbGxpZGVyc2V0X2NvU2V0QWN0aXZlSG9va3MA2QcgcmF3Y29sbGlkZXJzZXRfY29TZXRBY3RpdmVFdmVudHMA2gcocmF3Y29sbGlkZXJzZXRfY29TZXRBY3RpdmVDb2xsaXNpb25UeXBlcwDbBxlyYXdjb2xsaWRlcnNldF9jb1NldFNoYXBlAL4GLnJhd2NvbGxpZGVyc2V0X2NvU2V0Q29udGFjdEZvcmNlRXZlbnRUaHJlc2hvbGQAkggbcmF3Y29sbGlkZXJzZXRfY29TZXREZW5zaXR5AJMIGHJhd2NvbGxpZGVyc2V0X2NvU2V0TWFzcwCUCCJyYXdjb2xsaWRlcnNldF9jb1NldE1hc3NQcm9wZXJ0aWVzAJQDGV9fd2JnX3Jhd2NvbGxpZGVyc2V0X2ZyZWUA+QQScmF3Y29sbGlkZXJzZXRfbmV3AIIHEnJhd2NvbGxpZGVyc2V0X2xlbgC0CRdyYXdjb2xsaWRlcnNldF9jb250YWlucwCVCB1yYXdjb2xsaWRlcnNldF9jcmVhdGVDb2xsaWRlcgD1AxVyYXdjb2xsaWRlcnNldF9yZW1vdmUAzwUkcmF3Y29sbGlkZXJzZXRfZm9yRWFjaENvbGxpZGVySGFuZGxlAO4IGl9fd2JnX3Jhd3NoYXBlY29udGFjdF9mcmVlALMKGHJhd3NoYXBlY29udGFjdF9kaXN0YW5jZQDFChZyYXdzaGFwZWNvbnRhY3RfcG9pbnQyAN4HF3Jhd3NoYXBlY29udGFjdF9ub3JtYWwxAN8HF3Jhd3NoYXBlY29udGFjdF9ub3JtYWwyAOAHGV9fd2JnX3Jhd25hcnJvd3BoYXNlX2ZyZWUA3wgScmF3bmFycm93cGhhc2VfbmV3AKIJHHJhd25hcnJvd3BoYXNlX2NvbnRhY3RzX3dpdGgAtQkbcmF3bmFycm93cGhhc2VfY29udGFjdF9wYWlyAL0GIXJhd25hcnJvd3BoYXNlX2ludGVyc2VjdGlvbnNfd2l0aAC2CSByYXduYXJyb3dwaGFzZV9pbnRlcnNlY3Rpb25fcGFpcgCGBx1fX3diZ19yYXdjb250YWN0bWFuaWZvbGRfZnJlZQCzChhyYXdjb250YWN0cGFpcl9jb2xsaWRlcjEAxAgYcmF3Y29udGFjdHBhaXJfY29sbGlkZXIyALYIInJhd2NvbnRhY3RwYWlyX251bUNvbnRhY3RNYW5pZm9sZHMAwAkecmF3Y29udGFjdHBhaXJfY29udGFjdE1hbmlmb2xkAMgHGXJhd2NvbnRhY3RtYW5pZm9sZF9ub3JtYWwAgwcbcmF3Y29udGFjdG1hbmlmb2xkX2xvY2FsX24xAIsHG3Jhd2NvbnRhY3RtYW5pZm9sZF9sb2NhbF9uMgCMBxxyYXdjb250YWN0bWFuaWZvbGRfc3Vic2hhcGUxANsJHHJhd2NvbnRhY3RtYW5pZm9sZF9zdWJzaGFwZTIA3AkfcmF3Y29udGFjdG1hbmlmb2xkX251bV9jb250YWN0cwDBCSNyYXdjb250YWN0bWFuaWZvbGRfY29udGFjdF9sb2NhbF9wMQDRBiNyYXdjb250YWN0bWFuaWZvbGRfY29udGFjdF9sb2NhbF9wMgDSBh9yYXdjb250YWN0bWFuaWZvbGRfY29udGFjdF9kaXN0APIIH3Jhd2NvbnRhY3RtYW5pZm9sZF9jb250YWN0X2ZpZDEA8wgfcmF3Y29udGFjdG1hbmlmb2xkX2NvbnRhY3RfZmlkMgD0CCJyYXdjb250YWN0bWFuaWZvbGRfY29udGFjdF9pbXB1bHNlAPUILHJhd2NvbnRhY3RtYW5pZm9sZF9jb250YWN0X3RhbmdlbnRfaW1wdWxzZV94APYILHJhd2NvbnRhY3RtYW5pZm9sZF9jb250YWN0X3RhbmdlbnRfaW1wdWxzZV95APcIJnJhd2NvbnRhY3RtYW5pZm9sZF9udW1fc29sdmVyX2NvbnRhY3RzAMIJJ3Jhd2NvbnRhY3RtYW5pZm9sZF9zb2x2ZXJfY29udGFjdF9wb2ludADCBiZyYXdjb250YWN0bWFuaWZvbGRfc29sdmVyX2NvbnRhY3RfZGlzdADICCpyYXdjb250YWN0bWFuaWZvbGRfc29sdmVyX2NvbnRhY3RfZnJpY3Rpb24AvwgtcmF3Y29udGFjdG1hbmlmb2xkX3NvbHZlcl9jb250YWN0X3Jlc3RpdHV0aW9uAMAIMnJhd2NvbnRhY3RtYW5pZm9sZF9zb2x2ZXJfY29udGFjdF90YW5nZW50X3ZlbG9jaXR5AM0GHV9fd2JnX3Jhd3BvaW50cHJvamVjdGlvbl9mcmVlALMKGHJhd3BvaW50cHJvamVjdGlvbl9wb2ludAD2BxtyYXdwb2ludHByb2plY3Rpb25faXNJbnNpZGUAxgolX193YmdfcmF3cG9pbnRjb2xsaWRlcnByb2plY3Rpb25fZnJlZQCzCiByYXdwb2ludGNvbGxpZGVycHJvamVjdGlvbl9wb2ludADhByNyYXdwb2ludGNvbGxpZGVycHJvamVjdGlvbl9pc0luc2lkZQDHCiZyYXdwb2ludGNvbGxpZGVycHJvamVjdGlvbl9mZWF0dXJlVHlwZQDICiRyYXdwb2ludGNvbGxpZGVycHJvamVjdGlvbl9mZWF0dXJlSWQArAkdX193YmdfcmF3cmF5aW50ZXJzZWN0aW9uX2ZyZWUAswoZcmF3cmF5aW50ZXJzZWN0aW9uX25vcm1hbADiBx5yYXdyYXlpbnRlcnNlY3Rpb25fZmVhdHVyZVR5cGUAyQoccmF3cmF5aW50ZXJzZWN0aW9uX2ZlYXR1cmVJZACtCSFyYXdyYXljb2xsaWRlcmludGVyc2VjdGlvbl9ub3JtYWwA3gcecmF3cmF5Y29sbGlkZXJpbnRlcnNlY3Rpb25fdG9pALwKHF9fd2JnX3Jhd3JheWNvbGxpZGVydG9pX2ZyZWUAswoTX193YmdfcmF3c2hhcGVfZnJlZQCBCQ9yYXdzaGFwZV9jdWJvaWQAhAkUcmF3c2hhcGVfcm91bmRDdWJvaWQAggkNcmF3c2hhcGVfYmFsbACOCRByYXdzaGFwZV9jYXBzdWxlAK8HEXJhd3NoYXBlX2N5bGluZGVyAIkJFnJhd3NoYXBlX3JvdW5kQ3lsaW5kZXIAhQkNcmF3c2hhcGVfY29uZQCKCRJyYXdzaGFwZV9yb3VuZENvbmUAhgkRcmF3c2hhcGVfcG9seWxpbmUA7QcQcmF3c2hhcGVfdHJpbWVzaADuBxRyYXdzaGFwZV9oZWlnaHRmaWVsZADWBRByYXdzaGFwZV9zZWdtZW50AMMFEXJhd3NoYXBlX3RyaWFuZ2xlAN4EFnJhd3NoYXBlX3JvdW5kVHJpYW5nbGUA2wQTcmF3c2hhcGVfY29udmV4SHVsbACbCBhyYXdzaGFwZV9yb3VuZENvbnZleEh1bGwAlggTcmF3c2hhcGVfY29udmV4TWVzaACrBxhyYXdzaGFwZV9yb3VuZENvbnZleE1lc2gAngcScmF3c2hhcGVfY2FzdFNoYXBlAKsBGHJhd3NoYXBlX2ludGVyc2VjdHNTaGFwZQCiAxVyYXdzaGFwZV9jb250YWN0U2hhcGUA1AEWcmF3c2hhcGVfY29udGFpbnNQb2ludADuBBVyYXdzaGFwZV9wcm9qZWN0UG9pbnQAngQWcmF3c2hhcGVfaW50ZXJzZWN0c1JheQCJBBByYXdzaGFwZV9jYXN0UmF5AO8DHHJhd3NoYXBlX2Nhc3RSYXlBbmRHZXROb3JtYWwA2AIWX193YmdfcmF3c2hhcGV0b2lfZnJlZQCzChRyYXdzaGFwZXRvaV93aXRuZXNzMgDjBxNyYXdzaGFwZXRvaV9ub3JtYWwxAOQHE3Jhd3NoYXBldG9pX25vcm1hbDIA5QceX193YmdfcmF3c2hhcGVjb2xsaWRlcnRvaV9mcmVlALMKHHJhd3NoYXBlY29sbGlkZXJ0b2lfd2l0bmVzczIA3wcbcmF3c2hhcGVjb2xsaWRlcnRvaV9ub3JtYWwxAOAHG3Jhd3NoYXBlY29sbGlkZXJ0b2lfbm9ybWFsMgDmBw9yYXdyb3RhdGlvbl9uZXcA+AkUcmF3cm90YXRpb25faWRlbnRpdHkAnAoNcmF3cm90YXRpb25feQDKCg1yYXdyb3RhdGlvbl93AMsKDnJhd3ZlY3Rvcl96ZXJvAMwKDXJhd3ZlY3Rvcl9uZXcAiQoPcmF3dmVjdG9yX3NldF95ALAKDXJhd3ZlY3Rvcl94eXoAqAgNcmF3dmVjdG9yX3l4egCpCA1yYXd2ZWN0b3Jfenh5AKoIDXJhd3ZlY3Rvcl94enkAqwgNcmF3dmVjdG9yX3l6eACsCA1yYXd2ZWN0b3Jfenl4AK0IIV9fd2JnX3Jhd2RlYnVncmVuZGVycGlwZWxpbmVfZnJlZQDyAxpyYXdkZWJ1Z3JlbmRlcnBpcGVsaW5lX25ldwCXCB9yYXdkZWJ1Z3JlbmRlcnBpcGVsaW5lX3ZlcnRpY2VzAJ8IHXJhd2RlYnVncmVuZGVycGlwZWxpbmVfY29sb3JzAKAIHXJhd2RlYnVncmVuZGVycGlwZWxpbmVfcmVuZGVyAIsFGF9fd2JnX3Jhd2V2ZW50cXVldWVfZnJlZQBrH19fd2JnX3Jhd2NvbnRhY3Rmb3JjZWV2ZW50X2ZyZWUAswoecmF3Y29udGFjdGZvcmNlZXZlbnRfY29sbGlkZXIxAMUIHnJhd2NvbnRhY3Rmb3JjZWV2ZW50X2NvbGxpZGVyMgC3CCByYXdjb250YWN0Zm9yY2VldmVudF90b3RhbF9mb3JjZQDjBypyYXdjb250YWN0Zm9yY2VldmVudF90b3RhbF9mb3JjZV9tYWduaXR1ZGUAzQoocmF3Y29udGFjdGZvcmNlZXZlbnRfbWF4X2ZvcmNlX2RpcmVjdGlvbgDnByhyYXdjb250YWN0Zm9yY2VldmVudF9tYXhfZm9yY2VfbWFnbml0dWRlAM4KEXJhd2V2ZW50cXVldWVfbmV3ANUHInJhd2V2ZW50cXVldWVfZHJhaW5Db2xsaXNpb25FdmVudHMAlgklcmF3ZXZlbnRxdWV1ZV9kcmFpbkNvbnRhY3RGb3JjZUV2ZW50cwCXCRNyYXdldmVudHF1ZXVlX2NsZWFyAK4IHV9fd2JnX3Jhd3BoeXNpY3NwaXBlbGluZV9mcmVlAJcBFnJhd3BoeXNpY3NwaXBlbGluZV9uZXcA4AgXcmF3cGh5c2ljc3BpcGVsaW5lX3N0ZXAAoQQhcmF3cGh5c2ljc3BpcGVsaW5lX3N0ZXBXaXRoRXZlbnRzAIQEG19fd2JnX3Jhd3F1ZXJ5cGlwZWxpbmVfZnJlZQC9CBRyYXdxdWVyeXBpcGVsaW5lX25ldwC9CRdyYXdxdWVyeXBpcGVsaW5lX3VwZGF0ZQDWBhhyYXdxdWVyeXBpcGVsaW5lX2Nhc3RSYXkAlgQkcmF3cXVlcnlwaXBlbGluZV9jYXN0UmF5QW5kR2V0Tm9ybWFsAPsDJXJhd3F1ZXJ5cGlwZWxpbmVfaW50ZXJzZWN0aW9uc1dpdGhSYXkA4AQmcmF3cXVlcnlwaXBlbGluZV9pbnRlcnNlY3Rpb25XaXRoU2hhcGUAnwQdcmF3cXVlcnlwaXBlbGluZV9wcm9qZWN0UG9pbnQArQQqcmF3cXVlcnlwaXBlbGluZV9wcm9qZWN0UG9pbnRBbmRHZXRGZWF0dXJlALEEJ3Jhd3F1ZXJ5cGlwZWxpbmVfaW50ZXJzZWN0aW9uc1dpdGhQb2ludACWBRpyYXdxdWVyeXBpcGVsaW5lX2Nhc3RTaGFwZQC5AidyYXdxdWVyeXBpcGVsaW5lX2ludGVyc2VjdGlvbnNXaXRoU2hhcGUAtQQycmF3cXVlcnlwaXBlbGluZV9jb2xsaWRlcnNXaXRoQWFiYkludGVyc2VjdGluZ0FhYmIA1wYfX193YmdfcmF3ZGVzZXJpYWxpemVkd29ybGRfZnJlZQDGBSByYXdkZXNlcmlhbGl6ZWR3b3JsZF90YWtlR3Jhdml0eQCOBy5yYXdkZXNlcmlhbGl6ZWR3b3JsZF90YWtlSW50ZWdyYXRpb25QYXJhbWV0ZXJzAKIEJnJhd2Rlc2VyaWFsaXplZHdvcmxkX3Rha2VJc2xhbmRNYW5hZ2VyALgEI3Jhd2Rlc2VyaWFsaXplZHdvcmxkX3Rha2VCcm9hZFBoYXNlAJ8HJHJhd2Rlc2VyaWFsaXplZHdvcmxkX3Rha2VOYXJyb3dQaGFzZQC5BB9yYXdkZXNlcmlhbGl6ZWR3b3JsZF90YWtlQm9kaWVzAJkFInJhd2Rlc2VyaWFsaXplZHdvcmxkX3Rha2VDb2xsaWRlcnMA+gQmcmF3ZGVzZXJpYWxpemVkd29ybGRfdGFrZUltcHVsc2VKb2ludHMA8AMocmF3ZGVzZXJpYWxpemVkd29ybGRfdGFrZU11bHRpYm9keUpvaW50cwCHBCVyYXdzZXJpYWxpemF0aW9ucGlwZWxpbmVfc2VyaWFsaXplQWxsAPMCJ3Jhd3NlcmlhbGl6YXRpb25waXBlbGluZV9kZXNlcmlhbGl6ZUFsbAD6BhlfX3diZ19yYXdjb250YWN0cGFpcl9mcmVlALMKJV9fd2JnX3Jhd3JheWNvbGxpZGVyaW50ZXJzZWN0aW9uX2ZyZWUAswoWX193YmdfcmF3cm90YXRpb25fZnJlZQCzChRfX3diZ19yYXd2ZWN0b3JfZnJlZQCzChxyYXdzZXJpYWxpemF0aW9ucGlwZWxpbmVfbmV3AOMKJnJhd3JheWNvbGxpZGVyaW50ZXJzZWN0aW9uX2ZlYXR1cmVUeXBlAMgKFnJhd3JheWludGVyc2VjdGlvbl90b2kA2goPcmF3c2hhcGV0b2lfdG9pANoKDXJhd3JvdGF0aW9uX3gA2goNcmF3cm90YXRpb25fegC8CgtyYXd2ZWN0b3JfeADaCgtyYXd2ZWN0b3JfeQDKCgtyYXd2ZWN0b3JfegC8ChxyYXdjb2xsaWRlcnNldF9pc0hhbmRsZVZhbGlkAJUID3Jhd3ZlY3Rvcl9zZXRfeADECg9yYXd2ZWN0b3Jfc2V0X3oAqAojX193YmdfcmF3c2VyaWFsaXphdGlvbnBpcGVsaW5lX2ZyZWUAswoWcmF3c2hhcGVjb250YWN0X3BvaW50MQD2BxRyYXdzaGFwZXRvaV93aXRuZXNzMQDiBxVyYXdyYXljb2xsaWRlcnRvaV90b2kAvAoXcmF3c2hhcGVjb2xsaWRlcnRvaV90b2kAvAoccmF3c2hhcGVjb2xsaWRlcnRvaV93aXRuZXNzMQDeByRyYXdyYXljb2xsaWRlcmludGVyc2VjdGlvbl9mZWF0dXJlSWQArAkpcmF3cmF5Y29sbGlkZXJpbnRlcnNlY3Rpb25fY29sbGlkZXJIYW5kbGUAxQggcmF3cmF5Y29sbGlkZXJ0b2lfY29sbGlkZXJIYW5kbGUAxQgicmF3c2hhcGVjb2xsaWRlcnRvaV9jb2xsaWRlckhhbmRsZQDFCClyYXdwb2ludGNvbGxpZGVycHJvamVjdGlvbl9jb2xsaWRlckhh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Bl4NFiAIQdADaiACIAkgARDXASAIKgLQAyIkIAZeDRYCQCAiICNdICMgJF5xRQRAICIgJF0NASAIQeACaiIAQQhqKgIAISIgAEEMaioCACEnIAgqAuQCISMMEQsgAUEMaioCACIlIAgqApwDIiYgAUEEaioCACIjlCAIQZgDaiIAQQhqKgIAIiggASoCACIilJMiJCAkkiIqlCAiICIgAEEMaioCACInlCAmIAFBCGoqAgAiJJSTIisgK5IiK5QgIyAoICSUICcgI5STIikgKZIiKZSTkiAnkyEnICUgK5QgJCAplCAiICqUk5IgKJMhIiAlICmUICMgKpQgJCArlJOSICaTISMMEAsgCEHQA2oiAEEMaioCACEnIABBCGoqAgAhIiAIKgLUAyEjDA8LIAANAUEAIQAgAiADEMsJIQIgBCAFEMsJIQMgAkUNFyADRQ0XIAMqAgAhJCACKgIAIScgBiABKgIQIiUgJZQgAUEUaioCACImICaUkiABQRhqKgIAIiggKJSSQwAAAACSEIgBIgYgJ5MgJJMiKl5FDRUgJCABKgIMIisgBkMAAAAAWwR9QwAAgD8FICggBpUhIyAlIAaVISIgJiAGlQsiBiABKgIAIiWUICIgAUEEaioCACImlJMiKCAokiIplCAmICMgJpQgBiABQQhqKgIAIiiUkyIsICySIiyUICUgIiAolCAjICWUkyItIC2SIi2Uk5IgI5MiMJQhLiAkICsgLZQgJSAplCAoICyUk5IgBpMiL5QhJSAkICsgLJQgKCAtlCAmICmUk5IgIpMiK5QhJCAnICOUISYgJyAGlCEoICcgIpQhJwJAIAdBCGooAgBFBEBBACECIAdBBGooAgBFBEAgB0EAEOQFIAdBCGooAgAhAgsgB0EIaiACQQFqNgIAIAcoAgAgAkEwbGoiAUIANwIcIAEgKjgCGCABICQ4AgwgASAmOAIIIAEgKDgCBCABICc4AgAgAUEUaiAuOAIAIAFBEGogJTgCACABQSRqQgA3AgAgAUEsakEANgIADAELIAcoAgAiAUIANwIcIAEgJDgCDCABICY4AgggASAoOAIEIAEgJzgCACABICo4AhggAUEUaiAuOAIAIAFBEGogJTgCAAsgByArOAIYIAcgIjgCDCAHQSBqIDA4AgAgB0EcaiAvOAIAIAdBFGogIzgCACAHQRBq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NwIAIABBEGogCykDADcCACAAQRhqIAopAwA3AgAgAEEgaiAJKAIANgIAIAggBEEBajYCuAIgAyAFRw0ACwwFCyAIQQhqIgJBCGoiACABQQhqKQIANwMAIAJBGGoiAyABQRhqKAIANgIAIAAgACoCACIijDgCACAIIAEpAhA3AxggCCABKQIANwMIICIgCCoCGCImlCAIKgIIIiMgAyoCACIolJMiJCAkkiEnICMgCEEcaiIAKgIAIiqUIAgqAgwiJCAmlJMiJSAlkiElIAAgCCoCFCIrICeUICMgJZQgIiAkICiUICIgKpSTIikgKZIiKZSTkiAqkzgCACADICsgJZQgJCAplCAjICeUk5IgKJM4AgAgCCAjjDgCCCAIICSMOAIMIAggKyAplCAiICeUICQgJZSTkiAmkzgCGEEAIQAgASACIAkgCiAGIAdBABAzDBALQfDWwABBK0HgycAAEMQJAAsgCEHIAWogAiADKAKwAREAACAIKALIASIDRQ0AIAhB0AFqKgIAISwgCCgCzAEhCSAIQQhqIgJBCGoiACABQQhqKQIANwMAIAJBGGoiAiABQRhqKAIANgIAIAAgACoCACIijDgCACAIIAEpAhA3AxggCCABKQIANwMIICIgCCoCGCImlCAIKgIIIiMgAioCACIolJMiJCAkkiEnICMgCEEcaiIAKgIAIiqUIAgqAgwiJCAmlJMiJSAlkiElIAAgCCoCFCIrICeUICMgJZQgIiAkICiUICIgKpSTIikgKZIiKZSTkiAqkzgCACACICsgJZQgJCAplCAjICeUk5IgKJM4AgAgCCAjjDgCCCAIICSMOAIMIAggKyAplCAiICeUICQgJZSTkiAmkzgCGCAEIAUQzQkiAEUNASAIQQhqIAAgAyAJICwgBiAHQQEQiwFBACEADA4LQQEhAAwNC0Hw1sAAQStB8MnAABDECQALAkAgCEEIaigCvAFFBEBDAACAPyEoQwAAAAAhKkMAAAAAISJDAAAAACEGQwAAAAAhI0MAAAAAISdDAAAAACEkQwAAAAAhJUMAAAAAISYMAQsCQAJ9AkACQAJAAkACQAJAAkACQAJAAkAgCEEIaigCvAFBA0YEQCAIKAK4AiIDQQFNDQIgA0ECRg0DIANBA00NBCAIKAKwAiIAKgIEIQYgACoCSCAAKgIAIiOTISQgAEEoaioC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ACAFNgIMIAAgDzYCCCAAIAY2AgQgACAINgIAIABBFGogAzYCACAAQRBqIAc2AgACQCAEKAI8IgBFDQAgAEECdEUNACAEKAI4ELEBCwJAIAQoAiwiAEUNACAAQQN0RQ0AIAQoAigQsQELAkAgBCgCHCIARQ0AIABBAnRFDQAgBCgCGBCxAQsgBCgCDCIARQ0AIACtQgx+p0UNACAEKAIIELEBCyAEQfACaiQADwsgBSACQeyTwwAQzAgAC0EYQQRB7OrDACgCACIAQZgHIAAbEQAAAAsgBSADQezqwwAoAgAiAEGYByAAGxEAAAALzXsDH38KfgF9IwBBoARrIgIkAAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAn8CQCABKAIEIgZBBE8EQCABIAZBBGsiBzYCBCABIAEoAgAiA0EEajYCACADKAAAIgwOEwMEBQYHCBgXFhUUExIREA8ODQwBCyACQoHKADcDwAIgAkHAAmoQtAoMAQsgAkEBOgDAAiACIAytNwPIAiACQcACakHEisAAQZyEwAAQuwgLIQEgAEEBNgIAIAAgATYCBAwiCyAHQQRPBEAgASAGQQhrNgIEIAEgA0EIajYCACAAQQhqIAMoAAQ2AgAgAEEANgIEIABBADYCAAwiCyACQoHKADcDwAIgACACQcACahC0CjYCBCAAQQE2AgAMIQsgAkHAAmogARCjBCACKALEAiEBIAIoAsACRQRAIABBDGogAkHIAmopAwA3AgAgAEEIaiABNgIAIABBATYCBCAAQQA2AgAMIQsgACABNgIEIABBATYCAAwgCyACQcACaiABEKMEIAACfyACKALEAiIEIAIoAsACDQAaIAJByAJqIggpAwAhISACQcACaiABEKMEIAIoAsQCIgMgAigCwAINABogASgCBCIFQQNLDQYgAkKBygA3A8ACIAJBwAJqELQKCzYCBCAAQQE2AgAMHwsgAkHAAmogARCjBCACKALEAiEEIAAhAyACKALAAgRAIAQhAAUgAkHAAmoiAEEIaiIIKQMAISEgACABEKMEIAIoAsQCIQAgAigCwAJFDQQLIAMgADYCBCADQQE2AgAMHgsgAkHAAmogARCjBCAAIQMgAigCxAIiBCEA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aiAFNgIAIANBDGogITcCACADQQhqIAQ2AgAgA0EENgIEIANBADYCAAwbCyADQRhqIAgpAwA3AgAgA0EUaiAANgIAIANBDGogITcCACADQQhqIAQ2AgAgA0EDNgIEIANBADYCAAwaCyAIKQMAISIgASAFQQRrNgIEIAEgASgCACIBQQRqNgIAIABBIGogASoAADgCACAAQRhqICI3AgAgAEEUaiADNgIAIABBDGogITcCACAAQQhqIAQ2AgAgAEECNgIEIABBADYCAAwZCyAHQQRPBEAgASAGQQhrNgIEIAEgA0EIajYCACAAQQhqIAMoAAQ2AgAgAEESNgIEIABBADYCAAwZCyACQoHKADcDwAIgACACQcACahC0CjYCBCAAQQE2AgAMGAsgAkHAAmogARBXIAAhAyACKALEAiIEIQACQAJAIAIoAsACDQAgBEUEQEEAQfyNwABBnITAABCcCCEADAELIAJBnANqKAIAIQggAkGYA2ooAgAhDiACQZADaigCACEFIAJBjANqKAIAIQ0gAkGEA2ooAgAhBiACQYADaigCACERIAJB+AJqKAIAIQcgAkH0AmooAgAhDyACQewCaigCACELIAJB6AJqKAIAIRAgAkHgAmooAgAhDCACQdwCaigCACETIAJB1AJqKAIAIQkgAkHQAmooAgAhFCACQcgCaigCACEKIAEoAgQiAEEDSw0BIAJCgcoANwPAAiACQcACahC0CiEAAkAgCkUNACAKrUIMfqdFDQAgBBCxAQsCQCAJRQ0AIAlBA3RFDQAgFBCxAQsCQCAMRQ0AIAytQhR+p0UNACATELEBCwJAIAtFDQAgC0EFdEUNACAQELEBCwJAIAdFDQAgB0ECdEUNACAPELEBCwJAIAZFDQAgBkECdEUNACARELEBCwJAIAVFDQAgBUECdEUNACANELEBCwJAIAhFDQAgCEECdEUNACAOELEBCwsgAyAANgIEIANBATYCAAwYCyACQaADaigCACESIAJBlANqKAIAIRUgAkGIA2ooAgAhGCACQfwCaigCACEWIAJB8AJqKAIAIRkgAkHkAmooAgAhGiACQdgCaigCACEbIAJBzAJqKAIAIRcgASAAQQRrNgIEIAEgASgCACIAQQRqNgIAIANB6ABqIAAqAAA4AgAgA0HkAGogEjYCACADQeAAaiAINgIAIANB3ABqIA42AgAgA0HYAGogFTYCACADQdQAaiAFNgIAIANB0ABqIA02AgAgA0HMAGogGDYCACADQcgAaiAGNgIAIANBxABqIBE2AgAgA0FAayAWNgIAIANBPGogBzYCACADQThqIA82AgAgA0E0aiAZNgIAIANBMGogCzYCACADQSxqIBA2AgAgA0EoaiAaNgIAIANBJGogDDYCACADQSBqIBM2AgAgA0EcaiAbNgIAIANBGGogCTYCACADQRRqIBQ2AgAgA0EQaiAXNgIAIANBDGogCjYCACADQQhqIAQ2AgAgA0ERNgIEIANBADYCAAwXCwJAIAACfyAHQQNNBEAgAkKBygA3A8ACIAJBwAJqELQKDAELIAEgBkEIayIENgIEIAEgA0EIajYCACAEQQNNBEAgAkKBygA3A8ACIAJBwAJqELQKDAELIAMoAAQhBCABIAZBDGsiCDYCBCABIANBDGo2AgAgCEEDSw0BIAJCgcoANwPAAiACQcACahC0Cgs2AgQgAEEBNgIADBcLIAMqAAghKyABIAZBEGs2AgQgASADQRBqNgIAIABBEGogAyoADDgCACAAQQxqICs4AgAgAEEIaiAENgIAIABBEDYCBCAAQQA2AgAMFgsCQCAAAn8gB0EDTQRAIAJCgcoANwPAAiACQcACahC0CgwBCyABIAZBCGsiBDYCBCABIANBCGo2AgAgBEEDTQRAIAJCgcoANwPAAiACQcACahC0CgwBCyADKAAEIQQgASAGQQxrIgg2AgQgASADQQxqNgIAIAhBA0sNASACQoHKADcDwAIgAkHAAmoQtAoLNgIEIABBATYCAAwWCyADKgAIISsgASAGQRBrNgIEIAEgA0EQajYCACAAQRBqIAMqAAw4AgAgAEEMaiArOAIAIABBCGogBDYCACAAQQ82AgQgAEEANgIADBULIAJBwAJqIAEQowQCQCAAAn8gAigCxAIiBCACKALAAg0AGiACQcgCaiIIKQMAISEgAkHAAmogARCjBCACKALEAiIFIAIoAsACDQAaIAgpAwAhIiACQcACaiABEKMEIAIoAsQCIgMgAigCwAINABogASgCBCIIQQNLDQEgAkKBygA3A8ACIAJBwAJqELQKCzYCBCAAQQE2AgAMFQsgAkHIAmopAwAhIyABIAhBBGs2AgQgASABKAIAIgFBBGo2AgAgAEEsaiABKgAAOAIAIABBJGogIzcCACAAQSBqIAM2AgAgAEEYaiAiNwIAIABBFGogBTYCACAAQQxqICE3AgAgAEEIaiAENgIAIABBDjYCBCAAQQA2AgAMFAsgAkHAAmogARCjBCACKALEAiEDAkAgACACKALAAgR/IAMFIAEoAgQiBEEDSw0BIAJCgcoANwPAAiACQcACahC0Cgs2AgQgAEEBNgIADBQLIAJByAJqKQMAISEgASAEQQRrNgIEIAEgASgCACIBQQRqNgIAIABBFGogASoAADgCACAAQQxqICE3AgAgAEEIaiADNgIAIABBDTYCBCAAQQA2AgAMEwsCQCAAAn8gB0EDTQRAIAJCgcoANwPAAiACQcACahC0CgwBCyABIAZBCGsiBDYCBCABIANBCGo2AgAgBEEDSw0BIAJCgcoANwPAAiACQcACahC0Cgs2AgQgAEEBNgIADBMLIAMqAAQhKyABIAZBDGs2AgQgASADQQxqNgIAIABBDGogAyoACDgCACAAQQhqICs4AgAgAEEMNgIEIABBADYCAAwSCwJAIAACfyAHQQNNBEAgAkKBygA3A8ACIAJBwAJqELQKDAELIAEgBkEIayIENgIEIAEgA0EIajYCACAEQQNLDQEgAkKBygA3A8ACIAJBwAJqELQKCzYCBCAAQQE2AgAMEgsgAyoABCErIAEgBkEMazYCBCABIANBDGo2AgAgAEEMaiADKgAIOAIAIABBCGogKzgCACAAQQs2AgQgAEEANgIADBELIAJBwAJqIAEQVyACKALAAkUEQCAAQQo2AgQgAEEIaiACQcACakEEckHgABD/CxogAEEANgIADBELIAAgAigCxAI2AgQgAEEBNgIADBALIAIgATYCGCACQQM2AhwCQCAHQQdNBEAgAkKBygA3A8ACIAJBwAJqELQKIQMMAQsgASAGQQxrNgIEIAEgA0EMajYCACACQfAAaiADKQAEEPsFIAIoAnAEQCACKAJ0IQMMAQsCQAJAAkACQCACKAJ0IgxBgCAgDEGAIEkbIgNFBEBBBCEODAELIANBJGwiBEEEEJQLIg5FDQELIAJBADYCOCACIAM2AjQgAiAONgIwIAxFDQIgAkHwAGpBBHIhBSACQcgCaiEEA0ACQCACQcACaiABEJIFIAIoAsQCIgYhAyACKALAAg0AIAJB2ABqIgNBEGoiByAE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QCACQQE6AMACIAIgIzcDyAIgAkHAAmogAkGYBGpB/IHAABC7CCEBDAoLICGnIQQgI6ciCyAipyIJbCIBICFCIIinIgVGDQEgAkHUAmpBAjYCACACQfwAakEBNgIAIAIgATYCGCACQgI3AsQCIAJB3LjAADYCwAIgAkEBNgJ0IAIgBTYCICACIAJB8ABqIgE2AtACIAIgAkEgajYCeCACIAJBGGo2AnAgAkHYAGoiAyACQcACahCFAyABIAMQ5wggAkHLAmogAUEIaigCADYAACACIAIpA3A3AMMCQRBBBBCUCyIBRQ0cIAFBCDoAACABIAIpAMACNwABIAFBCGogAkHHAmopAAA3AAAgAigCXARAIAIoAlgQsQELIARFDQogDBCxAQwKC0EBQZySwABBnITAABCcCCEBDAkLIAIoAjQiB0UNBCACQcACaiACKAIwIgMQowQgAigCxAIiCiEBIAIoAsACDQYCQCAHQQFHBEAgAkHIAmopAwAhIiACQcACaiADEKMEIAIoAsQCIg4hASACKALAAg0IIAJByAJqIg0pAwAhIyACQcACaiADEKMEIAIoAsQCIQEgAigCwAJFDQEMCAtBA0GcksAAQZyEwAAQnAghAQwHCwJAIAdBAkcEQCADKAIEIgdBCEkNByANKQMAISQgAyAHQQhrNgIEIAMgAygCACIDQQhqNgIAIAMpAAAiIUKAgICAEFQNASACQQE6AMACIAIgITcDyAIgAkHAAmogAkGYBGpB/IHAABC7CCEBDAgLQQRBnJLAAEGchMAAEJwIIQEMBwsgAEEQaiACKQNANwIAIABBGGogAkHIAGooAgA2AgAgAEHUAGogIT4CACAAQcwAaiAkNwIAIABByABqIAE2AgAgAEFAayAjNwIAIABBPGogDjYCACAAQTRqICI3AgAgAEEwaiAKNgIAIABBLGogCzYCACAAQShqIAk2AgAgAEEkaiAFNgIAIABBIGogBDYCACAAQRxqIAw2AgAgAEEMaiAINgIAIABBCGogBjYCACAAQQg2AgQgAEEANgIADBgLIAIoAsQCIQEMCAsgBUEBQezqwwAoAgAiAEGYByAAGxEAAAALIAJCgcoANwPAAiACQcACahC0CiEBDAQLIAJCgcoANwPAAiACQcACahC0CiEBDAMLQQJBnJLAAEGchMAAEJwIIQEMAQsgAkKB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GyAflSIaIBqUIB0gH5UiGyAblEMAAAAAkpJDAAAAAJIQiAEiHUMAAAAAXARAICcgGyAdlZQhHCAnIBogHZWUIR4LICogIJggJCAglJIhHSAkIBqUIB6SIRogJCAblCAckiEbIAQoAsQBIANGBEAgBEHAAWogAxDzBSAEKALIASEDIAQoAsABIQELIAEgA0EkbGoiASAmOAIYIAEgGzgCDCABIBogIZM4AgggASAdICOTOAIEIAEgGyAmkzgCACABQSBqICE4AgAgAUEcaiAjOAIAIAFBFGogGjgCACABQRBqIB04AgAgBCADQQFqIgU2AsgBIAQoAsABIQELIARBAjYCkAMgBEKAgICAEDcCiAMgBEEBNgLIAyAEQoGAgIAQNwLAAyAEQfgDaiIDIAEgBSAEQYgDaiIFIARBwANqIgEQ/wIgBUEwaiIKIANBMGoiBigCADYCACAFQShqIANBKGoiBykDADcDACAFQSBqIANBIGoiCSkDADcDACAFQRhqIgggA0EYaiIOKQMANwMAIAVBEGogA0EQaiIMKQMANwMAIAVBCGoiCyADQQhqIgUpAwA3AwAgBCAEKQP4AzcDiAMgBCgCyAEhDSAEKALAASERIARBATYCyAIgBEKAgICAIDcCwAIgBEEANgLIAyAEQgA3AsADIAMgESANIARBwAJqIAEQ/wIgAUEwaiAGKAIANgIAIAFBKGogBykDADcDACABQSBqIAkpAwA3AwAgAUEYaiAOKQMANwMAIAFBEGogDCkDADcDACABQQhqIAUpAwA3AwAgBCAEKQP4AzcDwAMgBEHMAWohByAEKALUASIDIAQoAtABIgVGBEAgByADEPYFIAQoAtABIQUgBCgC1AEhAwsgBCgCzAEiBiADQTRsaiIBIAQpA4gDNwIAIAFBKGogBEGIA2oiCUEoaikDADcCACABQSBqIAlBIGopAwA3AgAgAUEYaiAIKQMANwIAIAFBEGogCUEQaikDADcCACABQQhqIAspAwA3AgAgAUEwaiAKKAIANgIAIAQgA0EBaiIDNgLUASADIAVGBEAgByAFEPYFIAQoAswBIQYgBCgC1AEhAwsgBiADQTRsaiIBIAQpA8ADNwIAIAFBKGogBEHAA2oiBUEoaikDADcCACABQSBqIAVBIGopAwA3AgAgAUEYaiAFQRhqKQMANwIAIAFBEGog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kjgCUCASIE0gT5QgSyBMlCBOIFGUIEogUJSTkpI4AkwgEiBLIFCUIE4gT5QgSiBMlJKSIE0gUZSTOAJIIEogASoCTCJRlCBLIAEqAkgiUJSTIkwgTJIhTCBNIFCUIEogASoCUCJSlJMiTyBPkiFPIBIgEioCQCBSIE4gTJQgSiBPlCBLIEsgUpQgTSBRlJMiUiBSkiJSlJOSkpI4AmAgEiASKgI8IFEgTiBPlCBNIFKUIEogTJSTkpKSOAJcIBIgEioCOCBQIE4gUpQgSyBMlCBNIE+Uk5KSkjgCWCASIAFBGGoiD0EEaigCACIRNgIEIBIgDygCACARKAIIQQdqQXhxajYCACASQegAaiIPIBIoAgAgAUHUAGogEkHIAGogEigCBCgCuAERAQAgEiAxNgKYASASIAY2ApABIBIgBTYCjAEgEiAHNgKIASASIBg2AoABIBIgEkEkajYCnAEgEiASQQhqNgKEASASIAo2ApQBIBJBoAJqIgFBEGogD0EQaikDADcDACABQQhqIA9BCGopAwA3AwAgEiASKQNoNwOgAiASQaABaiABEMcFIBIgEkGAAWo2AoACIBJBADYCmAIgEkIENwOQAgJAIC4oAgAiIUUNACASQZACakEAEIYGIBIoApACIhwgEigCmAIiAUECdGpBADYCACABIAFBAWoiFksNACAKKAJEISYgCigCPCEZIAooAiAhLwNAIBIgFkEBayIWNgKYAgJAIBwgFkECdGooAgAiASAhSQRAIBJBoAJqIC8gAUEHdGpBgAEQ/wsaIBItAJgDRQRAIBJBoANqIBJBoAJqIBJBoAFqENECIBItAKMDISQgEi0AogMhKCASLQChAyEpIBItAKADISMMAgsgEigCjAMhASASKAKAAyEPIBIoAoQDIREgEigCiAMhEyASQaADaiASQaACaiASQaABahDRAiASIBkgAUEEdGpBACABICZJIgEbQQhqQQAgARs2AsQDIBIgGSATQQR0akEAIBMgJkkiARtBCGpBACABGzYCwAMgEiAZIBFBBHRqQQAgESAmSSIBG0EIakEAIAEbNgK8AyASIBkgD0EEdGpBACAPICZJIgEbQQhqQQAgARs2ArgDIBItAKADIiMgEi0AoQMiKUEBdHIgEi0AogMiKEECdHIgEi0AowMiJEEDdHKtQv8BgyGNAUIAIYwBA0AC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AighEgwCCwJAIBUOAwUABQALQQAhFSAFKAIIIB9BBHRqQQAgBSgCECAfSyIRGyEBIAUoAhwhDyAFKAIUIRxBfyEQIBENAkEAIRZBfyERCwNAIBwgECIBQThsaiEbIAEgD08NCSAbQQAgDyAQSxsiEygCLCEQIBMoAjAgH0YNAAsgESESIAEhEQsgGigCDCARQThsakEAIBpBFGooAgAgEUsiARshEyABRQ0PIBNBNGooAgAhESAaKAIIIgEgE0EwaigCACITTQ0EIAEgEUsNASARIAFB0OXBABDMCAALIAEoAgwhECABKAIIIRFBACEWDAULIBsNAQsgKSAYIhdHDQcMCAsgGygCGEGoAWwhASAbKAIQIRMDQCABRQRAIBIhEQwHCyABQagBayEBIBNBnAFqIBNBqAFqIRMoAgBFDQALIBsoAgAiESAXKAIARiAbKAIEIhMgFygCBEZxIQEgGygCDCATIAEbIRMgGygCCCARIAEbIgEgIU8NASAmIAFBqAFsakEAIAEgIUkbIgEoAgBBAUcNASABKAIEIBNHDQEgEiERIAFBLGooAgBBAUcNBSABKAI0IRMgASgCMCESICQoAgAiASADQThqKAIARgRAIBkgARCFBiAiKAIAIQELICIgAUEBajYCACAZKAIAIAFBA3RqIgEgEzYCBCABIBI2AgAMBQsgEyABQcDlwQAQzAgAC0HwjsEAQRNBsJzBABDpCwALQQAhAQwBC0EBIQEMAAsACwALAAsgHSAeRw0ACwsgA0EgaiIPQQA2AgAgA0EYaiErQQAhASADQRxqKAIARQRAICtBABCGBiAPKAIAIQELIA8gAUEBajYCACADKAIYIAFBAnRqQQA2AgACQCADQTxqIi4oAgAiFUUNACAJQShqISQgCEEoaiEpIAVBCGohLCAVQQEgFUEBSxtBAWshHiAHKAIIITEgBygCACE5IAYoAgghLSAGKAIAITAgA0EgaiEnIANBHGohMyADQThqISoDQEEBIBVrIRMgAygCNCAVQQN0akEIayEBIAMoAiQhDwJAAkACQAJAAkACQANAIDAgASkCACKMAaciI0HgAmxqQQAgIyAtSRshJiCMAUIgiKchKCAjIC1PDQUgJigCAEEBRw0FICYoAgQgKEcNBQJAIA8gJigCuAJHBEAgJkHcAmotAABFDQELIAFBCGshASAT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AgAgAUGIAWpCgICAgMAANwIAIAFBgAFqQgQ3AgAgAUH4AGpCADcCACABQfAAakKAgICAwAA3AgAgAUHoAGpCADcCACABQeAAakKAgICAwAA3AgAgAUHYAGpCBDcCACABQdAAakIANwIAIAFByABqQoCAgIDAADcCACABQUBrQgQ3AgAgAUE4akIANwIAIAFBMGpCgICAgMAANwIAIAFBKGpCBDcCACABQSBqQgA3AgAgAUEYakKAgICAwAA3AgAgAUEQakIENwIAIAFBCGpCADcCACABQeQBaiEBIBNBAWsiEw0ACyAPIBFqQQFrIQ8LIABBlARqIBEEQCABQgQ3AsgBIAFCBDcCWCABQgQ3AkAgAUIENwIoIAFCBDcCECABQgA3AgggAUIENwIAIAFB4AFqQQA2AgAgAUHYAWpCADcCACABQdABakKAgICAwAA3AgAgAUHAAWpCADcCACABQbgBakKAgICAwAA3AgAgAUGwAWpCBDcCACABQagBakIANwIAIAFBoAFqQoCAgIDAADcCACABQZgBakIENwIAIAFBkAFqQgA3AgAgAUGIAWpCgICAgMAANwIAIAFBgAFqQgQ3AgAgAUH4AGpCADcCACABQfAAakKAgICAwAA3AgAgAUHoAGpCADcCACABQeAAakKAgICAwAA3AgAgAUHQAGpCADcCACABQcgAakKAgICAwAA3AgAgAUE4akIANwIAIAFBMGpCgICAgMAANwIAIAFBIGpCADcCACABQRhqQoCAgIDAADcCACAPQQFqIQ8LIA8iGzYCACADQSBqKAIAQQFrIR8MFwtBAEEAQZihwQAQzAgACyAPIBEQ+wsACyAUQdwCakEANgIAIBRB1MbAADYC2AIgFEIBNwLMAiAUQYCswQA2AsgCIBRByAJqQYiswQAQggoACyAUQdwCakEANgIAIBRB1MbAADYC2AIgFEIBNwLMAiAUQbCswQA2AsgCIBRByAJqQbiswQAQggoAC0HwjsEAQRNBuKHBABDpCwALQfCOwQBBE0HIocEAEOkLAAsgHyAcEPsLAAsCQCArRQ0AIBZBjAFqITpBACEXQQEhAQJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQANAIAYoAgAiEiAWKAIIIBdB1ANsaiIiKAIMIhFB4AJsakEAIAYoAggiDyARSxshGiAiQRBq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AgAgD0HsAGpCgICAgPD//79/NwIAIA9B5ABqQv////v///+//wA3AgAgD0HcAGpC////+wc3AgAgD0HUAGpCgICAgPD//79/NwIAIA9BzABqQv////v///+//wA3AgAgD0HEAGpCADcCACAPQTxqQoCAgPwDNwIAIA9BvAJqIjQtAAAhMCAPQSRqICApA6gCNwIAIA9BLGogGCkDADcCACAPQTRqIBEpAwA3AgAgD0GgAWpBADYCACAPQZgBakIANwIAIA9BkAFqQgA3AgAgD0GkAWpC////+wc3AgAgD0GsAWpBADoAACAPQcABakL////7BzcCACAPQcgBakEAOgAAIA9BrQFqICApA7gBNwAAIA9BtQFqICwpAwA3AAAgD0G8AWogKygAADYAACAPQckBaiAgKQOgATcAACAPQdEBaiAxKQMANwAAIA9B2AFqICooAAA2AAAgD0HkAWpBADoAACAPQdwBakL////7BzcCACAPQYACakEAOgAAIA9B+AFqQv////sHNwIAIA9BnAJqQQA6AAAgD0GUAmpC////+wc3AgAgD0H0AWogLigAADYAACAPQe0BaiAvKQMANwAAIA9B5QFqICApA4gBNwAAIA9BkAJqIC0oAAA2AAAgD0GJAmogQSkDADcAACAPQYECaiAgKQNwNwAAIA9BrAJqIEAoAAA2AAAgD0GlAmogOSkDADcAACAPQZ0CaiAgKQNYNwAAIA9BwAJqQQE6AAAgNEE/NgIAIA9BuAJqQQA6AAAgD0GwAmpC////+wc3AgAgD0HgAmogKCkAADcAACAPQdkCaiAiKQAANwAAIA9B0QJqIBYpAAA3AAAgD0HJAmogIEEgaikAADcAACAPQcECaiAgKQAYNwAAIA9B6AJqQYCAgPwDNgIAAkAgEygCEARAIBMoAghBADYCBCATIBMoAsgBQQYgMGlrIhFrIg82AsgBAkAgD0UEQAJAIBNBGGooAgAiD0UNACAPQQJ0RQ0AIBMoAhQQsQELIBNCADcCHCATQgQ3AhQCQCATQShqKAIAIg9FDQAgD0ECdEUNACATKAIkELEBCyATQgA3AiwgE0IENwIkAkAgE0E4aigCACIPRQ0AIA9BAnRFDQAgEygCNBCxAQsgE0IANwI8IBNCBDcCNAwBCyAUKAIAIg8gEU0NCyATQRRqIRggICARQQJ0IhQgEygCFGo2ApACICAgDzYCmAIgIEEAIA8gEWsiKyAPICtJGzYClAIgIEHIAmogIEGQAmoQrQMCQCATQRhqKAIAIg9FDQAgD0ECdEUNACATKAIUELEBCyAYICApA8gCNwIAIBhBCGogEikDADcCACAkKAIAIg8gEU0NCyATQSRqIRggICATKAIkIBRqNgKQAiAgIA82ApgCICBBACAPIBFrIiQgDyAkSRs2ApQCICBByAJqICBBkAJqEK0DAkAgE0EoaigCACIPRQ0AIA9BAnRFDQAgEygCJBCxAQsgGCAgKQPIAjcCACAYQQhqIBIpAwA3AgAgKSgCACIPIBFNDQsgE0E0aiEYICAgEygCNCAUajYCkAIgICAPNgKYAiAgQQAgDyARayIUIA8gFEkbNgKUAiAgQcgCaiAgQZACahCtAwJAIBNBOGooAgAiD0UNACAPQQJ0RQ0AIBMoAjQQsQELIBggICkDyAI3AgAgGEEIaiASKQMANwIACyATKAIQIg9FDQEgD0EBRg0FIBsoAgAhGCAPQdQDbCIUQagHayIkQdQDbkEBakEHcSIPBH8gD0HUA2whEiAYQdgDaiEPA0AgDyAPKAIAIBFrNgIAIA9B1ANqIQ8gEkHUA2siEg0ACyAPQQRrBSAYQdQDagsgJEHMGUkNBSAUIBhqIRJB0BlqIQ8DQCAPIA8oAgAgEWs2AgAgD0HMGWsiGCAYKAIAIBFrNgIAIA9B+BVrIhggGCgCACARazYCACAPQaQSayIYIBgoAgAgEWs2AgAgD0HQDmsiGCAYKAIAIBFrNgIAIA9B/AprIhggGCgCACARazYCACAPQagHayIYIBgoAgAgEWs2AgAgD0HUA2siGCAYKAIAIBFrNgIAIA9B0ANqIRggD0GgHWohDyASIBhHDQALDAULQQBBAEHApsEAEMwIAAtBAUEAEPsLAAtBsKXBAEEzQeSlwQAQxAkAC0HopMEAQTZBoKXBABDECQALIBVBCGpCADcAACAVQgA3AAAgGkIANwAAIBpBCGpCADcAACAeQgA3AAAgHkEIakIANwAAIBxCADcAACAcQQhqQgA3AAAgH0IANwAAIB9BCGpCADcAACAgQegBaiIRQQ9qIhIgIEEYaiIYQQ9qKAAANgAAIBFBCGoiFCAYQQhqIhEpAAA3AwAgICAgKQAYNwPoASAgQdABaiIYQQ9qIiQgIEHIAmoiKUEPaigAADYAACAYQQhqIhggKUEIaikAADcDACAgICApAMgCNwPQASAgQbgBaiIpQQ9qIisgIEGoAmoiLEEPaigAADYAACApQQhqIikgLEEIaikAADcDACAgICApAKgCNwO4ASAgQaABaiIsQQ9qIiogIEGQAmoiLkEPaigAADYAACAsQQhqIiwgLkEIaikAADcDACAgICApAJACNwOgASAgQYgBaiIuQQ9qIjEgIEH9AWoiLUEPaigAADYAACAuQQhqIi4gLUEIaikAADcDACAgICApAP0BNwOIASAiIBdBMGooAgA2AgAgFiAXQShqKQIANwMAIBkgFikAADcAACAZQQhqIBZBCGooAAA2AAAgD0G8AmoiLS0AACEvIBEgF0EgaikCADcDACAXKQIYIYwBIA9BJGpCADcCACAPQRxqQoCAgICAgIDAPzcCACAPQgA3AhQgD0EsakIANwIAIA9BNGpCADcCACAPQYwBakH////7BzYCACAPQYQBakKAgICA8P//v383AgAgD0H8AGpC////+////7//ADcCACAPQfQAakL////7BzcCACAPQewAakKAgICA8P//v383AgAgD0HkAGpC////+////7//ADcCACAPQdwAakL////7BzcCACAPQdQAakKAgICA8P//v383AgAgD0HMAGpC////+////7//ADcCACAPQcQAakIANwIAIA9BPGpCgICA/AM3AgAgICCMATcDGCAPQaABakEANgIAIA9BmAFqQgA3AgAgD0GQAWpCADcCACAPQaQBakL////7BzcCACAPQawBakEAOgAAIA9BwAFqQv////sHNwIAIA9ByAFqQQA6AAAgD0GtAWogICkD6AE3AAAgD0G1AWogFCkDADcAACAPQbwBaiASKAAANgAAIA9ByQFqICApA9ABNwAAIA9B0QFqIBgpAwA3AAAgD0HYAWogJCgAADYAACAPQeQBakEAOgAAIA9B3AFqQv////sHNwIAIA9BgAJqQQA6AAAgD0H4AWpC////+wc3AgAgD0GcAmpBADoAACAPQZQCakL////7BzcCACAPQfQBaiArKAAANgAAIA9B7QFqICkpAwA3AAAgD0HlAWogICkDuAE3AAAgD0GQAmogKigAADYAACAPQYkCaiAsKQMANwAAIA9BgQJqICApA6ABNwAA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KSAGKgKgAyEqIAYqApgDISggBioClAMhKyAGKgKQAyEsIAYqApwDCyEeIBIoAmQhAQJ9AkACQCASLQB4BEAgASATTw0CIA4gAUEEdGoiASgCCCIDIBBPDQQgFSADQagBbGpBACADIBBJGyILKAIAQQFHDQQgCygCBCABQQxqKAIARw0EIAZB2ABqIgQgC0EYaiIDQQRqKAIAIgE2AgQgBCADKAIAIAEoAghBB2pBeHFqNgIAIAZBkANqIAYoAlggC0HUAGogBigCXCgCiAERAgAMAQsgASAUTw0BIAZBkANqIBYgAUEHdGoQlgMLIAYqAqADIS0gBioCnAMhLiAGKgKYAyEvIAYqApQDITAgBioCkAMhMSAGKgKkAwwBC0P//39/IS9D//9//yEtQ///f/8hLkP//39/ITBD//9/fyExQ///f/8LIRwgEigCaCEBAn0CQAJAIBItAHgEQCABIBNPDQIgDiABQQR0aiIBKAIIIgMgEE8NBCAVIANBqAFsakEAIAMgEEkbIgsoAgBBAUcNBCALKAIEIAFBDGooAgBHDQQgBkHQAGoiBCALQRhqIgNBBGooAgAiATYCBCAEIAMoAgAgASgCCEEHakF4cWo2AgAgBkGQA2ogBigCUCALQdQAaiAGKAJUKAKIARECAAwBCyABIBRPDQEgBkGQA2ogFiABQQd0ahCWAwsgBioCoAMhMiAGKgKcAyE1IAYqApgDISUgBioClAMhJiAGKgKQAyEjIAYqAqQDDAELQ///f38hJUP//3//ITJD//9//yE1Q///f38hJkP//39/ISND//9//wshBSASKAJsIQECQCASLQB4BEAgASATTw0DIA4gAUEEdGoiASgCCCIDIBBPDQIgFSADQagBbGpBACADIBBJGyILKAIAQQFHDQIgCygCBCABQQxqKAIARw0CIAZByABqIgQgC0EYaiIDQQRqKAIAIgE2AgQgBCADKAIAIAEoAghBB2pBeHFqNgIAIAZBkANqIAYoAkggC0HUAGogBigCTCgCiAERAgAMAQsgASAUTw0CIAZBkANqIBYgAUEHdGoQlgMLIAYqAqADISQgBioCnAMhHSAGKgKYAyEfIAYqApQDISAgBioCkAMhISAGKgKkAwwCC0HwjsEAQRNB8O3BABDpCwALQ///f38hH0P//3//ISRD//9//yEdQ///f38hIEP//39/ISFD//9//ws4AuwDIAYgJDgC6AMgBiAdOALkAyAGIB84AuADIAYgIDgC3AMgBiAhOALYAyAGIAU4AtQDIAYgMjgC0AMgBiA1OALMAyAGICU4AsgDIAYgJjgCxAMgBiAjOALAAyAGIBw4ArwDIAYgLTgCuAMgBiAuOAK0AyAGIC84ArADIAYgMDgCrAMgBiAxOAKoAyAGICk4AqQDIAYgKjgCoAMgBiAeOAKcAyAGICg4ApgDIAYgKzgClAMgBiAsOAKQAyAGQbACaiIDIAZBkANqIgEQ/QMgASANIAMQ0AICQCAGLQCQA0UNACAGLQCRA0UNACAGLQCSA0UNACAGLQCTA0UNACACIQEgDUEAOgB5DAELIA0gBkGwAmpB4AAQgQwhBCAGICc4ApwDIAYgJzgCmAMgBiAnOAKUAyAGICc4ApADIAQgBkGQA2oQ8gEgBCgCcCEDIAkgCUEBayIBIAcgAmtxa0EBRgRAIBkQ5gQgDCgCACEIIBEoAgAhByAKKAIAIglBAWshAQsgCCAHQQJ0aiADNgIAIBEgB0EBaiABcSIHNgIAIAAoAiwhASAEQQA6AHkLIAEgB0cNAAsMBgsgCyAHQfTfwAAQzAgACyALIAdB5N/AABDMCAALQfCOwQBBE0HA7cEAEOkLAAsgACgCLCIBIABBMGoiGigCACIHRg0CIAAqAkghMyAAQThqIRsgAEE0aiEYA0AgACAbKAIAQQFrIAFBAWpxIgQ2AiwgGCgCACABQQJ0aigCACIBIAAoAigiEE8EfyAEBSAAKAIgIRIgBkL////7////v383A4gCIAZC////+/f//79/NwOAAiAGQv////v3//+//wA3A/gBIAZC////+////79/NwPwASAGQv////v3//+/fzcD6AEgBkL////79///v/8ANwPgASAGQv////v///+/fzcD2AEgBkL////79///v383A9ABIAZC////+/f//7//ADcDyAEgBkL////7////v383A8ABIAZC////+/f//79/NwO4ASAGQv////v3//+//wA3A7ABIBIgAUEHdGoiF0EAIAEgEEkbIg5B4ABqIRMgAigCCCEUIAIoAgAhDSADKAIIIRUgAygCACELIAAoAjwhESAAKAJEIQwgBkGwAWohB0EAIQ8CQAJAA0ACQCAPIBNqKAIAIQgCQCAOLQB4RQRAIAggEE8NASAGQZADaiIBIBIgCEEHdGoQlgMgB0EQaiABQRBqKQMANwIAIAdBCGogAUEIaikDADcCACAHIAYpA5ADNwIADAELIAggDE8NACARIAhBBHRqIgEoAggiCCAVTw0BIAsgCEGoAWxqQQAgCCAVSRsiCCgCAEEBRw0BIAgoAgQgAUEMaigCAEcNASAIQQhqIRYCQCAIQSxqKAIAQQFGBEAgCCgCMCIBIBRPDQUgDSABQeACbGpBACABIBRJGyIBKAIAQQFHDQUgASgCBCAIKAI0Rw0FIAgqAlAhLSAIKgJMIS4gCCoCSCEvIAgqAkQhNCAIKgJAIScgCCoCPCEoIAgqAjghKSABQdwBaioCACEjIAFBrAFqKgIAITUgAUGcAWoqAgAhKiABQfwBaioCACEwIAFBpAFqKgIAISUgAUHMAWoqAgAhJCABQYwBaioCACEdIAFB7AFqKgIAIR8gAUGQAWoqAgAhICABKgLYASEhIAEqAuABISIgASoCoAEhKyABKgKYASEmIAEqAoACITEgASoCqAEhLCABKgL4ASEyIAEqAtABIR4gASoC8AEhHCAGIAFB9AFqKgIAIAFBlAFqKgIAlCAFlCABQdQBaioCAJI4ApgDIAYgHiAcICCUIAWUkjgClAMgBiAkIB8gHZQgBZSSOAKQAyAGICIgNSArIDKUICwgMJSSIDUgMZSSIiKUICsgJiAylCAqIDCUkiArIDGUkiIelCAsICogMpQgJSAwlJIgLCAxlJIiHJSSkiAFlJI4AqQDIAYgIyAsICKUICogHpQgJSAclJKSIAWUkjgCoAMgBiAhICsgIpQgJiAelCAqIByUkpIgBZSSOAKcAyAGQbACaiAGQZADaiIKIAUgAUEYaiABQdAAahDIASAGIDQgBioCvAIiIZQgKSAGKgKwAiIdlJMgKCAGKgK0AiIflJMgJyAGKgK4AiIglJM4ApwDIAYgNCAglCAoIB2UICcgIZSSICkgH5STkjgCmAMgBiApICCUIDQgH5QgKCAhlCAnIB2Uk5KSOAKUAyAGICcgH5QgNCAdlCApICGUkpIgKCAglJM4ApADIAYgBioCyAIgLSAhIC4gHZQgLyAflJMiHCAckiIilCAdIC8gIJQgLSAdlJMiHCAckiIelCAfIC0gH5QgLiAglJMiHCAckiIclJOSkpI4AqgDIAYgBioCxAIgLiAhIB6UICAgHJQgHSAilJOSkpI4AqQDIAYgBioCwAIgLyAhIByUIB8gIpQgICAelJOSkpI4AqADIAZB+ABqIgkgCEEYaiIIQQRqKAIAIgE2AgQgCSAIKAIAIAEoAghBB2pBeHFqNgIAIAZBmAJqIAYoAnggFkHMAGogCiAGKAJ8KAK4AREBAAwBCyAGQYABaiIJIAhBGGoiCEEEaigCACIBNgIEIAkgCCgCACABKAIIQQdqQXhxajYCACAGQZgCaiAGKAKAASAWQcwAaiAGKAKEASgCiAERAgALIAcgBikDmAI3AgAgB0EQaiAGQZgCaiIBQRBqKQMANwIAIAdBCGogAUEIaikDADcCAAsgB0EYaiEHIA9BBGoiD0EQRw0BDAMLC0HwjsEAQRNBoO7BABDpCwALQfCOwQBBE0Gw7sEAEOkLAAsgBkGQA2oiCCAGQbABakHgABD/CxogBkGwAmoiASAIEP0DIAggFyABENACAkACQCAGLQCQA0UNACAGLQCRA0UNACAGLQCSA0UNACAGLQCTA0UNACAaKAIAIQcMAQsgFyAGQbACakHgABCBDCEBIAYgMzgCnAMgBiAzOAKYAyAGIDM4ApQDIAYgMzgCkAMgASAGQZADahDyASABKAJwIQggGygCACIBQQFrIQcgASAHIBooAgAiASAEa3FrQQFGBEAgGRDmBCAbKAIAQQFrIQcgGigCACEBCyAaIAFBAWogB3EiBzYCACAYKAIAIAFBAnRqIAg2AgALIBdBADoAeSAZKAIACyIBIAdHDQALDAILIAAoAiwiASAAQTBqIhgoAgAiB0YNASAAKgJIIR8gAygCCCEVIAMoAgAhCyAAQThqIRAgAEE0aiEWA0AgACAQKAIAQQFrIAFBAWpxIgI2AiwgFigCACABQQJ0aigCACIBIAAoAigiDk8EfyACBSAAKAIgIRMgBkL////7////v383A4gCIAZC////+/f//79/NwOAAiAGQv////v3//+//wA3A/gBIAZC////+////79/NwPwASAGQv////v3//+/fzcD6AEgBkL////79///v/8ANwPgASAGQv////v///+/fzcD2AEgBkL////79///v383A9ABIAZC////+/f//7//ADcDyAEgBkL////7////v383A8ABIAZC////+/f//79/NwO4ASAGQv////v3//+//wA3A7ABIBMgAUEHdGoiEkEAIAEgDkkbIhFB4ABqIQwgACgCPCEKIAAoAkQhCSAGQbABaiEBQQAhBwJAAkADQAJAIAcgDGooAgAhBAJAIBEtAHhFBEAgBCAOTw0BIAZBkANqIgMgEyAEQQd0ahCWAyABQRBqIANBEGopAwA3AgAgAUEIaiADQQhqKQMANwIAIAEgBikDkAM3AgAMAQsgBCAJTw0AIAogBEEEdGoiAygCCCIEIBVPDQEgCyAEQagBbGpBACAEIBVJGyIEKAIAQQFHDQEgBCgCBCADQQxqKAIARw0BIARBCGohDQJAIARBLGooAgBBAUYEQCAEKAIwIgMgF08NBSAUIANB4AJsakEAIAMgF0kbIgMoAgBBAUcNBSADKAIEIAQoAjRHDQUgBiAEKgJEIiIgA0FAayoCACIdlCAEKgI4Ih4gA0E0aioCACImlJMgBCoCPCIcIANBOGoqAgAiI5STIAQqAkAiBSADQTxqKgIAIiSUkzgCnAMgBiAiICSUIBwgJpQgBSAdlJIgHiAjlJOSOAKYAyAGIB4gJJQgIiAjlCAcIB2UIAUgJpSTkpI4ApQDIAYgBSAjlCAiICaUIB4gHZSSkiAcICSUkzgCkAMgJiAEKgJMIiKUICMgBCoCSCIelJMiBSAFkiEgIB4gJJQgBCoCUCIcICaUkyIFIAWSISEgBiADQcwAaioCACAcIB0gIJQgJiAhlCAjIBwgI5QgIiAklJMiBSAFkiIFlJOSkpI4AqgDIAYgA0HIAGoqAgAgIiAdICGUICQgBZQgJiAglJOSkpI4AqQDIAYgA0HEAGoqAgAgHiAdIAWUICMgIJQgJCAhlJOSkpI4AqADIAZB6ABqIgggBEEYaiIEQQRqKAIAIgM2AgQgCCAEKAIAIAMoAghBB2pBeHFqNgIAIAZBsAJqIAYoAmggDUHMAGogBkGQA2ogBigCbCgCuAERAQAMAQsgBkHwAGoiCCAEQRhqIgRBBGooAgAiAzYCBCAIIAQoAgAgAygCCEEHakF4cWo2AgAgBkGwAmogBigCcCANQcwAaiAGKAJ0KAKIARECAAsgASAGKQOwAjcCACABQRBqIAZBsAJqIgNBEGopAwA3AgAgAUEIaiADQQhqKQMANwIACyABQRhqIQEgB0EEaiIHQRBHDQEMAwsLQfCOwQBBE0GA7sEAEOkLAAtB8I7BAEETQZDuwQAQ6QsACyAGQZADaiIDIAZBsAFqQeAAEP8LGiAGQbACaiIBIAMQ/QMgAyASIAEQ0AICQAJAIAYtAJADRQ0AIAYtAJEDRQ0AIAYtAJIDRQ0AIAYtAJMDRQ0AIBgoAgAhBwwBCyASIAZBsAJqQeAAEIEMIQEgBiAfOAKcAyAGIB84ApgDIAYgHzgClAMgBiAfOAKQAyABIAZBkANqEPIBIAEoAnAhAyAQKAIAIgFBAWshByABIAcgGCgCACIBIAJrcWtBAUYEQCAZEOYEIBAoAgBBAWshByAYKAIAIQELIBggAUEBaiAHcSIHNgIAIBYoAgAgAUECdGogAzYCAAsgEkEAOgB5IBkoAgALIgEgB0cNAAsMAQsgACoCSCEmIABBxABqQQA2AgAgAEEoakEANgIAIAZBAToAjwECQAJAIANBGGooAgAiCgRAIApB/////wNxIgEgCkcNBCAKQQJ0IgdBAEgNBCABIApGQQJ0IQggBwR/IAcgCBCUCwUgCAsiAQ0BDAkLIAZBADYCmAEgBkIENwOQASAGIAo2AqgBIAZCBDcDoAEgBkE4aiIBQQA6AAQgAUF/NgIAQQQhCAwBCyAGQQA2ApgBIAYgATYCkAEgBiAKNgKUASAKrUIYfiI2QiCIpyIBDQIgNqciB0EASA0CIAFFQQJ0IQggBwR/IAcgCBCUCwUgCAsiAUUNByAGIAE2AqABIAYgCjYCpAECQCAKQQJJDQAgCkEBayIIQQNxIQcgCkECa0EDTwRAIAhBfHEhDwNAIAFC////+/f//7//ADcCACABQdgAakL////7////v383AgAgAUHQAGpC////+/f//79/NwIAIAFByABqQv////v3//+//wA3AgAgAUFAa0L////7////v383AgAgAUE4akL////79///v383AgAgAUEwakL////79///v/8ANwIAIAFBKGpC////+////79/NwIAIAFBIGpC////+/f//79/NwIAIAFBGGpC////+/f//7//ADcCACABQRBqQv////v///+/fzcCACABQQhqQv////v3//+/fzcCACABQeAAaiEBIA9BBGsiDw0ACwsgB0UNAANAIAFC////+/f//7//ADcCACABQRBqQv////v///+/fzcCACABQQhqQv////v3//+/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NgIAIAYtAAwhAiAGKAIIIQEgACgCKCIPIABBJGooAgBGBEAgAyAPEIkGIAAoAighDwsgACgCICAPQQd0aiAGQbABakHgABD/CyIEQQA7AXggBEH0AGogAjoAACAEIAE2AnAgBEHoAGpCfzcDACAEQoGAgIBwNwNgIAAgD0EBajYCKCAGQQA6AAQgBkEANgIAIAZBkANqIgIgCCAGQY8BaiAGKAKQASAGKAKYASAGQaABaiAGKAIAIAYtAAQgJhA9IAZBmAJqIgFBEGogBkGkA2opAgAiNzcDACABQQhqIAZBnANqKQIAIjg3AwAgBiAGKQKUAyI2NwOYAiAIQRBqIDc3AgAgCEEIaiA4NwIAIAggNjcCACACQRBqIDc3AwAgAkEIaiA4NwMAIAZB6ANqQv////v///+/fzcDACAGQeADakL////79///v383AwAgBkHQA2pC////+////79/NwMAIAZByANqQv////v3//+/fzcDACAGQbgDakL////7////v383AwAgBkGwA2pC////+/f//79/NwMAIAYgNjcDkAMgBkL////79///v/8ANwPYAyAGQv////v3//+//wA3A8ADIAZC////+/f//7//ADcDqAMgBkGwAmogAhD9AyAAKAIoRQ0FIAMoAgAgBkGwAmpB4AAQ/wsaAkAgBigCpAEiAEUNACAArUIYfqdFDQAgBigCoAEQsQELIAYoApQBIgBFDQAgAEECdEUNACAGKAKQARCxAQsgBkHwA2okAA8LEIEKAAsgByABQezqwwAoAgAiAEGYByAAGxEAAAALQfCOwQBBE0HQ7cEAEOkLAAtB8I7BAEETQeDtwQAQ6QsAC0EAQQBBxN7AABDMCAALIAcgCEHs6sMAKAIAIgBBmAcgABsRAAAAC8tSA11/A34qfSMAQcAJayIEJAACQAJAAkAgAEEkaigCACIFIAFNDQAgACgCHCINIAFBFGxqQQAgASAFSRsiCygCACACRw0AAkACQAJAAkACQAJAAkACQCALKAIIIgYgAEEIaigCAE8NACAAKAIAIg4gBkGYAmxqIgooAgBBAUcNACAKKAIEIAsoAgxHDQAgCygCECEUIAsoAgQhFSAAQRRqIg8oAgAhESAAKAIQIQcgBEGwB2oiCCAOIAZBmAJsaiILQQRqQZACEP8LGiAKQQA2AgAgCkEEaiAH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QewAaiAFQRBqKQMANwIAIAFB9ABqIAVBGGopAwA3AgAgAUH8AGogBUEgaikDADcCACABQZABakIANwIAIAFBBDYChAEgAUGIAWpCADcCACABQfgBakKAgICAwAA3AgAgAUIENwLwASABQegBakIANwIAIAFB4AFqQoCAgIDAADcCACABQdgBakIANwIAIAFB0AFqQoCAgIDAADcCACABQgQ3AsgBIAFCADcCwAEgAUG4AWogBEGoBmoiBUEgaikDADcCACABQbABaiAFQRhqKQMANwIAIAFBqAFqIAVBEGopAwA3AgAgAUGgAWogBUEIaikDADcCACABIAQpA6gGNwKYASABQYUCakIANwAAIAFBgAJqQgA3AgAgBCAMQQFqNgKoAgsgByAQRg0DIAQoAqgCIgUgAiAKaigCACIBTQ0EIAIgBmogBCgCoAIgAUGQAmxqIgFBCGoiCCgCADYCACBfRQRAIFwgXUEQdHIhBQwGCyAjQQhqQgA3AAAgI0IANwAAICJCADcAACAiQQhqQgA3AAAgIUIANwAAICFBCGpCADcAACAgQgA3AAAgIEEIakIANwAAIBlCADcAACAZQQhqQgA3AAAgQCAEQdAGaiIFQQ9qKAAANgAAIEEgBUEIaikAADcDACAEIAQpANAGNwPgBSBCIARBnQdqIgVBD2ooAAA2AAAgQyAFQQhqKQAANwMAIAQgBCkAnQc3A8gFIEQgBEGKB2oiBUEPaigAADYAACBFIAVBCGopAAA3AwAgBCAEKQCKBzcDsAUgRiAEQfcGaiIFQQ9qKAAANgAAIEcgBUEIaikAADcDACAEIAQpAPcGNwOYBSBIIARB5AZqIgVBD2ooAAA2AAAgSSAFQQhqKQAANwMAIAQgBCkA5AY3A4AFIBpCADcCAEEAIQUgGkEIakEANgIAIARBqAZqIg1BCGoiCSBNKAIANgIAIAQgBCkDwAQ3A6gGID0gDUEQaikDADcDACA8IAkpAwA3AwAgBCAEKQOoBjcDkAYgC0EgakEANgAAIAtBGGpCADcAACALQRBqQgA3AAAgC0EIakIANwAAIAtCADcAACA/QQA2AgAgPkIANwMAIARCADcD+AUgFyAEQbACaiINQR9qKQAANwAAIEogDUEYaikAADcDACBLIA1BEGopAAA3AwAgTCANQQhqKQAANwMAIAQgBCkAsAI3A9AEQT8hCUP//3//IXZDAAAAACGMAUP//39/IY0BQwAAgD8hgwFBASEcQQAhO0P//39/IYsBQwAAAAAhigFBACE6Q///f38hiQFDAAAAACGIAUEAIQ1D//9/fyGHAUMAAAAAIYYBQQAhHUP//39/IYUBQwAAAAAhhAFBACEYIIIBIX4ggQEhfSCAASF8IH8he0MAAIA/IXpDAAAAACF5QwAAAAAheEMAAAAAIXdD//9/fyF1QwAAAAAhdEP//3//IXND//9/fyFyQwAAAAAhcUP//3//IXBD//9/fyFvQwAAAAAhbkP//3//IW1D//9/fyFsQwAAAAAha0P//3//IWpD//9/fyFpQwAAAAAhaEP//3//IWdD//9/fyFmQ///f38hZUMAAAAAIWRBACEbDAULIBIgEEHIn8EAEMwIAAsgByAQQdifwQAQzAgACyAHIBBBuJ/BABDMCAALIBAgEEHon8EAEMwIAAsgASAFQfifwQAQzAgACyABIAEoAsABIAlB/wFxaWtBBmo2AsABIAgoAgAiDCABQQRqKAIARgRAIAEgDBDpBSAIKAIAIQwLIAEoAgAgDEHUA2xqIgEgfjgCFCABIGI3AgwgASASNgIIIAEgYTcCACABQSBqIHs4AgAgAUEcaiB8OAIAIAFBGGogfTgCACABQSRqIAQpA5AGNwIAIAFBLGogPCkDADcCACABQTRqID0pAwA3AgAgAUGMAWogZjgCACABQYgBaiBnOAIAIAFBhAFqIGg4AgAgAUGAAWogaTgCACABQfwAaiBqOAIAIAFB+ABqIGs4AgAgAUH0AGogbDgCACABQfAAaiBtOAIAIAFB7ABqIG44AgAgAUHoAGogbzgCACABQeQAaiBwOAIAIAFB4ABqIHE4AgAgAUHcAGogcjgCACABQdgAaiBzOAIAIAFB1ABqIHQ4AgAgAUHQAGogdTgCACABQcwAaiB2OAIAIAFByABqIHc4AgAgAUHEAGogeDgCACABQUBrIHk4AgAgAUE8aiB6OAIAIAFBpAFqIGU4AgAgAUGoAWogZDgCACABQawBaiAbOgAAIAFBwAFqII0BOAIAIAFBxAFqIIwBOAIAIAFByAFqIDs6AAAgAUGgAWogPygCADYCACABQZgBaiA+KQMANwIAIAFBkAFqIAQpA/gFNwIAIAFBrQFqIAQpA+AFNwAAIAFBtQFqIEEpAwA3AAAgAUG8AWogQCgAADYAACABQeQBaiA6OgAAIAFB4AFqIIoBOAIAIAFB3AFqIIsBOAIAIAFBgAJqIA06AAAgAUH8AWogiAE4AgAgAUH4AWogiQE4AgAgAUHYAWogQigAADYAACABQdEBaiBDKQMANwAAIAFByQFqIAQpA8gFNwAAIAFB5QFqIAQpA7AFNwAAIAFB7QFqIEUpAwA3AAAgAUH0AWogRCgAADYAACABQZACaiBGKAAANgAAIAFBiQJqIEcpAwA3AAAgAUGBAmogBCkDmAU3AAAgAUGcAmogHToAACABQZgCaiCGATgCACABQZQCaiCHATgCACABQawCaiBIKAAANgAAIAFBpQJqIEkpAwA3AAAgAUGdAmogBCkDgAU3AAAgAUG4AmogGDoAACABQbQCaiCEATgCACABQbACaiCFATgCACABQbsCaiBeLQAAOgAAIAFBuQJqIAQvAfwEOwAAIAFBvwJqIAVBEHY6AAAgAUG9AmogBTsAACABQcACaiAcOgAAIAFBvAJqIAk6AAAgAUHgAmogFykAADcAACABQdkCaiBKKQMANwAAIAFB0QJqIEspAwA3AAAgAUHJAmogTCkDADcAACABQcECaiAEKQPQBDcAACABQfgCaiB/OAIAIAFB9AJqIIABOAIAIAFB8AJqIIEBOAIAIAEgggE4AuwCIAFB6AJqIIMBOAIAIAFBhANqIE0oAgA2AAAgAUH8AmogBCkDwAQ3AAAgAUGIA2ogBEGwB2pBzAAQ/wsaIAggDEEBajYCACAHQQFqIQcgAkEEaiECIFsgA0HUA2oiA0cNAAsMAgsQgQoACyADIAJB7OrDACgCACIAQZgHIAAbEQAAAAsCQCAWRQ0AIBatQtQDfqdFDQAgExCxAQsgBCgCoAIhCyAEKAKoAiIUBEAgCyAUQZACbGohICALIQ0DQCANQQhqIgUoAgAhAyANQQxqIiEgDUEYaiIiKAIAIA0oAsABaiIBEP4BIA1BHGoiIyABEP4BIA1BLGoiJCABEP4BAkACQCADIA1BQGsoAgAgDUHEAGoiCCgCACIJa0sEQCANQTxqIAkgAxCRBiAIKAIAIQkMAQsgA0UNAQsgA0EDcSEHIA0oAjwgCUEEdGohASADQQFrQQNPBEAgA0F8cSECA0AgAUIENwIAIAFBOGpCADcCACABQTBqQgQ3AgAgAUEoakIANwIAIAFBIGpCBDcCACABQRhqQgA3AgAgAUEQakIENwIAIAFBCGpCADcCACABQUBrIQEgAkEEayICDQALCyAHBEADQCABQgQ3AgAgAUEIakIANwIAIAFBEGohASAHQQFrIgcNAAsLIAMgCWohCQsgCCAJNgIAIA1ByAFqIAUoAgAgDSgCwAEQhgICQCAFKAIAIgFFDQAgDSgCACIIIAFB1ANsaiElQQAhBUEAIRgCQANAQQYgCC0AvAJpIhJrIgMgBWoiAiAiKAIATQRAIAgoAgQiFiADaiBPSw0IIAVBAnQhFwJAIBJBBkYiGg0AICEoAgAhGSADQQNxIQxBACEJIBJBA2tBA08EQCAXIBlqIRsgHiAWQQJ0aiEcIANBfHEhHUEAIQEDQCABIBtqIgcgASAcaiITKgIAOAIAIAdBBGogE0EEaioCADgCACAHQQhqIBNBCGoqAgA4AgAgB0EMaiATQQxqKgIAOAIAIAFBEGohASAdIAlBBGoiCUcNAAsLIAxFDQAgHiAJIBZqQQJ0aiEBIBkgBSAJakECdGohBwNAIAcgASoCADgCACABQQRqIQEgB0EEaiEHIAxBAWsiDA0ACwsgAiANQShqKAIASw0IIAgoAgQiFiADaiBQSw0IAkAgGg0AICMoAgAhGSADQQNxIQxBACEJIBJBA2tBA08EQCAXIBlqIRsgHyAWQQJ0aiEcIANBfHEhHUEAIQEDQCABIBtqIgcgASAcaiITKgIAOAIAIAdBBGogE0EEaioCADgCACAHQQhqIBNBCGoqAgA4AgAgB0EMaiATQQxqKgIAOAIAIAFBEGohASAdIAlBBGoiCUcNAAsLIAxFDQAgHyAJIBZqQQJ0aiEBIBkgBSAJakECdGohBwNAIAcgASoCADgCACABQQRqIQEgB0EEaiEHIAxBAWsiDA0ACwsgAiANQThqKAIASw0IIAgoAgQiEyADaiBRSw0IAkAgGg0AICQoAgAhFiADQQNxIQxBACEJIBJBA2tBA08EQCAWIBdqIRIgJiATQQJ0aiEXIANBfHEhGkEAIQEDQCABIBJqIgMgASAXaiIHKgIAOAIAIANBBGogB0EEaioCADgCACADQQhqIAdBCGoqAgA4AgAgA0EMaiAHQQxqKgIAOAIAIAFBEGohASAaIAlBBGoiCUcNAAsLIAxFDQAgJiAJIBNqQQJ0aiEBIBYgBSAJakECdGohBwNAIAcgASoCADgCACABQQRqIQEgB0EEaiEHIAxBAWsiDA0ACwsgCCAFNgIEIAggGDYCACAIKAIIIgEgEE8NAiAYQQFqIRggCCAGIAFBAnRqKAIANgIIIAIhBSAlIAhB1ANqIghHDQEMAwsLDAYLIAEgEEGIoMEAEMwIAAsgICANQZACaiINRw0ACwsCQCAQRQ0AIBBBAnRFDQAgBhCxASAKELEBCwJAIChFDQAgKEECdEUNACAeELEBCwJAIClFDQAgKUECdEUNACAfELEBCwJAICpFDQAgKkECdEUNACAmELEBCyAsBEAgDiAsQQR0aiECIA4hAQNAAkAgAUEEaigCACIDRQ0AIANBAnRFDQAgASgCABCxAQsgAiABQRBqIgFHDQALCwJAICtFDQAgK0EEdEUNACAOELEBCwJAIC1FDQAgLUECdEUNACBVELEBCwJAIC5FDQAgLkECdEUNACBWELEBCwJAIC9FDQAgL0EDdEUNACBSELEBCwJAIDBFDQAgMEECdEUNACBXELEBCwJAIDFFDQAgMUECdEUNACBYELEBCwJAIDJFDQAgMkEDdEUNACBTELEBCwJAIDNFDQAgM61CGH6nRQ0AIFkQsQELAkAgNEUNACA0QQJ0RQ0AIFQQsQELIDYEQCAPIDZBBHRqIQIgDyEBA0ACQCABQQRqKAIAIgNFDQAgA0ECdEUNACABKAIAELEBCyACIAFBEGoiAUcNAAsLAkAgNUUNACA1QQR0RQ0AIA8QsQELIDgEQCARIDhBBHRqIQIgESEBA0ACQCABQQRqKAIAIgNFDQAgA0ECdEUNACABKAIAELEBCyACIAFBEGoiAUcNAAsLAkAgN0UNACA3QQR0RQ0AIBEQsQELAkAgOUUNACA5QQJ0RQ0AIFoQsQELIAsgFEGQAmxqIQ0gBCgCpAIhEAJAIBRFBEAgCyECDAELIABBKGohESAEQbgHaiEeIARBuAJqIRggBEG9BGohEiALIQIDQCACIgFBkAJqIQIgAS0AjAIiA0ECRg0BIARBsAJqIAFBjAIQ/wsaIBIgAS8AjQI7AAAgEkECaiABQY8Cai0AADoAACAEIAM6ALwEAkACQAJAAkACQAJAAkAgBCgCuAJBAUYEQCAEQbAHaiEBIBEoAgAiDyAVQQR0aiEHAkAgFSARKAIIIghPDQAgESgCDCEOIAcoAggiCkF/RwRAIAdBCGohFCARKAIUIQYDQAJAIAYgCk0NAAJAIA4gCkEEdGoiCUEAIAYgCksbIgMpAggiYqciBSAITw0AIAMpAgAhYSBiQiCIpyEMAkACQCAKIA8gBUEEdGoiAygCCCIFRgRAIANBCGohAwwBCwNAIAUgBk8NAiAKIA4gBUEEdGoiAygCACIFRw0ACwsgAyBhPgIACyAIIAxNDQACfyAKIA8gDEEEdGoiAygCDCIFRgRAIANBDGoMAQsDQCAFIAZPDQIgCiAOIAVBBHRqIgMoAgQiBUcNAAsgA0EEagsgYUIgiD4CAAsgESAGQQFrIgY2AhQgDiAGQQR0aiIDKQIAIWEgCUEIaiADQQhqKQIANwIAIAkgYTcCACAGIApNDQAgCSkCCCJhpyIDIAhPDQAgYUIgiKchCQJAAkAgBiAPIANBBHRqIgMoAggiBUYEQCADQQhqIQMMAQsDQCAFIAZPDQIgBiAOIAVBBHRqIgMoAgAiBUcNAAsLIAMgCjYCAAsgCCAJTQ0AAn8gBiAPIAlBBHRqIgMoAgwiBUYEQCADQQxqDAELA0AgBSAGTw0CIAYgDiAFQQR0aiIDKAIEIgVHDQALIANBBGoLIAo2AgALIBQoAgAiCkF/Rw0ACwsgDyAVQQR0aiIMQQxqIh8oAgAiCkF/RwRAIBEoAhQhBgNAAkAgBiAKTQ0AAkAgDiAKQQR0aiIJQQAgBiAKSxsiAykCCCJipyIFIAhPDQAgAykCACFhIGJCIIinIRQCQAJAIAogDyAFQQR0aiIDKAIIIgVGBEAgA0EIaiEDDAELA0AgBSAGTw0CIAogDiAFQQR0aiIDKAIAIgVHDQALCyADIGE+AgALIAggFE0NAAJ/IAogDyAUQQR0aiIDKAIMIgVGBEAgA0EMagwBCwNAIAUgBk8NAiAKIA4gBUEEdGoiAygCBCIFRw0ACyADQQRqCyBhQiCIPgIACyARIAZBAWsiBjYCFCAOIAZBBHRqIgMpAgAhYSAJQQhqIANBCGopAgA3AgAgCSBhNwIAIAYgCk0NACAJKQIIImGnIgMgCE8NACBhQiCIpyEJAkACQCAGIA8gA0EEdGoiAygCCCIFRgRAIANBCGohAwwBCwNAIAUgBk8NAiAGIA4gBUEEdGoiAygCACIFRw0ACwsgAyAKNgIACyAIIAlNDQACfyAGIA8gCUEEdGoiAygCDCIFRgRAIANBDGoMAQsDQCAFIAZPDQIgBiAOIAVBBHRqIgMoAgQiBUcNAAsgA0EEagsgCjYCAAsgHygCACIKQX9HDQALCyARIAhBAWsiCDYCCCAPIAhBBHRqIgMpAgAhYSAMQQhqIANBCGopAgA3AgAgDCBhNwIAIAggFU0NACAHKQIIImFCIIinIQYgYaciBSARKAIUIgNJBEADQCAOIAVBBHRqIgUgFTYCCCADIAUoAgAiBUsNAAsLIAMgBk0NAANAIA4gBkEEdGoiBUEMaiAVNgIAIAMgBSgCBCIGSw0ACwsgASAIIBVLBH8gASAHQQAgCCAVSxspAgA3AgRBAQVBAAs2AgAgBCgCsAdBAUcNAiAAKAIkIgMgBCgCtAciAUsEQCAAKAIcIAFBFGxqQQAgASADSRsiASgCACAEKAK4B0YNAgtB8NbAAEErQaiqwQAQxAkACyAEKAK0AiEFIAQoArACIQYCQCAAKAIQBEAgAEEIaigCACIHIAAoAhQiCU0NBCAAKAIAIgMgCUGYAmxqIgEoAgANBSABQQE2AgAgACAAKAIYQQFqNgIYIAAgASkCBDcCECABQQxqIAU2AgAgAUEIaiAGNgIAIAEgACgCDCIINgIEIAFBEGogGEGIAhD/CxoMAQsgBCAFNgK0ByAEIAY2ArAHIB4gGEGIAhD/CxogBEEIaiEGIwBBkAJrIgEkACAAIABBCGoiBSgCABCBAiAEQbAHaiIDQQhqIQogAygCBCEOIAMoAgAhDwJAAkACQCAAKAIQBEAgBSgCACIDIABBFGooAgAiBU0NAiAAKAIAIAVBmAJsaiIDKAIARQ0BIAFBFGpBADYCACABQdTGwAA2AhAgAUIBNwIEIAFBiI7BADYCACABQZCOwQAQggoACyABIA42AgQgASAPNgIAIAFBCGogCkGIAhD/CxogARDNAUGgjsEAQT4gAUGc18AAQeCOwQAQpAgACyADQQE2AgAgACAAKAIYQQFqNgIYIAAgAykCBDcCECADQQxqIA42AgAgA0EIaiAPNgIAIAMgACgCDCIONgIEIANBEGogCkGIAhD/CxogBiAONgIEIAYgBTYCACABQZACaiQADAELIAUgA0HkjcEAEMwIAAsgBCgCDCEIIAQoAgghCSAAQQhqKAIAIQcgACgCACEDCyAHIAlNDQQgAyAJQZgCbGpBACAHIAlLGyIBKAIAQQFHDQQgASgCBCAIRw0EIAEoAhAiA0UNBiABKAIIIQEgA0HUA2whDCAAKAIkIQUgACgCHCEGA0AgAUEMaigCACIDIAVPDQYgBiADQRRsakEAIAMgBUkbIgMoAgAgAUEQaigCAEcNBiADIAg2AgwgAyAJNgIIIAMgASgCADYCECABQdQDaiEBIAxB1ANrIgwNAAsMBgsgASAVNgIECyAEQbACahDNAQwECyAJIAdB5I3BABDMCAALIARBxAdqQQA2AgAgBEHUxsAANgLAByAEQgE3ArQHIARBiI7BADYCsAcgBEGwB2pBkI7BABCCCgALQfCOwQBBE0GIqsEAEOkLAAtB8NbAAEErQZiqwQAQxAkACyACIA1HDQALIA0hAgsgDSACayIAQZACbSEBIAAEQCABQZACbCEBA0AgAhDNASACQZACaiECIAFBkAJrIgENAAsLIBBFDQAgEK1CkAJ+p0UNACALELEBCyAEQcAJaiQADwsgAUEEQezqwwAoAgAiAEGYByAAGxEAAAALQZj6wABBHUGg+8AAENsKAAvhQgMnfRN/BH4jAEHAAWsiMCQAAkACQAJAAkAgBCgCVEECRiAFKAJUIjlBAkZxRQRAIDBBCGoiMUEcaiABIAKUQwAAgL8gA7xBgICAgHhxQYCAgPwDcr4iDSADkpUiCpQiCSAEQSRqKgIAIgyUIA0gAiAClCAKlJIiCyAEQShqKgIAIg6UkiAEQSxqKgIAIg8gApSTOAIAIDFBFGogCSAEQRhqKgIAIhCUIAsgBEEcaioCACIRlJIgBEEgaioCACITIAKUkzgCACAxQQxqIAkgBEEMaioCACIUlCALIARBEGoqAgAiEpSSIARBFGoqAgAiFSAClJM4AgAgMCAMIAogDSABlCABlJRDAACAP5IiCpQgDiANIAmUIgyUkiAPIA2MIAGUIg2UkjgCICAwIAogEJQgDCARlJIgDSATlJI4AhggMCAKIBSUIAwgEpSSIA0gFZSSOAIQIDAgBCoCACIOIAmUIARBBGoqAgAiDyALlJIgBEEIaioCACIQIAKUkyIoOAIMIDAgDSAQlCAOIAqUIA8gDJSSkiIpOAIIIABBEGoqAgAhGSAFQRRqKgIAIQ4gBUEQaioCACEPIAVBIGoqAgAhECAFQRxqKgIAIREgAEEUaioCACEeIAUqAgAhFyAFKgIIIRogBSoCBCEYIAUqAgwhFiAFKgIYIRsgACoCACITIAVBKGoqAgAiHJQgAEEEaioCACIUIAUqAiQiIpSTIhIgEpIhHyAAQQhqKgIAIhIgIpQgEyAFQSxqKgIAIiCUkyIVIBWSIR0gMEH4AGoiMUEsaiAAQRhqKgIAIiMgICAAQQxqKgIAIhUgH5QgEyAdlCAUIBQgIJQgEiAclJMiICAgkiIglJOSkpIiJzgCACAxQShqIB4gHCAVIB2UIBIgIJQgEyAflJOSkpIiKjgCACAxQSBqICMgECAVIBMgEZQgFCAblJMiHCAckiIhlCATIBIgG5QgEyAQlJMiHCAckiIklCAUIBQgEJQgEiARlJMiECAQkiIQlJOSkpIiHDgCACAxQRxqIB4gESAVICSUIBIgEJQgEyAhlJOSkpIiETgCACAxQRRqICMgDiAVIBMgD5QgFCAWlJMiJSAlkiIllCATIBIgFpQgEyAOlJMiJiAmkiImlCAUIBQgDpQgEiAPlJMiDiAOkiIrlJOSkpIiDjgCACAxQRBqIB4gDyAVICaUIBIgK5QgEyAllJOSkpIiDzgCACAwIBkgGyAVIBCUIBQgIZQgEiAklJOSkpIiGzgCkAEgMCAZIBYgFSArlCAUICWUIBIgJpSTkpKSIhA4AoQBIDAgIyAaIBUgGCATlCAXIBSUkyIWIBaSIhaUIBMgFyASlCAaIBOUkyIhICGSIiGUIBQgGiAUlCAYIBKUkyIaIBqSIiSUk5KSkiIaOAKAASAwIB4gGCAVICGUIBIgJJQgEyAWlJOSkpIiGDgCfCAwIBkgFyAVICSUIBQgFpQgEiAhlJOSkpIiFzgCeCAwIBkgIiAVICCUIBQgH5QgEiAdlJOSkpIiFjgCnAEgMEEoaiIAQRRqIAkgG5QgCyARlJIgHCAClJM4AgAgAEEMaiAJIBCUIAsgD5SSIA4gApSTOAIAIABBHGogCSAWlCALICqUkiAnIAKUkzgCACAwIA0gHJQgCiAblCAMIBGUkpI4AjggMCANIA6UIAogEJQgDCAPlJKSOAIwIDAgCSAXlCALIBiUkiAaIAKUkyIfOAIsIDAgDSAalCAKIBeUIAwgGJSSkiIdOAIoIDAgDSAnlCAKIBaUIAwgKpSSkjgCQCA5QQJNDQIgGCAPkyIJIBsgEJMiC5QgFyAQkyIKIBEgD5MiDJSTIiIgA5QgGiAOkyINIAyUIAkgHCAOkyIJlJMiICABlCAKIAmUIA0gC5STIicgApSSkiIXQwAAAABbDQICQCAXQwAAgH9bDQAgF0MAAID/Ww0AIBeLIglDAAAANF8NAyAJIAlDAAAANJRfDQMLIAQoAlQiNkUNAyA5QQFrIjhBA0sNASAFKAJQITIgMCkDQCJDQiCIp74gMCkDOCJFQiCIp74iGJMhKiAYIDApAzAiRkIgiKe+IhaTISEgMCkDKCJEQiCIp74gMEEoaiA4QQN0aiIAKgIEIiSTISUgQ6e+IEWnviIbkyEmIBsgRqe+IhyTISsgHCAdkyEsIBYgH5MhLSBEp74gACoCACIukyEvIDBBCGohNSA4QQJGITpBMCEAA0ACQAJAIABBwABHBEAgLCA1KQMAIkNCIIinviIKIB+TlCAtIEOnviIMIB2TlJMhCwJAIC8gCiAkk5QgJSAMIC6TlJMiCUMAAAAAWwRAIAshCQwBCyAJIAuUQwAAAABdDQMLICsgCiAWk5QgISAMIByTlJMhCwJAIAlDAAAAAFsEQCALIQkMAQsgCyAJlEMAAAAAXQ0DCyA6DQEgCUMAAAAAXARAICYgCiAYk5QgKiAMIBuTlJMgCZRDAAAAAF0NAwsgOEEDRg0BQQRBBEG49MAAEMwIAAtBBEEEQZj0wAAQzAgACyAgIDAqAnggBCA3aiIxKgIAIgyTlCAnIDAqAnwgMUEEaioCACINk5SSICIgMCoCgAEgMUEIaioCACIOk5SSIBeVIhogBl9FDQAgFCAMIBogAZSSIBmTIhCUIBMgDSAaIAKUkiAekyIJlJMiCyALkiEKIBIgCZQgFCAOIBogA5SSICOTIguUkyIPIA+SIQ8gCyAVIAqUIBQgD5QgEyATIAuUIBIgEJSTIgsgC5IiEZSTkpIhCyAJIBUgEZQgEyAKlCASIA+Uk5KSIQkgECAVIA+UIBIgEZQgFCAKlJOSkiEKIAAgBGooAgAhMQJAIAgEQCAyITQgCiEQIAkhESALIQ8gDCEKIA0hCSAOIQsMAQsgMSE0IDIhMSAMIRAgDSERIA4hDwsgBygCCCIzIAdBBGooAgBGBEAgByAzEOQFIAcoAgghMwsgByAzQQFqNgIIIAcoAgAgM0EwbGoiM0IANwIkIDMgMTYCICAzIDQ2AhwgMyAaOAIYIDMgCjgCDCAzIA84AgggMyAROAIEIDMgEDgCACAzQSxqQQA2AgAgM0EUaiALOAIAIDNBEGogCTgCAAsgNUEIaiE1IDdBDGohNyAAQQRqIQAgNkEBayI2DQALDAILIABBBGoqAgAiEyAFQRRqKgIAIg6UIABBCGoqAgAiFCAFQRBqKgIAIg+UkyIJIAmSIQogACoCACISIA+UIBMgBSoCDCINlJMiCSAJkiEMIAEgApRDAACAvyADvEGAgICAeHFBgICA/ANyviIJIAOSlSIQlCILIABBEGoqAgAiIyANIABBDGoqAgAiFSAKlCATIAyUIBQgFCANlCASIA6UkyINIA2SIhGUk5KSkiIZlCAJIAIgApQgEJSSIg0gAEEUaioCACIXIA8gFSARlCAUIAqUIBIgDJSTkpKSIh6UkiAAQRhqKgIAIhogDiAVIAyUIBIgEZQgEyAKlJOSkpIiGCAClJMhHSAJjCABlCIKIBiUIBAgCSABlCABlJRDAACAP5IiDCAZlCAJIAuUIgkgHpSSkiEqIAUqAggiECATlCAFKgIEIhEgFJSTIg4gDpIhDiARIBKUIAUqAgAiFiATlJMiDyAPkiEPIAsgIyAWIBUgDpQgEyAPlCAUIBYgFJQgECASlJMiFiAWkiIflJOSkpIiFpQgDSAXIBEgFSAflCAUIA6UIBIgD5STkpKSIhuUkiAaIBAgFSAPlCASIB+UIBMgDpSTkpKSIh8gApSTIRAgCiAflCAMIBaUIAkgG5SSkiERIARBDGoqAgAiHCAMlCAJIARBEGoqAgAiKJSSIAogBEEUaioCACIplJIgCiAEQQhqKgIAIiKUIAQqAgAiICAMlCAEQQRqKgIAIicgCZSSkiIhkyIKIAqUIAsgHJQgDSAolJIgKSAClJMgICALlCAnIA2UkiAiIAKUkyIkkyINIA2UkkMAAAAAkiIMEIgBIglDAAAANF9FBEAgDSAJlSEmIAogCZUhJQsCQCAqIBGTIg4gDpQgHSAQkyIPIA+UkkMAAAAAkiILEIgBIh1DAAAANF8NACAJQwAAADRfDQAgJSAOIB2VlCAmIA8gHZWUkkNeg2w/YA0AQQAhAAJ/AkAgDEMAAAA0XyIyIAtDAAAANF9xDQAgISARkyIJIA6UICQgEJMiECAPlJIhHQJAAkACQAJAAkAgMkUEQCAKIAmUIA0gEJSSIRAgC0MAAAA0Xw0BAn1DAAAAACAMIAuUIhEgCiAOlCANIA+UkiINIA2UIgqTIg5DAAAANF5FDQAaQwAAAAAgDotDAAAANF8NABpDAADAf0MAAIA/IBGYIBEgEVwbQwAAwH9DAACAPyAKmCAKIApcG1sEQEMAAAAAIBG8IjIgCrwiNGtBBEsgNCAya0EESyAyIDRLG0EBRw0BGgsgDSAdlCAQIAuUkyAOlSIJQwAAgD8gCUMAAIA/XRtDAAAAACAJQwAAAABeGwshCSAdIA0gCZSSIAuVIgpDAAAAAF0NAiAKQwAAgD9eRQ0EIA0gEJMgDJUiCUMAAAAAXkUNAyAJQwAAgD8gCUMAAIA/XRshCUMAAIA/IQoMBAtBACAdIAuVIglDAAAAAF5FDQYaIAlDAACAPyAJQwAAgD9dGyEKDAQLQwAAAAAhCiAQjCAMlSIJQwAAAABeRQ0EIAlDAACAPyAJQwAAgD9dGyEJDAILQwAAAAAhCiAQjCAMlSIJQwAAAABeRQ0DIAlDAACAPyAJQwAAgD9dGyEJDAELQQEMAwsgCUMAAAAAWw0AIAlDAACAP1sEQEEBITYMAQtDAACAPyAJk7whNiAJvCExQQEhMwtBACAKQwAAAABbDQEaQQEgCkMAAIA/Ww0BGiAKvCE3QQEhAEMAAIA/IAqTvAwBC0EACyEyIDBBKGoiNEEIaiAxNgIAIDAgNjYCLCAwIDM2AiggMEH4AGoiMUEIaiA3NgIAIDAgMjYCfCAwIAA2AnggMEHoAGogNBCUCSAwQQhqIDEQlAkgBiAfIDAqAggiCZQgGCAwKgIMIguUkiINICIgMCoCaCIKlCApIDAqAmwiDJSSIgaTIAOUIBYgCZQgGSALlJIiDiAgIAqUIBwgDJSSIgOTIAGUIBsgCZQgHiALlJIiCSAnIAqUICggDJSSIgGTIAKUkpIiD2BFDQQgEyAOICOTIguUIBIgCSAXkyIKlJMiAiACkiECIBQgCpQgEyANIBqTIgyUkyIJIAmSIQkgDCAVIAKUIBMgCZQgEiASIAyUIBQgC5STIgwgDJIiDZSTkpIhDiAKIBUgDZQgEiAClCAUIAmUk5KSIQwgCyAVIAmUIBQgDZQgEyAClJOSkiEJIAUoAkAhMyAEKAJAIQACQCAIBEAgMyE1IAAhMyAJIQ0gDCELIA4hCiADIQkgASEMIAYhDgwBCyAAITUgAyENIAEhCyAGIQoLIAcoAggiACAHQQRqKAIARgRAIAcgABDkBSAHKAIIIQALIAcgAEEBajYCCCAHKAIAIABBMGxqIgBCADcCJCAAIDM2AiAgACA1NgIcIAAgDzgCGCAAIAk4AgwgACAKOAIIIAAgCzgCBCAAIA04AgAgAEEsakEANgIAIABBFGogDjgCACAAQRBqIAw4AgAMBAsgMEEIaiIAQQhqIARBCGooAgA2AgAgAEEUaiIFIARBFGooAgA2AgAgMCAEKQIANwMIIDAgBCkCDDcCFCAwQShqIgRBFGogGDgCACAEQRBqIB44AgAgMCAZOAI0IDAgHzgCMCAwIBs4AiwgMCAWOAIoIDBB+ABqITEgACoCDCIfIAAqAgAiCpMiECAQlCAAQRBqKgIAIh0gACoCBCIMkyIRIBGUkiAFKgIAIhwgACoCCCINkyIZIBmUkkMAAAAAkiEeQQIhMkEAIQUCfyAEIgBBFGohBCAQIAAqAgwgCpOUIBEgAEEQaioCACAMk5SSIBkgBCoCACANk5SSIgYgECAAKgIAIAqTlCARIAAqAgQgDJOUkiAZIAAqAgggDZOUkiILXUUEQCAGIQkgCyEGQQAMAQsgACkCDCFDIAAgACkCADcCDCAAIEM3AgAgBCgCACEyIAQgAEEIaiIEKAIANgIAIAQgMjYCAEEAITIgCyEJQQILIQQCQCAGIB5eDQAgCUMAAAAAXQ0AIAkgBpMhKAJ/IAZDAAAAAF5FBEAgACoCCCIYQwAAAAAgBpMgKJUiCyAAKgIUIBiTlJIhKSAAKgIEIhYgCyAAKgIQIBaTlJIhIiAAKgIAIhsgCyAAKgIMIBuTlJIhIEEBIQQgCiELIAwhDiANIQ9BAAwBCyAZIAYgHpUiC5QgDZIhDyARIAuUIAySIQ4gECALlCAKkiELIAAqAgAiGyEgIAAqAgQiFiEiIAAqAggiGCEpQQELIQUCfyAJIB5dRQRAIBggHiAGkyAolSIJIAAqAhQgGJOUkiEGIBYgCSAAKgIQIBaTlJIhCiAbIAkgACoCDCAbk5SSIQlBASEyQQIMAQsgGSAJIB6VIgaUIA2SIRwgESAGlCAMkiEdIBAgBpQgCpIhHyAAKgIUIQYgACoCECEKIAAqAgwhCUEBCyEAIDEgCzgCBCAxQUBrIDI2AgAgMUE8aiAANgIAIDFBOGogBjgCACAxQTRqIAo4AgAgMUEwaiAJOAIAIDFBLGogHDgCACAxQShqIB04AgAgMUEkaiAfOAIAIDFBIGogBDYCACAxQRxqIAU2AgAgMUEYaiApOAIAIDFBFGogIjgCACAxQRBqICA4AgAgMUEMaiAPOAIAIDFBCGogDjgCAEEBIQULIDEgBTYCACAwKAJ4QQFHDQMgEyAwQfgAaiIAQRBqKgIAIg8gI5MiCpQgEiAAQRRqKgIAIhAgF5MiDJSTIgYgBpIhBiAUIAyUIBMgMEGQAWoqAgAiESAakyIJlJMiCyALkiELIAkgFSAGlCATIAuUIBIgEiAJlCAUIAqUkyIJIAmSIg2Uk5KSIQkgDCAVIA2UIBIgBpQgFCALlJOSkiEOIAogFSALlCAUIA2UIBMgBpSTkpIhDSAPIDAqAnwiCpMgAZQgECAAQQhqKgIAIg+TIAKUkiARIDBBhAFqKgIAIhCTIAOUIDBBsAFqIQAgMEGsAWohBCAwQagBaiEFIDBBpAFqITEgMEGgAWohMiAwQZwBaiE0AkAgCARAIA0hDCAOIQYgCSELIAohDSAPIQ4gECEJDAELIAohDCAPIQYgECELC5IhGCAAKgIAIQogBCoCACEZIAUqAgAhHiAxKgIAIQ8gMioCACEQIDQqAgAhESAHKAIIIgAgB0EEaigCAEYEQCAHIAAQ5AUgBygCCCEACyAHIABBAWoiMzYCCCAHKAIAIjUgAEEwbGoiAEIANwIcIAAgGDgCGCAAIA04AgwgACALOAIIIAAgBjgCBCAAIAw4AgAgAEEUaiAJOAIAIABBEGogDjgCACAAQSRqQgA3AgAgAEEsakEANgIAIBMgHiAjkyINlCASIBkgF5MiDJSTIgYgBpIhBiAUIAyUIBMgCiAakyILlJMiCSAJkiEJIAsgFSAGlCATIAmUIBIgEiALlCAUIA2UkyILIAuSIg6Uk5KSIQsgDCAVIA6UIBIgBpQgFCAJlJOSkiEMIA0gFSAJlCAUIA6UIBMgBpSTkpIhCSAeIBGTIAGUIBkgEJMgApSSIAogD5MgA5QCQCAIBEAgCSENIAwhAiALIQogESEJIBAhDCAPIQsMAQsgESENIBAhAiAPIQoLkiEBIAdBBGooAgAgM0YEQCAHIDMQ5AUgBygCACE1IAcoAgghMwsgByAzQQFqNgIIIDUgM0EwbGoiAEIANwIcIAAgATgCGCAAIAk4AgwgACAKOAIIIAAgAjgCBCAAIA04AgAgAEEUaiALOAIAIABBEGogDDgCACAAQSRqQgA3AgAgAEEsakEANgIADAMLIDhBBEGo9MAAEMwIAAsCQCAEKAJUIgBBAk0NACAEKgIYIAQqAgwiCZMiCyAEQQRqKgIAIARBEGoqAgAiCpMiDJQgBEEcaioCACAKkyIKIAQqAgAgCZMiCZSTIhwgA5QgCiAEQQhqKgIAIARBFGoqAgAiCpMiDZQgBEEgaioCACAKkyIKIAyUkyIiIAGUIAogCZQgCyANlJMiICAClJKSIglDAAAAAFsNACAJjCEaAkAgCUMAAID/Ww0AIAlDAACAf1sNACAaiyIJQwAAADRfDQEgCSAJQwAAADSUXw0BCyA5RQ0CIABBAWsiNEEDTQRAIDApAyAiQ0IgiKe+IDApAxgiRUIgiKe+IhiTIScgGCAwKQMQIkZCIIinviIWkyEqIDApAwgiREIgiKe+IDBBCGogNEEDdGoiACoCBCIhkyEkIAVBMGohNyBDp74gRae+IhuTISUgGyBGp74iH5MhJiAfICmTISsgFiAokyEsIESnviAAKgIAIi2TIS4gMEEoaiE1IDRBAkYhOCA5ITZBACEzA0ACQAJAIDNBMEcEQCArIDUpAwAiQ0IgiKe+IgogKJOUICwgQ6e+IgwgKZOUkyELAkAgLiAKICGTlCAkIAwgLZOUkyIJQwAAAABbBEAgCyEJDAELIAkgC5RDAAAAAF0NAwsgJiAKIBaTlCAqIAwgH5OUkyELAkAgCUMAAAAAWwRAIAshCQwBCyALIAmUQwAAAABdDQMLIDgNASAJQwAAAABcBEAgJSAKIBiTlCAnIAwgG5OUkyAJlEMAAAAAXQ0DCyA0QQNGDQFBBEEEQej0wAAQzAgAC0EEQQRByPTAABDMCAALIDBB+ABqIDNqIgBBCGoqAgAiCyAiIAQqAgAgACoCACIJk5QgICAEQQRqKgIAIABBBGoqAgAiCpOUkiAcIARBCGoqAgAgC5OUkiAalSIXIAOUkyEPIAogFyAClJMhECAJIBcgAZSTIREgFCAJIBmTIgyUIBMgCiAekyINlJMiCSAJkiEJIBIgDZQgFCALICOTIguUkyIKIAqSIQogCyAVIAmUIBQgCpQgEyATIAuUIBIgDJSTIgsgC5IiHZSTkpIhDiANIBUgHZQgEyAJlCASIAqUk5KSIQsgDCAVIAqUIBIgHZQgFCAJlJOSkiENIDcoAgAhMSAEKAJQIQACQCAIBEAgMSEyIAAhMSANIQwgCyEKIA4hCSARIQ0gECELIA8hDgwBCyAAITIgESEMIBAhCiAPIQkLIAcoAggiACAHQQRqKAIARgRAIAcgABDkBSAHKAIIIQALIAcgAEEBajYCCCAHKAIAIABBMGxqIgBCADcCJCAAIDE2AiAgACAyNgIcIAAgFzgCGCAAIA04AgwgACAJOAIIIAAgCjgCBCAAIAw4AgAgAEEsakEANgIAIABBFGogDjgCACAAQRBqIAs4AgALIDVBCGohNSAzQQxqITMgN0EEaiE3IDZBAWsiNg0ACwwBCyA0QQRB2PTAABDMCAALIDlFDQELQQAhOANAAkAgOCIAQQRHBEAgOSAAQQFqIjhGITpBACA4IDobIjFBA00EQCAEKAJUIj1FDQIgMEEoaiIyIABBA3RqKQMAIUUgMiAxQQN0aikDACFGQcAAITcgBSAAQQJ0akFAayE+IDFBDGwgMEH4AGoiMWoiO0EIaiE/IDtBBGohQCAxIABBDGxqIjxBCGohQSA8QQRqIUJBACEAIDBBCGohNUEAITMDQAJAAkACQAJAAkAgAEEwRwRAIAQoAlQiMUUNASAzQQFqIjMgMXAiMUEETw0CIDUpAwAhQyAwIDBBCGogMUEDdGopAwA3A2AgMCBDNwNYIDAgRjcDcCAwIEU3A2ggMEHIAGohMUMAAAAAIQsgMEHYAGoiMikCACFDAkACQAJAIDBB6ABqIjQpAggiRKe+IDQqAgAiD5MiCiAKlCBEQiCIp74gNCoCBCIRkyIMIAyUkkMAAAAAkiIJQwAAADRfIDIpAggiRKe+IDIqAgCTIg0gDZQgREIgiKe+IDIqAgSTIg4gDpSSQwAAAACSIhBDAAAANF8iMnENACAKIEOnviAPkyIXlCAMIENCIIinviARkyIRlJIhDwJAIDJFBEAgDSAXlCAOIBGUkiERIAlDAAAANF8NAUEAITIgECAJlCILIA0gCpQgDiAMlJIiDCAMlCIKkyINQwAAADRfDQQgDYtDAAAANF8NBAJAQwAAwH9DAACAPyALmCALIAtcG0MAAMB/QwAAgD8gCpggCiAKXBtcDQAgCrwiNCALvCI2TwRAIDQgNmtBBUkNBgwBCyA2IDRrQQVJDQULIA8gDCAMIA+UIAkgEZSTIA2VIgqUkiAJlSELDAMLIA8gCZUhCwwBCyARjCAQlSEKDAELQwAAAAAhCgsgMSAKOAIEIDFBCGogCzgCAEEBITILIDEgMjYCACAwKAJIQQFHDQUgMCoCTCILQwAAAABeRQ0FIAtDAACAP11FDQUgMCoCUCIKQwAAAABeRQ0FIApDAACAP11FDQUgBCgCVCIxRQ0DIDMgMXAiMkEETw0EQwAAgD8gCpMiDCA8KgIAlCAKIDsqAgCUkiIOQwAAgD8gC5MiDSAAIARqIjEqAgCUIAsgBCAyQQxsaiIyKgIAlJIiCZMgAZQgDCBCKgIAlCAKIEAqAgCUkiIPIA0gMUEEaioCAJQgCyAyKgIElJIiEJMgApSSIAwgQSoCAJQgCiA/KgIAlJIiDCANIDFBCGoqAgCUIAsgMioCCJSSIhGTIAOUkiIXIAZfRQ0FIBQgDiAZkyIOlCATIA8gHpMiCpSTIgsgC5IhCyASIAqUIBQgDCAjkyIMlJMiDSANkiENIAwgFSALlCAUIA2UIBMgEyAMlCASIA6UkyIMIAySIg+Uk5KSIQwgCiAVIA+UIBMgC5QgEiANlJOSkiEKIA4gFSANlCASIA+UIBQgC5STkpIhDSAEIDdqKAIAITEgPigCACEyAkAgCARAIDIhNCAxITIgDSELIAohDiAMIQ8gCSENIBAhCiARIQwMAQsgMSE0IAkhCyAQIQ4gESEPCyAHKAIIIjYgB0EEaigCAEYEQCAHIDYQ5AUgBygCCCE2CyAHIDZBAWo2AgggBygCACA2QTBsaiIxQgA3AiQgMSAyNgIgIDEgNDYCHCAxIBc4AhggMSANOAIMIDEgDzgCCCAxIA44AgQgMSALOAIAIDFBLGpBADYCACAxQRRqIAw4AgAgMUEQaiAKOAIADAULQQRBBEGY9cAAEMwIAAtBkNbAAEE5Qaj1wAAQxAkAC0EEQQRBuPXAABDMCAALQZDWwABBOUHI9cAAEMQJAAtBBEEEQdj1wAAQzAgACyA1QQhqITUgAEEMaiEAIDdBBGohNyAzID1HDQALDAILQQRBBEGI9cAAEMwIAAtBBEEEQfj0wAAQzAgACyA6RQ0ACwsgMEHAAWokAAu2NgMJfwJ9AX4jAEEQayIJJAAgCSAAIAEoAghBB2pBeHFqIAEoApgBEQAAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgCSgCAEEBaw4SAQIDBAUGBwgJCgsMDQ4PEBESAAsgCSgCBEEAIQEgAigCACIFQQRqIgIoAgAgBUEIaiIDKAIAIgBrQQNNBEAgBSAAQQQQ0AYgAygCACEACyAFKAIAIABqQQA2AAAgAyAAQQRqIgA2AgAqAgAhDCACKAIAIABrQQNNBEAgBSAAQQQQ0AYgBUEIaigCACEACyAFQQhqIABBBGo2AgAgBSgCACAAaiAMOAAADBQLIAkoAgQgAigCACIDQQhqIgQoAgAhASADQQRqKAIAIAFrQQNNBEAgAyABQQQQ0AYgBCgCACEBCyAEIAFBBGo2AgAgAygCACABakEBNgAAIAIQhwUhAQwTCyAJKAIEIQQgAigCACIDQQhqIgAoAgAhASADQQRqKAIAIAFrQQNNBEAgAyABQQQQ0AYgACgCACEBCyAAIAFBBGo2AgAgAygCACABakECNgAAIAQgAhCHBSIBDRIgBEEMaiACEIcFIgENEiAEKgIYIQwgA0EEaigCACADQQhqIgAoAgAiAmtBA00EQCADIAJBBBDQBiAAKAIAIQILIAAgAkEEajYCACADKAIAIAJqIAw4AAAMEQsgCSgCBCEEIAIoAgAiA0EIaiIAKAIAIQEgA0EEaigCACABa0EDTQRAIAMgAUEEENAGIAAoAgAhAQsgACABQQRqNgIAIAMoAgAgAWpBAzYAACAEIAIQhwUiAQ0RIARBDGogAhCHBSEBDBELIAkoAgQhAyACKAIAIgRBCGoiACgCACEBIARBBGooAgAgAWtBA00EQCAEIAFBBBDQBiAAKAIAIQELIAAgAUEEajYCACAEKAIAIAFqQQQ2AAAgAyACEIcFIgENECADQQxqIAIQhwUiAQ0QIANBGGogAhCHBSEBDBALIAkoAgQhCyACKAIAIgRBCGoiACgCACEBIARBBGooAgAgAWtBA00EQCAEIAFBBBDQBiAAKAIAIQELIAAgAUEEajYCACAEKAIAIAFqQQU2AAAgCSACNgIMIAlBDGogCxBwIgENDyALQcgAaigCACEEIAsoAkAhAyACKAIAIgVBCGoiACgCACEBIAVBBGooAgAgAWtBB00EQCAFIAFBCBDQBiAAKAIAIQELIAAgAUEIajYCACAFKAIAIAFqIAStNwAAIARBDGwhAANAIAAEQCAAQQxrIQAgAyACEIcFIQEgA0EMaiEDIAFFDQEMEQsLIAtB1ABqKAIAIQQgCygCTCEBIAIoAgAiBkEIaiIAKAIAIQUgBkEEaigCACAFa0EHTQRAIAYgBUEIENAGIAAoAgAhBQsgACAFQQhqIgA2AgAgBigCACAFaiAErTcAACAEBEAgASAEQQxsaiEFIAZBBGohCCAGQQhqIQcDQCABKAIAIQQgCCgCACAAa0EDTQRAIAYgAEEEENAGIAcoAgAhAAsgBigCACAAaiAENgAAIAcgAEEEaiIANgIAIAFBBGooAgAhBCAIKAIAIABrQQNNBEAgBiAAQQQQ0AYgBygCACEACyAGKAIAIABqIAQ2AAAgByAAQQRqIgM2AgAgAUEIaigCACEEIAgoAgAgA2tBA00EQCAGIANBBBDQBiAHKAIAIQMLIAcgA0EEaiIANgIAIAYoAgAgA2ogBDYAACAFIAFBDGoiAUcNAAsLIAsoAlgiAEUEQCACKAIAIgRBCGoiACgCACIBIARBBGooAgBGBEAgBCABQQEQ0AYgACgCACEBCyAAIAFBAWo2AgAgBCgCACABakEAOgAADA4LIAIoAgAiCkEEaiEDIApBCGoiBCgCACIBIAMoAgBGBEAgCiABQQEQ0AYgBCgCACEBCyAKKAIAIAFqQQE6AAAgBCABQQFqIgE2AgAgC0HgAGooAgAhBCADKAIAIAFrQQdNBEAgCiABQQgQ0AYgCkEIaigCACEBCyAKQQhqIAFBCGo2AgAgCigCACABaiAErTcAACAEQQxsIQMDQCADBEAgA0EMayEDIAAgAhCHBSEBIABBDGohACABRQ0BDBELCyALQfwAaigCACEEIAtB9ABqKAIAIQAgCkEEaiIHKAIAIApBCGoiBigCACIBa0EHTQRAIAogAUEIENAGIAYoAgAhAQsgBiABQQhqNgIAIAooAgAgAWogBK03AAAgBEEYbCEEA0AgBEUNDiAAQQhqKAIAIQggACgCBCEFIABBDGogBygCACAGKAIAIgFrQQNNBEAgCiABQQQQ0AYgBigCACEBCyAKKAIAIAFqIAU2AAAgBiABQQRqIgE2AgAgAEEYaiEAIAcoAgAgAWtBA00EQCAKIAFBBBDQBiAGKAIAIQELIAYgAUEEajYCACAKKAIAIAFqIAg2AAAgBEEYayEEIAIQhwUiAUUNAAsMDwsgCSgCBCEIIAIoAgAiBEEIaiIAKAIAIQEgBEEEaigCACABa0EDTQRAIAQgAUEEENAGIAAoAgAhAQsgACABQQRqNgIAIAQoAgAgAWpBBjYAACAJIAI2AgwgCUEMaiAIEHAiAQ0OIAhByABqKAIAIQQgCCgCQCEDIAIoAgAiBUEIaiIAKAIAIQEgBUEEaigCACABa0EHTQRAIAUgAUEIENAGIAAoAgAhAQsgACABQQhqNgIAIAUoAgAgAWogBK03AAAgBEEMbCEAA0AgAARAIABBDGshACADIAIQhwUhASADQQxqIQMgAUUNAQwQCwsgCEHUAGooAgAhAyAIKAJMIQAgAigCACIHQQhqIgEoAgAhBCAHQQRqKAIAIARrQQdNBEAgByAEQQgQ0AYgASgCACEECyABIARBCGoiAjYCACAHKAIAIARqIAOtNwAAIANFDQ0gACADQQN0aiEDIAdBBGohBSAHQQhqIQgDQCAAKAIAIQEgBSgCACACa0EDTQRAIAcgAkEEENAGIAgoAgAhAgsgBygCACACaiABNgAAIAggAkEEaiIBNgIAIABBBGooAgAhBCAFKAIAIAFrQQNNBEAgByABQQQQ0AYgCCgCACEBCyAIIAFBBGoiAjYCACAHKAIAIAFqIAQ2AAAgAyAAQQhqIgBHDQALDA0LIAkoAgQgAigCACIDQQhqIgQoAgAhASADQQRqKAIAIAFrQQNNBEAgAyABQQQQ0AYgBCgCACEBCyAEIAFBBGo2AgAgAygCACABakEHNgAAIAIQhwUhAQwNCyAJKAIEIQYgAigCACIEQQhqIgAoAgAhASAEQQRqKAIAIAFrQQNNBEAgBCABQQQQ0AYgACgCACEBCyAAIAFBBGo2AgAgBCgCACABakEINgAAIAkgAjYCDCAJQQxqIAYQ0AQiAQ0MIAZBHGooAgAhBCAGQRRqKAIAIQAgAigCACIKQQhqIgEoAgAhAyAKQQRqKAIAIANrQQdNBEAgCiADQQgQ0AYgASgCACEDCyABIANBCGoiATYCACAKKAIAIANqIAStNwAAIAQEQCAKQQRqIQggCkEIaiEHA0AgAC0AACEFIABBAWohACAHIAEgCCgCAEcEfyABBSAKIAFBARDQBiAHKAIACyIDQQFqIgE2AgAgCigCACADaiAFOgAAIARBAWsiBA0ACwsgBjUCICEOIApBBGoiACgCACABa0EHTQRAIAogAUEIENAGIApBCGooAgAhAQsgCigCACABaiAONwAAIApBCGoiBCABQQhqIgE2AgAgBjUCJCEOIAAoAgAgAWtBB00EQCAKIAFBCBDQBiAEKAIAIQELIAQgAUEIajYCACAKKAIAIAFqIA43AAAgBkEoaiACEIcFIgENDCAGQTRqIAIQhwUiAQ0MIAZBQGsgAhCHBSIBDQwgBjUCTCEOIAIoAgAiAUEIaiIAKAIAIQIgAUEEaigCACACa0EHTQRAIAEgAkEIENAGIAAoAgAhAgsgACACQQhqNgIAIAEoAgAgAmogDjcAAAwLCyACKAIAIgRBCGoiACgCACEBIARBBGooAgAgAWtBA00EQCAEIAFBBBDQBiAAKAIAIQELIAAgAUEEajYCACAEKAIAIAFqQQk2AAAgCSgCBCEIIAkgAjYCCCAIKAIIIQEgCCgCACEAIAIoAgAiBEEIaigCACEDIARBBGooAgAgA2tBB00EQCAEIANBCBDQBiAEQQhqKAIAIQMLIARBCGogA0EIajYCACAEKAIAIANqIAGtNwAAIAFBJGwhAwNAIAMEQCAJIAI2AgwgCUEMaiAAEL8EIgENDSAAQRBqIAIQhwUiAQ0NIANBJGshAyAAQSBqIQQgACgCHCAAQSRqIQAgBCgCACACECQiAUUNAQwNCwsgCUEIaiAIQQxqEHAiAQ0LIAhB1ABqKAIAIQMgCCgCTCEAIAIoAgAiBUEIaiIEKAIAIQEgBUEEaigCACABa0EHTQRAIAUgAUEIENAGIAQoAgAhAQsgBCABQQhqNgIAIAUoAgAgAWogA603AAAgA0EYbCEDA0AgAwRAIAAgAhCHBSIBDQ0gA0EYayEDIABBDGogAEEYaiEAIAIQhwUiAUUNAQwNCwsgCEHYAGogAhCHBSIBDQsgCEHkAGogAhCHBSIBRQ0KDAsLIAkoAgQgAigCACIDQQhqIgQoAgAhASADQQRqKAIAIAFrQQNNBEAgAyABQQQQ0AYgBCgCACEBCyAEIAFBBGo2AgAgAygCACABakEKNgAAIAIQjgEhAQwKCyAJKAIEIQQgAigCACIDQQRqIgAoAgAgA0EIaiICKAIAIgFrQQNNBEAgAyABQQQQ0AYgAigCACEBCyADKAIAIAFqQQs2AAAgAiABQQRqIgE2AgAgBCoCACEMIAAoAgAgAWtBA00EQCADIAFBBBDQBiADQQhqKAIAIQELIAMoAgAgAWogDDgAACADQQhqIgAgAUEEaiIBNgIAIAQqAgQhDCADQQRqKAIAIAFrQQNNBEAgAyABQQQQ0AYgACgCACEBCyAAIAFBBGo2AgAgAygCACABaiAMOAAADAgLIAkoAgQhBCACKAIAIgNBBGoiACgCACADQQhqIgIoAgAiAWtBA00EQCADIAFBBBDQBiACKAIAIQELIAMoAgAgAWpBDDYAACACIAFBBGoiATYCACAEKgIAIQwgACgCACABa0EDTQRAIAMgAUEEENAGIANBCGooAgAhAQsgAygCACABaiAMOAAAIANBCGoiACABQQRqIgE2AgAgBCoCBCEMIANBBGooAgAgAWtBA00EQCADIAFBBBDQBiAAKAIAIQELIAAgAUEEajYCACADKAIAIAFqIAw4AAAMBwsgCSgCBCEEIAIoAgAiA0EIaiIAKAIAIQEgA0EEaigCACABa0EDTQRAIAMgAUEEENAGIAAoAgAhAQsgACABQQRqNgIAIAMoAgAgAWpBDTYAACAEIAIQhwUiAQ0HIAQqAgwhDCADQQRqKAIAIANBCGoiACgCACICa0EDTQRAIAMgAkEEENAGIAAoAgAhAgsgACACQQRqNgIAIAMoAgAgAmogDDgAAAwGCyAJKAIEIQQgAigCACIDQQhqIgAoAgAhASADQQRqKAIAIAFrQQNNBEAgAyABQQQQ0AYgACgCACEBCyAAIAFBBGo2AgAgAygCACABakEONgAAIAQgAhCHBSIBDQYgBEEMaiACEIcFIgENBiAEQRhqIAIQhwUiAQ0GIAQqAiQhDCADQQRqKAIAIANBCGoiACgCACICa0EDTQRAIAMgAkEEENAGIAAoAgAhAgsgACACQQRqNgIAIAMoAgAgAmogDDgAAAwFCyAJKAIEIQQgAigCACIDQQRqIgAoAgAgA0EIaiICKAIAIgFrQQNNBEAgAyABQQQQ0AYgAigCACEBCyADKAIAIAFqQQ82AAAgAiABQQRqIgE2AgAgBEEEaioCACENIAQqAgAhDCAAKAIAIAFrQQNNBEAgAyABQQQQ0AYgA0EIaigCACEBCyADKAIAIAFqIAw4AAAgA0EIaiICIAFBBGoiATYCACADQQRqIgAoAgAgAWtBA00EQCADIAFBBBDQBiACKAIAIQELIAMoAgAgAWogDTgAACACIAFBBGoiATYCACAEKgIIIQwgACgCACABa0EDTQRAIAMgAUEEENAGIANBCGooAgAhAQsgA0EIaiABQQRqNgIAIAMoAgAgAWogDDgAAAwECyAJKAIEIQQgAigCACIDQQRqIgAoAgAgA0EIaiICKAIAIgFrQQNNBEAgAyABQQQQ0AYgAigCACEBCyADKAIAIAFqQRA2AAAgAiABQQRqIgE2AgAgBEEEaioCACENIAQqAgAhDCAAKAIAIAFrQQNNBEAgAyABQQQQ0AYgA0EIaigCACEBCyADKAIAIAFqIAw4AAAgA0EIaiICIAFBBGoiATYCACADQQRqIgAoAgAgAWtBA00EQCADIAFBBBDQBiACKAIAIQELIAMoAgAgAWogDTgAACACIAFBBGoiATYCACAEKgIIIQwgACgCACABa0EDTQRAIAMgAUEEENAGIANBCGooAgAhAQsgA0EIaiABQQRqNgIAIAMoAgAgAWogDDgAAAwDCyAJKAIEIQQgAigCACIDQQhqIgAoAgAhASADQQRqKAIAIAFrQQNNBEAgAyABQQQQ0AYgACgCACEBCyAAIAFBBGo2AgAgAygCACABakERNgAAIAQgAhCOASIBDQMgBCoCYCEMIAIoAgAiAUEIaiIAKAIAIQIgAUEEaigCACACa0EDTQRAIAEgAkEEENAGIAAoAgAhAgsgACACQQRqNgIAIAEoAgAgAmogDDgAAAwCCyAJKAIEIQQgAigCACIDQQRqIgAoAgAgA0EIaiICKAIAIgFrQQNNBEAgAyABQQQQ0AYgAigCACEBCyADKAIAIAFqQRI2AAAgAiABQQRqIgE2AgAgACgCACABa0EDTQRAIAMgAUEEENAGIANBCGooAgAhAQsgA0EIaiABQQRqNgIAIAMoAgAgAWogBDYAAAwBCwJAIAsoAoABIgNFBEAgAigCACIEQQhqIgAoAgAiASAEQQRqKAIARgRAIAQgAUEBENAGIAAoAgAhAQsgACABQQFqNgIAIAQoAgAgAWpBADoAAAwBCyACKAIAIgZBBGohBSAGQQhqIgEoAgAiACAFKAIARgRAIAYgAEEBENAGIAEoAgAhAAsgBigCACAAakEBOgAAIAEgAEEBaiIENgIAIAtBiAFqKAIAIQEgBSgCACAEa0EHTQRAIAYgBEEIENAGIAZBCGooAgAhBAsgBkEIaiIIIARBCGoiADYCACAGKAIAIARqIAGtNwAAIAEEQCABQQJ0IQUDQCADKAIAIQEgA0EEaiEDIAggBkEEaigCACAAa0EDSwR/IAAFIAYgAEEEENAGIAgoAgALIgRBBGoiADYCACAGKAIAIARqIAE2AAAgBUEEayIFDQALCyALQZQBaigCACEBIAtBjAFqKAIAIQMgBkEEaigCACAAa0EHTQRAIAYgAEEIENAGIAZBCGooAgAhAAsgBkEIaiIIIABBCGoiBTYCACAGKAIAIABqIAGtNwAAIAEEQCABQQJ0IQQDQCADKAIAIQEgA0EEaiEDIAggBkEEaigCACAFa0EDSwR/IAUFIAYgBUEEENAGIAgoAgALIgBBBGoiBTYCACAGKAIAIABqIAE2AAAgBEEEayIEDQALCyALQaABaigCACEBIAtBmAFqKAIAIQAgBkEEaigCACAFa0EHTQRAIAYgBUEIENAGIAZBCGooAgAhBQsgBkEIaiIHIAVBCGoiBDYCACAGKAIAIAVqIAGtNwAAIAFFDQAgACABQQR0aiEDIAZBBGohCANAIAAoAgAhASAIKAIAIARrQQNNBEAgBiAEQQQQ0AYgBygCACEECyAGKAIAIARqIAE2AAAgByAEQQRqIgQ2AgAgAEEEaigCACEBIAgoAgAgBGtBA00EQCAGIARBBBDQBiAHKAIAIQQLIAYoAgAgBGogATYAACAHIARBBGoiBDYCACAAQQhqKAIAIQEgCCgCACAEa0EDTQRAIAYgBEEEENAGIAcoAgAhBAsgBigCACAEaiABNgAAIAcgBEEEaiIFNgIAIABBDGooAgAhASAIKAIAIAVrQQNNBEAgBiAFQQQQ0AYgBygCACEFCyAHIAVBBGoiBDYCACAGKAIAIAVqIAE2AAAgAyAAQRBqIgBHDQALCwJAIAsoAqQBIgNFBEAgAigCACIEQQhqIgAoAgAiASAEQQRqKAIARgRAIAQgAUEBENAGIAAoAgAhAQsgACABQQFqNgIAIAQoAgAgAWpBADoAAAwBCyACKAIAIgdBBGohBSAHQQhqIgEoAgAiACAFKAIARgRAIAcgAEEBENAGIAEoAgAhAAsgBygCACAAakEBOgAAIAEgAEEBaiIENgIAIAtBrAFqKAIAIQEgBSgCACAEa0EHTQRAIAcgBEEIENAGIAdBCGooAgAhBAsgB0EIaiIIIARBCGoiADYCACAHKAIAIARqIAGtNwAAIAEEQCABQQJ0IQUDQCADKAIAIQEgA0EEaiEDIAggB0EEaigCACAAa0EDSwR/IAAFIAcgAEEEENAGIAgoAgALIgRBBGoiADYCACAHKAIAIARqIAE2AAAgBUEEayIFDQALCyALQbgBaigCACEBIAtBsAFqKAIAIQQgB0EEaigCACAAa0EHTQRAIAcgAEEIENAGIAdBCGooAgAhAAsgB0EIaiIIIABBCGoiAzYCACAHKAIAIABqIAGtNwAAIAEEQCABQQJ0IQUDQCAEKAIAIQEgBEEEaiEEIAggB0EEaigCACADa0EDSwR/IAMFIAcgA0EEENAGIAgoAgALIgBBBGoiAzYCACAHKAIAIABqIAE2AAAgBUEEayIFDQALCyALQcQBaigCACEFIAtBvAFqKAIAIQAgB0EEaigCACADa0EHTQRAIAcgA0EIENAGIAdBCGooAgAhAwsgB0EIaiIBIANBCGoiBDYCACAHKAIAIANqIAWtNwAAIAVFDQAgBUECdCEFA0AgADUCACEOIABBBGohACABIAdBBGooAgAgBGtBB0sEfyAEBSAHIARBCBDQBiABKAIACyIDQQhqIgQ2AgAgBygCACADaiAONwAAIAVBBGsiBQ0ACwsgCy0AyAEhACACKAIAIgRBCGoiASgCACICIARBBGooAgBGBEAgBCACQQEQ0AYgASgCACECCyABIAJBAWo2AgAgBCgCACACaiAAOgAAC0EAIQELIAlBEGokACABC9EtAiZ/BH4jAEHACmsiBSQAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIAEpAwAiKVBFBEAgASkDCCIqUA0BIAEpAxAiK1ANAiApICt8IiwgKVQNAyApICp9IClWDQQgASwAGiETIAEvARghASAFICk+AgQgBUEIakEAIClCIIinIClCgICAgBBUIgQbNgIAIAVBAUECIAQbNgIAIAVBDGpBAEGYARCADBogBSAqPgKsASAFQagBaiIEQQhqQQAgKkIgiKcgKkKAgICAEFQiCRs2AgAg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IEUNACAgKAIAISIgCUEEOgDUByAJKALMASAJKALQASEEIAkgFDYCiAggCSAJKQLUATcDgAggCSAJKALIATYC/AcgCSAVNgL4ByAJIAkoAsABNgL0ByAJIAlBoAdqNgLwByAiIAlB8AdqQaCxwgAgBCgCDBEBACAJLQDUByICQQRGDQAgCUHgCGoiBEEIaiAKKQIANwMAIARBEGogDEEQaikCADcDACAEQRhqIAxBGGopAgA3AwAgBEEgaiAMQSBqKQIANwMAIARBKGogDEEoaikCADcDACAJQd4IaiANQQJqLQAAOgAAIAkgDCkCADcD4AggCSANLwAAOwHcCCAnIAkqAqAHIgheIRYgCCFXC0EEIQZBACEjQwAAAAAhKkMAAAAAISlBACEHQQQhBAJAIFpCBINQDQAgH0UNACAfKAIAISQgCUEEOgDUByAJKALMASAJKALQASEHIAkgFDYCiAggCSAJKQLUATcDgAggCSAJKALIATYC/AcgCSAVNgL4ByAJIAkoAsABNgL0ByAJIAlBoAdqNgLwByAkIAlB8AdqQaCxwgAgBygCDBEBACAJLQDUByIEQQRGBEBBACEHDAELIAlBqAhqIgdBCGogCikCADcDACAHQRBqIAxBEGopAgA3AwAgB0EYaiAMQRhqKQIANwMAIAdBIGogDEEgaikCADcDACAHQShqIAxBKGopAgA3AwAgCUGmCGogDUECai0AADoAACAJIAwpAgA3A6gIIAkgDS8AADsBpAggCSoCoAciKSAnXSEHICkhWAsCQCBaQgiDUA0AIB5FDQAgHigCACElIAlBBDoA1AcgCSgCzAEgCSgC0AEhCyAJIBQ2AogIIAkgCSkC1AE3A4AIIAkgCSgCyAE2AvwHIAkgFTYC+AcgCSAJKALAATYC9AcgCSAJQaAHajYC8AcgJSAJQfAHakGgscIAIAsoAgwRAQAgCS0A1AciBkEERg0AIAlB8AdqIgtBCGogCikCADcDACALQRBqIAxBEGopAgA3AwAgC0EYaiAMQRhqKQIANwMAIAtBIGogDEEgaikCADcDACALQShqIAxBKGopAgA3AwAgCUHuB2ogDUECai0AADoAACAJIAwpAgA3A/AHIAkgDS8AADsB7AcgCSoCoAciKiAnXSEjICohWQsgCUGABWoiCkEoaiAJQaAJaiILQShqKQMANwMAIApBIGogC0EgaikDADcDACAKQRhqIAtBGGopAwA3AwAgCkEQaiALQRBqKQMANwMAIApBCGogC0EIaikDADcDACAJQcgEaiIKQQhqIAlB4AhqIgtBCGopAwA3AwAgCkEQaiALQRBqKQMANwMAIApBGGogC0EYaikDADcDACAKQSBqIAtBIGopAwA3AwAgCkEoaiALQShqKQMANwMAIAkgCSkDoAk3A4AFIAkgCSkD4Ag3A8gEIAlBkARqIgpBKGogCUGoCGoiC0EoaikDADcDACAKQSBqIAtBIGopAwA3AwAgCkEYaiALQRhqKQMANwMAIApBEGogC0EQaikDADcDACAKQQhqIAtBCGopAwA3AwAgCUHQA2oiC0EoaiAJQfAHaiIKQShqKQMANwMAIAtBIGogCkEgaikDADcDACALQRhqIApBGGopAwA3AwAgC0EQaiAKQRBqKQMANwMAIAkgCSkDqAg3A5AEIAkgCkEIaikDADcD2AMgCSAJKQPwBzcD0AMgCUH+BGogCUGeCWotAAA6AAAgCSAJLwGcCTsB/AQgCUHGBGogCUHeCGotAAA6AAAgCSAJLwHcCDsBxAQgCUGOBGogCUGmCGotAAA6AAAgCSAJLwGkCDsBjAQgCUHOA2ogCUHuB2otAAA6AAAgCSAJLwHsBzsBzAMgI0EYdCAHQRB0ciAWQQh0ciADciEDCyASIAkpA4AFNwIAIBJBCGogCUGABWoiB0EIaikDADcCACASQRBqIAdBEGopAwA3AgAgEkEYaiAHQRhqKQMANwIAIBJBIGogB0EgaikDADcCACASQShqIAdBKGopAwA3AgAgCSBWOAK0BSAJICE2ArAFIAkgBToA6AUgGyAJLwH8BDsAACAbQQJqIAlB/gRqLQAAOgAAIAkgVzgC8AUgCSAiNgLsBSARQShqIAlByARqIgVBKGopAwA3AgAgEUEgaiAFQSBqKQMANwIAIBFBGGogBUEYaikDADcCACARQRBqIAVBEGopAwA3AgAgEUEIaiAFQQhqKQMANwIAIBEgCSkDyAQ3AgAgCSACOgCkBiAaQQJqIAlBxgRqLQAAOgAAIBogCS8BxAQ7AAAgCSBYOAKsBiAJICQ2AqgGIBBBKGogCUGQBGoiAkEoaikDADcCACAQQSBqIAJBIGopAwA3AgAgEEEYaiACQRhqKQMANwIAIBBBEGogAkEQaikDADcCACAQQQhqIAJBCGopAwA3AgAgECAJKQOQBDcCACAJIAQ6AOAGIBlBAmogCUGOBGotAAA6AAAgGSAJLwGMBDsAACAJIFk4AugGIAkgJTYC5AYgD0EoaiAJQdADaiICQShqKQMANwIAIA9BIGogAkEgaikDADcCACAPQRhqIAJBGGopAwA3AgAgD0EQaiACQRBqKQMANwIAIA9BCGogCSkD2AM3AgAgDyAJKQPQAzcCACAJIAY6AJwHIBhBAmogCUHOA2otAAA6AAAgGCAJLwHMAzsAACAJICo4AqwJIAkgKTgCqAkgCSAIOAKkCSAJICg4AqAJIANBFXZB+AFxIANBDnZB/AFxIANBB3ZB/gFxIANB/wFxcnJyrSFcIB0oAgAhBCATKAI8IQZCACFaA0AgWiJbQgF8IVoCQCBcIFuIQgGDUA0AIFunIQIgCS0AuAMEQCACQQJ0IgUgCUGgCWpqKgIAIgggJ11FDQEgCUGwBWogAkE8bGoiA0E4ai0AACICQQRGDQEgBSAJakGgA2ooAgAgBk8NASAOIAMpAAA3AAAgDkEwaiADQTBqKQAANwAAIA5BKGogA0EoaikAADcAACAOQSBqIANBIGopAAA3AAAgDkEYaiADQRhqKQAANwAAIA5BEGogA0EQaikAADcAACAOQQhqIANBCGopAAA3AAAgCUHuAWogA0E7ai0AADoAACAJIAMvADk7AewBIAlB8AFqIgFBN2ogCUGgB2oiA0E3aigAADYAACABQTBqIANBMGopAAA3AwAgAUEoaiADQShqKQAANwMAIAFBIGogA0EgaikAADcDACABQRhqIANBGGopAAA3AwAgAUEQaiADQRBqKQAANwMAIAFBCGogA0EIaikAADcDACAJIAkpAKAHNwPwASACIQEgCCEnDAELIAJBAnQiAiAJakGgA2ooAgAiByAETw0AIAlBoAlqIAJqKgIAjCEIIAkoAugBIgMhBSAJKALkASADRgRAIAlB4AFqIAMQlgYgCSgC6AEhBQsgCSgC4AEiAiAFQQN0aiIKIAg4AgQgCiAHNgIAIAkgBUEBajYC6AEgAiADQQN0aiIFKgIEIQggBSgCACEHAkAgA0UEQEEAIQUMAQsDQEEAQX8gAiADQQFrIgpBAXYiBUEDdGoiC0EEaioCACIoIAhfIhYbQQFBAiAWGyAIIChfG0EDa0F+SQRAIAMhBQwCCyACIANBA3RqIAspAgA3AgAgBSEDIApBAUsNAAsLIAIgBUEDdGoiAiAIOAIEIAIgBzYCAAsgWkIEUg0ACyAJQbACaiAJQeABahDxAiAJKAKwAkEBRg0ACwsgCUHAAmoiAkEIaiAJQfABaiIDQQhqKQMANwMAIAJBEGogA0EQaikDADcDACACQRhqIANBGGopAwA3AwAgAkEgaiADQSBqKQMANwMAIAJBKGogA0EoaikDADcDACACQTBqIANBMGopAwA3AwAgAkE3aiADQTdqKAAANgAAIAlBogdqIAlB7gFqLQAAOgAAIAkgCSkD8AE3A8ACIAkgCS8B7AE7AaAHAkAgCSgC5AEiAkUNACACQQN0RQ0AIAkoAuABELEBCyABQf8BcUEERw0BCyAAQQQ6ADQMAQsgACAJLwGgBzsANSAJQbAFaiICQTdqIgQgCUHAAmoiA0E3aigAADYAACACQTBqIANBMGopAwA3AwAgAkEoaiADQShqKQMANwMAIAJBIGogA0EgaikDADcDACACQRhqIANBGGopAwA3AwAgAkEQaiADQRBqKQMANwMAIAJBCGogA0EIaikDADcDACAAQTdqIAlBogdqLQAAOgAAIAkgCSkDwAI3A7AFIAAgAToANCAAQTBqIAQoAAA2AAAgAEEoaiAJQd8FaikAADcAACAAQSBqIAlB1wVqKQAANwAAIABBGGogCUHPBWopAAA3AAAgAEEQaiAJQccFaikAADcAACAAQQhqIAlBvwVqKQAANwAAIAAgCSkAtwU3AAALIAlB0AlqJAAL8yUCHX8DfiMAQdAGayIIJAACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCABKQMAIiJQRQRAIAEpAwgiI1ANASABKQMQIiRQDQIgIiAkfCAiVA0DICIgI30gIlYNBCABLwEYIQEgCCAiPgIMIAhBEGpBACAiQiCIpyAiQoCAgIAQVCIFGzYCACAIQQFBAiAFGzYCCCAIQRRqQQBBmAEQgAwaIAhBuAFqQQBBnAEQgAwaIAhCgYCAgBA3A7ABIAGtQjCGQjCHICJCAX15fULCmsHoBH5CgKHNoLQCfEIgiKciBUEQdEEQdSERAkAgAUEQdEEQdSIGQQBOBEAgCEEIaiABEJ4BGgwBCyAIQbABakEAIAZrQRB0QRB1EJ4BGgsCQCARQQBIBEAgCEEIakEAIBFrQRB0QRB1EEEMAQsgCEGwAWogBUH//wNxEEELIAgoArABIQ4gCEGoBWpBBHIgCEGwAWpBBHIiFEGgARD/CxogCCAONgKoBQJAIAMiCkEKSQ0AIA5BKEsEQCAOQSgQ/AsACyAIQaQFaiENIA4hAQNAAkAgAUUNACABQQJ0IQYgAUEBa0H/////A3EiAUEBaiIFQQFxAn8gAUUEQEIAISIgBiAIakGsBWoMAQsgBUH+////B3EhBSAGIA1qIQFCACEiA0AgAUEEaiIGNQIAICJCIIaEIiNCgJTr3AOAISIgBiAiPgIAIAEgATUCACAjICJCgJTr3AN+fUIghoQiIkKAlOvcA4AiIz4CACAiICNCgJTr3AN+fSEiIAFBCGshASAFQQJrIgUNAAsgAUEIagshAUUNACABQQRrIgEgATUCACAiQiCGhEKAlOvcA4A+AgALIApBCWsiCkEJTQ0BIAgoAqgFIgFBKUkNAAsMDQsCQAJAAkACfwJ/AkAgCkECdEHorMMAaigCACIFBEAgCCgCqAUiAUEpTw0TQQAgAUUNAxogAUECdCEGIAFBAWtB/////wNxIgFBAWoiDUEBcSEHIAWtISIgAQ0BQgAhIyAGIAhqQawFagwCC0Gr2sMAQRtB5NnDABDECQALIA1B/v///wdxIQUgBiAIakGkBWohAUIAISMDQCABQQRqIgY1AgAgI0IghoQiJCAigCEjIAYgIz4CACABIAE1AgAgJCAiICN+fUIghoQiIyAigCIkPgIAICMgIiAkfn0hIyABQQhrIQEgBUECayIFDQALIAFBCGoLIQEgBwRAIAFBBGsiASABNQIAICNCIIaEICKAPgIACyAIKAKoBQsiASAIKAIIIgkgASAJSxsiBkEoTQRAIAZFBEBBACEGDAQLIAZBAXEhECAGQQFHDQFBACEKDAILIAZBKBD8CwALIAZBfnEhFiAIQRBqIQUgCEGwBWohAUEAIQoDQCAKQQFxIAFBBGsiCigCACIYIAVBBGsoAgBqIg1qIQcgCiAHNgIAIAEgDSAYSSAHIA1JciABKAIAIgcgBSgCAGoiDWoiCjYCACAKIA1JIAcgDUtyIQogBUEIaiEFIAFBCGohASAWIAxBAmoiDEcNAAsLIBAEfyAIIAxBAnQiAWpBrAVqIg0oAgAhBSANIAogBSABIAhqQQxqKAIAaiIBaiINNgIAIAEgBUkgASANS3IFIAoLQQFxRQ0AIAZBJ0sNBiAGQQJ0IAhqQawFakEBNgIAIAZBAWohBgsgCCAGNgKoBSAGIA4gBiAOSxsiBUEpTw0GIAhBsAFqQQRyIQEgCEEIakEEciENIAVBAnQhBQNAAkAgBUUEQEF/QQAgBRshBgwBCyAIQbABaiAFaiEGIAhBqAVqIAVqIQcgBUEEayEFQX8gBygCACIHIAYoAgAiBkcgBiAHSxsiBkUNAQsLIAZBAk8EQCAJQSlPDQ4gCUUEQCAIQQA2AggMCgsgCUEBa0H/////A3EiBUEBaiIHQQNxIQYgBUEDSQRAQgAhIiANIQUMCQsgB0H8////B3EhCkIAISIgDSEFA0AgBSAFNQIAQgp+ICJ8IiI+AgAgBUEEaiIHNQIAQgp+ICJCIIh8ISIgByAiPgIAIAVBCGoiBzUCAEIKfiAiQiCIfCEiIAcgIj4CACAFQQxqIgc1AgBCCn4gIkIgiHwhIiAHICI+AgAgIkIgiCEiIAVBEGohBSAKQQRrIgoNAAsMCAsgEUEBaiERDAgLQZevwwBBHEGQssMAEMQJAAtBxK/DAEEdQaCywwAQxAkAC0H0r8MAQRxBsLLDABDECQALQaCwwwBBNkHAssMAEMQJAAtB6LDDAEE3QdCywwAQxAkACyAGQShB5NnDABDMCAALIAVBKBD8CwALIAYEQANAIAUgBTUCAEIKfiAifCIiPgIAIAVBBGohBSAiQiCIISIgBkEBayIGDQALCyAIICKnIgUEfyAJQSdLDQIgCUECdCAIakEMaiAFNgIAIAlBAWoFIAkLNgIIC0EBIQsCQCARQRB0QRB1IgUgBEEQdEEQdSIGTgRAIBEgBGtBEHRBEHUgAyAFIAZrIANJGyIMDQELQQAhDAwCCyAIQdgCaiIFQQRyIBRBoAEQ/wsaIAggDjYC2AIgBUEBEJ4BIRwgCCgCsAEhByAIQYAEaiIGQQRyIBRBoAEQ/wsaIAggBzYCgAQgBkECEJ4BIR0gCCgCsAEhCSAIQagFaiIHQQRyIBRBoAEQ/wsaIAggCTYCqAUgCEG4AWohGCAFQQhqIR4gBkEIaiEfIAdBCGohICAIQRBqIRQgB0EDEJ4BISEgCCgCCCEHIAgoArABIQ4gCCgC2AIhGSAIKAKABCEaIAgoAqgFIRtBACEWAkACQANAIBYhEAJAAkAgB0EpSQRAIBBBAWohFiAHQQJ0IQUgDSEGAn8CQAJAA0AgBUUNASAFQQRrIQUgBigCACAGQQRqIQZFDQALIAcgGyAHIBtLGyIJQSlPDQ0gCUECdCEFA0ACQCAFRQRAQX9BACAFGyEGDAELIAhBqAVqIAVqIQYgCEEIaiAFaiEKIAVBBGshBUF/IAooAgAiCiAGKAIAIgZHIAYgCksbIgZFDQELC0EAIAZBAk8NAhogCUUNAUEBIQsgCUEBcUEAIQcgCUEBRwRAIAlBfnEhFSAgIQYgFCEFA0AgBUEEayITKAIAIg8gBkEEaygCAEF/c2oiCiALaiELIBMgCzYCACAFIAogD0kgCiALS3IgBSgCACILIAYoAgBBf3NqIgpqIhM2AgAgCiALSSAKIBNLciELIAZBCGohBiAFQQhqIQUgFSAHQQJqIgdHDQALCwR/IAggB0ECdCIGakEMaiIHKAIAIQUgByAFIAYgIWpBBGooAgBBf3NqIgYgC2oiBzYCACAFIAZLIAYgB0tyBSALCw0BDA4LIAwgEEkNAyADIAxJDQ8gDCAQRg0KIAIgEGpBMCAMIBBrEIAMGgwKCyAIIAk2AgggCSEHQQgLIRIgByAaIAcgGksbIglBKU8NCiAJQQJ0IQUDQAJAIAVFBEBBf0EAIAUbIQYMAQsgCEGABGogBWohBiAIQQhqIAVqIQogBUEEayEFQX8gCigCACIKIAYoAgAiBkcgBiAKSxsiBkUNAQsLIAZBAk8EQCAHIQkMAwsgCQRAQQEhCyAJQQFxQQAhByAJQQFHBEAgCUF+cSETIB8hBiAUIQUDQCAFQQRrIg8oAgAiFyAGQQRrKAIAQX9zaiIKIAtqIQsgDyALNgIAIAUgCiAXSSAKIAtLciAFKAIAIgsgBigCAEF/c2oiCmoiDzYCACAKIAtJIAogD0tyIQsgBkEIaiEGIAVBCGohBSATIAdBAmoiB0cNAAsLBH8gCCAHQQJ0IgZqQQxqIgcoAgAhBSAHIAUgBiAdakEEaigCAEF/c2oiBiALaiIHNgIAIAUgBksgBiAHS3IFIAsLRQ0MCyAIIAk2AgggEkEEciESDAILDAsLIBAgDBD9CwALAkAgCSAZIAkgGUsbIgpBKUkEQCAKQQJ0IQUDQAJAIAVFBEBBf0EAIAUbIQYMAQsgCEHYAmogBWohBiAIQQhqIAVqIQcgBUEEayEFQX8gBygCACIHIAYoAgAiBkcgBiAHSxsiBkUNAQsLIAZBAk8EQCAJIQoMAgsgCgRAQQEhCyAKQQFxQQAhByAKQQFHBEAgCkF+cSETIB4hBiAUIQUDQCAFQQRrIg8oAgAiFyAGQQRrKAIAQX9zaiIJIAtqIQsgDyALNgIAIAUgCSAXSSAJIAtLciAFKAIAIgsgBigCAEF/c2oiCWoiDzYCACAJIAtJIAkgD0tyIQsgBkEIaiEGIAVBCGohBSATIAdBAmoiB0cNAAsLBH8gCCAHQQJ0IgZqQQxqIgcoAgAhBSAHIAUgBiAcakEEaigCAEF/c2oiBiALaiIHNgIAIAUgBksgBiAHS3IFIAsLRQ0LCyAIIAo2AgggEkECaiESDAELIApBKBD8CwALIAogDiAKIA5LGyIHQSlPDQkgB0ECdCEFA0ACQCAFRQRAQX9BACAFGyEGDAELIAhBsAFqIAVqIQYgCEEIaiAFaiEJIAVBBGshBUF/IAkoAgAiCSAGKAIAIgZHIAYgCUsbIgZFDQELCwJAIAZBAk8EQCAKIQcMAQsgBwRAQQEhCyAHQQFxQQAhCSAHQQFHBEAgB0F+cSETIBghBiAUIQUDQCAFQQRrIg8oAgAiFyAGQQRrKAIAQX9zaiIKIAtqIQsgDyALNgIAIAUgCiAXSSAKIAtLciAFKAIAIgsgBigCAEF/c2oiCmoiDzYCACAKIAtJIAogD0tyIQsgBkEIaiEGIAVBCGohBSATIAlBAmoiCUcNAAsLBH8gCCAJQQJ0IgZqQQxqIgkoAgAhBSAJIAUgBiAIakG0AWooAgBBf3NqIgYgC2oiCTYCACAFIAZLIAYgCUtyBSALC0UNCgsgCCAHNgIIIBJBAWohEgsgAyAQRg0BIAIgEGogEkEwajoAACAHQSlPDQkCQCAHRQRAQQAhBwwBCyAHQQFrQf////8DcSIJQQFqIgpBA3EhBkIAISIgDSEFIAlBA08EQCAKQfz///8HcSEKA0AgBSAFNQIAQgp+ICJ8IiI+AgAgBUEEaiIJNQIAQgp+ICJCIIh8ISIgCSAiPgIAIAVBCGoiCTUCAEIKfiAiQiCIfCEiIAkgIj4CACAFQQxqIgk1AgBCCn4gIkIgiHwhIiAJICI+AgAgIkIgiCEiIAVBEGohBSAKQQRrIgoNAAsLIAYEQANAIAUgBTUCAEIKfiAifCIiPgIAIAVBBGohBSAiQiCIISIgBkEBayIGDQALCyAipyIFRQ0AIAdBJ0sNAyAHQQJ0IAhqQQxqIAU2AgAgB0EBaiEHCyAIIAc2AgggDCAWRw0AC0EAIQsMAwsgAyADQeCywwAQzAgACyAHQShB5NnDABDMCAALIAlBKEHk2cMAEMwIAAsCQAJAAkACQAJAAkAgDkEpSQRAIA5FBEBBACEODAMLIA5BAWtB/////wNxIgZBAWoiDUEDcSEFIAZBA0kEQEIAISIMAgsgDUH8////B3EhBkIAISIDQCABIAE1AgBCBX4gInwiIj4CACABQQRqIg01AgBCBX4gIkIgiHwhIiANICI+AgAgAUEIaiINNQIAQgV+ICJCIIh8ISIgDSAiPgIAIAFBDGoiDTUCAEIFfiAiQiCIfCEiIA0gIj4CACAiQiCIISIgAUEQaiEBIAZBBGsiBg0ACwwBCyAOQSgQ/AsACyAFBEADQCABIAE1AgBCBX4gInwiIj4CACABQQRqIQEgIkIgiCEiIAVBAWsiBQ0ACwsgIqciAUUNACAOQSdLDQEgDkECdCAIakG0AWogATYCACAOQQFqIQ4LIAggDjYCsAEgCCgCCCIBIA4gASAOSxsiAUEpTw0FIAFBAnQhAQJAA0AgAUUNASAIQbABaiABaiEFIAhBCGogAWohBiABQQRrIQFBfyAGKAIAIgYgBSgCACIFRyAFIAZLGyIFRQ0ACyAFQf8BcUEBRw0EDAMLIAENAyALDQIgAyAMQQFrIgFNDQEgASACai0AAEEBcQ0CDAMLIA5BKEHk2cMAEMwIAAsgASADQfCywwAQzAgACyADIAxPBEBBACEBIAIhBQJAA0AgASAMRg0BIAFBAWohASAFIAxqIAVBAWshBUEBay0AAEE5Rg0ACyAFIAxqIgQgBC0AAEEBajoAACAMIAwgAWtBAWpNDQIgBEEBakEwIAFBAWsQgAwaDAILAn9BMSALDQAaIAJBMToAAEEwIAxBAUYNABogAkEBakEwIAxBAWsQgAwaQTALIQEgEUEQdEGAgARqQRB1IhEgBEEQdEEQdUwNASADIAxNDQEgAiAMaiABOgAAIAxBAWohDAwBCwwGCyADIAxPDQAMBQsgACAROwEIIAAgDDYCBCAAIAI2AgAgCEHQBmokAA8LIAFBKBD8CwALIAlBKBD8CwALQfTZwwBBGkHk2cMAEMQJAAsgB0EoEPwLAAsgDCADEPwLAAvkYwMRfxN9B34jAEHgAmsiByQAIAdBIGogAyAEKAKYAREAAAJAAn8CQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIAcoAiBBAWsOEgECAwQFBgcRCAkKCwwNDg8QGAALIAcoAiQhASAAQu7J75315a3c3ABBrLTAABCsAiIAKAIMIQMgACgCCCEEIAAoAgAhCiAAQRRqKAIAIQAgByABKgIAIhggGJIiGDgCMCAHIBg4AiwgByAYOAIoIAdBiAFqIgFBCGogBkEIaikCADcDACAHIAYpAgA3A4gBIAIgCiAEIAMgACAFIAdBKGogARCXAgwXCyAHKAIkIQEgAELKweCAlNHtgQpBnLTAABCsAiIAKAIMIQMgACgCCCEEIAAoAgAhCiAAQRRqKAIAIQkgB0EoaiIIQQhqIgAgAUEIaigCADYCACAAIAAqAgAiGCAYkjgCACAHIAEpAgA3AyggByAHKgIoIhggGJI4AiggByAHKgIsIhggGJI4AiwgB0GIAWoiAEEIaiAGQQhqKQIANwMAIAcgBikCADcDiAEgAiAKIAQgAyAJIAUgCCAAEJcCDBYLIAdBiAFqIQogBygCJCEEIAAoAiAhASMAQdAAayIDJAAgBCoCGCEYAkACQAJAAkAgBCoCDCIbIAQqAgAiHJMiGSAZlCAEQRBqKgIAIh0gBCoCBCIekyIZIBmUkiAEQRRqKgIAIh8gBCoCCCIgkyIZIBmUkkMAAAAAkhCIAUMAAAA/lCIZvEEASA0AIBi8QQBIDQAgAyAYOAJMIAMgGTgCSCADQQhqIgAgA0HIAGogARCrAyADQShqIglBCGoiDCAAQQhqKAIAIgA2AgAgAyADKQMINwMoIANBOGoiCEEIaiADQRxqKAIANgIAIAMgAykCFDcDOCABQQF2IgsgCSAIEG0gCyAJIAgQbSABQQJqQX5xIgsgAGoiCSAASQ0BIAwoAgAiCCAJSQ0CIAMoAighASALBEAgASAAQQxsaiIAIAtBDGxqIQsgGCAYkiEaA0AgACAaIAAqAgCUOAIAIABBCGoiDCAaIAwqAgCUOAIAIABBBGoiDCAZIBogDCoCAJSSOAIAIAsgAEEMaiIARw0ACwsgASAIQQxsaiELIAggCUcEQCABIAlBDGxqIQAgGCAYkiIYjCEaA0AgACAYIAAqAgCUOAIAIABBCGoiCSAYIAkqAgCUOAIAIABBBGoiCSAJKgIAIBqUIBmTOAIAIAsgAEEMaiIARw0ACwsgA0EIaiIAQQhqIANBQGsiCSgCACIMNgIAIAMgAykDOCIrNwMIIAMoAiwhDSAJIAw2AgAgAyArNwM4IAAgBBD3AyABIAtHBEAgHyAgkkMAAAA/lCElIB0gHpJDAAAAP5QhJiAbIBySQwAAAD+UISQgAyoCFCEbIAMqAhAhGCADKgIMIRkgAyoCCCEaIAEhAANAIBogAEEEaiIEKgIAIh6UIBkgACoCACIflJMiHCAckiEcIBggH5QgGiAAQQhqIgwqAgAiIJSTIh0gHZIhHSAMICUgICAbIByUIBogHZQgGSAZICCUIBggHpSTIiAgIJIiIJSTkpKSOAIAIAQgJiAeIBsgHZQgGCAglCAaIByUk5KSkjgCACAAICQgHyAbICCUIBkgHJQgGCAdlJOSkpI4AgAgCyAAQQxqIgBHDQALCyAKIAMpAzg3AgwgCiAINgIIIAogDTYCBCAKIAE2AgAgCkEUaiAJKAIANgIAIANB0ABqJAAMAwtBvN/CAEHNAEHw4MIAEMQJAAsgACAJEP0LAAsgCSAIEPwLAAsgB0GYAWooAgAhACAHQZwBaigCACEJIAcoAowBIQEgBygClAEhAyAHKAKQASEIIAcoAogBIQQgB0GAgID8AzYCMCAHQoCAgPyDgIDAPzcDKCAKQQhqIAZBCGopAgA3AwAgByAGKQIANwOIASACIAQgCCADIAkgBSAHQShqIAoQlwICQCAARQ0AIABBA3RFDQAgAxCxAQsgAUUNFSABrUIMfqdFDRUgBBCxAQwVCyAHQYgBaiIBQQhqIAcoAiQiAEEIaigCADYCACABQRRqIABBFGooAgA2AgAgByAAKQIANwOIASAHIAApAgw3ApQBIAdBgICA/AM2AsACIAdCgICA/IOAgMA/NwO4AiAHQShqIgBBCGogBkEIaikCADcDACAHIAYpAgA3AyggAiABQQJBlLTAAEEBIAUgB0G4AmogABCXAgwUCyAHKAIkIgBBIGoqAgAhHCAAQRxqKgIAIR0gAEEUaioCACEeIABBEGoqAgAhHyAFQRBqKgIAISAgBUEUaioCACElIAAqAhghJiAAKgIMISQgACoCBCInIAUqAgAiGJQgACoCACIoIAVBBGoqAgAiGZSTIhogGpIhIiAoIAVBCGoqAgAiGpQgACoCCCIhIBiUkyIbIBuSISMgByAFQRhqKgIAIikgISAFQQxqKgIAIhsgIpQgGCAjlCAZICEgGZQgJyAalJMiISAhkiIhlJOSkpIiKjgCwAIgByAlICcgGyAjlCAaICGUIBggIpSTkpKSIic4ArwCIAcgICAoIBsgIZQgGSAilCAaICOUk5KSkiIoOAK4AiAHICkgHiAbIB8gGJQgJCAZlJMiIiAikiIilCAYICQgGpQgHiAYlJMiIyAjkiIjlCAZIB4gGZQgHyAalJMiHiAekiIelJOSkpIiITgCMCAHICUgHyAbICOUIBogHpQgGCAilJOSkpIiHzgCLCAHICAgJCAbIB6UIBkgIpQgGiAjlJOSkpIiHjgCKCAHQYgBaiIAQQhqIgEgBkEIaiIDKQIANwMAIAcgBikCADcDiAEgAiAHQbgCaiIEIAdBKGoiBSAAEMgCIAcgITgCwAIgByAfOAK8AiAHIB44ArgCIAcgKSAcIBsgHSAYlCAmIBmUkyIeIB6SIh6UIBggJiAalCAcIBiUkyIfIB+SIh+UIBkgHCAZlCAdIBqUkyIcIBySIhyUk5KSkiIkOAIwIAcgJSAdIBsgH5QgGiAclCAYIB6Uk5KSkiIYOAIsIAcgICAmIBsgHJQgGSAelCAaIB+Uk5KSkiIZOAIoIAEgAykCADcDACAHIAYpAgA3A4gBIAIgBCAFIAAQyAIgByAqOALAAiAHICc4ArwCIAcgKDgCuAIgByAkOAIwIAcgGDgCLCAHIBk4AiggASADKQIANwMAIAcgBikCADcDiAEgAiAEIAUgABDIAgwTCyAHQYgBaiIDIAcoAiQiBDYCCCADIAQoAkwiCjYCACADIAogBEHUAGooAgBBDGxqNgIEIAcoApABIQwgBygCiAEiAyAHKAKMASIORg0SIAdBiAFqIgRBDGohDSAEQRhqIQoMDAsgB0EQaiIBIAcoAiQiAEHIAGooAgA2AgQgASAAKAJANgIAIAcoAhQhASAHKAIQIQMgB0EIaiIEIABB1ABqKAIANgIEIAQgACgCTDYCACAHKAIMIQAgBygCCCEEIAdBgICA/AM2AjAgB0KAgID8g4CAwD83AyggB0GIAWoiCkEIaiAGQQhqKQIANwMAIAcgBikCADcDiAEgAiADIAEgBCAAIAUgB0EoaiAKEJcCDBELIAcoAiQiACoCBCEYIAAqAgAhGiAAKgIIIhu8QYCAgIB4cUGAgID8A3K+IRkgB0G0AWogGEMAQBxGlDgCACAHQagBaiAYQwBAHMaUOAIAIAdBnAFqIBogGYyUIhxDAEAcxpQ4AgAgB0GwAWogGSAYIBiUQwAAgL8gGyAZkpUiG5SSIh1DAEAcxpQ4AgAgB0GkAWogHUMAQBxGlDgCACAHQZgBaiAZIBogGJQgG5QiGJQiHUMAQBzGlDgCACAHIBxDAEAcRpQ4ApABIAcgGEMAQBzGlDgCrAEgByAYQwBAHEaUOAKgASAHIBsgGiAaIBmUlJRDAACAP5IiGEMAQBzGlDgClAEgByAdQwBAHEaUOAKMASAHIBhDAEAcRpQ4AogBIAdBgICA/AM2AsACIAdCgICA/IOAgMA/NwO4AiAHQShqIgBBCGogBkEIaikCADcDACAHIAYpAgA3AyggAiAHQYgBakEEQYS0wABBAiAFIAdBuAJqIAAQlwIMEAsgBygCJCIDKAIAIQkgAygCCCIDRQ0PIANBJGwhCEEAIQQDQCAHQShqIgpBEGogAUEQaigCADYCACAKQQhqIAFBCGopAgA3AwAgByABKQIANwMoIAdBGGoiCyAEIAlqIgNBHGoiDEEEaigCACINNgIEIAsgDCgCACANKAIIQQdqQXhxajYCACAHKAIcIQsgBygCGCEMIAcgBUEMaioCACIbIANBDGoqAgAiHJQgBSoCACIYIAMqAgAiHZSTIAVBBGoqAgAiGSADQQRqKgIAIh6UkyAFQQhqKgIAIhogA0EIaioCACIflJM4ApQBIAcgGiAclCAYIB6UIBsgH5SSIBkgHZSTkjgCkAEgByAaIB2UIBkgHJQgGyAelCAYIB+Uk5KSOAKMASAHIBkgH5QgGyAdlCAYIByUkpIgGiAelJM4AogBIBggA0EUaioCACIelCAZIANBEGoqAgAiH5STIhwgHJIhHCAfIBqUIANBGGoqAgAiICAYlJMiHSAdkiEdIAcgBUEYaioCACAgIBsgHJQgGCAdlCAZICAgGZQgHiAalJMiICAgkiIglJOSkpI4AqABIAcgBUEUaioCACAeIBsgHZQgGiAglCAYIByUk5KSkjgCnAEgByAFKgIQIB8gGyAglCAZIByUIBogHZSTkpKSOAKYASAHQbgCaiIDQQhqIAZBCGopAgA3AwAgByAGKQIANwO4AiAAIAogAiAMIAsgB0GIAWogAxAoIAggBEEkaiIERw0ACwwPCyAHKAIkIgkoAiQhBCAEIAlBLGooAgAiAUEFdGohC0EAIQNBBCEAIAEEQCABQQN0IgNBBBCUCyIARQ0KIAFBAWtB////P3EhCCAAIQMgAUEDcSIKBEADQCADIAQpAgA3AgAgBEEgaiEEIANBCGohAyAKQQFrIgoNAAsLIAhBA08EQANAIAMgBCkCADcCACADQQhqIARBIGopAgA3AgAgA0EQaiAEQUBrKQIANwIAIANBGGogBEHgAGopAgA3AgAgA0EgaiEDIAsgBEGAAWoiBEcNAAsLIAhBAWohAwsgCSgCCCEEIAkoAgAhCiAHQYCAgPwDNgIwIAdCgICA/IOAgMA/NwMoIAdBiAFqIglBCGogBkEIaikCADcDACAHIAYpAgA3A4gBIAIgCiAEIAAgAyAFIAdBKGogCRCXAiABRQ0OIAFBA3RFDQ4gABCxAQwOCyAHKAIkIQEgAEKE+4G1xZi56qN/QfSzwAAQrAIiACgCDCEDIAAoAgghBCAAKAIAIQogAEEUaigCACEAIAcgASoCBCIYIBiSIhg4AjAgByABKgIAIhkgGZI4AiwgByAYOAIoIAdBiAFqIgFBCGogBkEIaikCADcDACAHIAYpAgA3A4gBIAIgCiAEIAMgACAFIAdBKGogARCXAgwNCyAHKAIkIQEgAEKerZquz9j1vEZB5LPAABCsAiIAKAIMIQMgACgCCCEEIAAoAgAhCiAAQRRqKAIAIQAgByABKgIEIhggGJIiGDgCMCAHIAEqAgAiGSAZkjgCLCAHIBg4AiggB0GIAWoiAUEIaiAGQQhqKQIANwMAIAcgBikCADcDiAEgAiAKIAQgAyAAIAUgB0EoaiABEJcCDAwLIAdBiAFqIQsgBygCJCEBIABBJGooAgAhDEEAIQMjAEGQAmsiACQAIAEqAgAhGCABKgIEIRkgAEHcAGogASoCCCIdQwAAAACSIho4AgAgAEHYAGogGUMAAAAAkiIbOAIAIABB0ABqIBo4AgAgAEHMAGogGzgCACAAQcQAaiAaOAIAIABBQGtDAAAAACAZkyIcOAIAIABBOGogGjgCACAAQTRqIBw4AgAgAEEsakMAAAAAIB2TIh04AgAgAEEoaiAbOAIAIABBIGogHTgCACAAQRxqIBs4AgAgAEEUaiAdOAIAIABBEGogHDgCACAAQwAAAAAgGJMiHjgCVCAAIBhDAAAAAJIiHzgCSCAAIB84AjwgACAeOAIwIAAgHjgCJCAAIB84AhggACAfOAIMIAAgHTgCCCAAIBw4AgQgACAeOAIAIAEqAgwhGUEEIQQCQEGgAkEEEJQLIgEEQCABIB0gGZMiIDgCnAIgASAbIBlDAAAAAJQiGJMiJTgCmAIgASAeIBiTIiY4ApQCIAEgIDgCkAIgASAlOAKMAiABIB8gGJMiJDgCiAIgASAgOAKEAiABIBwgGJMiIjgCgAIgASAkOAL8ASABICA4AvgBIAEgIjgC9AEgASAmOALwASABIBogGZIiIDgC7AEgASAbIBiSIiM4AugBIAEgHiAYkiInOALkASABICA4AuABIAEgIzgC3AEgASAfIBiSIig4AtgBIAEgIDgC1AEgASAcIBiSIiE4AtABIAEgKDgCzAEgASAgOALIASABICE4AsQBIAEgJzgCwAEgASAaIBiTIiA4ArwBIAEgHCAZkyIcOAK4ASABICQ4ArQBIAEgIDgCsAEgASAcOAKsASABICY4AqgBIAEgHSAYkyIpOAKkASABIBw4AqABIAEgJjgCnAEgASApOAKYASABIBw4ApQBIAEgJDgCkAEgASAaIBiSIho4AowBIAEgGyAZkiIbOAKIASABICg4AoQBIAEgGjgCgAEgASAbOAJ8IAEgJzgCeCABIB0gGJIiGDgCdCABIBs4AnAgASAnOAJsIAEgGDgCaCABIBs4AmQgASAoOAJgIAEgIDgCXCABICI4AlggASAeIBmTIhs4AlQgASAgOAJQIAEgJTgCTCABIBs4AkggASApOAJEIAEgJTgCQCABIBs4AjwgASApOAI4IAEgIjgCNCABIBs4AjAgASAaOAIsIAEgITgCKCABIB8gGZIiGTgCJCABIBo4AiAgASAjOAIcIAEgGTgCGCABIBg4AhQgASAjOAIQIAEgGTgCDCABIBg4AgggASAhOAIEIAEgGTgCACAAQpiAgICAAzcCZCAAIAE2AmAgAEEANgJ4IABCBDcDcEEAIQEDQCAsQgF8IS0gASADRgRAIABB8ABqIAMQlgYgACgCcCEEIAAoAnghAQsgBCABQQN0aiArQoCAgIAQfCAshDcCACAAIAFBAWoiATYCeCAsQgJ8IS4gACgCdCIDIAFGBEAgAEHwAGogARCWBiAAKAJ0IQMgACgCeCEBCyAAKAJwIgQgAUEDdGogK0KAgICAIHwgLYQ3AgAgACABQQFqIgE2AnggLEIDfCEtIAEgA0YEQCAAQfAAaiADEJYGIAAoAnQhAyAAKAJwIQQgACgCeCEBCyAEIAFBA3RqICtCgICAgDB8IC6ENwIAIAAgAUEBaiIBNgJ4IAEgA0YEQCAAQfAAaiADEJYGIAAoAnAhBCAAKAJ4IQELIAQgAUEDdGogKyAthDcCACAAIAFBAWoiATYCeCArQoCAgIDAAlIEQCAsQgR8ISwgK0KAgICAQH0hKyAAKAJ0IQMMAQsLIABB2AFqQoqAgICwAjcCACAAQdABakKSgICA4AA3AgAgAEHAAWpCj4CAgJACNwIAIABBuAFqQpCAgIAwNwIAIABBqAFqQomAgIDwAjcCACAAQaABakKWgICA0AA3AgAgAEGQAWpCjICAgNACNwIAIABCgoCAgLABNwLIASAAQoeAgIDgATcCsAEgAEKBgICAgAE3ApgBIABCFDcCiAEgAEKEgICA0AE3AoABIAxBAWshDSAAQeABaiEUIABBgAFqIQkCQAJAA0AgCSgCBCEKIAkoAgAhAyAAKAJoIQQgAEHoAWoiDiAAIBBBDGxqIg9BCGoiESgCADYCACAAIA8pAgA3A+ABIAMgBE8NASAAQfgBaiIVIAAoAmAiCCADQQxsaiITQQhqKAIANgIAIAAgEykCADcD8AEgBCAKTQ0CIABBgAJqIhJBCGoiEyAIIApBDGxqIghBCGooAgA2AgAgACAIKQIANwOAAiAAQeABaiAAQfABaiASIAwgAEHgAGoQ6QECQAJAIAQgDWoiEiAETQRAIAEgACgCdEYNAQwCCyAAKAJ0IAFGBEAgAEHwAGogARCWBiAAKAJ4IQELIAAoAnAiCCABQQN0aiAErSIrQiCGIi0gA62ENwIAIAAgAUEBaiIBNgJ4IAQgEkEBayIDSQRAIC1CgICAgBB8ISwgA60hLgNAICtCAXwhLSAAKAJ0IAFGBEAgAEHwAGogARCWBiAAKAJwIQggACgCeCEBCyAIIAFBA3RqICsgLIQ3AgAgACABQQFqIgE2AnggLEKAgICAEHwhLCAuIC0iK1INAAsLIAEgACgCdEcNAQsgAEHwAGogARCWBiAAKAJ4IQELIAAoAnAgAUEDdGogA60gCq1CIIaENwIAIAAgAUEBaiIBNgJ4IAkoAgghCiAJKAIEIQMgACgCaCEEIA4gESgCADYCACAAIA8pAgA3A+ABIAMgBE8NASAVIAAoAmAiCCADQQxsaiISQQhqKAIANgIAIAAgEikCADcD8AEgBCAKTQ0CIBMgCCAKQQxsaiIIQQhqKAIANgIAIAAgCCkCADcDgAIgAEHgAWogAEHwAWogAEGAAmogDCAAQeAAahDpAQJAAkAgBCANaiISIARNBEAgASAAKAJ0Rg0BDAILIAAoAnQgAUYEQCAAQfAAaiABEJYGIAAoAnghAQsgACgCcCIIIAFBA3RqIAStIitCIIYiLSADrYQ3AgAgACABQQFqIgE2AnggBCASQQFrIgNJBEAgLUKAgICAEHwhLCADrSEuA0AgK0IBfCEtIAAoAnQgAUYEQCAAQfAAaiABEJYGIAAoAnAhCCAAKAJ4IQELIAggAUEDdGogKyAshDcCACAAIAFBAWoiATYCeCAsQoCAgIAQfCEsIC4gLSIrUg0ACwsgASAAKAJ0Rw0BCyAAQfAAaiABEJYGIAAoAnghAQsgACgCcCABQQN0aiADrSAKrUIghoQ3AgAgACABQQFqIgE2AnggCSgCACEKIAkoAgghAyAAKAJoIQQgDiARKAIANgIAIAAgDykCADcD4AEgAyAETw0BIBUgACgCYCIIIANBDGxqIg9BCGooAgA2AgAgACAPKQIANwPwASAEIApNDQIgCUEMaiEJIBMgCCAKQQxsaiIIQQhqKAIANgIAIAAgCCkCADcDgAIgAEHgAWogAEHwAWogAEGAAmogDCAAQeAAahDpAQJAAkAgBCANaiIPIARNBEAgASAAKAJ0Rg0BDAILIAAoAnQgAUYEQCAAQfAAaiABEJYGIAAoAnghAQsgACgCcCIIIAFBA3RqIAStIitCIIYiLSADrYQ3AgAgACABQQFqIgE2AnggBCAPQQFrIgNJBEAgLUKAgICAEHwhLCADrSEuA0AgK0IBfCEtIAAoAnQgAUYEQCAAQfAAaiABEJYGIAAoAnAhCCAAKAJ4IQELIAggAUEDdGogKyAshDcCACAAIAFBAWoiATYCeCAsQoCAgIAQfCEsIC4gLSIrUg0ACwsgASAAKAJ0Rw0BCyAAQfAAaiABEJYGIAAoAnghAQsgEEEBaiEQIAAoAnAgAUEDdGogA60gCq1CIIaENwIAIAAgAUEBaiIBNgJ4IAkgFEcNAAsgCyAAKQNgNwIAIAsgACkDcDcCDCALQQhqIABB6ABqKAIANgIAIAtBFGogAEH4AGooAgA2AgAgAEGQAmokAAwDCyADIARB5I7DABDMCAALIAogBEH0jsMAEMwIAAtBoAJBBEHs6sMAKAIAIgBBmAcgABsRAAAACyAHQZgBaigCACEAIAdBnAFqKAIAIQogBygCjAEhASAHKAKUASEDIAcoApABIQkgBygCiAEhBCAHQYCAgPwDNgIwIAdCgICA/IOAgMA/NwMoIAtBCGogBkEIaikCADcDACAHIAYpAgA3A4gBIAIgBCAJIAMgCiAFIAdBKGogCxCXAgJAIABFDQAgAEEDdEUNACADELEBCyABRQ0LIAGtQgx+p0UNCyAEELEBDAsLIAcoAiQhBCAHQYgBaiIDQRBqIAFBEGooAgA2AgAgA0EIaiABQQhqKQIANwMAIAcgASkCADcDiAEgB0EoaiIBQQhqIAZBCGopAgA3AwAgByAGKQIANwMoIAAgAyACIARBnLHAACAFIAEQKAwKCyAHQYgBaiEDIAcoAiQhASAAKAIgIQsgAEEkaigCACEEIwBB4ABrIgAkACABKgIEIRggASoCCCEaIAEqAgAhGSAAQQA2AhAgAEIENwMIIABBADYCICAAQgQ3AxggAEEIaiIKQQAQ9QUgACgCCCAAKAIQIglBDGxqIgFBADYCCCABIBmMIhsgGpMiHDgCBCABIBiMIhg4AgAgACAJQQFqNgIQIABBADYCMCAAIBs4AiwgACAYOAIoIABBADYCQCAAIBw4AjwgACAYOAI4IABBADYCUCAAIBs4AkwgACAYIBqTIhw4AkggAEEoaiAAQThqIABByABqIAQgChDpASAaIBmSIRogACgCECIBIAAoAgwiCkYEQCAAQQhqIAEQ9QUgACgCDCEKIAAoAhAhAQsgACgCCCIJIAFBDGxqIghBADYCCCAIIBs4AgQgCCAcOAIAIAAgAUEBaiIBNgIQIAEgCkYEQCAAQQhqIAoQ9QUgACgCCCEJIAAoAhAhAQsgCSABQQxsaiIKQQA2AgggCiAZOAIEIAogHDgCACAAIAFBAWo2AhAgAEEANgIwIAAgGTgCLCAAIBg4AiggAEEANgJAIAAgGTgCPCAAIBw4AjggAEEANgJQIAAgGjgCTCAAIBg4AkggAEEoaiAAQThqIABByABqIAQgAEEIahDpASAAKAIQIgEgACgCDEYEQCAAQQhqIAEQ9QUgACgCECEBCyAAQQhqIgpBCGoiCSABQQFqNgIAIAAoAgggAUEMbGoiAUEANgIIIAEgGjgCBCABIBg4AgAgACAENgJQIABByABqIgFBDGogBEECajYCACABQRRqIARBAXQiBEECajYCACAAQoCAgIAQNwNIIAAgBEEBcjYCWEEAIAFBAyALIAogAEEYaiIBEHQgA0EIaiIIIAkoAgA2AgAgAyAAKQMINwIAIAMgACkDGDcCDCADQRRqIAFBCGooAgA2AgAgAEHgAGokACAHQZgBaigCACEAIAdBnAFqKAIAIQkgBygCjAEhASAHKAKUASEEIAcoApABIQsgBygCiAEhCiAHQYCAgPwDNgIwIAdCgICA/IOAgMA/NwMoIAggBkEIaikCADcDACAHIAYpAgA3A4gBIAIgCiALIAQgCSAFIAdBKGogAxCXAgJAIABFDQAgAEEDdEUNACAEELEBCyABRQ0JIAGtQgx+p0UNCSAKELEBDAkLIAdBiAFqIQMgBygCJCEBIAAoAiAhCyAAQSRqKAIAIQQjAEHgAGsiACQAIAEqAgghGSABKgIEIRogASoCACEYIABBADYCECAAQgQ3AwggAEEANgIgIABCBDcDGCAaIBqUIBhDAAAAwJQiHSAdlJJDAAAAAJIQiAEhGyAAQQhqIgpBABD1BSAAKAIIIAAoAhAiCUEMbGoiAUEANgIIIAEgGIwiHiAZkyIfOAIEIAEgGowiHDgCACAAIAlBAWo2AhAgAEEANgIwIAAgHjgCLCAAIBw4AiggAEEANgJAIAAgHzgCPCAAIBw4AjggACAZQwAAAAAgG5WUQwAAAACSIhw4AlAgACAZIBogG5WUIh4gGJMiHzgCTCAAIBkgHSAblZQiGyAakyIdOAJIIABBKGogAEE4aiAAQcgAaiAEIAoQ6QEgG0MAAAAAkiEaIBkgGJIhGSAYIB6SIRsgACgCECIBIAAoAgwiCkYEQCAAQQhqIAEQ9QUgACgCDCEKIAAoAhAhAQsgACgCCCIJIAFBDGxqIgggHDgCCCAIIB84AgQgCCAdOAIAIAAgAUEBaiIBNgIQIAEgCkYEQCAAQQhqIAoQ9QUgACgCCCEJIAAoAhAhAQsgCSABQQxsaiIKIBw4AgggCiAbOAIEIAogGjgCACAAIAFBAWo2AhAgAEEANgIwIAAgGDgCLCAAQQA2AiggACAcOAJAIAAgGzgCPCAAIBo4AjggAEEANgJQIAAgGTgCTCAAQQA2AkggAEEoaiAAQThqIABByABqIAQgAEEIahDpASAAKAIQIgEgACgCDEYEQCAAQQhqIAEQ9QUgACgCECEBCyAAQQhqIgpBCGoiCSABQQFqNgIAIAAoAgggAUEMbGoiAUEANgIIIAEgGTgCBCABQQA2AgAgACAENgJQIABByABqIgFBDGogBEECajYCACABQRRqIARBAXQiBEECajYCACAAQoCAgIAQNwNIIAAgBEEBcjYCWEEBIAFBAyALIAogAEEYaiIBEHQgA0EIaiIIIAkoAgA2AgAgAyAAKQMINwIAIAMgACkDGDcCDCADQRRqIAFBCGooAgA2AgAgAEHgAGokACAHQZgBaigCACEAIAdBnAFqKAIAIQkgBygCjAEhASAHKAKUASEEIAcoApABIQsgBygCiAEhCiAHQYCAgPwDNgIwIAdCgICA/IOAgMA/NwMoIAggBkEIaikCADcDACAHIAYpAgA3A4gBIAIgCiALIAQgCSAFIAdBKGogAxCXAgJAIABFDQAgAEEDdEUNACAEELEBCyABRQ0IIAGtQgx+p0UNCCAKELEBDAgLIAdBiAFqIQ8gBygCJCEMIABBJGooAgAhFUEAIQFBACEEIwBB4ABrIggkACAIQQA2AgggCEIENwMAIAhBADYCGCAIQgQ3AxAgDCgCDCIKIAxBFGooAgAiEEEDdGohEyAQBEAgDEEgaigCACERIAxBOGooAgAhFCAMQTBqKAIAIRIgDCoCYCEYIAwoAhghFiAMKAIAIRcgDCgCCCENQQQhCSAKIQADQCAEIA1GBEAgDSANQeyLwwAQzAgACyAAKAIEIg4gACgCACILaiEDAkACQCADIA5PBEAgAyAUSw0BIA5FDQIgFyAEQQxsaiIDKgIIIRkgAyoCBCEaIAMqAgAhGyASIAtBAnRqIQsgDkECdCEDA0AgCygCACIOIBFJBEAgGyAWIA5BFGxqIg4qAgggGJSSIRwgGSAOQRBqKgIAIBiUkiEdIBogDkEMaioCACAYlJIhHiALQQRqIQsgCCgCBCABRgRAIAggARD1BSAIKAIAIQkgCCgCCCEBCyAJIAFBDGxqIg4gHTgCCCAOIB44AgQgDiAcOAIAIAggAUEBaiIBNgIIIANBBGsiAw0BDAQLCyAOIBFBjIzDABDMCAALIAsgAxD9CwALIAMgFBD8CwALIARBAWohBCATIABBCGoiAEcNAAsLIAxBIGooAgAiAARAIAwoAhgiBCAAQRRsaiERIAxB3ABqKAIAIQ0gDEHUAGooAgAhFCAMKgJgIRggDCgCACESIAwoAgghDgNAAn8gBCgCBCIDIAQoAgAiCWohAAJAAkACQCAAIANPBEAgACANSw0BIANFBEBBfyELIAEhAAwECyAUIAlBAnRqIQsgA0ECdCEJIAEhAANAIAsoAgAiAyAOSQRAIBIgA0EMbGoiAyoCCCAEKgIQIBiUkiEZIAMqAgQgBCoCDCAYlJIhGiADKgIAIAQqAgggGJSSIRsgCCgCBCAARgRAIAggABD1BSAIKAIIIQALIAtBBGohCyAIKAIAIABBDGxqIgMgGTgCCCADIBo4AgQgAyAbOAIAIAggAEEBaiIANgIIIAlBBGsiCQ0BDAQLCyADIA5BrIzDABDMCAALIAkgABD9CwALIAAgDRD8CwALIAQoAgRBAWsiCw0AIAgoAhghC0EBDAELIAutISsgCCgCGCELIAEhAwNAIANBAWohCSAIKAIUIAtGBEAgCEEQaiALEJYGIAgoAhghCwsgCCgCECALQQN0aiADrSAJrUIghoQ3AgAgCCALQQFqIgs2AhggCSEDICtCAX0iK1BFDQALIAQoAgQLIQMgBEEUaiEEIAEgA2pBAWshAyAIKAIUIAtGBEAgCEEQaiALEJYGIAgoAhghCwsgCCgCECALQQN0aiABrSADrUIghoQ3AgAgCCALQQFqNgIYIAAhASAEIBFHDQALCwJAAkAgEARAIBVBAWshFEEAIQBBACEOA0AgDCgCCCIBIA5NDQIgCEEoaiISIAwoAgAgDkEMbGoiAUEIaigCADYCACAIIAEpAgA3AyAgCigCBCIQBEAgEK0hL0IAIS0DQAJAIC8gLSIrQgF8Ii1YDQAgACArp2oiCa0hMCAtpyEDAkADQAJAIAgoAgghDSAIQThqIBIoAgA2AgAgCCAIKQMgNwMwIAkgDU8NACAIQcgAaiAIKAIAIgEgCUEMbGoiBEEIaigCADYCACAIIAQpAgA3A0AgACADaiIRIA1PDQIgCEHQAGoiBEEIaiABIBFBDGxqIgFBCGooAgA2AgAgCCABKQIANwNQIAhBMGogCEFAayAEIBUgCBDpAQJAAkAgDSAUaiIEIA1LBEAgCCgCGCILIAgoAhRGBEAgCEEQaiALEJYGIAgoAhghCwsgCCgCECIBIAtBA3RqIA2tIitCIIYiLCAwhDcCACAIIAtBAWoiCzYCGCANIARBAWsiBEkEQCAsQoCAgIAQfCEuIAStITEDQCArQgF8ISwgCCgCFCALRgRAIAhBEGogCxCWBiAIKAIYIQsgCCgCECEBCyABIAtBA3RqICsgLoQ3AgAgCCALQQFqIgs2AhggLkKAgICAEHwhLiAxICwiK1INAAsLIAsgCCgCFEYNAQwCCyAJIQQgCCgCGCILIAgoAhRHDQELIAhBEGogCxCWBiAIKAIYIQsLIAgoAhAgC0EDdGogBK0gEa1CIIaENwIAIAggC0EBajYCGCAQIANBAWoiA0cNAQwDCwsgCSANQeSOwwAQzAgACyARIA1B9I7DABDMCAALIC0gL1INAAsgACAQaiEACyAOQQFqIQ4gEyAKQQhqIgpHDQALCyAPIAgpAwA3AgAgDyAIKQMQNwIMIA9BCGogCEEIaigCADYCACAPQRRqIAhBGGooAgA2AgAgCEHgAGokAAwBCyAOIAFBvIzDABDMCAALIAdBmAFqKAIAIQAgB0GcAWooAgAhCiAHKAKMASEBIAcoApQBIQMgBygCkAEhCSAHKAKIASEEIAdBgICA/AM2AjAgB0KAgID8g4CAwD83AyggD0EIaiAGQQhqKQIANwMAIAcgBikCADcDiAEgAiAEIAkgAyAKIAUgB0EoaiAPEJcCAkAgAEUNACAAQQN0RQ0AIAMQsQELIAFFDQcgAa1CDH6nRQ0HIAQQsQEMBwsgB0GIAWoiBEEMaiIIIAcoAiQiA0EAQQAQ+AEgB0IANwKMASAHIAM2AogBIAdBKGoiAyAEQdwAEP8LGiAEIANB3AAQ/wsaIAcoApQBIAdBuAJqIgNBIGoiDSAHQbgBaigCADYCACADQRhqIg8gB0GwAWopAwA3AwAgA0EQaiIOIARBIGopAwA3AwAgA0EIaiIQIARBGGopAwA3AwAgB0EANgKUASAHIARBEGoiDCkDADcDuAIgB0HAAWohCyADIQpBAUcNBEEBDAULA0AgA0EIaigCACEJIANBBGooAgAhCCAMKAJIIgQgAygCACIPTQ0CIAwoAkAhCyAEIAhNDQMgBCAJSwRAIA0gCyAIQQxsaiIQKQIANwIAIAdBiAFqIgRBCGoiCCALIA9BDGxqIg9BCGooAgA2AgAgDUEIaiAQQQhqKAIANgIAIAogCyAJQQxsaiIJKQIANwIAIApBCGogCUEIaigCADYCACAHQShqIglBCGoiCyAIKQMANwMAIAlBEGoiECAEQRBqIhEpAwA3AwAgCUEYaiIVIAopAwA3AwAgCUEgaiIJIARBIGoiEygCADYCACAHIA8pAgA3AyggEyAJKAIANgIAIAogFSkDADcDACARIBApAwA3AwAgCCALKQMANwMAIAcgBykDKDcDiAEgB0G4AmoiCUEQaiABQRBqKAIANgIAIAlBCGogAUEIaikCADcDACAHIAEpAgA3A7gCIAdB6AFqIghBCGogBkEIaikCADcDACAHIAYpAgA3A+gBIAAgCSACIARBnLHAACAFIAgQKCAOIANBDGoiA0YNBwwBCwsgCSAEQayhwAAQzAgACyADQQRB7OrDACgCACIAQZgHIAAbEQAAAAsgDyAEQYyhwAAQzAgACyAIIARBnKHAABDMCAALQQALIQQDQCAEBEAgB0HoAWoiBEEgaiAKQSBqKAIAIgk2AgAgBEEYaiAKQRhqKQIAIis3AwAgBEEQaiAKQRBqKQIAIi03AwAgBEEIaiAKQQhqKQIAIiw3AwAgByAKKQIAIi43A+gBIA0gCTYCACAPICs3AwAgDiAtNwMAIBAgLDcDACAHIC43A7gCIAdBkAJqIgRBEGogAUEQaigCADYCACAEQQhqIAFBCGopAgA3AwAgByABKQIANwOQAiAHQagCaiIJQQhqIAZBCGopAgA3AwAgByAGKQIANwOoAiAAIAQgAiAHQbgCakGcscAAIAUgCRAoIA0gDEEgaigCADYCACAPIAxBGGopAgA3AwAgDiAMQRBqKQIANwMAIBAgDEEIaikCADcDACAHQQA2ApQBIAcgDCkCADcDuAJBACEEDAEFIAcoAogBIgRBDGohEQJ/A0AgBygCvAEhCSAHQQA2ArwBIAsgCUEBRg0BGiAHIAcoAowBQQFqIgk2AowBIAcoApABIQogESgCAEEBayAJTQRAIAogBEEQaigCAEECa08NBSAHQQA2AowBIAcgCkEBaiIKNgKQAUEAIQkLIAggBCAJIAoQ+AEgECAMQQhqKQIANwMAIA4gDEEQaikCADcDACAPIAxBGGopAgA3AwAgDSAMQSBqKAIANgIAIAcoApQBIAdBADYClAEgByAMKQIANwO4AkEBRw0ACyADCyEKQQEhBAwBCwALAAsgB0HgAmokAAumNAMXfwd9BX4jAEGwAmsiBCQAQwAAADQQiAEhICAEQQA2AgggBEIENwMAIARBADYCGCAEQgQ3AxAgBEEANgIoIARCBDcDICAEQQA2AjggBEIENwMwIARB2ABqQQA2AgAgBEIENwNQIARCADcDSCAEQcD/wQA2AkQgBEEANgJAIARBADYCaCAEQgQ3A2AgBEEANgJ4IARCBDcDcCAEQQA2AogBIARCBDcDgAEgBEEANgKYASAEQgQ3A5ABIAFBCGooAgAiFSADakECayIHBEACQCMAQSBrIgskAEEEIQUgBEEQaiIKQQRqKAIAIg9BAXQiCSAHIAcgCUkbIglBBCAJQQRLGyIGIAZB////P3FGQQJ0IQcgBkEFdCEJAkAgD0UEQEEAIQUMAQsgCyAPQQV0NgIUIAsgCigCADYCEAsgCyAFNgIYIAsgCSAHIAtBEGoQhAcCQCALKAIABEAgC0EIaigCACIARQ0BIAsoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyALKAIEIQkgCkEEaiAGNgIAIAogCTYCACALQSBqJAAMAQsQgQoACwsCQAJAAkACQAJAAkACfwJAIAMEQCACIANBDGxqIRYgBEHcAWohFyAEQagBaiEYQQQhGQJAAkADQCAYQX82AgAgBEJ/NwOgASACKAIAIgMgAigCBCIFRg0KIAIoAggiCSADRg0KIAUgCUYNCiACQQxqIQ8gDq1CgICAgHCEISRBACEHA0AgAiAHQQFqIglB/wFxQQNwQQJ0aiIaKAIAIgogA0khBiAKIAMgBhsiBa0gAyAKIAYbIgOtQiCGhCElIAQoAkAiEiAFQcfc+e54c0G5893xeWxBBXcgA3NBufPd8XlsIhBxIQYgEEEZdq1CgYKEiJCgwIABfiEjIAQoAkQiC0EEayEKIAdBAnQiDCACaiERIAQoAlghByAEKAJQIQVBACETAkACQAJAAkACQAJAAkADQCAjIAYgC2opAAAiJoUiIkKBgoSIkKDAgAF9ICJCf4WDQoCBgoSIkKDAgH+DISIDQCAiUARAICYgJkIBhoNCgIGChIiQoMCAf4NQRQ0DIBNBCGoiEyAGaiAScSEGDAILIAogInqnQQN2IAZqIBJxQQJ0aygCACIDIAdPDQQgIkIBfSAigyEiICUgBSADQQR0aiIDKQIEUg0ACwsgBCgCGCIIIAMoAgwiBU0NAyAEKAIQIAVBBXRqQQxqIgMoAgBBf0YNAQwSCyAEICU3A9gBIAQgEDYC1AEgBCAEQUBrNgLQASAEQaABaiAMaiAEKAIYIQYjAEEwayIUJAAgBEHQAWoiCigCACINQQRqKAIAIgUgDSgCACITIAooAgQiEHEiCGopAABCgIGChIiQoMCAf4MiI1AEQEEIIQcDQCAHIAhqIAdBCGohByATcSIIIAVqKQAAQoCBgoSIkKDAgH+DIiNQDQALCyANQRBqIRIgDUEYaigCACEHIAopAgghIiAjeqdBA3YgCGogE3EiCCAFaiwAACIDQQBOBEAgBSkDAEKAgYKEiJCgwIB/g3qnQQN2IgggBWotAAAhAwsgA0EBcSEMAkAgDUEIaiIKKAIADQAgDEUNACAUQQhqIA0gEigCACAHEIYBIBAgDSgCACITcSIDIA1BBGooAgAiBWopAABCgIGChIiQoMCAf4MiI1AEQEEIIQgDQCADIAhqIQMgCEEIaiEIIAUgAyATcSIDaikAAEKAgYKEiJCgwIB/gyIjUA0ACwsgI3qnQQN2IANqIBNxIgggBWosAABBAEgNACAFKQMAQoCBgoSIkKDAgH+DeqdBA3YhCAsgBSAIaiAQQRl2IgM6AAAgCEEIayATcSAFakEIaiADOgAAIAogCigCACAMayIKNgIAIA1BDGoiAygCAEEBaiEMIAMgDDYCACAFIAhBAnRrQQRrIAc2AgACQCAHIA1BFGooAgAiBUcEQCANQRhqKAIAIQgMAQsgCiAMaiANQRhqKAIAIghrIQMgAyAHIAhrTQRAIAchBQwBCwJAIAggAyAIaiIFTQRAQQQhEyAFQQR0IQogBUH/////AHEgBUZBAnQhAwJAIAdFBEBBACETDAELIBQgB0EEdDYCJCAUIBIoAgA2AiALIBQgEzYCKCAUQRBqIAogAyAUQSBqEIQHIBQoAhBFBEAgFCgCFCEDIA1BFGogBTYCACANIAM2AhAMAwsgFEEYaigCACIADQELEIEKAAsgFCgCFCAAQezqwwAoAgAiAEGYByAAGxEAAAALIAUgCEYEQCASIAUQlQYgDUEYaigCACEICyANQRhqIAhBAWoiBTYCACANKAIQIAhBBHRqIgMgBjYCDCADICI3AgQgAyAQNgIAAkAgBSAHSwRAIBIoAgAgFEEwaiQAIAdBBHRqQQxqIQMMAQsgByAFQdj3wQAQzAgACyADKAIANgIAIBUgGigCACIDTQ0DIBUgESgCACIITQ0EAn0gASgCACIFIANBDGxqIgcqAgAgBSAIQQxsaiIFKgIAkyIeIB6UIAcqAgQgBSoCBJMiHSAdlJIgByoCCCAFKgIIkyIcIByUkkMAAAAAkiIbQwAAgCheIgVFBEBDAAAAACEdQwAAAAAhHEMAAIA/DAELIBwgGxCIASIblSEcIB0gG5UhHSAaKAIAIQMgESgCACEIIB4gG5ULIRsgBUUhByAIrSADrUIghoQhIiAEKAIUIAZGBEAgBEEQaiEMIwBBIGsiESQAAkACQCAGQQFqIgUgBkkNAEEEIQogDEEEaigCACIGQQF0IgMgBSADIAVLGyIDQQQgA0EESxsiC0H///8/cSALRkECdCEFIAtBBXQhAwJAIAZFBEBBACEKDAELIBEgBkEFdDYCFCARIAwoAgA2AhALIBEgCjYCGCARIAMgBSARQRBqEIQHIBEoAgAEQCARQQhqKAIAIgBFDQEgESgCBCAAQezqwwAoAgAiAEGYByAAGxEAAAALIBEoAgQhAyAMQQRqIAs2AgAgDCADNgIAIBFBIGokAAwBCxCBCgALIAQoAhghBgsgBCgCECAGQQV0aiIDIAc6ABwgAyAbOAIQIAMgJDcCCCADICI3AgAgAyAELwDQATsAHSADQRhqIBw4AgAgA0EUaiAdOAIAIANBH2ogBEHSAWotAAA6AAAgBCAGQQFqIgg2AhgMBQsgAyAONgIAIARBoAFqIAxqIAU2AgAMBAsgAyAHQcj3wQAQzAgACyAFIAhBrNrCABDMCAALIAMgFUGM2sIAEMwIAAsgCCAVQZzawgAQzAgACyAJQQNHBEAgAiAJQQJ0aigCACEDIAkhBwwBCwsgAigCACIGIBVJBEAgAigCBCIJIBVPDQIgAigCCCIHIBVPDQMCfSABKAIAIgMgCUEMbGoiBSoCACADIAZBDGxqIgkqAgAiHJMiISADIAdBDGxqIgNBBGoqAgAgCUEEaioCACIbkyIelCAFQQRqKgIAIBuTIhsgAyoCACAckyIdlJMiHyAflCAbIANBCGoqAgAgCUEIaioCACIbkyIclCAFQQhqKgIAIBuTIhsgHpSTIh4gHpQgGyAdlCAhIByUkyIcIByUkpJDAAAAAJIiG0MAAIAoXiIDRQRAIARBuAFqIAJBCGooAgA2AgAgBCACKQIANwOwAUMAAAAAIRxDAAAAACEdQwAAAAAMAQsgGxCIASEbIARBuAFqIAJBCGooAgA2AgAgBCACKQIANwOwASAfIBuVIR0gHCAblSEcIB4gG5ULIRsgFyAEKQOgATcCACAEQdgBaiIGIARBuAFqKAIANgIAIBdBCGogGCgCADYCACAEIAQpA7ABNwPQASAEQcIBaiIHIARBrwFqLQAAOgAAIAQgBC8ArQE7AcABIANFIQUgBCgCNCAORgRAIARBMGohCyMAQSBrIgwkAAJAAkAgDkEBaiIDIA5JDQBBBCETIAtBBGooAgAiCkEBdCICIAMgAiADSxsiAkEEIAJBBEsbIgmtQjB+IiJCIIhQQQJ0IQMgIqchAgJAIApFBEBBACETDAELIAwgCygCADYCECAMIAqtQjB+PgIUCyAMIBM2AhggDCACIAMgDEEQahCEByAMKAIABEAgDEEIaigCACIARQ0BIAwoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyAMKAIEIQIgC0EEaiAJNgIAIAsgAjYCACAMQSBqJAAMAQsQgQoACyAEKAI4IQ4gBCgCMCEZCyAGKQMAISQgBEHgAWopAwAhIyAEKQPQASEiIBkgDkEwbGoiAiAFOgAsIAIgIjcCACACQQA2AiQgAiAbOAIYIAJBEGogIzcCACACQQhqICQ3AgAgAkEgaiAdOAIAIAJBHGogHDgCACACIAQvAcABOwAtIAJBL2ogBy0AADoAACAEIA5BAWoiDjYCOCAWIA8iAkYNBQwBCwsgBiAVQbzawgAQzAgACyAJIBVBzNrCABDMCAALIAcgFUHc2sIAEMwIAAsgBCgCGCIDRQ0FIAQoAhAiAiADQQV0agwBCyAEKAIQIQIgCEUNASACIAhBBXRqCyEFQwAAgD8gIJMhGyAEKAIwIQogAiEDA0ACQAJAIANBCGooAgAiBiAOSSIPBEAgA0EMaigCACIHIA5PDQggA0EgaiEJIAogBkEwbGpBACAPGyIPKgIYIAogB0EwbGoiByoCGJQgD0EcaioCACAHQRxqKgIAlJIgD0EgaioCACAHQSBqKgIAlJIgG14NAQwCCwwHCyADQRxqQQE6AAALIAUgCSIDRw0ACwwBCyAORQ0BC0EAIQkgBCgCGCEQIAQoAjAhDCAEQdgBaiEWA0ACQAJAAkACQAJAAkAgCSAORwRAIAwgCUEwbGoiAygCJEEBRg0GIBAgAygCDCIGTQ0BAn9BACACIAZBBXRqLQAcRQ0AGiAQIANBEGooAgAiBk0NAkEBIAIgBkEFdGotABxFDQAaIBAgA0EUaigCACIGTQ0CIAIgBkEFdGotABwNB0ECCyEHIAQoAighDSAWIANBIGooAgA2AgAgBCADKQIYNwPQASAEKAKIASILIgggBCgChAFGBEAgBEGAAWogCxCUBiAEKAKIASEICyAEKAKAASITIAhBAnRqIAY2AgAgBCAIQQFqIgU2AogBIAkgDk8NAiADIAdBAnRqIgYoAgAhDyAEKAKYASIDIAQoApQBRgRAIARBkAFqIAMQlAYgBCgCmAEhAwsgBCgCkAEgA0ECdGogDzYCAEEBIREgBCADQQFqNgKYASAHQQFqQQNwIQggBigCACEHIAkhBgNAIAwgBkEwbGoiCiAIQQJ0aiIDKAIAIg8gB0YEQCARQQJNDQggBCgCJCANRgRAIARBIGogDRD3BSAEKAIoIQ0LIAQoAiAgDUEUbGoiAyARNgIEIAMgCzYCACADIAQpA9ABNwIIIANBEGogFigCADYCACAEIA1BAWo2AigMCAsgA0EMaigCACESIApBKGogDTYCACAKQQE2AiQgECASTQ0EAkAgAiASQQV0aiIDLQAcBEAgDiADQQxqKAIAIANBCGooAgAiAyADIAZGGyIGTQ0HQQEhCAJAIAwgBkEwbGoiAygCDCASRg0AQQIhCCADQRBqKAIAIBJGDQBBACEIIANBFGooAgAgEkcNCQsgAyAIQQJ0aigCACAPRg0BQczbwgBB0ABBnNzCABDECQALIAQoAoQBIAVGBEAgBEGAAWogBRCUBiAEKAKAASETIAQoAogBIQULIBMgBUECdGogEjYCACAEIAVBAWoiBTYCiAEgBCgCmAEiAyAEKAKUAUYEQCAEQZABaiADEJQGIAQoApgBIQMLIAQoApABIANBAnRqIA82AgAgBCADQQFqNgKYASARQQFqIREgCEEBakEDcCEICyAGIA5JDQALIAYgDkGc28IAEMwIAAsgDiAOQezawgAQzAgACyAGIBBB/NrCABDMCAALIAkgDkGM28IAEMwIAAsgEiAQQazbwgAQzAgACyAGIA5BvNvCABDMCAALQbCPwgBBKEH82cIAEMQJAAsgDiAJQQFqIglHDQALIAQoAhAhAgsgBCgCGCIJRQ0AIAJBCGohAyAJQQV0IQUgBCgCOCEPIAQoAjAhBwNAIAMoAgAiCSAPSSICRQ0CIAcgCUEwbGpBACACGyICKAIkQQFGBEAgAyACKAIoNgIACyADQQRqIgkoAgAiAiAPTw0CIAcgAkEwbGpBACACIA9JGyICKAIkQQFGBEAgCSACKAIoNgIACyADQSBqIQMgBUEgayIFDQALCwJAIARBCGoiAygCACIHIAFBCGooAgAiAk8EQCADIAI2AgAMAQsgAiAHayIFIARBBGooAgAgB2tLBEAgBCAHIAUQkgYgBEEIaigCACEHCyAEKAIAIgIgB0EDdGohCQJAAkAgBUECTwRAIAlBACAFQQN0QQhrEIAMGiACIAUgB2pBAWsiB0EDdGohCQwBCyAFRQ0BCyAJQgA3AgAgB0EBaiEHCyADIAc2AgALIAQoAiAhDwJAIAQoAigiFEUEQCAEKAIIIQcgBCgCACEJDAELIA8gFEEUbGohCyAEKAIAIQkgBCgCCCEHIAQoApgBIRYgBCgCkAEhCiAPIQUDQCAFKAIEIgYgBSgCACICaiEDAkAgAyAGTwRAIAMgFk0NASADIBYQ/AsACyACIAMQ/QsACwJAIAYEQCAKIAJBAnRqIQMgBkECdCEGA0AgAygCACICIAdPDQIgCSACQQN0aiICIAIoAgRBAWo2AgQgA0EEaiEDIAZBBGsiBg0ACwsgCyAFQRRqIgVGDQIMAQsLIAIgB0G83MIAEMwIAAsCQAJAIAcEQCAHQQFrQf////8BcSILQQFqIgpBB3EhCCALQQdJBEBBACEGIAkhAwwCCyAKQfj///8DcSEFQQAhBiAJIQMDQCADIAY2AgAgA0EIaiADQQRqKAIAIAZqIgI2AgAgA0EQaiADQQxqKAIAIAJqIgI2AgAgA0EYaiADQRRqKAIAIAJqIgI2AgAgA0EgaiADQRxqKAIAIAJqIgI2AgAgA0EoaiADQSRqKAIAIAJqIgI2AgAgA0EwaiADQSxqKAIAIAJqIgI2AgAgA0E4aiADQTRqKAIAIAJqIgI2AgAgA0E8aigCACACaiEGIANBQGshAyAFQQhrIgUNAAsMAQsgBEHgAGpBABDxBCAEQfAAakEAEPEEDAELIAgEQANAIAMgBjYCACADQQRqKAIAIAZqIQYgA0EIaiEDIAhBAWsiCA0ACwsgBEHgAGogBhDxBCAEQfAAaiAGEPEEIAdFDQACQCAKQQdxIgZFBEAgCSEDDAELIAkhAwNAIANBBGpBADYCACADQQhqIQMgBkEBayIGDQALCyALQQdJDQAgCSAHQQN0aiEFIANBPGohAwNAIANBADYCACADQQhrQQA2AgAgA0EQa0EANgIAIANBGGtBADYCACADQSBrQQA2AgAgA0Eoa0EANgIAIANBMGtBADYCACADQThrQQA2AgAgA0EEaiADQUBrIQMgBUcNAAsLIBQEQEEAIQ0gBCgCgAEhESAEKAJwIQwgBCgCeCEZIAQoAogBIRUgBCgCYCEWIAQoAmghGiAEKAKQASELIAQoApgBIRcDQAJAAkACQAJAAkACQCANIBRHBEAgDyANQRRsaiICKAIAIQUgBSAFIAIoAgQiAmpPDQYgBUECdCIDIAtqIQggAyARaiEOIAUgFyAFIBdLGyIKIAVrIQYgBSAVIAUgFUsbIgMgBWshBQNAIAZFDQIgCCgCACIQIAdPDQMgCSAQQQN0aiIYKAIEIBgoAgBqIhAgGk8NBCAWIBBBAnRqIA02AgAgBUUNBSAYQQRqIhIoAgAgGCgCAGoiECAZTw0GIAwgEEECdGogDigCADYCACASIBIoAgBBAWo2AgAgCEEEaiEIIA5BBGohDiAGQQFrIQYgBUEBayEFIAJBAWsiAg0ACwwGCyAUIBRBzNzCABDMCAALIAogF0Hc3MIAEMwIAAsgECAHQezcwgAQzAgACyAQIBpB/NzCABDMCAALIAMgFUGM3cIAEMwIAAsgECAZQZzdwgAQzAgACyAUIA1BAWoiDUcNAAsLIARB0AFqIgJBCGogAUEIaigCADYCACAEQeQBaiAEQQhqKAIANgIAIARB8AFqIARBKGooAgA2AgAgBEH8AWogBEEYaigCADYCACAEQYgCaiAEQegAaigCADYCACAEIAQpAwA3AtwBIAQgBCkDIDcD6AEgBCAEKQMQNwL0ASAEIAQpA2A3A4ACIAQgASkCADcD0AEgBEGUAmogBEH4AGooAgA2AgAgBEGgAmogBEGIAWooAgA2AgAgBEGsAmogBEGYAWooAgA2AgAgBCAEKQNwNwKMAiAEIAQpA4ABNwOYAiAEIAQpA5ABNwKkAiAAIAJB4AAQ/wsaIARBQGsQ+AggBCgCNCIARQ0BIACtQjB+p0UNASAEKAIwELEBDAELIABBADYCAAJAIAQoApQBIgBFDQAgAEECdEUNACAEKAKQARCxAQsCQCAEKAKEASIARQ0AIABBAnRFDQAgBCgCgAEQsQELAkAgBCgCdCIARQ0AIABBAnRFDQAgBCgCcBCxAQsCQCAEKAJkIgBFDQAgAEECdEUNACAEKAJgELEBCyAEKAJAIgAEQCAEKAJEIABBAnRBC2pBeHFrELEBCwJAIAQoAlQiAEUNACAAQQR0RQ0AIAQoAlAQsQELAkAgBCgCNCIARQ0AIACtQjB+p0UNACAEKAIwELEBCwJAIAQoAiQiAEUNACAArUIUfqdFDQAgBCgCIBCxAQsCQCAEKAIUIgBFDQAgAEEFdEUNACAEKAIQELEBCwJAIAQoAgQiAEUNACAAQQN0RQ0AIAQoAgAQsQELIAFBBGooAgAiAEUNACAArUIMfqdFDQAgASgCABCxAQsgBEGwAmokAAuFJgMmfxx9A34jAEGACGsiCyQAIAtBCGogBiAHKAKAAREAACALQThqIAc2AgAgC0EwaiAENgIAIAsgCjoAPCALIAk4AhwgCyAIOAIYIAsgBjYCNCALIAM2AiwgCyAFNgIoIAsgAjYCJCALIAE2AiACQAJAIAMgBCgCEBEEACIKQSBqKAIABEAgC0EANgJIIAtCBDcDQCALQUBrIgFBABCWBiALKAJAIAsoAkgiAkEDdGpCgICAgPD///9+NwIAIAsgAkEBajYCSCALQZABaiABEPECQQQhAQJAIAsoApABQQFHDQAgC0E8aiEjIAtBHGohJCALQRhqISUgC0GzBmohBiALQcwEaiEYIAtByQRqIRIgC0GwAmohEyALQfAGaiIBQRxqIRkgAUEoaiEaIAFBBHIhGyABQRBqIRwgC0HIB2oiAUEoaiEQIAFBHGohHSABQRBqIREgAUEEciEeQ///f38hCCAKQSBqIR8gC0GABGohIEEEIQECQAJAA0AgCCALKgKYAYxfDQMgHygCACIDIAsoApQBIgJLBEAgC0GgAWogCigCGCACQQd0akGAARD/CxogCy0AmAIiDwRAIAsoAowCIgMgCigCPCICSSEEIANBDGwgCigCNCIDakEAIAQbQQhqQQAgBBshJiALKAKIAiIFIAJJIQQgAyAFQQxsakEAIAQbQQhqQQAgBBshJyALKAKEAiIFIAJJIQQgAyAFQQxsakEAIAQbQQhqQQAgBBshKCALKAKAAiIEIAJJIQIgAyAEQQxsakEAIAIbQQhqQQAgAhshIQsgCyAIOAL0AyAgQgA3AwAgC0IANwP4A0EAIQIgC0EANgKMBCALQQQ6APwFIAtBBDoAwAUgC0EEOgCEBSALQQQ6AMgEIAsqArwBIQkgCyoC7AEhMyALKgKsASExIAsqAtwBITcgCyoCzAEhNCALKgL8ASE1IAsqArgBITIgCyoC6AEhNiALKgKoASE5IAsqAtgBITggCyoCyAEhPiALKgL4ASE/IAsqArQBITogCyoC5AEhOyALKgKkASFGIAsqAtQBIUcgCyoCxAEhSCALKgL0ASFJIAsqAtABIkEgCyoCoAEiQpMiQyBDlCALKgLgASJDIAsqArABIkqTIkQgRJSSIAsqAvABIkQgCyoCwAEiS5MiRSBFlJJDAAAAAJIQiAEhRSBHIEaTIjwgPJQgOyA6kyI8IDyUkiBJIEiTIjwgPJSSQwAAAACSEIgBITwgOCA5kyI9ID2UIDYgMpMiPSA9lJIgPyA+kyI9ID2UkkMAAAAAkhCIASE9IAsgNyAxkyJAIECUIDMgCZMiQCBAlJIgNSA0kyJAIECUkkMAAAAAkhCIATgCjAYgCyA9OAKIBiALIDw4AoQGIAsgRTgCgAYgNCA1kkMAAAA/lCFFID4gP5JDAAAAP5QhPCBIIEmSQwAAAD+UIUggSyBEkkMAAAA/lCFJIAkgM5JDAAAAP5QhRCAyIDaSQwAAAD+UIUsgOiA7kkMAAAA/lCE9IEogQ5JDAAAAP5QhQyAxIDeSQwAAAD+UIUogOSA4kkMAAAA/lCFAIEYgR5JDAAAAP5QhRiBCIEGSQwAAAD+UIUcgC0GABmohBSALQcACaiEEA0AgCyACNgKcBiALIEo4AswCIAsgQDgCyAIgCyBGOALEAiALIEc4AsACIAQqAgAhNCALIEQ4AswCIAsgSzgCyAIgCyA9OALEAiALIEM4AsACIAQqAgAhNSALIEU4AswCIAsgPDgCyAIgCyBIOALEAiALIEk4AsACIAQqAgAhMiALIAUoAgA2AqAGIAsgCygCFDYCqAYgC0GwBmoiB0EIaiIiIAsoAiQiA0EIaikCADcDACAHQRBqIhQgA0EQaikCADcDACAHQSBqIhUgA0EgaikCADcDACAHQRhqIhYgA0EYaikCADcDACAHQShqIikgA0EoaikCADcDACAHQTBqIiogA0EwaikCADcDACAHQThqIANBOGopAgA3AwAgCyADKQIANwOwBiAVKgIAITYgFioCACE+IAsqAsQGIT8gCyoCzAYhOSALKgLUBiE4IBQgFCoCACJBIDQgCyoCvAYiNyAyIAsqArQGIgmUIDUgIioCACIzlJMiMSAxkiI6lCAJIDUgCyoCsAYiMZQgNCAJlJMiOyA7kiI7lCAzIDQgM5QgMiAxlJMiNCA0kiI0lJOSkpIiQjgCACAWID4gMiA3IDuUIDEgNJQgCSA6lJOSkpIiTDgCACALID8gNSA3IDSUIDMgOpQgMSA7lJOSkpIiOjgCxAYgFSA/IDYgNyAzIDmUIDEgOJSTIjQgNJIiNJQgMyAJIDiUIDMgNpSTIjUgNZIiNZQgMSAxIDaUIAkgOZSTIjIgMpIiMpSTkpKSIDqTIjYgNyAxID4gOCA3IDKUIDEgNJQgCSA1lJOSkpIgTJMiOJQgMyBBIDkgNyA1lCAJIDKUIDMgNJSTkpKSIEKTIjSUkyI1IDWSIjWUIDEgCSA0lCAxIDaUkyIyIDKSIjKUIDMgMyA2lCAJIDiUkyI2IDaSIjaUk5KSOAIAIAsgOCA3IDKUIAkgNpQgMSA1lJOSkjgC1AYgCyA0IDcgNpQgMyA1lCAJIDKUk5KSOALMBiALQcACaiIHQQhqIhcgCygCKCIDQQhqKQIANwMAIAdBEGoiDCADQRBqKQIANwMAIAdBGGoiDSADQRhqKQIANwMAIAdBIGoiDiADQSBqKQIANwMAIAdBKGogA0EoaikCADcDACAHQTBqIANBMGopAgA3AwAgB0E4aiADQThqKQIANwMAIAsgAykCADcDwAIgCyoCECIyIAsqAsQCIgmUIAsqAgwiOCAXKgIAIjOUkyIxIDGSITQgOCALKgLAAiIxlCALKgIIIjYgCZSTIjcgN5IhNSAMIAwqAgAiPyA2IAsqAswCIjcgNJQgCSA1lCAzIDYgM5QgMiAxlJMiNiA2kiI+lJOSkpIiOjgCACANIA0qAgAiOyAyIDcgNZQgMSA+lCAJIDSUk5KSkiJBOAIAIA4qAgAhMiALKgLkAiE2IAsqAtwCITkgCyALKgLUAiJCIDggNyA+lCAzIDSUIDEgNZSTkpKSIjg4AtQCIA4gQiAyIDcgMyA5lCAxIDaUkyI0IDSSIjSUIDMgCSA2lCAzIDKUkyI1IDWSIjWUIDEgMSAylCAJIDmUkyIyIDKSIjKUk5KSkiA4kyI4IDcgMSA7IDYgNyAylCAxIDSUIAkgNZSTkpKSIEGTIjaUIDMgPyA5IDcgNZQgCSAylCAzIDSUk5KSkiA6kyI0lJMiNSA1kiI1lCAxIAkgNJQgMSA4lJMiMiAykiIylCAzIDMgOJQgCSA2lJMiOSA5kiI5lJOSkjgCACALIDQgNyA5lCAzIDWUIAkgMpSTkpI4AtwCIAsgNiA3IDKUIAkgOZQgMSA1lJOSkjgC5AIgCyoCHCEJIAsqAhghMyALKAIgIQMCQCALKgKgBiIxIAsqAqgGIjdgRQRAIAtBADYCsAcgC0HIB2ogAyALQcACaiA3IAtBqAZqIAtBsAZqIDEgC0GgBmogMyAJIAtBsAdqEEkgCy0A/AciA0EERg0BIBwgHikCADcCACAbIBEpAgA3AgAgGiAdKQIANwIAIBkgECkCADcCACAcQQhqIB5BCGooAgA2AgAgG0EIaiARQQhqKAIANgIAIBpBCGogHUEIaigCADYCACAZQQhqIBBBCGooAgA2AgAgCyALKgLIBzgC8AYMAQsgC0EANgLIByALQfAGaiADIAtBsAZqIDEgC0GgBmogC0HAAmogNyALQagGaiAzIAkgC0HIB2oQSSALLQCkByEDCwJAIANB/wFxQQRGDQAgCyoC8AYhCSAPBEAgCyAmNgK8ByALICc2ArgHIAsgKDYCtAcgCyAhNgKwByAJIAsqAvQDXUUNASALKAKcBiIDQQNLDQYgC0GwB2ogA0ECdGooAgAiA0UNASALIAMoAgAiAzYCxAcgCygCLCALKAIwIQwgCyALKQI0NwPgByALIAsoAig2AtwHIAsgCykDIDcC1AcgCyAjNgLQByALICQ2AswHIAsgJTYCyAcgCyALQcQHajYC/AcgCyALQZAEajYC+AcgCyALQfQDajYC9AcgCyALQYwEajYC8AcgCyALQZwGajYC7AcgCyALQfgDajYC6AcgAyALQcgHakH4sMIAIAwoAgwRAQAMAQsgCygCnAYiA0EETw0EIAtBjARqIANqIAkgCyoC9ANdOgAAIAtB+ANqIANBAnRqIAk4AgALIARBBGohBCAFQQRqIQUgAkEBaiICQQRHDQALIBMgCykD+AM3AgAgE0EIaiIEICApAwA3AgAgC0HIB2oiA0EIaiIFIAtBkARqIgJBCGoiBykDADcDACARIAJBEGoiDCkDADcDACADQRhqIg0gAkEYaiIOKQMANwMAIANBIGoiDyACQSBqIhcpAwA3AwAgECACQShqIispAwA3AwAgA0EwaiIDIAJBMGoiLCkDADcDACALIAspA5AENwPIByALKAKMBCECIAtBsgdqIi0gEkECaiIuLQAAOgAAIAsgEi8AADsBsAcgCy0AyAQhLyALQcACaiIwIBhBtAEQ/wsaICwgAykDADcDACArIBApAwA3AwAgFyAPKQMANwMAIA4gDSkDADcDACAMIBEpAwA3AwAgByAFKQMANwMAIAsgCykDyAc3A5AEIAsgLzoAyAQgEiALLwGwBzsAACAuIC0tAAA6AAAgGCAwQbQBEP8LGiALIAQpAgA3A/gGIAsgEykCADcD8AYgAkEVdkH4AXEgAkEOdkH8AXEgAkEHdkH+AXEgAkH/AXFycnKtIU8gHygCACEFIAooAjwhB0IAIU0DQCBNIk5CAXwhTQJAIE8gTohCAYNQDQAgTqchAiALLQCYAgRAIAJBAnQiBCALQfAGamoqAgAiCSAIXUUNASALQZAEaiACQTxsaiIDQThqLQAAIgJBBEYNASAEIAtqQYACaigCACAHTw0BIAYgAykAADcAACAGQTBqIANBMGopAAA3AAAgBkEoaiADQShqKQAANwAAIAZBIGogA0EgaikAADcAACAGQRhqIANBGGopAAA3AAAgBkEQaiADQRBqKQAANwAAIAZBCGogA0EIaikAADcAACALQc4AaiADQTtqLQAAOgAAIAsgAy8AOTsBTCALQdAAaiIBQTdqIAtB5wZqKAAANgAAIAFBMGogKikAADcDACABQShqICkpAAA3AwAgAUEgaiAVKQAANwMAIAFBGGogFikAADcDACABQRBqIBQpAAA3AwAgAUEIaiAiKQAANwMAIAsgCykAsAY3A1AgAiEBIAkhCAwBCyACQQJ0IgIgC2pBgAJqKAIAIgwgBU8NACALQfAGaiACaioCAIwhCSALKAJIIgMhAiALKAJEIANGBEAgC0FAayADEJYGIAsoAkghAgsgCygCQCIEIAJBA3RqIg0gCTgCBCANIAw2AgAgCyACQQFqNgJIIAQgA0EDdGoiAioCBCEJIAIoAgAhDAJAIANFBEBBACECDAELA0BBAEF/IAQgA0EBayINQQF2IgJBA3RqIg5BBGoqAgAiMyAJXyIPG0EBQQIgDxsgCSAzXxtBA2tBfkkEQCADIQIMAgsgBCADQQN0aiAOKQIANwIAIAIhAyANQQFLDQALCyAEIAJBA3RqIgIgCTgCBCACIAw2AgALIE1CBFINAAsgC0GQAWogC0FAaxDxAiALKAKQAUEBRg0BDAQLCyACIANBjInCABDMCAALIANBBEGoqsIAEMwIAAsgA0EEQbiqwgAQzAgACyALQcACaiICQQhqIAtB0ABqIgNBCGopAwA3AwAgAkEQaiADQRBqKQMANwMAIAJBGGogA0EYaikDADcDACACQSBqIANBIGopAwA3AwAgAkEoaiADQShqKQMANwMAIAJBMGogA0EwaikDADcDACACQTdqIANBN2ooAAA2AAAgC0GiAWogC0HOAGotAAA6AAAgCyALKQNQNwPAAiALIAsvAUw7AaABAkAgCygCRCICRQ0AIAJBA3RFDQAgCygCQBCxAQsgAUH/AXFBBEcNAQsgAEEEOgA0DAELIAAgCy8BoAE7ADUgC0GQBGoiAkE3aiIEIAtBwAJqIgNBN2ooAAA2AAAgAkEwaiADQTBqKQMANwMAIAJBKGogA0EoaikDADcDACACQSBqIANBIGopAwA3AwAgAkEYaiADQRhqKQMANwMAIAJBEGogA0EQaikDADcDACACQQhqIANBCGopAwA3AwAgAEE3aiALQaIBai0AADoAACALIAspA8ACNwOQBCAAIAE6ADQgAEEw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akEAIAwgDUsbIgMoAgBBAUcNASACQQxqKAIAIg8gAygCBEcNASACQcQAaioCACElIAJBQGsqAgAhJCACQTxqKgIAISggAkE4aioCACEeIAJBNGoqAgAhHyACQTBqKgIAISIgAkEsaioCACEhIAJBHGoqAgAhIyACQRhqKgIAISAgAkEUaioCACEmIAIqAhAhJyACQSRqKgIAIi0gCyoCGCIclCACQSBqKgIAIiwgCyoCHCIblJMiGiAakiEqICwgCyoCICIalCACQShqKgIAIikgHJSTIh0gHZIhKyAJQQhqIgxBGGogCyoCMCApIAsqAiQiHSAqlCAcICuUIBsgKSAblCAtIBqUkyIpICmSIimUk5KSkjgCACAMQRRqIAsqAiwgLSAdICuUIBogKZQgHCAqlJOSkpI4AgAgCSAjIB2UICcgHJSTICYgG5STICAgGpSTOAIUIAkgIyAalCAmIByUICAgHZSSICcgG5STkjgCECAJICcgGpQgIyAblCAmIB2UICAgHJSTkpI4AgwgCSAgIBuUICMgHJQgJyAdlJKSICYgGpSTOAIIIAkgCyoCKCAsIB0gKZQgGyAqlCAaICuUk5KSkjgCGCAJQShqIgxBGGogAyoCMCAlIANBJGoqAgAiHSAkIAMqAhgiHJQgKCADQRxqKgIAIhuUkyIaIBqSIiOUIBwgKCADKgIgIhqUICUgHJSTIiAgIJIiIJQgGyAlIBuUICQgGpSTIiYgJpIiJpSTkpKSOAIAIAxBFGogA0EsaioCACAkIB0gIJQgGiAmlCAcICOUk5KSkjgCACAJIB4gHZQgISAclJMgIiAblJMgHyAalJM4AjQgCSAeIBqUICIgHJQgHyAdlJIgISAblJOSOAIwIAkgISAalCAeIBuUICIgHZQgHyAclJOSkjgCLCAJIB8gG5QgHiAclCAhIB2UkpIgIiAalJM4AiggCSADKgIoICggHSAmlCAbICOUIBogIJSTkpKSOAI4IAlByABqIghBCGogC0EIaiIMQcwBaigCADYCACAIQRRqIAtB4AFqKAIANgIAIAhBIGogDEGMAWooAgA2AgAgCEEsaiALQaABaikCADcCACAIQTRqIAtBqAFqKQIANwIAIAkgDCkCxAE3A0ggCSALKQLYATcCVCAJIAxBhAFqKQIANwNgIAkgCykCmAE3AmwgCEHEAGog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CiAAQfAAaiEAIAEgAkcNAAsMBgtB8I7BAEETQcy5wQAQ6QsAC0HwjsEAQRNB3LnBABDpCwALQfCOwQBBE0GMusEAEOkLAAtB8I7BAEETQZy6wQAQ6QsACyAGIAMQ/gELIAlBgAJqQgA3AwAgCUH4AWpCADcDACAJQfABakIANwMAIAlBmAJqQgA3AwAgCUGgAmpCADcDACAJQaYCakIANwEAIAlBuAJqQgA3AwAgCUHAAmpCADcDACAJQcgCakIANwMAIAlB2AJqQgA3AwAgCUHQAmpC////+////7//ADcDACAJQeACakIANwMAIAlB6AJqQgA3AwAgCUHuAmpCADcBACAJQgA3A+gBIAlCADcDkAIgCUL////7////v/8ANwOIAiAJQgA3A7ACIAlBkANqQgA3AwAgCUGIA2pCADcDACAJQYADakIANwMAIAlBmANqQv////v///+//wA3AwAgCUGgA2pCADcDACAJQagDakIANwMAIAlBsANqQgA3AwAgCUG2A2pCADcBACAJQcgDakIANwMAIAlB0ANqQgA3AwAgCUHYA2pCADcDACAJQeADakL////7////v/8ANwMAIAlB6ANqQgA3AwAgCUHwA2pCADcDACAJQfgDakIANwMAIAlB/gNqQgA3AQAgCUIANwP4AiAJQgA3A8ADIAlBoARqQgA3AwAgCUGYBGpCADcDACAJQZAEakIANwMAIAlBxgRqQgA3AQAgCUGoBGpC////+////7//ADcDACAJQcAEakIANwMAIAlBuARqQgA3AwAgCUGwBGpCADcDACAJQegEakIANwMAIAlB4ARqQgA3AwAgCUHYBGpCADcDACAJQY4FakIANwEAIAlB8ARqQv////v///+//wA3AwAgCUGIBWpCADcDACAJQYAFakIANwMAIAlB+ARqQgA3AwAgCUIANwOIBCAJQgA3A9AEIAlBsAVqQgA3AwAgCUGoBWpCADcDACAJQaAFakIANwMAIAlCADcDmAUgCUG4BWpC////+////7//ADcDACAJQdYFakIANwEAIAlB0AVqQgA3AwAgCUHIBWpCADcDACAJQcAFakIANwMAIAlB+AVqQgA3AwAgCUHwBWpCADcDACAJQegFakIANwMAIAlCADcD4AUgCUGABmpC////+////7//ADcDACAJQZ4GakIANwEAIAlBmAZqQgA3AwAgCUGQBmpCADcDACAJQYgGakIANwMAIAlBwAZqQgA3AwAgCUG4BmpCADcDACAJQbAGakIANwMAIAlCADcDqAYgCUHIBmpC////+////7//ADcDACAJQeYGakIANwEAIAlB4AZqQgA3AwAgCUHYBmpCADcDACAJQdAGakIANwMAIAlBiAdqQgA3AwAgCUGAB2pCADcDACAJQfgGakIANwMAIAlCADcD8AYgCUGQB2pC////+////7//ADcDACAJQa4HakIANwEAIAlBqAdqQgA3AwAgCUGgB2pCADcDACAJQZgHakIANwMAIAlB0AdqQgA3AwAgCUHIB2pCADcDACAJQcAHakIANwMAIAlCADcDuAcgCUHYB2pC////+////7//ADcDACAJQfYHakIANwEAIAlB8AdqQgA3AwAgCUHoB2pCADcDACAJQeAHakIANwMAIAlBmAhqQgA3AwAgCUGQCGpCADcDACAJQYgIakIANwMAIAlCADcDgAggCUGgCGpC////+////7//ADcDACAJQb4IakIANwEAIAlBuAhqQgA3AwAgCUGwCGpCADcDACAJQagIakIANwMAIAAhDSABIQMgCUHoAWohEEEAIQEjAEHQAmsiCCQAIAItAKkCIRQgAi0AqgIhFyAIQQhqIAlBCGogCUEoaiAJQcgAaiIOQTxqIAlBmAFqIg9BPGogAi0AqAIiExBlIAJB7AFqIQBBAyESIBdBA3YhGSAOQRRqKgIAISAgDkEQaioCACEmIA9BFGoqAgAhJyAPQRBqKgIAISUgDioCDCEkIA8qAgwhKCANKgIAIhwgHJQhHyAIQcACaiEVAkACQAJAAkACQAJAAkACQAJAAkADQCAZIBJ2QQFxBEAgAEEYayoCACEqIABBFGsqAgAhKyAAQQhrKgIAIS0gAEEQayoCACEeIABBDGsqAgAhIiAIQQhqIBFqIhZBBGoqAgAhGyAWQQhqKgIAIRogAC0AACEYIBYqAgAhHSAIQQA2AqgCIAhCADcDoAIgCCAaOAK4AiAIIBs4ArQCIAggHTgCsAIgCCAaOALIAiAIIBs4AsQCIAggHTgCwAIgCEHYAWogBiAFIAMgDiAPIAsgDCAKIARBAiASIAhBoAJqIAhBsAJqIAhBwAJqENwBQwAAAAAhIUMAAAAAQwAAgD8gHyAelCAcICKU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QYEBNgIAIAFBDGpBggE2AgAgDUEUakEDNgIAIA0gADYCKCANIAJBDGo2AiAgDUGBATYCHCANIAM2AhggDUIDNwIEIA1BjNjBADYCACANIAE2AhAgDUG02MEAEIIKAAsgCSADQSxsakEMaiICIAFBzNfBABDgCiEBIA1BGGoiAEEUakGBATYCACAAQQxqQYIBNgIAIA1BFGpBAzYCACANIAc2AiggDSACNgIgIA1BgQE2AhwgDSABNgIYIA1CAzcCBCANQbTXwQA2AgAgDSAANgIQIA1B3NfBABCCCgALIAggAigCACIDTQ0AQYj/wABBG0GA18EAENsKAAsgAyAIQfDWwQAQzAgACwJAIA0oAhwiAkUNACACQQN0RQ0AIBMQsQELIA5BAkkNASAVRQ0BIBQQsQEMAQsgA0EBakECSQ0AIBAgA0EMbGohCkEAIQkDQCADQQxsIQIgA0EBayEDQQBBfyACIBBqIgcqAgAiISAHQQxrIggqAgAiIGAiAhtBAUECIAIbICAgIWAbQX9GBEAgECADQQxsaikCBCEiIAhBCGogB0EIaigCADYCACAIIAcpAgA3AgACQCAOIANrQQNJDQAgCSEGIAohAkEAQX8gCCoCGCIhICBgIggbQQFBAiAIGyAgICFgG0F/Rw0AA0AgAkEIaiACQRRqKAIANgIAIAIgAkEMaiIHKQIANwIAIAZBAWsiBkUNASACQRhqIQggByECQQBBfyAIKgIAIiEgIGAiCBtBAUECIAgbICAgIWAbQX9GDQALCyAHICI3AgQgByAgOAIACyAJQQFqIQkgCkEMayEKIAMNAAsLIABBHGooAgAiCSAAQRBqIgsoAgAiCmohCAJAIAggCk0EQCAIIQYMAQsgCSAAQQxqKAIAIAoiBmtLBEAgAEEIaiAKIAkQjAYgAEEQaigCACEGCyAAKAIIIAZBA3RqIQMgCUECTwRAIAlBAWsiB0EHcSECIAlBAmtBB08EQCAHQXhxIQcDQCADQv////v3/////wA3AgAgA0E4akL////79/////8ANwIAIANBMGpC////+/f/////ADcCACADQShqQv////v3/////wA3AgAgA0EgakL////79/////8ANwIAIANBGGpC////+/f/////ADcCACADQRBqQv////v3/////wA3AgAgA0EIakL////79/////8A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ACAtQZQCakEANgIAIC1BtAJqQgA3AgAgLUGwAmpB////+wc2AgAgLUGoAmpCgICAgPD//79/NwMAIC1BoAJqQv////8PNwMAIC1BvAJqQgA3AgAgLUHEAmpCADcCACAtQcwCakEANgIAIC1B2AJqQv////8PNwMAIC1B6AJqQf////sHNgIAIC1B4AJqQoCAgIDw//+/fzcDACAtQgA3AvwBIC1CgICAgPD//79/NwPwASAtQv////8PNwPoASAtQv////8PNwPgASAtQv////8PNwOYAiAtQv////8PNwPQAiAtQYQDakEANgIAIC1B/AJqQgA3AgAgLUH0AmpCADcCACAtQewCakIANwIAIC1BmANqQoCAgIDw//+/fzcDACAtQaADakH////7BzYCACAtQZADakL/////DzcDACAtQaQDakIANwIAIC1BrANqQgA3AgAgLUG0A2pCADcCACAtQbwDakEANgIAIC1B0ANqQoCAgIDw//+/fzcDACAtQdgDakH////7BzYCACAtQcgDakL/////DzcDACAtQdwDakIANwIAIC1B5ANqQgA3AgAgLUHsA2pCADcCACAtQfQDakEANgIAIC1C/////w83A4gDIC1C/////w83A8ADIC1BkARqQf////sHNgIAIC1BiARqQoCAgIDw//+/fzcDACAtQYAEakL/////DzcDACAtQawEakEANgIAIC1BpARqQgA3AgAgLUGcBGpCADcCACAtQZQEakIANwIAIC1BuARqQv////8PNwMAIC1ByARqQf////sHNgIAIC1BwARqQoCAgIDw//+/fzcDACAtQeQEakEANgIAIC1B3ARqQgA3AgAgLUHUBGpCADcCACAtQcwEakIANwIAIC1B8ARqQv////8PNwMAIC1BgAVqQf////sHNgIAIC1B+ARqQoCAgIDw//+/fzcDACAtQv////8PNwP4AyAtQv////8PNwOwBCAtQv////8PNwPoBCAtQZwFakEANgIAIC1BlAVqQgA3AgAgLUGMBWpCADcCACAtQYQFakIANwIAIC1BuAVqQf////sHNgIAIC1BsAVqQoCAgIDw//+/fzcDACAtQagFakL/////DzcDACAtQv////8PNwOgBSAtQdQFakEANgIAIC1BzAVqQgA3AgAgLUHEBWpCADcCACAtQbwFakIANwIA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IgQ2AgQgBSADQQhqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADKAAEIRcgBSAGQQxrIgQ2AgQgBSADQQxqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADNQAIISggBSAGQRBrIgQ2AgQgBSADQRBqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADNQAMISkgBSAGQRRrIgQ2AgQgBSADQRRqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADKAAQIRggBSAGQRhrIgQ2AgQgBSADQRhqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADNQAUISogBSAGQRxrIgQ2AgQgBSADQRxqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADNQAYISsgBSAGQSBrIgQ2AgQgBSADQSBqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADKAAcIRkgBSAGQSRrIgQ2AgQgBSADQSRqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADNQAgISwgBSAGQShrIgQ2AgQgBSADQShqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADNQAkIS0gBSAGQSxrIgQ2AgQgBSADQSxqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADKAAoIRogBSAGQTBrIgQ2AgQgBSADQTBqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADNQAsIS4gBSAGQTRrIgQ2AgQgBSADQTRqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADNQAwIS8gBSAGQThrIgQ2AgQgBSADQThqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADKAA0IRsgBSAGQTxrIgQ2AgQgBSADQTxqNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADNQA4ITAgBSAGQUBqIgQ2AgQgBSADQUBrNgIAIARBA00EQCACQoHKADcDiAUgAkGIBWoQtAohAQwBCyADNQA8ITEgBSAGQcQAayIENgIEIAUgA0HEAGo2AgAgBEEDTQRAIAJCgcoANwOIBSACQYgFahC0CiEBDAELIAMoAEAhHCAFIAZByABrIgQ2AgQgBSADQcgAajYCACAEQQNNBEAgAkKBygA3A4gFIAJBiAVqELQKIQEMAQsgAzUARCEyIAUgBkHMAGs2AgQgBSADQcwAajYCACADNQBIITMgAkEGNgLkAyACIAU2AuADIAJB6ANqIAJB4ANqEO4CAkACQAJAAkACQAJAIAIoAugDRQRAIAJBhARqLQAAIh1BAkYEQEEAIAJBqAVqQaS5wAAQnAghAQwICyACQYgEaiACQeADahDuAiACKAKIBA0BIAJBpARqLQAAIh5BAkYEQEEBIAJBqAVqQaS5wAAQnAghAQwICyACQagEaiACQeADahDuAiACKAKoBA0CIAJBxARqLQAAIh9BAkYEQEECIAJBqAVqQaS5wAAQnAghAQwICyACQcgEaiACQeADahDuAiACKALIBA0DIAJB5ARqLQAAIiBBAkYEQEEDIAJBqAVqQaS5wAAQnAghAQwICyACQegEaiACQeADahDuAiACKALoBA0EIAJBhAVqLQAAIiFBAkYEQEEEIAJBqAVqQaS5wAAQnAghAQwICyACQYgFaiACQeADahDuAiACKAKIBQ0FIAJBpAVqLQAAIiJBAkYEQEEFIAJBqAVqQaS5wAAQnAghAQwICyACQZgDaiIGQQhqIAJB6ANqIgNBEGopAwA3AwAgBkEQaiACQYAEaigCADYCACACQawDaiIGQQJqIANBH2otAAA6AAAgAkHIA2oiCEEIaiILIAJBiARqIgRBDGopAgA3AwAgCEEQaiIIIARBFGopAgA3AwAgAkH2AmogBEEfai0AADoAACACIAIpAowENwPIAyACIANBCGopAwA3A5gDIAIgA0Edai8AADsBrAMgAiAEQR1qLwAAOwH0AiACKALsAyEjIAJB2AJqIgRBEGogAkGoBGoiA0EUaikCADcDACAEQQhqIANBDGopAgA3AwAgAkHWAmogA0Efai0AADoAACACQbgCaiIJQQhqIAJByARqIgRBDGopAgA3AwAgCUEQaiAEQRRqKQIANwMAIAJBtgJqIARBH2otAAA6AAAgAiACKQKsBDcD2AIgAiADQR1qLwAAOwHUAiACIAIpAswENwO4AiACIARBHWovAAA7AbQCIAJBmAJqIgRBEGogAkHoBGoiA0EUaikCADcDACAEQQhqIANBDGopAgA3AwAgAkGWAmogA0Efai0AADoAACACQfgBaiIJQRBqIAJBiAVqIgRBFGopAgA3AwAgCUEIaiAEQQxqKQIANwMAIAJB9gFqIARBH2otAAA6AAAgAiACKQLsBDcDmAIgAiADQR1qLwAAOwGUAiACIAIpAowFNwP4ASACIARBHWovAAA7AfQBIAJBvwNqIAgpAwA3AAAgAkG3A2ogCykDADcAACACIAIpA8gDNwCvAyACQfgCaiIDQRdqIAZBF2ooAAA2AAAgA0EQaiAGQRBqKQEANwMAIANBCGogBkEIaikBADcDACACIAIpAawDNwP4AgJAAkACQCAFKAIEIgMEQCAFIANBAWs2AgQgBSAFKAIAIgVBAWo2AgAgBS0AACIFDgICAwELIAJCgcoANwOIBSACQYgFahC0CiEBDAoLQRBBBBCUCyIBRQ0IIAEgBToAASABQQI6AAAMCQtBACEFCyAAQQhqIAIpA8ABNwIAIABBJGogAikD2AE3AgAgAEEYaiACQcABaiIDQRBqKQMANwIAIABBEGogA0EIaikDADcCACAAQSxqIAJB2AFqIgNBCGopAwA3AgAgAEE0aiADQRBqKQMANwIAIAJBqAFqIgNBCGoiBCACQZgDaiIGQQhqKQMANwMAIANBEGoiCCAGQRBqKAIANgIAIAIgAikDmAM3A6gBIAJBiAFqIgNBF2oiCyACQfgCaiIGQRdqKAAANgAAIANBEGoiCSAGQRBqKQMANwMAIANBCGoiAyAGQQhqKQMANwMAIAJBhgFqIgYgAkH2AmotAAA6AAAgAkHoAGoiDEEQaiIkIAJB2AJqIg1BEGopAwA3AwAgDEEIaiIMIA1BCGopAwA3AwAgAiACKQP4AjcDiAEgAiACLwH0AjsBhAEgAiACKQPYAjcDaCACQeYAaiINIAJB1gJqLQAAOgAAIAIgAi8B1AI7AWQgAkHIAGoiDkEQaiIlIAJBuAJqIg9BEGopAwA3AwAgDkEIaiIOIA9BCGopAwA3AwAgAiACKQO4AjcDSCACQcYAaiIPIAJBtgJqLQAAOgAAIAIgAi8BtAI7AUQgAkEoaiIQQRBqIiYgAkGYAmoiEUEQaikDADcDACAQQQhqIhAgEUEIaikDADcDACACIAIpA5gCNwMoIAJBJmoiESACQZYCai0AADoAACACIAIvAZQCOwEkIAJBCGoiEkEQaiInIAJB+AFqIhNBEGopAwA3AwAgEkEIaiISIBNBCGopAwA3AwAgAiACKQP4ATcDCCACQQZqIhMgAkH2AWotAAA6AAAgAiACLwH0ATsBBCAAQYQBaiAjNgIAIABB/ABqIDNCIIYgMoQ3AgAgAEH4AGogHDYCACAAQfAAaiAxQiCGIDCENwIAIABB7ABqIBs2AgAgAEHkAGogL0IghiAuhDcCACAAQeAAaiAaNgIAIABB2ABqIC1CIIYgLIQ3AgAgAEHUAGogGTYCACAAQcwAaiArQiCGICqENwIAIABByABqIBg2AgAgAEFAayApQiCGICiENwIAIABBPGogFzYCACAAQSBqIAc2AgAgACABNgIEIABBiAFqIAIpA6gBNwIAIABBkAFqIAQpAwA3AgAgAEGYAWogCCgCADYCACAAQZwBaiAdOgAAIABBtAFqIAsoAAA2AAAgAEGtAWogCSkDADcAACAAQaUBaiADKQMANwAAIAAgAikDiAE3AJ0BIABBuAFqIB46AAAgAEG7AWogBi0AADoAACAAIAIvAYQBOwC5ASAAQcwBaiAkKQMANwIAIABBxAFqIAwpAwA3AgAgAEG8AWogAikDaDcCACAAQdQBaiAfOgAAIABB1wFqIA0tAAA6AAAgACACLwFkOwDVASAAQegBaiAlKQMANwIAIABB4AFqIA4pAwA3AgAgAEHYAWogAikDSDcCACAAQfABaiAgOgAAIABB8wFqIA8tAAA6AAAgACACLwFEOwDxASAAQYQCaiAmKQMANwIAIABB/AFqIBApAwA3AgAgAEH0AWogAikDKDcCACAAQYwCaiAhOgAAIABBjwJqIBEtAAA6AAAgACACLwEkOwCNAiAAQaACaiAnKQMANwIAIABBmAJqIBIpAwA3AgAgAEGQAmogAikDCDcCACAAQagCaiAiOgAAIABBqwJqIBMtAAA6AAAgACACLwEEOwCpAiAAQbACaiAFOgAAIAAgFjoArwIgACAVOgCuAiAAIBQ6AK0CIABBrAJqIAo6AAAgAEGzAmogAkEDai0AADoAACAAIAIvAAE7ALECIABBADYCAAwICyACKALsAyEBDAYLIAIoAowEIQEMBQsgAigCrAQhAQwECyACKALMBCEBDAMLIAIoAuwEIQEMAgsgAigCjAUhAQwBC0EQQQRB7OrDACgCACIAQZgHIAAbEQAAAAsgAEEBNgIAIAAgATYCBAsgAkGwBWokAAvgKwMlfwR+F30jAEGQAWsiAyQAAkACQAJAAkACQCAAQdQAaigCACISRQRAQQEhGgwBCyASQQBIDQEgEkEBEJULIhpFDQMLQQQhByASIQFBBCETIABByABqKAIAIg4EQCAOrUIMfiImQiCIpyIBDQEgJqciAkEASA0BIAFFQQJ0IQEgAgR/IAIgARCUCwUgAQsiE0UNAiATIQEgDkECTwRAIBNBACACQQxrIgEQgAwgAWohAQsgAUEANgIIIAFCADcCACAAKAJUIQELIANBMGpBADYCACADQgQ3AyggA0IANwMgIANBwP/BADYCHCADQQA2AhggA0HQAGpBADYCACADQgQ3A0ggA0IANwNAIANBwP/BADYCPCADQQA2AjggAQRAIAAoAkwiDSABQQxsaiEfIAAoAkghFCAAKAJAIRsgA0HIAGohICADQShqIRYgA0HwAGohIUEEIQkDQAJAAkACQAJAAkACQCANKAIAIgEgFEkEQCANKAIEIgIgFE8NASANKAIIIgQgFE8NAiAbIAJBDGxqIgIqAgAiMiAbIAFBDGxqIgEqAgAiM5MiKyAbIARBDGxqIgQqAgQiNCABKgIEIjeTIiqUIAIqAgQiOCA3kyIsIAQqAgAiOSAzkyItlJMiPiA+lCAsIAQqAggiOiABKgIIIjuTIi+UIAIqAggiPCA7kyIwICqUkyI/ID+UIDAgLZQgKyAvlJMiQCBAlJKSQwAAAACSIi5DAACAKF5FDQYgLhCIASE9QwAAAAAhMSArICuUICwgLJSSIDAgMJSSQwAAAACSEIgBITUgLSAtlCAqICqUkiAvIC+UkkMAAAAAkhCIASE2An1DAAAAACA1QwAAAABbDQAaQwAAAAAgNkMAAAAAWw0AGkMAAIC/ICsgLZQgLCAqlJIgMCAvlJIgNSA2lJUiLkMAAIA/liAuQwAAgL9dGxDrBAshLiAzIDKTIisgK5QgNyA4kyIqICqUkiA7IDyTIiwgLJSSQwAAAACSEIgBIS0gOSAykyIvIC+UIDQgOJMiMCAwlJIgOiA8kyI1IDWUkkMAAAAAkhCIASE2AkAgLUMAAAAAWw0AIDZDAAAAAFsNAEMAAIC/ICsgL5QgKiAwlJIgLCA1lJIgLSA2lJUiMUMAAIA/liAxQwAAgL9dGxDrBCExC0MAAAAAISsgMiA5kyIqICqUIDggNJMiLCAslJIgPCA6kyItIC2UkkMAAAAAkhCIASEvIDMgOZMiMCAwlCA3IDSTIjIgMpSSIDsgOpMiMyAzlJJDAAAAAJIQiAEhNAJAIC9DAAAAAFsNACA0QwAAAABbDQBDAACAvyAqIDCUICwgMpSSIC0gM5SSIC8gNJSVIitDAACAP5YgK0MAAIC/XRsQ6wQhKwsgEiAXTQ0EIBcgGmogKyArIDEgMSAuIC4gMV0bIC4gLlwbIiogKiArXRsgKiAqXBtDrPQ0QF4iAToAACABRQ0DDAYLIAEgFEGc5sIAEMwIAAsgAiAUQazmwgAQzAgACyAEIBRBvObCABDMCAALIA0oAgAiASAOSQRAIBMgAUEMbGoiASA/ID2VIiogLpQgASoCAJI4AgAgASBAID2VIiwgLpQgASoCBJI4AgQgASA+ID2VIi0gLpQgASoCCJI4AgggDSgCBCIBIA5JBEAgEyABQQxsaiIBICogMZQgASoCAJI4AgAgASAsIDGUIAEqAgSSOAIEIAEgLSAxlCABKgIIkjgCCCANKAIIIgEgDkkEQCATIAFBDGxqIgEgKiArlCABKgIAkjgCACABICwgK5QgASoCBJI4AgQgASAtICuUIAEqAgiSOAIIIA0oAgAhASANKAIEIgIgDSgCCCIESyEQIAMgBCACIBAbrSACIAQgEButQiCGhDcDaCADIAQgASABIARLIhAbrSABIAQgEButQiCGhDcDYCADIAIgASABIAJLIgQbrSABIAIgBButQiCGhDcDWCADQdgAaiEQA0AgECIVKQIAIidCIIinICenQcfc+e54c0G5893xeWxBBXdzQbnz3fF5bCIcQRl2Ih2tQoGChIiQoMCAAX4hKSADKAIcIgVBBGshBCAQQQhqIRBBACEIIBwgAygCGCIGcSIHIQICQAJAAkACQANAIAIgBWopAAAiKCAphSImQoGChIiQoMCAAX0gJkJ/hYNCgIGChIiQoMCAf4MhJgNAICZQBEAgKCAoQgGGg0KAgYKEiJCgwIB/g1BFDQMgCEEIaiIIIAJqIAZxIQIMAgsgCiAEICZ6p0EDdiACaiAGcUECdGsoAgAiAU0NAyAmQgF9ICaDISYgJyAJIAFBGGxqKQIEUg0ACwsgASAKSQ0DIAEgCkHM+MEAEMwIAAsgBSAHaikAAEKAgYKEiJCgwIB/gyImUARAQQghAQNAIAEgB2ogAUEIaiEBIAZxIgcgBWopAABCgIGChIiQoMCAf4MiJlANAAsLIAUgJnqnQQN2IAdqIAZxIgFqLAAAIgJBAE4EfyAFIAUpAwBCgIGChIiQoMCAf4N6p0EDdiIBai0AAAUgAgtBAXEhHgJAIAMoAiANACAeRQ0AIAkhB0EAIQJBACEMIwBBMGsiCCQAIANBEGoiIgJ/IANBGGoiCygCDCIPQQFqIQEgASAPSQRAEKkJIAgoAgghAiAIKAIMDAELAkACQAJAAn8gCygCACIGQQFqIQkCQCAGIAlBA3ZBB2wgBkEISRsiEUEBdiABSQRAIAEgEUEBaiICIAEgAksbIgJBCEkNAUF/IAJBA3RBB25BAWtndkEBaiACIAJB/////wFxRg0CGhCpCSAIKAIoIQIgCCgCLAwGCyALQQRqKAIAIQVBACEBA0ACQAJAIAJBAXFFBEAgASAJTw0BDAILIAFBB2oiAiABSQ0AIAkgAiIBSw0BCwJAAkAgCUEITwRAIAUgCWogBSkAADcAAAwBCyAFQQhqIAUgCRCBDBogBkF/Rw0AQQAhEQwBCyAFQQRrISNBACEBA0ACQCAFIAEiBGoiGC0AAEGAAUcNAAJAAkAgCiAjIARBAnRrIiQoAgAiAUsEQCAFIARBf3NBAnRqIQwDQCAFIAcgAUEYbGooAgAiGSAGcSIJIgJqKQAAQoCBgoSIkKDAgH+DIiZQBEBBCCEBIAkhAgNAIAEgAmohAiABQQhqIQEgBSACIAZxIgJqKQAAQoCBgoSIkKDAgH+DIiZQDQALCyAFICZ6p0EDdiACaiAGcSIBaiwAAEEATgRAIAUpAwBCgIGChIiQoMCAf4N6p0EDdiEBCyABIAlrIAQgCWtzIAZxQQhJDQIgBSABQX9zQQJ0aiECIAEgBWoiCS0AACAJIBlBGXYiCToAACABQQhrIAZxIAVqQQhqIAk6AABB/wFGDQMgDCgAACEBIAwgAigAADYAACACIAE2AAAgCiAkKAIAIgFLDQALCyABIApB3PjBABDMCAALIBggGUEZdiIBOgAAIARBCGsgBnEgBWpBCGogAToAAAwBCyAYQf8BOgAAIARBCGsgBnEgBWpBCGpB/wE6AAAgAiAMKAAANgAACyAEQQFqIQEgBCAGRw0ACwsgCyARIA9rNgIIDAYLIAEgBWoiAikDACEmIAIgJkIHiEJ/hUKBgoSIkKDAgAGDICZC//79+/fv37//AIR8NwMAQQEhAiABQQFqIQEMAAsAC0EEQQggAkEESRsLIgEgAUH/////A3FHDQAgAUECdCIEQQdqIQIgAiAESQ0AIAJBeHEiAiABQQhqIgVqIQQgAiAETQ0BCxCpCSAIKAIQIQIgCCgCFAwCCwJAAkAgBEEATgRAIARBCBCUCyIRRQRAIAQQ6AogCCgCICECIAgoAiQMBQsgAiARakH/ASAFEIAMIQQgAUEBayIFIAFBA3ZBB2wgBUEISRsgD2shESAGQX9HDQEgCyARNgIIIAsgBTYCACALKAIEIQ8gCyAENgIEDAILEKkJIAgoAhghAiAIKAIcDAMLIAtBBGooAgAiD0EEayEYAkADQAJAIAwgD2osAABBAE4EQCAYIAxBAnRrKAIAIgEgCk8NASAEIAcgAUEYbGooAgAiGSAFcSICaikAAEKAgYKEiJCgwIB/gyImUARAQQghAQNAIAEgAmohAiABQQhqIQEgBCACIAVxIgJqKQAAQoCBgoSIkKDAgH+DIiZQDQALCyAEICZ6p0EDdiACaiAFcSIBaiwAAEEATgRAIAQpAwBCgIGChIiQoMCAf4N6p0EDdiEBCyABIARqIBlBGXYiAjoAACABQQhrIAVxIARqQQhqIAI6AAAgBCABQX9zQQJ0aiAPIAxBf3NBAnRqKAAANgIACyAGIAxGIAxBAWohDEUNAQwCCwsgASAKQdz4wQAQzAgACyALIBE2AgggCyAFNgIAIAtBBGogBDYCACAGRQ0BCyAPIAlBAnRBB2pBeHFrELEBQYGAgIB4DAELQYGAgIB4CzYCBCAiIAI2AgAgCEEwaiQAIAMoAhwiBSAcIAMoAhgiBnEiB2opAABCgIGChIiQoMCAf4MiJlAEQEEIIQEDQCABIAdqIAFBCGohASAGcSIHIAVqKQAAQoCBgoSIkKDAgH+DIiZQDQALCyAFICZ6p0EDdiAHaiAGcSIBaiwAAEEASA0AIAUpAwBCgIGChIiQoMCAf4N6p0EDdiEBCyABIAVqIB06AAAgAUEIayAGcSAFakEIaiAdOgAAIAUgAUECdGtBBGsgCjYCACADIAMoAiAgHmsiATYCICADIAMoAiRBAWoiBDYCJCAKIAMoAiwiAkcEQCADKAIwIQEMAgsgASAEaiADKAIwIgFrIQIgAiAKIAFrTQRAIAohAgwCCyABIAJqIgIgAUkNDCACrUIYfiImQiCIUEECdCEJICanIQcgAyAKBH8gAyADKAIoNgKAASADIAqtQhh+PgKEAUEEBUEACzYCiAEgA0HwAGogByAJIANBgAFqEIQHIAMoAnBFBEAgAyACNgIsIAMgAygCdDYCKAwCCyADQfgAaigCACIARQ0MDA8LIAEgCkHI98EAEMwIAAsgASACRgRAIwBBIGsiASQAAkACQCACIAJBAWoiAksNAEEEIQQgFkEEaigCACIJQQF0IgcgAiACIAdJGyICQQQgAkEESxsiAq1CGH4iJkIgiFBBAnQhByAmpyEFAkAgCUUEQEEAIQQMAQsgASAWKAIANgIQIAEgCa1CGH4+AhQLIAEgBDYCGCABIAUgByABQRBqEIQHIAEoAgAEQCABQQhqKAIAIgBFDQEgASgCBCAAQezqwwAoAgAiAEGYByAAGxEAAAALIAEoAgQhBCAWQQRqIAI2AgAgFiAENgIAIAFBIGokAAwBCxCBCgALIAMoAjAhAQsgAygCKCIJIAFBGGxqIgJCADcCDCACQRRqQQA2AgAgAiAnNwIEIAIgHDYCACADIAFBAWoiAjYCMCACIApNDQYgCiEBIAIhCgsgCSABQRhsaiIBICogASoCDJI4AgwgAUEQaiICICwgAioCAJI4AgAgAUEUaiIBIC0gASoCAJI4AgAgFSkCACInQiCIpyAnp0HH3PnueHNBufPd8XlsQQV3c0G5893xeWwiFUEZdiILrUKBgoSIkKDAgAF+ISkgAygCPCIIQQRrIQ9BACEMIAMoAlAhBCADKAJIIQcgFSADKAI4IgZxIgUhAgJAAkACQAJAA0AgAiAIaikAACIoICmFIiZCgYKEiJCgwIABfSAmQn+Fg0KAgYKEiJCgwIB/gyEmA0ACQCAmUARAICggKEIBhoNCgIGChIiQoMCAf4NQRQ0BIAxBCGoiDCACaiAGcSECDAMLIAQgDyAmeqdBA3YgAmogBnFBAnRrKAIAIgFNDQMgJkIBfSAmgyEmICcgByABQQR0aikCBFINAQwFCwsLIAUgCGopAABCgIGChIiQoMCAf4MiJlAEQEEIIQEDQCABIAVqIQIgAUEIaiEBIAggAiAGcSIFaikAAEKAgYKEiJCgwIB/gyImUA0ACwsgCCAmeqdBA3YgBWogBnEiAWosAAAiAkEATgR/IAggCCkDAEKAgYKEiJCgwIB/g3qnQQN2IgFqLQAABSACC0EBcSECAkAgAygCQA0AIAJFDQAgA0EIaiADQThqIAcgBBCGASAVIAMoAjgiBnEiByADKAI8IghqKQAAQoCBgoSIkKDAgH+DIiZQBEBBCCEBA0AgASAHaiEHIAFBCGohASAIIAYgB3EiB2opAABCgIGChIiQoMCAf4MiJlANAAsLIAggJnqnQQN2IAdqIAZxIgFqLAAAQQBIDQAgCCkDAEKAgYKEiJCgwIB/g3qnQQN2IQELIAEgCGogCzoAACABQQhrIAZxIAhqQQhqIAs6AAAgCCABQQJ0a0EEayAENgIAIAMgAygCQCACayIBNgJAIAMgAygCREEBaiIHNgJEIAQgAygCTCICRwRAIAMoAlAhAQwCCyABIAdqIAMoAlAiAWshAiACIAQgAWtNBEAgBCECDAILIAEgAmoiAiABSQ0NIAJBBHQhBSACQf////8AcSACRkECdCEGIAMgBAR/IAMgAygCSDYCgAEgAyAEQQR0NgKEAUEEBUEACzYCiAEgA0HwAGogBSAGIANBgAFqEIQHIAMoAnBFBEAgAyACNgJMIAMgAygCdDYCSAwCCyADQfgAaigCACIARQ0NDBALIAEgBEHI98EAEMwIAAsgASACRgRAICAgAhCVBiADKAJQIQELIAMoAkgiByABQQR0aiICQQA2AgwgAiAnNwIEIAIgFTYCACADIAFBAWoiATYCUCABIARNDQEgBCEBCyAHIAFBBHRqIgEgASgCDEEBajYCDCAQICFGDQcMAQsLIAQgAUHY98EAEMwIAAsgASAOQfzmwgAQzAgACyABIA5B7ObCABDMCAALIAEgDkHc5sIAEMwIAAsgFyASQczmwgAQzAgACyAKIAJB2PfBABDMCAALIBdBAWohFyAfIA1BDGoiDUcNAAsLAkAgACgCWCIBRQ0AAkAgAEHcAGooAgAiAkUNACACrUIMfqdFDQAgARCxAQsgAEHkAGooAgAiAQRAIABB6ABqKAIAIAFBAnRBC2pBeHFrELEBCyAAQfgAaigCACIBRQ0AIAGtQhh+p0UNACAAQfQAaigCABCxAQsgACATNgJYIABB4ABqIA42AgAgAEHcAGogDjYCACAAQeQAaiADKQMYNwIAIABB7ABqIANBIGopAwA3AgAgAEH0AGogA0EoaikDADcCACAAQfwAaiADQTBqKAIANgIAIAMoAjgiAARAIAMoAjwgAEECdEELakF4cWsQsQELAkAgAygCTCIARQ0AIABBBHRFDQAgBxCxAQsgEgRAIBoQsQELIANBkAFqJAAPCxCBCgALIAIgAUHs6sMAKAIAIgBBmAcgABsRAAAACyASQQFB7OrDACgCACIAQZgHIAAbEQAAAAsgAygCdCAAQezqwwAoAgAiAEGYByAAGxEAAAALyB4DGX8GfQN+IwBB4ARrIgQkACAEIAI2AjQgBEEsaiACKgIIIh04AgAgBEEoaiAdOAIAIARBJGogHTgCACAEQRxqIAIqAgQiHzgCACAEQRhqIB84AgAgBEEUaiAfOAIAIAQgATYCMCAEIAM6ADggBCAdOAIgIAQgHzgCECAEIAIqAgAiHTgCDCAEIB04AgggBCAdOAIEIAQgHTgCAAJAIAFBIGooAgAiDUUNACAEQQA2AlAgBEIENwNIIARByABqIgJBABCWBiAEKAJIIAQoAlAiA0EDdGpCgICAgPD///9+NwIAIAQgA0EBajYCUCAEQfAAaiACEPECAkACQCAEKAJwQQFHBEBBAiEIDAELIARBqANqIRUgBEHwA2ohDiAEQdADaiEPIARBkANqIgJBA2ohCyACQSBqIRAgBEHQBGohESAEQc0EaiESIARBnARqIRND//9/fyEdIARBiANqIRZBAiEIA0AgHSAEKgJ4jF8NAQJAAkAgBCgCdCICIA1JBEAgBEGAAWogASgCGCACQQd0akGAARD/CxogBC0A+AEiBgRAIAQoAuwBIgMgASgCPCICSSEFIANBDGwgASgCNCIDakEAIAUbQQhqQQAgBRshFyAEKALoASIHIAJJIQUgAyAHQQxsakEAIAUbQQhqQQAgBRshGCAEKALkASIHIAJJIQUgAyAHQQxsakEAIAUbQQhqQQAgBRshGSAEKALgASIFIAJJIQIgAyAFQQxsakEAIAIbQQhqQQAgAhshFAsgBEHgAmogBEGAAWogBBDkASAEKgLgAiIeIB1dIQIgBCoC7AIhHyAEKgLoAiEgIAQqAuQCISEgBkUNASAEIBc2AvwCIAQgGDYC+AIgBCAZNgL0AiAEIBQ2AvACQgAhIyAWQgA3AwAgBEIANwOAAyAEQQI2AoQEIARBAjYC5AMgBEECNgLEAyAEQQI2AqQDIB0gIV5BAXQgAnIgHSAgXkECdHIgHSAfXkEDdHKtISQgBEGAA2ohBSAEQfACaiEDIBUhAgNAAkAgJCAjiEIBg1ANACADKAIAIgZFDQACQAJAIAQoAjAiB0HUAGooAgAiCSAGKAIAIgpLBEAgB0HIAGooAgAiBiAHKAJMIApBA3RqIgwoAgAiCU0NASAMKAIEIgwgBk8NAiAEKAI0IQYgEyAHKAJAIgcgDEEMbGoiDCkCADcCACATQQhqIAxBCGooAgA2AgAgBEGQBGoiDEEIaiAHIAlBDGxqIgdBCGooAgA2AgAgBCAHKQIANwOQBCAEQcAEaiAMIAYQvAIgBEGuBGoiCSASQQJqLQAAOgAAIAQgEi8AADsBrAQgBC0AzAQhByAEKgLIBCEfIAQqAsAEISAgBCoCxAQhISAEQbgEaiIMIBFBCGooAgA2AgAgBCARKQIANwOwBCAgIAYqAgCTIh4gHpQgISAGQQRqKgIAkyIeIB6UkiAfIAZBCGoqAgCTIh4gHpSSQwAAAACSEIgBIR4gAkEMayAHOgAAIAJBEGsgHzgCACACQRRrICE4AgAgAkEYayAgOAIAIAUgHjgCACACQQhrIAo2AgAgAkELayIGIAQvAawEOwAAIAZBAmogCS0AADoAACACQQRrIAQpA7AENwIAIAJBBGogDCgCADYCACAELQA4RQ0DIAdFDQMgBEHIAmoiA0EQaiIFIAJBGGsiAUEQaigCADYCACADQQhqIgMgAUEIaikCADcDACAEIAEpAgA3A8gCAkAgAkEEaygCACIBQQJGBEAgBEHABGoiAUEPaiAEQdgAaiICQQ9qKQAANwAAIAFBCGogAkEIaikAADcDACAEIAQpAFg3A8AEDAELIAIpAgAhJSAEQZsDaiADKQMANwAAIARBowNqIAUoAgA2AAAgBCAEKQPIAjcAkwMgBEHABGoiAkEIaiAEQZADaiIDQQhqKQAANwMAIAJBD2ogA0EPaikAADcAACAEIAQpAJADNwPABCABIQgLIAQoAkwiAUUNCiABQQN0RQ0KIAQoAkgQsQEMCgsgCiAJQZS0wgAQzAgACyAJIAZBpLTCABDMCAALIAwgBkG0tMIAEMwIAAsgA0EEaiEDIAVBBGohBSACQSBqIQIgI0IBfCIjQgRSDQALIARByAJqIgJBCGoiBiAEQZADaiIFQQhqIgMpAwA3AwAgAkEQaiIHIAVBEGooAgA2AgAgBEGwAmoiAkEIaiIKIBBBCGopAgA3AwAgAkEQaiIJIBBBEGooAgA2AgAgBCAEKQOQAzcDyAIgBCAQKQIANwOwAiAEKgKMAyEfIAQqAogDISAgBCoChAMhISAEKgKAAyEeIAQoAqQDIQIgBCkDqAMhIyAEQZgCaiIFQQhqIgwgD0EIaikCADcDACAFQRBqIhogD0EQaigCADYCACAEQYACaiIFQQhqIhsgDkEIaikCADcDACAFQRBqIhwgDkEQaigCADYCACAEIA8pAgA3A5gCIAQgDikCADcDgAIgASgCPCEFAkAgJEIBg1ANACAdIB5eRQ0AIAJBAkYNACAEKALgASAFTw0AIAsgBCkDyAI3AAAgC0EQaiAHKAIANgAAIAtBCGogBikDADcAACAEQcAEaiIIQQ9qIgYgBEGfA2opAAA3AAAgCEEIaiIIIAMpAAA3AwAgBEHYAGoiB0EIaiAIKQMANwMAIAdBD2ogBikAADcAACAEIAQpAJADNwNYICMhJSACIQggHiEdCwJAICRCAoNQDQAgHSAhXkUNACAEKALEAyICQQJGDQAgBCgC5AEgBU8NACAEKQPIAyElIAsgBCkDsAI3AAAgC0EQaiAJKAIANgAAIAtBCGogCikDADcAACAEQcAEaiIIQQ9qIgYgBEGfA2opAAA3AAAgCEEIaiIIIAMpAAA3AwAgBEHYAGoiB0EIaiAIKQMANwMAIAdBD2ogBikAADcAACAEIAQpAJADNwNYIAIhCCAhIR0LAkAgJEIEg1ANACAdICBeRQ0AIAQoAuQDIgJBAkYNACAEKALoASAFTw0AIAQpA+gDISUgCyAEKQOYAjcAACALQRBqIBooAgA2AAAgC0EIaiAMKQMANwAAIARBwARqIghBD2oiBiAEQZ8DaikAADcAACAIQQhqIgggAykAADcDACAEQdgAaiIHQQhqIAgpAwA3AwAgB0EPaiAGKQAANwAAIAQgBCkAkAM3A1ggAiEIICAhHQsgJEIIg1ANAiAdIB9eRQ0CIAQoAoQEIgJBAkYNAiAEKALsASAFTw0CIAQpA4gEISUgCyAEKQOAAjcAACALQRBqIBwoAgA2AAAgC0EIaiAbKQMANwAAIARBwARqIgVBD2oiCCAEQZ8DaikAADcAACAFQQhqIgUgAykAADcDACAEQdgAaiIDQQhqIAUpAwA3AwAgA0EPaiAIKQAANwAAIAQgBCkAkAM3A1ggAiEIIB8hHQwCCyACIA1BjInCABDMCAALAkAgHSAhXkEBdCACciAdICBeQQJ0ciAdIB9eQQN0cq0iI0IBg1ANACAEKALgASIGIA1PDQAgHowhHiAEKAJQIgIhBSAEKAJMIAJGBEAgBEHIAGogAhCWBiAEKAJQIQULIAQoAkgiAyAFQQN0aiIHIB44AgQgByAGNgIAIAQgBUEBajYCUCADIAJBA3RqIgUqAgQhHiAFKAIAIQYCQCACRQRAQQAhBQwBCwNAQQBBfyAeIAMgAkEBayIHQQF2IgVBA3RqIgpBBGoqAgAiImAiCRtBAUECIAkbIB4gIl8bQQNrQX5JBEAgAiEFDAILIAMgAkEDdGogCikCADcCACAFIQIgB0EBSw0ACwsgAyAFQQN0aiICIB44AgQgAiAGNgIACwJAICNCAoNQDQAgBCgC5AEiBiANTw0AICGMISEgBCgCUCICIQUgBCgCTCACRgRAIARByABqIAIQlgYgBCgCUCEFCyAEKAJIIgMgBUEDdGoiByAhOAIEIAcgBjYCACAEIAVBAWo2AlAgAyACQQN0aiIFKgIEISEgBSgCACEGAkAgAkUEQEEAIQUMAQsDQEEAQX8gAyACQQFrIgdBAXYiBUEDdGoiCkEEaioCACIeICFfIgkbQQFBAiAJGyAeICFgG0EDa0F+SQRAIAIhBQwCCyADIAJBA3RqIAopAgA3AgAgBSECIAdBAUsNAAsLIAMgBUEDdGoiAiAhOAIEIAIgBjYCAAsCQCAjQgSDUA0AIAQoAugBIgYgDU8NACAgjCEgIAQoAlAiAiEFIAQoAkwgAkYEQCAEQcgAaiACEJYGIAQoAlAhBQsgBCgCSCIDIAVBA3RqIgcgIDgCBCAHIAY2AgAgBCAFQQFqNgJQIAMgAkEDdGoiBSoCBCEgIAUoAgAhBgJAIAJFBEBBACEFDAELA0BBAEF/IAMgAkEBayIHQQF2IgVBA3RqIgpBBGoqAgAiISAgXyIJG0EBQQIgCRsgICAhXxtBA2tBfkkEQCACIQUMAgsgAyACQQN0aiAKKQIANwIAIAUhAiAHQQFLDQALCyADIAVBA3RqIgIgIDgCBCACIAY2AgALICNCCINQDQAgBCgC7AEiBiANTw0AIB+MIR8gBCgCUCICIQUgBCgCTCACRgRAIARByABqIAIQlgYgBCgCUCEFCyAEKAJIIgMgBUEDdGoiByAfOAIEIAcgBjYCACAEIAVBAWo2AlAgAyACQQN0aiIFKgIEIR8gBSgCACEGAkAgAkUEQEEAIQUMAQsDQEEAQX8gAyACQQFrIgdBAXYiBUEDdGoiCkEEaioCACIgIB9fIgkbQQFBAiAJGyAfICBfG0EDa0F+SQRAIAIhBQwCCyADIAJBA3RqIAopAgA3AgAgBSECIAdBAUsNAAsLIAMgBUEDdGoiAiAfOAIEIAIgBjYCAAsgBEHwAGogBEHIAGoQ8QIgBCgCcEEBRg0ACwsgBEHABGoiAUEIaiAEQdgAaiICQQhqKQMANwMAIAFBD2ogAkEPaikAADcAACAEIAQpA1g3A8AEIAQoAkwiAUUNACABQQN0RQ0AIAQoAkgQsQELIAhBAkYNACAEQZADaiIBQQ9qIARBwARqIgJBD2opAAA3AAAgAUEIaiACQQhqKQMANwMAIAQgBCkDwAQ3A5ADIABBEGogBEGjA2ooAAA2AAAgAEEIaiAEQZsDaikAADcAACAAIAQpAJMDNwAAIABBGGogJTcCACAAQRRqIAg2AgAgBEHgBGokAA8LQZP1wQBBK0HYrcIAEMQJAAuePgMRf0V9BH4jAEGAAWsiBCQAAkACQCABAn8CQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJ/AkACQAJAAkACQAJAAkACQAJAAkACQAJAIAEoArwBDgQUEwABAgsgBEFAayIGQQhqIAFBKGooAgA2AgAgBkEUaiABQcwAaigCADYCACAGQSBqIAFB8ABqKAIANgIAIAQgASkCIDcDQCAEIAFBxABqIgUpAgA3AkwgBCABQegAaiIDKQIANwNYIARBADYCeCAEQgA3A3AgBEEYaiICIAYgBEHwAGpBARBEIARBEGoiCCACQQhqKQMANwMAIAQgBCkDGDcDCCACQRRqKAIAIQYgBEEwaioCACETIARBNGoqAgAhFCAEKAIoDgMMDQ4YCyAEQUBrIgZBCGogAUEoaigCADYCACAGQRRqIgcgAUHMAGooAgA2AgAgBkEgaiIJIAFB8ABqKAIANgIAIARB7ABqIAFBlAFqKAIANgIAIAQgASkCIDcDQCAEIAFBxABqIgUpAgA3AkwgBCABQegAaiIDKQIANwNYIAQgAUGMAWoiCCkCADcCZCAEQQA2AnggBEIANwNwIARBGGohAiAGKgIkIhogBioCACItkyIbIARB8ABqIgoqAgAiHCAtkyITlCAGQShqKgIAIkIgBkEEaioCACIukyIvIApBBGoqAgAiHSAukyIUlJIgBkEsaioCACJDIAZBCGoqAgAiMJMiMSAKQQhqKgIAIicgMJMiFZSSISMgBkEYaiILKgIAIkYgLZMiMiATlCAGQRxqKgIAIj0gLpMiMyAUlJIgCSoCACI+IDCTIjQgFZSSISACQAJAAkACQAJAAkACQAJAAkAgBkEMaiIMKgIAIjogLZMiISATlCAGQRBqKgIAIjsgLpMiKyAUlJIgByoCACI8IDCTIiwgFZSSIiZDAAAAAF9FDQAgIEMAAAAAX0UNACAjQwAAAABfDQELIBogOpMiNSAcIDqTIhaUIEIgO5MiKCAdIDuTIhiUkiBDIDyTIikgJyA8kyIZlJIhRyAhIBaUICsgGJSSICwgGZSSISQCQCBGIDqTIjYgFpQgPSA7kyIqIBiUkiA+IDyTIiUgGZSSIkRDAAAAAF9FDQAgR0MAAAAAX0UNACAkQwAAAABgDQILIDYgHCBGkyIXlCAqIB0gPZMiHpSSICUgJyA+kyIflJIhSCAyIBeUIDMgHpSSIDQgH5SSISICQCAaIEaTIkkgF5QgQiA9kyJKIB6UkiBDID6TIksgH5SSIkxDAAAAAF9FDQAgSEMAAAAAYEUNACAiQwAAAABgDQMLIAZBJGohBiA1IBwgGpMiGpQgKCAdIEKTIhyUkiApICcgQ5MiHZSSIVEgSSAalCBKIByUkiBLIB2UkiFSAkAgGyAalCAvIByUkiAxIB2UkiJNQwAAAABgRQ0AIFFDAAAAAGBFDQAgUkMAAAAAYA0ECyAhIC+UICsgG5STIicgKyATlCAhIBSUkyI3lCArIDGUICwgL5STIj8gLCAUlCArIBWUkyI4lCAsIBuUICEgMZSTIkAgISAVlCAsIBOUkyI5lJKSIVMgISAzlCArIDKUkyJBIDeUICsgNJQgLCAzlJMiNyA4lCAsIDKUICEgNJSTIjggOZSSkiFUICYgJJMiJEMAAAAAWw0EIFRDAAAAAGBFDQQgU0MAAAAAYEUNBCAmQwAAAABgRQ0EICQgJmBFDQQgAkIBNwIQIAJBADoADCACICwgJiAklSITlCAwkjgCCCACICsgE5QgLpI4AgQgAiAhIBOUIC2SOAIADAULIAJCADcCEAwFCyACQoCAgIAQNwIQIAJBADoADCACIAwpAgA3AgAgAkEIaiAMQQhqKAIANgIADAULIAJCgICAgCA3AhAgAkEAOgAMIAIgCykCADcCACACQQhqIAtBCGooAgA2AgAMBAsgAkKAgICAMDcCEAwCCyAyIC+UIDMgG5STIiYgMyATlCAyIBSUkyJOlCAzIDGUIDQgL5STIiQgNCAUlCAzIBWUkyJPlCA0IBuUIDIgMZSTIjkgMiAVlCA0IBOUkyJFlJKSIVUgRSA4jJQgNyBPlJMgQSBOlJMhTgJAICAgIpMiIkMAAAAAWw0AIFVDAAAAAGBFDQAgTkMAAAAAYEUNACAgQwAAAABgRQ0AICAgIl9FDQAgAkKBgICAEDcCECACQQA6AAwgAiA0ICAgIpUiE5QgMJI4AgggAiAzIBOUIC6SOAIEIAIgMiATlCAtkjgCAAwBCyAbIBWUIDEgE5STIiAgOYyUICQgMSAUlCAvIBWUkyIilJMgJiAvIBOUIBsgFJSTIkWUkyFPICAgQIyUID8gIpSTICcgRZSTIUUCQCAjIE2TIiBDAAAAAFsNACBFQwAAAABgRQ0AIE9DAAAAAGBFDQAgI0MAAAAAYEUNACAgICNgRQ0AIAJCgYCAgCA3AhAgAkEAOgAMIAIgMSAjICCVIhOUIDCSOAIIIAIgLyATlCAukjgCBCACIBsgE5QgLZI4AgAMAQsgNiAolCAqIDWUkyIjICogFpQgNiAYlJMiUJQgKiAplCAlICiUkyIgICUgGJQgKiAZlJMiVpQgJSA1lCA2ICmUkyIiIDYgGZQgJSAWlJMiV5SSkiFNIEEgUJQgNyBWlCA4IFeUkpIhUAJAIEQgSJMiSEMAAAAAWw0AIFBDAAAAAGBFDQAgTUMAAAAAYEUNACBEQwAAAABgRQ0AIEQgSF9FDQAgAkKBgICAMDcCECACQQA6AAwgAiAlIEQgSJUiE5QgPJI4AgggAiAqIBOUIDuSOAIEIAIgNiATlCA6kjgCAAwBCyAnICggFpQgNSAYlJMiKpQgPyApIBiUICggGZSTIiWUIEAgNSAZlCApIBaUkyJElJKSITYgRCAijJQgICAllJMgIyAqlJMhKgJAIEcgUZMiJUMAAAAAWw0AICpDAAAAAGBFDQAgNkMAAAAAYEUNACBHQwAAAABgRQ0AICUgR2BFDQAgAkKBgICAwAA3AhAgAkEAOgAMIAIgKSBHICWVIhOUIDySOAIIIAIgKCATlCA7kjgCBCACIDUgE5QgOpI4AgAMAQsgIyBKIBeUIEkgHpSTIiiUICAgSyAelCBKIB+UkyIplCAiIEkgH5QgSyAXlJMiJZSSkiE1ICYgKJQgJCAplCA5ICWUkpIhKAJAIEwgUpMiKUMAAAAAWw0AIChDAAAAAGBFDQAgNUMAAAAAYEUNACBMQwAAAABgRQ0AICkgTGBFDQAgAkKBgICA0AA3AhAgAkEAOgAMIAIgSyBMICmVIhOUID6SOAIIIAIgSiATlCA9kjgCBCACIEkgE5QgRpI4AgAMAQsCQAJAIFRDAAAAAF1FDQAgUEMAAAAAXUUNACBOQwAAAABdRQ0AIBsgN5QgOCAvlJIgQSAxlJIgQSAVlCA3IBOUIDggFJSSkpRDAAAAAF1FDQAgQSBBlCA3IDeUIDggOJSSkkMAAAAAkhCIASIbQwAAADRfDQAgEyAYlCAWIBSUkyBBIBuVIhqUIBQgGZQgGCAVlJMgNyAblSIclCAWIBWUIBMgGZSTIDggG5UiHZSSkiIhIBYgHpQgFyAYlJMgGpQgGCAflCAeIBmUkyAclCAXIBmUIBYgH5STIB2UkpIiFiAXIBSUIBMgHpSTIBqUIB4gFZQgFCAflJMgHJQgEyAflCAXIBWUkyAdlJKSIhSSkiITQwAAAABbDQEgAkICNwIQIAJBADoADCACQSBqICFDAACAPyATlSIVlCITOAIAIAJBHGogFCAVlCIUOAIAIAJBGGogFiAVlCIVOAIAIAIgMCAVlCAUIDyUkiATID6UkjgCCCACIC4gFZQgFCA7lJIgEyA9lJI4AgQgAiAtIBWUIBQgOpSSIBMgRpSSOAIADAQLAkAgRUMAAAAAXUUNACBTQwAAAABdRQ0AIDZDAAAAAF1FDQAgNCAnlCAyID+UIDMgQJSSkiAnIBWUIBMgP5QgQCAUlJKSlEMAAAAAXUUNACAnICeUID8gP5QgQCBAlJKSQwAAAACSEIgBIhtDAAAANF8NACATIBiUIBYgFJSTICcgG5UiF5QgFCAZlCAYIBWUkyA/IBuVIh6UIBYgFZQgEyAZlJMgQCAblSIflJKSIiEgFiAclCAaIBiUkyAXlCAYIB2UIBwgGZSTIB6UIBogGZQgFiAdlJMgH5SSkiIWIBogFJQgEyAclJMgF5QgHCAVlCAUIB2UkyAelCATIB2UIBogFZSTIB+UkpIiFJKSIhNDAAAAAFsNASACQoKAgIAQNwIQIAJBADoADCACQSBqICFDAACAPyATlSIVlCITOAIAIAJBHGogFCAVlCIUOAIAIAJBGGogFiAVlCIVOAIAIAIgMCAVlCAUIDyUkiATIEOUkjgCCCACIC4gFZQgFCA7lJIgEyBClJI4AgQgAiAtIBWUIBQgOpSSIBMgBioCAJSSOAIADAQLAkAgVUMAAAAAXUUNACAoQwAAAABdRQ0AIE9DAAAAAF1FDQAgLCAmlCAhICSUICsgOZSSkiAmIBWUIBMgJJQgOSAUlJKSlEMAAAAAXUUNACAmICaUICQgJJQgOSA5lJKSQwAAAACSEIgBIhtDAAAANF8NACATIB6UIBcgFJSTICYgG5UiFpQgFCAflCAeIBWUkyAkIBuVIhiUIBcgFZQgEyAflJMgOSAblSIZlJKSIiEgFyAclCAaIB6UkyAWlCAeIB2UIBwgH5STIBiUIBogH5QgFyAdlJMgGZSSkiIXIBogFJQgEyAclJMgFpQgHCAVlCAUIB2UkyAYlCATIB2UIBogFZSTIBmUkpIiFJKSIhNDAAAAAFsNASACQoKAgIAgNwIQIAJBADoADCACQSBqICFDAACAPyATlSIVlCITOAIAIAJBHGogFCAVlCIUOAIAIAJBGGogFyAVlCIVOAIAIAIgMCAVlCAUID6UkiATIEOUkjgCCCACIC4gFZQgFCA9lJIgEyBClJI4AgQgAiAtIBWUIBQgCyoCAJSSIBMgBioCAJSSOAIADAQLAkAgTUMAAAAAXUUNACA1QwAAAABdRQ0AICpDAAAAAF1FDQAgIyAZlCAWICCUICIgGJSSkiAiICuMlCAhICCUkyAsICOUk5RDAAAAAF1FDQAgIyAjlCAgICCUICIgIpSSkkMAAAAAkhCIASITQwAAADRfDQAgFiAelCAXIBiUkyAjIBOVIhSUIBggH5QgHiAZlJMgICATlSIVlCAXIBmUIBYgH5STICIgE5UiE5SSkiIhIBcgHJQgGiAelJMgFJQgHiAdlCAcIB+UkyAVlCAaIB+UIBcgHZSTIBOUkpIiFyAaIBiUIBYgHJSTIBSUIBwgGZQgGCAdlJMgFZQgFiAdlCAaIBmUkyATlJKSIhSSkiITQwAAAABbDQEgAkKCgICAMDcCECACQQA6AAwgAkEgaiAhQwAAgD8gE5UiFZQiEzgCACACQRxqIBQgFZQiFDgCACACQRhqIBcgFZQiFTgCACACIDwgFZQgFCA+lJIgEyBDlJI4AgggAiA7IBWUIBQgPZSSIBMgQpSSOAIEIAIgOiAVlCAUIAsqAgCUkiATIAYqAgCUkjgCAAwECyACQQM2AhAgAkEBOgAMIAIgCikCADcCACACQQhqIApBCGooAgA2AgAMAwtBy7DCAEEdQeiwwgAQxAkACyACQRhqQwAAgD8gE5O8rSATvK1CIIaENwIADAELIAJBADoADCACIAYpAgA3AgAgAkEIaiAGQQhqKAIANgIACyAEQRBqIgwgAkEIaikDADcDACAEIAQpAxg3AwggAkEUaigCACEGIARBMGoqAgAhEyAEQTRqKgIAIRUgBCgCKA4DAQIDHAtBpKTCAEEfQcSkwgAQxAkACyAGQQRPDREgBEFAayIDQSBqIgUgAUFAayICKAIANgIAIANBGGoiCCABQThqIgopAgA3AwAgA0EQaiILIAFBMGoiCSkCADcDACADQQhqIgcgAUEoaiINKQIANwMAIAFBIGogBkEkbGoiA0EgaiIOKAIAIQ8gA0EYaiIQKQIAIVggA0EQaiIRKQIAIVkgA0EIaiISKQIAIVogASkCICFbIAEgAykCADcCICANIFo3AgAgCSBZNwIAIAogWDcCACACIA82AgAgBCBbNwNAIAMgBCkDQDcCACASIAcpAwA3AgAgESALKQMANwIAIBAgCCkDADcCACAOIAUoAgA2AgAgASgCACEDIAEgASAGQQJ0aiIFKAIANgIAIAUgAzYCACABQYCAgPwDNgKwAUEADBkLIAYOBhcCAwQFBgELIARBOGoqAgAhFAJAAkACfwJAAkACQAJAIAYOBAYBAgMAC0Gwj8IAQShB1KTCABDECQALIBUhFgwDCyAUIRYgBQwBCyATIRYgFCETIAFBIGoLIQMgFSEUCyADIAgpAgA3AgAgA0EgaiAIQSBqKAIANgIAIANBGGogCEEYaikCADcCACADQRBqIAhBEGopAgA3AgAgA0EIaiAIQQhqKQIANwIAIBYhFQsgASATOAKwASABQbgBaiAUOAIAIAFBtAFqIBU4AgBBAgwXC0Gwj8IAQShB5KTCABDECQALIAUpAgAhWCAFIAMpAgA3AgAgBEFAayIGQSBqIgIgBUEgaiIIKAIANgIAIAZBGGoiCiAFQRhqIgspAgA3AwAgBkEQaiIJIAVBEGoiBykCADcDACAGQQhqIgYgBUEIaiIFKQIANwMAIAUgA0EIaiIFKQIANwIAIAcgA0EQaiIHKQIANwIAIAsgA0EYaiILKQIANwIAIAggA0EgaiIIKAIANgIAIAQgWDcDQCADIAQpA0A3AgAgCCACKAIANgIAIAsgCikDADcCACAHIAkpAwA3AgAgBSAGKQMANwIAIAFBBGohBSABQQhqDAQLIAUpAgAhWCAFIAgpAgA3AgAgBEFAayIDQSBqIgYgBUEgaiICKAIANgIAIANBGGoiCiAFQRhqIgspAgA3AwAgA0EQaiIJIAVBEGoiBykCADcDACADQQhqIgMgBUEIaiIFKQIANwMAIAUgCEEIaiIFKQIANwIAIAcgCEEQaiIHKQIANwIAIAsgCEEYaiILKQIANwIAIAIgCEEgaiICKAIANgIAIAQgWDcDQCAIIAQpA0A3AgAgAiAGKAIANgIAIAsgCikDADcCACAHIAkpAwA3AgAgBSADKQMANwIAIAFBBGohBSABQQxqDAMLIAEpAiAhWCABIAMpAgA3AiAgBEFAayIFQSBqIgYgAUFAayICKAIANgIAIAVBGGoiCCABQThqIgopAgA3AwAgBUEQaiILIAFBMGoiCSkCADcDACAFQQhqIgUgAUEoaiIHKQIANwMAIAcgA0EIaiIHKQIANwIAIAkgA0EQaiIJKQIANwIAIAogA0EYaiIKKQIANwIAIAIgA0EgaiICKAIANgIAIAQgWDcDQCADIAQpA0A3AgAgAiAGKAIANgIAIAogCCkDADcCACAJIAspAwA3AgAgByAFKQMANwIAIAFBCGohAwwQCyABKQIgIVggASAIKQIANwIgIARBQGsiA0EgaiIFIAFBQGsiBigCADYCACADQRhqIgIgAUE4aiIKKQIANwMAIANBEGoiCyABQTBqIgkpAgA3AwAgA0EIaiIDIAFBKGoiBykCADcDACAHIAhBCGoiBykCADcCACAJIAhBEGoiCSkCADcCACAKIAhBGGoiCikCADcCACAGIAhBIGoiBigCADYCACAEIFg3A0AgCCAEKQNANwIAIAYgBSgCADYCACAKIAIpAwA3AgAgCSALKQMANwIAIAcgAykDADcCACABQQxqIQMMDwsgASkCICFYIAEgAykCADcCICAEQUBrIgZBIGoiAiABQUBrIgkoAgA2AgAgBkEYaiIKIAFBOGoiBykCADcDACAGQRBqIgsgAUEwaiINKQIANwMAIAZBCGoiBiABQShqIg4pAgA3AwAgDiADQQhqIg4pAgA3AgAgDSADQRBqIg0pAgA3AgAgByADQRhqIgcpAgA3AgAgCSADQSBqIgkoAgA2AgAgBCBYNwNAIAMgBCkDQDcCACAJIAIoAgA2AgAgByAKKQMANwIAIA0gCykDADcCACAOIAYpAwA3AgAgASgCCCEDIAEgASgCADYCCCABIAM2AgAgAiAFQSBqIgMoAgA2AgAgCiAFQRhqIgkpAgA3AwAgCyAFQRBqIgcpAgA3AwAgBiAFQQhqIg0pAgA3AwAgBSkCACFYIAUgCCkCADcCACANIAhBCGoiBSkCADcCACAHIAhBEGoiBykCADcCACAJIAhBGGoiCSkCADcCACADIAhBIGoiAygCADYCACAEIFg3A0AgCCAEKQNANwIAIAMgAigCADYCACAJIAopAwA3AgAgByALKQMANwIAIAUgBikDADcCACABQQRqIQUgAUEMagshAyATIRQMDgsgBkEETw0IIARBQGsiA0EgaiIFIAFBQGsiAigCADYCACADQRhqIgogAUE4aiILKQIANwMAIANBEGoiDCABQTBqIgkpAgA3AwAgA0EIaiIHIAFBKGoiDSkCADcDACABQSBqIAZBJGxqIgNBIGoiDigCACEPIANBGGoiECkCACFYIANBEGoiESkCACFZIANBCGoiEikCACFaIAEpAiAhWyABIAMpAgA3AiAgDSBaNwIAIAkgWTcCACALIFg3AgAgAiAPNgIAIAQgWzcDQCADIAQpA0A3AgAgEiAHKQMANwIAIBEgDCkDADcCACAQIAopAwA3AgAgDiAFKAIANgIAIAEoAgAhAyABIAEgBkECdGoi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IAMgC2ooAgAiCSAITw0BIBsgFSAMIAlBGGxqIglBCGoqAgAgCUEUaioCAJJDAAAAP5QgGJMiGyAblJSSIRsgFiAVIAlBBGoqAgAgCUEQaioCAJJDAAAAP5QgGZMiFiAWlJSSIRYgFyAVIAkqAgAgCUEMaioCAJJDAAAAP5QgGpMiFyAXlJSSIRcgDSALQQRqIgtHDQALQQIgFiAXXSIJIBYgFyAJGyAbXhsiCUECakEDcCEMIAlBAWpBA3AhDyABQRhqIQ4gAUEgaiINKAIAIgshCSABQRxqKAIAIAtGBEAgDiALEJcGIA0oAgAhCQsgASgCGCAJQQd0aiIIQgA3A2AgCEHoAGpCADcDACAIIAY2AnAgCEL////7////v383AzAgCEL////79///v/8ANwMgIAhC////+/f//7//ADcDECAIQv////v3//+//wA3AwggCEL////79///v/8ANwMAIAhBADsBeCAIQdgAakL////7////v383AwAgCEHQAGpC////+////79/NwMAIAhByABqQv////v///+/fzcDACAIQUBrQv////v///+/fzcDACAIQThqQv////v///+/fzcDACAIQShqQv////v3//+//wA3AwAgCEEYakL////79///v/8ANwMAIAhB9ABqIAc6AAAgDSAJQQFqNgIAIAItAAAhCCAKIBg4AkggCiAZOAJEIAogGjgCQCAKQeAAaiIGIAMgBCAFKAIAIgcgBSgCCCIJIApBQGsiAyAPIAhBAEciCBD/AyAGQQxqIgQoAgAhDyAKKAJoIRAgBiAKKAJgIAooAmQgByAJIAMgDCAIEP8DIAQoAgAhESAKKAJoIRIgCigCZCETIAooAmAhFCAGIBAgDyAHIAkgAyAMIAgQ/wMgBCgCACEHIAooAmghCSAKKAJkIQggCigCYCEMIAogASACIBQgEyAFIAtBABA8IApBIGogASACIBIgESAFIAtBARA8IAMgASACIAwgCCAFIAtBAhA8IAYgASACIAkgByAFIAtBAxA8AkACQCALIA0oAgAiAkkEQCAKQeAAaiICQRhqKgIAIRggAkEUaioCACEZIAJBEGoqAgAhGiAEKgIAIRYgAkEIaioCACEXIApBQGsiAkEYaioCACEVIAJBFGoqAgAhGyACQRBqKgIAIRwgAkEMaioCACEdIAJBCGoqAgAhHyAKQSBqIgJBGGoqAgAhHiACQRRqKgIAISQgAkEQaioCACEgIAJBDGoqAgAhISACQQhqKgIAISIgCkEYaioCACEjIApBFGoqAgAhJSAKQRBqKgIAISYgCkEMaioCACEpIApBCGoqAgAhJyAKKgJkISggCigCYCEDIAoqAkQhKiAKKAJAIQQgCioCJCErIAooAiAhBSAKKgIEISwgASgCGCALQQd0aiICIAooAgA2AmAgAkHsAGogAzYCACACQegAaiAENgIAIAJB5ABqIAU2AgAgAUEgaiICKAIAIgMgC00NASALQQd0IgMgASgCGGoiASAmOAIwIAEgKTgCICABICc4AhAgASAoOAIMIAEgKjgCCCABICs4AgQgASAsOAIAIAFB3ABqIBg4AgAgAUHYAGogFTgCACABQdQAaiAeOAIAIAFB0ABqICM4AgAgAUHMAGogGTgCACABQcgAaiAbOAIAIAFBxABqICQ4AgAgAUFAayAlOAIAIAFBPGogGjgCACABQThqIBw4AgAgAUE0aiAgOAIAIAFBLGogFjgCACABQShqIB04AgAgAUEkaiAhOAIAIAFBHGogFzgCACABQRhqIB84AgAgAUEUaiAiOAIAIAIoAgAiASALTQ0CIA4oAgAgCkIANwNoIApCADcDYCADaiAKQeAAahDyASAjIB4gHiAjXxsiHiAVIBUgHl8bIhUgGCAVIBhgGyEYICUgJCAkICVfGyIVIBsgFSAbYBsiFSAZIBUgGWAbIRkgJiAgICAgJl8bIhUgHCAVIBxgGyIVIBogFSAaYBshGiApICEgISApYBsiFSAdIBUgHV8bIhUgFiAVIBZfGyEVICcgIiAiICdgGyIWIB8gFiAfXxsiFiAXIBYgF18bIRYgLCArICsgLGAbIhcgKiAXICpfGyIXICggFyAoXxshFwwFCyALIAJB2IfCABDMCAALIAsgA0Hoh8IAEMwIAAsgCyABQfiHwgAQzAgACyAJIAhByIfCABDMCAALIAFBIGoiDigCACELQX8hAgJAIARFBEBD//9/fyEkQ///f/8hIEF/IQlBfyENQX8hCEP//3//IRxD//9//yEdQ///f38hH0P//39/IR5D//9//yEhQ///f/8hIkP//3//ISND//9/fyElQ///f38hJkP//39/ISlD//9//yEbQ///f/8hJ0P//3//IShD//9/fyEqQ///f38hK0P//39/ISxD//9//yEtQ///f/8hLkP//3//IS9D//9/fyEwQ///f38hMUP//39/ITJD//9//yEYQ///f/8hGUP//3//IRpD//9/fyEVQ///f38hFkP//39/IRcMAQsCQCADKAIAIgkgBSgCCCIMTw0AAkAgASgCPCIMIAlNDQBD//9/fyEkIAUoAgAgCUEYbGoiCCoCACIyQ///f3+WIRdD//9//yEgIAhBFGoqAgAiLUP//3//lyEYIAhBEGoqAgAiLkP//3//lyEZIAhBDGoqAgAiL0P//3//lyEaIAhBCGoqAgAiMEP//39/liEVIAhBBGoqAgAiMUP//39/liEWIAEoAjQgCUEMbGoiCEEAOgAEIAggCzYCACAEQQFGBEBBfyENQX8hCEP//3//IRxD//9//yEdQ///f38hH0P//39/IR5D//9//yEhQ///f/8hIkP//3//ISND//9/fyElQ///f38hJkP//39/ISlD//9//yEbQ///f/8hJ0P//3//IShD//9/fyEqQ///f38hK0P//39/ISwMAwsgAygCBCINIAUoAggiDE8EQCANIQkMAgsgDSABKAI8IgxPBEAgDSEJDAELIBcgBSgCACANQRhsaiIIKgIAIiwgFyAsXxshFyAYIAhBFGoqAgAiGyAYIBtgGyEYIBkgCEEQaioCACInIBkgJ2AbIRkgGiAIQQxqKgIAIiggGiAoYBshGiAVIAhBCGoqAgAiKiAVICpfGyEVIBYgCEEEaioCACIrIBYgK18bIRYgASgCNCANQQxsaiIIQQE6AAQgCCALNgIAIARBAkYEQEF/IQhD//9//yEcQ///f/8hHUP//39/IR9D//9/fyEeQ///f/8hIUP//3//ISJD//9//yEjQ///f38hJUP//39/ISZD//9/fyEpDAMLIAMoAggiCCAFKAIIIgxPBEAgCCEJDAILIAggASgCPCIMTwRAIAghCQwBCyAXIAUoAgAgCEEYbGoiDCoCACIpIBcgKV8bIRcgGCAMQRRqKgIAIiEgGCAhYBshGCAZIAxBEGoqAgAiIiAZICJgGyEZIBogDEEMaioCACIjIBogI2AbIRogFSAMQQhqKgIAIiUgFSAlXxshFSAWIAxBBGoqAgAiJiAWICZfGyEWIAEoAjQgCEEMbGoiDEECOgAEIAwg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KAIAIgIgCk0NAiANKAIAIQIgCSAIOAJMIAkgCDgCSCAJIAg4AkQgCSAIOAJAIAEgAmogCUFAaxDyASAAIAo2AgAgAEEYaiArICYgJiArXxsiCCAhIAggIWAbIgggHCAIIBxgGzgCACAAQRRqICwgJyAnICxfGyIIICIgCCAiYBsiCCAeIAggHmAbOAIAIABBEGogLSAoICggLV8bIgggIyAIICNgGyIIIB8gCCAfYBs4AgAgAEEMaiAuICkgKSAuYBsiCCAkIAggJF8bIgggICAIICBfGzgCACAAQQhqIC8gKiAqIC9gGyIIICUgCCAlXxsiCCAdIAggHV8bOAIAIAAgMyAyIDIgM2AbIgggMSAIIDFfGyIIIDAgCCAwXxs4AgQMBQsgCiACQZTewAAQzAgACyAKIANBpN7AABDMCAALIAogAkG03sAAEMwIAAsgCiAOQYTewAAQzAgACyABQSBqIhAoAgAhD0F/IQ4CQCAERQRAQ///f38hLUP//3//IS5BfyECQX8hC0F/IQpD//9//yEiQ///f/8hI0P//39/ISRD//9/fyElQ///f/8hJ0P//3//IShD//9//yEpQ///f38hKkP//39/IStD//9/fyEsQ///f/8hL0P//3//ITBD//9//yExQ///f38hMkP//39/ITND//9/fyE0Q///f/8hJkP//3//ITVD//9//yE2Q///f38hN0P//39/IThD//9/fyE5Q///f/8hHkP//3//IR9D//9//yEgQ///f38hIUP//39/IRxD//9/fyEdDAELAkAgAygCACICIAUoAggiDU8NACAFKAIAIAJBGGxqIgtBBGoqAgAhOCALQQhqKgIAITcgC0EMaioCACE2IAtBEGoqAgAhNSALQRRqKgIAISYgCyoCACE5IAlBGGoiC0EAOgAEIAsgDzYCAAJAIAEoAjwiDSACTQ0AQ///f38hLSA5Q///f3+WIR1D//9//yEuICZD//9//5chHiA1Q///f/+XIR8gNkP//3//lyEgIDdD//9/f5YhISA4Q///f3+WIRwgCSgCGCELIAEoAjQgAkEEdGoiCiAJLQAcOgAEIAogCzYCACAEQQFGBEBBfyELQX8hCkP//3//ISJD//9//yEjQ///f38hJEP//39/ISVD//9//yEnQ///f/8hKEP//3//ISlD//9/fyEqQ///f38hK0P//39/ISxD//9//yEvQ///f/8hMEP//3//ITFD//9/fyEyQ///f38hM0P//39/ITQMAwsgAygCBCILIAUoAggiDU8EQCALIQIMAgsgBSgCACALQRhsaiIKQQRqKgIAITMgCkEIaioCACEyIApBDGoqAgAhMSAKQRBqKgIAITAgCkEUaioCACEvIAoqAgAhNCAJQRBqIgpBAToABCAKIA82AgAgASgCPCINIAMoAgQiCk0EQCAKIQIMAQsgHSA0IB0gNF8bIR0gHiAvIB4gL2AbIR4gHyAwIB8gMGAbIR8gICAxICAgMWAbISAgISAyICEgMl8bISEgHCAzIBwgM18bIRwgCSgCECEMIAEoAjQgCkEEdGoiCiAJLQAUOgAEIAogDDYCACAEQQJGBEBBfyEKQ///f/8hIkP//3//ISND//9/fyEkQ///f38hJUP//3//ISdD//9//yEoQ///f/8hKUP//39/ISpD//9/fyErQ///f38hLAwDCyADKAIIIgogBSgCCCINTwRAIAohAgwCCyAFKAIAIApBGGxqIgxBBGoqAgAhKyAMQQhqKgIAISogDEEMaioCACEpIAxBEGoqAgAhKCAMQRRqKgIAIScgDCoCACEsIAlBCGoiDEECOgAEIAwgDzYCACABKAI8Ig0gAygCCCIMTQRAIAwhAgwBCyAdICwgHSAsXxshHSAeICcgHiAnYBshHiAfICggHyAoYBshHyAgICkgICApYBshICAhICogISAqXxshISAcICsgHCArXxshHCAJKAIIIQ0gASgCNCAMQQR0aiIMIAktAAw6AAQgDCANNgIAIARBA0YEQEP//3//ISJD//9//yEjQ///f38hJEP//39/ISUMAwsgBSgCCCINIAMoAgwiDk0EQCAOIQIMAgsgBSgCACAOQRhsaiIEKgIAISUgBEEUaioCACEuIARBEGoqAgAhIiAEQQxqKgIAISMgBEEIaioCACEtIARBBGoqAgAhJCAJQQM6AAQgCSAPNgIAIAEoAjwiDSADKAIMIgNNBEAgAyECDAELIAkoAgAhBCABKAI0IANBBHRqIgMgCS0ABDoABCADIAQ2AgAgHSAlIB0gJV8bIR0gHCAkIBwgJF8bIRwgISAtICEgLV8bISEgICAjICAgI2AbISAgHyAiIB8gImAbIR8gHiAuIB4gLmAbIR4M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I0IBfCIjQgRSDQALIANBuAJqIgggA0H4AmoiDSkDADcDACADQagCaiIRIBRBCGopAgA3AwAgA0GYAmoiByATQQhqKQIANwMAIAMgAykD8AI3A7ACIAMgFCkCADcDoAIgAyATKQIANwOQAiADKgLsAiEgIAMqAugCISEgAyoC5AIhHyADKgLgAiEdIAMoAoADIQQgAygChAMhBiADKAKcAyECIAMoAqADIQUgA0GIAmoiCSASQQhqKQIANwMAIAMgEikCADcDgAIgASgCPCEOAkAgJEIBg1ANACAdIB5dRQ0AIAZBBEYNACADKALgASAOTw0AIAwgAykDsAI3AAAgDEEIaiAIKQMANwAAIANBgARqIgpBD2oiCCADQf8CaigAADYAACAKQQhqIgsgDSkAADcDACADQdgAaiIKQQhqIAspAwA3AwAgCkEPaiAIKAAANgAAIAMgAykA8AI3A1ggBCELIAYhCiAdIR4LAkAgJEICg1ANACAeIB9eRQ0AIAVBBEYNACADKALkASAOTw0AIAwgAykDoAI3AAAgDEEIaiARKQMANwAAIANBgARqIgRBD2oiCyADQf8CaigAADYAACAEQQhqIgogDSkAADcDACADQdgAaiIEQQhqIAopAwA3AwAgBEEPaiALKAAANgAAIAMgAykA8AI3A1ggAiELIAUhCiAfIR4LAkAgJEIEg1ANACAeICFeRQ0AIAMoArwDIgJBBEYNACADKALoASAOTw0AIAMoArgDIQsgDCADKQOQAjcAACAMQQhqIAcpAwA3AAAgA0GABGoiBEEPaiIFIANB/wJqKAAANgAAIARBCGoiCiANKQAANwMAIANB2ABqIgRBCGogCikDADcDACAEQQ9qIAUoAAA2AAAgAyADKQDwAjcDWCACIQogISEeCyAkQgiDUA0CIB4gIF5FDQIgAygC2AMiAkEERg0CIAMoAuwBIA5PDQIgAygC1AMhCyAMIAMpA4ACNwAAIAxBCGogCSkDADcAACADQYAEaiIEQQ9qIgUgA0H/AmooAAA2AAAgBEEIaiIKIA0pAAA3AwAgA0HYAGoiBEEIaiAKKQMANwMAIARBD2ogBSgAADYAACADIAMpAPACNwNYIAIhCiAgIR4MAgsgAiAPQYyJwgAQzAgACwJAIB4gIV5BAXQgAnIgHiAgXkECdHIgHiAiXkEDdHKtIiNC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AgAgBEGsAWpCgICAgICAgMA/NwIAIARCADcClAEgBEGAgID8AzYCkAEgBEGAgID8AzYCoAEgBEIBNwK8ASAEIApBFGo2ArgBIARBgAFqKgIAIRIgBEEBNgLMASAEIAE2AsgBQwAAwH9DAACAPyASmCASIBJcGyISQwAAAMCUIhMgBEG4AWogBEHIAWoQygGUIRQgCUEEciEBIAQiAgJ9IBJDAAAAAFsEQCACIBQgAioCbJQ4AqQBIAJBATYCzAEgAiAONgLIASATIAJBuAFqIAJByAFqEMoBlCACKgJslAwBCyACIBQgAioCbJQgEiACKgKkAZSSOAKkASACQQE2AswBIAIgDjYCyAEgEyACQbgBaiACQcgBahDKAZQgAioCbJQgEiACKgKwAZSSCzgCsAEgAkICNwK8ASACIAJB2ABqQQRyNgK4ASACKgJ8IRIgAkECNgLMASACIAE2AsgBQwAAwH9DAACAPyASmCASIBJcGyISQwAAAMCUIhMgAkG4AWogAkHIAWoQygGUIRQgAkGwAWoiAQJ9IBJDAAAAAFwEQCACIBQgAioCXJQgEiACKgKUAZSSOAKUASACIBQgAioCYJQgEiACKgKYAZSSOAKYASACQQI2AswBIAIgDzYCyAEgAiATIAJBuAFqIAJByAFqEMoBlCIUIAIqAlyUIBIgAioCoAGUkjgCoAEgAiAUIAIqAmCUIBIgAioCpAGUkjgCpAEgAkECNgLMASACIAJBrAFqNgLIASACIBMgAkG4AWogAkHIAWoQygGUIhMgAioCXJQgEiACKgKsAZSSOAKsASATIAIqAmCUIBIgAioCsAGUkgwBCyACIBQgAioCXJQ4ApQBIAIgFCACKgJglDgCmAEgAkECNgLMASACIA82AsgBIAIgEyACQbgBaiACQcgBahDKAZQiEiACKgJclDgCoAEgAiASIAIqAmCUOAKkASACQQI2AswBIAIgAkGsAWo2AsgBIAIgEyACQbgBaiACQcgBahDKAZQiEiACKgJclDgCrAEgEiACKgJglAs4AgAgAkEkaiACQZgBaikDADcCACACQSxqIAJBoAFqKQMANwIAIAJBNGogAkGoAWopAwA3AgAgAkE8aiABKAIANgIAIAIgAikDkAE3AhwgAigCfEH/////B3G+IRIgAigCgAFB/////wdxviETIAJBATYCGCAC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NgIAIAggCCkC3AE3A5ACIAggCCkCnAI3A6gBIAlBFGogASgCADYCACAIIAgpAtwBNwK0ASAJQSBqIgIgDEEsaigCADYCACAJQRhqIgEgCCkCtAI3AwAgCUEsaiALKAIANgIAIAggCikDADcCzAEgBCAJQShqKQMANwMAIAsgAikDADcDACAKIAEpAwA3AwAgBiAJQRBqKQMANwMAIAUgAykDADcDACAIIAgpA6gBNwOQAiANQShqIAQpAwA3AwAgDUEgaiALKQMANwMAIA1BGGogCikDADcDACANQRBqIAYpAwA3AwAgDUEIaiAFKQMANwMAIAggCCkDkAI3A9gBQQAgB0MAAAAAXw0AGiAIQbABaiAIQZgCaigCADYCACAIQZABaiAIQewBaigCADYCACAIIAgpA5ACNwOoASAIIAgpAuQBNwOIAUEBCzYCACAAIAgpA6gBNwIEIABBEGogCCkDiAE3AgAgAEEMaiAIQbABaigCADYCACAAQRhqIAhBkAFqKAIANgIADAgLIAhB2AFqIAIgAyAEIAogBxD0ASAAAn9BAiAIKALYAUUNABogCEG4AmogCEGEAmopAgA3AwAgCEGwAmogCEH8AWopAgA3AwAgCEGoAmogCEH0AWopAgA3AwAgCEGgAmogCEHsAWopAgA3AwAgCEGYAmogCEHkAWopAgA3AwAgCCAIKQLcATcDkAJBACAIQYwCaioCAEMAAAAAXw0AGiAIQbABaiAIQdgBakEEciIBQQhqKAIANgIAIAhBkAFqIAhBpAJqKAIANgIAIAggCCkCnAI3A4gBIAggASkCADcDqAFBAQs2AgAgACAIKQOoATcCBCAAQRBqIAgpA4gBNwIAIABBDGogCEGwAWooAgA2AgAgAEEYaiAIQZABaigCADYCAAwHCyAIQdgBaiIBIAIgCyAKIAcQfSAAQRhqIAFBGGooAgA2AgAgAEEQaiABQRBqKQMANwIAIABBCGogAUEIaikDADcCACAAIAgpA9gBNwIADAYLIAhB2AFqIgEgAiALIAogBxB9IABBGGogAUEYaigCADYCACAAQRBqIAFBEGopAwA3AgAgAEEIaiABQQhqKQMANwIAIAAgCCkD2AE3AgAMBQsgCEHYAWohDiAHIRwjAEHQAmsiAyQAIANBCGoiBiACQQhqKQIANwMAIANBGGoiBSACQRhqKAIANgIAIAYgBioCACIYjDgCACADIAIpAhA3AxAgAyACKQIANwMAIBggAyoCECITlCADKgIAIhQgBSoCACIXlJMiByAHkiEWIBQgA0EUaiIBKgIAIhKUIAMqAgQiFSATlJMiByAHkiEaIAEgAyoCDCIkIBaUIBQgGpQgGCAVIBeUIBggEpSTIgcgB5IiB5STkiASkyIgOAIAIAUgJCAalCAVIAeUIBQgFpSTkiAXkyIfOAIAIAMgFIw4AgAgAyAVjDgCBCADICQgB5QgGCAWlCAVIBqUk5IgE5MiHTgCECADQSBqIgRBCGoiASAGKQMANwMAIARBGGoiAiAFKAIANgIAIAEgASoCACIZjDgCACADIAMpAxA3AzAgAyADKQMANwMgIBkgAyoCMCIalCADKgIgIhggAioCACITlJMiByAHkiEVIBggBEEUaiIBKgIAIheUIAMqAiQiFCAalJMiByAHkiEWIAEgAyoCLCISIBWUIBggFpQgGSAUIBOUIBkgF5STIgcgB5IiB5STkiAXkzgCACACIBIgFpQgFCAHlCAYIBWUk5IgE5M4AgAgAyAYjDgCICADIBSMOAIkIAMgEiAHlCAZIBWUIBQgFpSTkiAakzgCMCADQUBrIAogCyICIAMQlgECQAJAAkAgAyoCQCIqIBxeRQRAIANBgAJqIAJBCGoiASgCADYCACADIAIpAgA3A/gBIAMgAioCDCIbIAIqAgAiFZMiGiACQRxqKgIAIi4gAioCBCIlkyITlCACQRBqKgIAIi8gJZMiByACKgIYIhkgFZMiF5STIhYgFpQgByACQSBqKgIAIjAgASoCACIekyISlCACQRRqKgIAIjEgHpMiByATlJMiEyATlCAHIBeUIBogEpSTIhIgEpSSkkMAAAAAkiIHQwAAgCheBH8gA0GUAWogFiAHEIgBIgeVOAIAIANBkAFqIBIgB5U4AgAgAyATIAeVOAKMAUEBBUEACzYCiAEgA0HQAGogA0H4AWogA0GIAWogCiADQSBqELUCIAMqAlAiKyAcXg0BIAMqAgQhISADKgIIISIgAyoCACEjIANB8AFqQQA2AgAgA0HgAWpBADYCACADQYgBaiIBQcQAakIANwIAIAFBNGpBADYCACADQagBakIANwMAIANBmAFqQQA2AgAgA0HsAWogHSAVICQgHiAhlCAlICKUkyIH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kiACQRhqKgIAIiggKJSSQwAAAACSIiogFSoCACIwIBYqAgAiK5IiJCAHkiIHIAeUXQR/QwAAgD8hL0MAAAAAIQcgKkMAAAAAXARAICggKhCIASIhlSEHIC4gIZUhLSAsICGVIS8LICsgByACKgIMIiggLyACQQRqKgIAIieUIC0gAioCACIilJMiISAhkiIjlCAnIC0gAkEIaioCACIplCAHICeUkyIhICGSIiaUICIgByAilCAvICmUkyIhICGSIiGUk5KSjCIslCElICsgLSAoICGUICIgI5QgKSAmlJOSkowiLpQhIiArIC8gKCAmlCApICGUICcgI5STkpKMIiiUISsgMCAHlCEjIDAgLZQhJiAwIC+UISEgKhCIASAkkyEwQQEFQQALIQEgACAhOAIEIAAgATYCACAAQTRqIDA4AgAgAEEwaiAsOAIAIABBLGogLjgCACAAQShqICg4AgAgAEEkaiAHOAIAIABBIGogLTgCACAAQRxqIC84AgAgAEEYaiAlOAIAIABBFGogIjgCACAAQRBqICs4AgAgAEEMaiAjOAIAIABBCGogJjgCAAwGCyAJQdgAaiIBIAIgDCANIAkoAjwgBxC6AiAAQTBqIAFBMGopAwA3AgAgAEEoaiABQShqKQMANwIAIABBIGogAUEgaikDADcCACAAQRhqIAFBGGopAwA3AgAgAEEQaiABQRBqKQMANwIAIABBCGogAUEIaikDADcCACAAIAkpA1g3AgAMBQsgCUHYAGogAiANIBcgDCAHELoCIAAgCSgCWAR/IAlBjAFqKgIAIS0gCUHgAWoiCkEQaiIGIAlB2ABqIgJBFGopAgA3AwAgCkEIaiIFIAlB5ABqIgEpAgA3AwAgCkEoaiIEIAJBLGopAgA3AwAgCkEgaiIMIAlB/ABqKQIANwMAIApBGGoiDSAJQfQAaikCADcDACAJQbABaiIRQQhqIgMgCkEUaigCADYCACAJIAkpAlw3A+ABIAkgCSkC7AE3A7ABIBFBFGogASgCADYCACAJIAkpAlw3ArwBIBFBIGoiAiAKQSxqKAIANgIAIBFBGGoiASAJKQKEAjcDACARQSxqIAwoAgA2AgAgCSANKQMANwLUASAEIBFBKGopAwA3AwAgDCACKQMANwMAIA0gASkDADcDACAGIBFBEGopAwA3AwAgBSADKQMANwMA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ACARQRhqIg0gAkEYaigCADYCACAMIAwqAgAiKow4AgAgCiACKQIQNwNQIAogAikCADcDQCAqIAoqAlAiJZQgCioCQCInIA0qAgAiIpSTIiEgIZIhKCAnIBFBFGoiAioCACIjlCAKKgJEIikgJZSTIiEgIZIhJCACIAoqAkwiJiAolCAnICSUICogKSAilCAqICOUkyIhICGSIiGUk5IgI5M4AgAgDSAmICSUICkgIZQgJyAolJOSICKTOAIAIAogJ4w4AkAgCiApjDgCRCAKICYgIZQgKiAolCApICSUk5IgJZM4AlAgCkEIaiABIBEgBiAFIAMgBCAHEHogCUHYAGoiBiAKKAIIBH8gCkEIaiICQTRqKgIAIQcgCkGQAWoiDEEQaiACQRRqKQIANwMAIAxBCGogAkEMaiIBKQIANwMAIAxBKGogAkEsaikCADcDACAMQSBqIgUgAkEkaikCADcDACAMQRhqIgQgAkEcaikCADcDACAKQeAAaiINQQhqIgMgDEEUaigCADYCACAKIAopAgw3A5ABIAogCikCnAE3A2AgDUEUaiABKAIANgIAIAogCikCDDcCbCANQSBqIgIgDEEsaigCADYCACANQRhqIgEgCikCtAE3AwAgDUEsaiAFKAIANgIAIAogBCkDADcChAEgBkE0aiAHOAIAIAZBLGogDUEoaikDADcCACAGQSRqIAIpAwA3AgAgBkEcaiABKQMANwIAIAZBFGogDUEQaikDADcCACAGQQxqIAMpAwA3AgAgBiAKKQNgNwIEQQEFQQALNgIAIApBwAFqJAAgAEEwaiAGQTBqKQMANwIAIABBKGogBkEoaikDADcCACAAQSBqIAZBIGopAwA3AgAgAEEYaiAGQRhqKQMANwIAIABBEGogBkEQaikDADcCACAAQQhqIAZBCGopAwA3AgAgACAJKQNYNwIADAELIABBAjYCAAsgCUGQAmokAA8LIAhBADYCmAQgAUEIaiAIQeADaiAIQZgEakHAnMIAENUIAAv3FQMRfwp9An4jAEGQA2siBSQAIAUgAjYCZCAFQTxqIAIqAgwiGDgCACAFQThqIBg4AgAgBUE0aiAYOAIAIAVBLGogAioCCCIZOAIAIAVBKGogGTgCACAFQSRqIBk4AgAgBUEcaiACKgIEIhY4AgAgBUEYaiAWOAIAIAVBFGogFjgCACAFQdwAaiACQRRqKgIAIhc4AgAgBUHYAGogFzgCACAFQdQAaiAXOAIAIAVB0ABqIBc4AgAgBUHMAGogAkEQaioCACIXOAIAIAVByABqIBc4AgAgBUHEAGogFzgCACAFQUBrIBc4AgAgBSABNgJgIAUgBDoAbCAFIAM4AmggBSAYOAIwIAUgGTgCICAFIBY4AhAgBSACKgIAIgM4AgwgBSADOAIIIAUgAzgCBCAFIAM4AgAgAUEgaigCACILBH8gBUEANgJ4IAVCBDcDcCAFQfAAaiIEQQAQlgYgBSgCcCAFKAJ4IgJBA3RqQoCAgIDw////fjcCACAFIAJBAWo2AnggBUGAAWogBBDxAgJAIAUoAoABQQFHDQAgBUGwAmoiAkEYaiEMIAJBDGohDSACQQRyIREgBUHgAmpBBHIhEkP//39/IRgDQCAYIAUqAogBjF8NAQJAAn8CQCAFKAKEASICIAtJBEAgBUGQAWogASgCGCACQQd0akGAARD/CxogBS0AiAIiCARAIAUoAvwBIgIgASgCPCIJSSEEIAEoAjQiBiACQQxsakEAIAQbQQhqQQAgBBshEyAFKAL4ASICIAlJIQQgBiACQQxsakEAIAQbQQhqQQAgBBshFCAFKAL0ASICIAlJIQQgBiACQQxsakEAIAQbQQhqQQAgBBshFSAFKALwASICIAlJIQQgBiACQQxsakEAIAQbQQhqQQAgBBshDwsgBSAFKgJoIho4ArwCIAUgGjgCuAIgBSAaOAK0AiAFIBo4ArACIAVB4AJqIAVBkAFqIAUgBUGwAmoQ0gEgBUGYAmoiBCASQQhqKAIANgIAIAUgEikCADcDkAIgBSgC4AIhAiAFKgLwAiEWIAUqAvQCIQMgBSoC+AIhGSAFKgL8AiEXIAhFBEBBACEOQQAhBEEAIQdBACEGDAQLIBEgBSkDkAI3AgAgEUEIaiAEKAIANgIAIAUgAjYCsAIgBSAXIBhdOgDjAiAFIBggGV46AOICIAUgAyAYXToA4QIgBSAWIBhdOgDgAiAFQaACaiAFQbACaiAFQeACahD/CCAFLQCgAiAFLQChAkEBdHIgBS0AogJBAnRyIAUtAKMCQQN0cq0iIUL/AYMhIEMAAAAAIQNBACEHIAUoAmQhCiAFKAJgIQlDAAAAACEWQQAgIUIBg1ANAhpBACAPRQ0CGiAFQbACaiICIAkgDygCABDZBSAFQeACaiACIA0gDCAKEO8BIAUoAvACQQRGDQEgGiAFKgLgAiIcYEUNASAcIRZBAQwCCyACIAtBjInCABDMCAALQQALIQYCQCAgQgKDUA0AIBVFDQAgBUGwAmoiAiAJIBUoAgAQ2QUgBUHgAmogAiANIAwgChDvAQJAIAUoAvACQQRGDQAgGiAFKgLgAiIdYEUNAEEBIQcgHSEDCwtDAAAAACEXQQAhDkMAAAAAIRkCf0EAICBCBINQDQAaQQAgFEUNABogBUGwAmoiAiAJIBQoAgAQ2QUgBUHgAmogAiANIAwgChDvAQJAIAUoAvACQQRGDQAgGiAFKgLgAiIZYEUNACAZIR5BAQwBC0MAAAAAIRlBAAshBAJAICBCCINQDQAgE0UNACAFQbACaiICIAkgEygCABDZBSAFQeACaiACIA0gDCAKEO8BAkAgBSgC8AJBBEYNACAaIAUqAuACIhdgRQ0AQQEhDiAXIR8MAQtDAAAAACEXCyAOQRh0IARBEHRyIAdBCHRyIAZyIQILIAJBFXZB+AFxIAJBDnZB/AFxIAJBB3ZB/gFxIAJB/wFxcnJyrSIgQgGDISECQCAIBEAgByAgpyICQQF2IBYgGCAhpyAWIBhdcSAGQQBHcSABKAI8IgkgBSgC8AFLcSIGGyIWIANecXEgBSgC9AEgCUlxIQggAkECdiADIBYgCBsiAyAZXnEgBEEAR3EgBSgC+AEgCUlxIQIgGSADIAIbIRhBAUEBQQEgECAGGyAIGyACGyEQIB4gHSAcIBsgBhsgCBsgAhshGyAORQ0BICBCCINQDQEgFyAYXUUNASAFKAL8ASAJTw0BQQEhECAfIRsgFyEYDAELAkAgIVANACAFKALwASIIIAtPDQAgFowhFiAFKAJ4IgIhBiAFKAJ0IAJGBEAgBUHwAGogAhCWBiAFKAJ4IQYLIAUoAnAiByAGQQN0aiIEIBY4AgQgBCAINgIAIAUgBkEBajYCeCAHIAJBA3RqIgQqAgQhGiAEKAIAIQoCQCACRQRAQQAhBgwBCwNAQQBBfyAHIAJBAWsiCUEBdiIGQQN0aiIIQQRqKgIAIhYgGl8iBBtBAUECIAQbIBYgGmAbQQNrQX5JBEAgAiEGDAILIAcgAkEDdGogCCkCADcCACAGIQIgCUEBSw0ACwsgByAGQQN0aiICIBo4AgQgAiAKNgIACwJAICBCAoNQDQAgBSgC9AEiCCALTw0AIAOMIQMgBSgCeCICIQYgBSgCdCACRgRAIAVB8ABqIAIQlgYgBSgCeCEGCyAFKAJwIgcgBkEDdGoiBCADOAIEIAQgCDYCACAFIAZBAWo2AnggByACQQN0aiIEKgIEIRYgBCgCACEKAkAgAkUEQEEAIQYMAQsDQEEAQX8gByACQQFrIglBAXYiBkEDdGoiCEEEaioCACIDIBZfIgQbQQFBAiAEGyADIBZgG0EDa0F+SQRAIAIhBgwCCyAHIAJBA3RqIAgpAgA3AgAgBiECIAlBAUsNAAsLIAcgBkEDdGoiAiAWOAIEIAIgCjYCAAsCQCAgQgSDUA0AIAUoAvgBIgggC08NACAZjCEDIAUoAngiAiEGIAUoAnQgAkYEQCAFQfAAaiACEJYGIAUoAnghBgsgBSgCcCIHIAZBA3RqIgQgAzgCBCAEIAg2AgAgBSAGQQFqNgJ4IAcgAkEDdGoiBCoCBCEWIAQoAgAhCgJAIAJFBEBBACEGDAELA0BBAEF/IAcgAkEBayIJQQF2IgZBA3RqIghBBGoqAgAiAyAWXyIEG0EBQQIgBBsgAyAWYBtBA2tBfkkEQCACIQYMAgsgByACQQN0aiAIKQIANwIAIAYhAiAJQQFLDQALCyAHIAZBA3RqIgIgFjgCBCACIAo2AgALICBCCINQDQAgBSgC/AEiCCALTw0AIBeMIQMgBSgCeCICIQYgBSgCdCACRgRAIAVB8ABqIAIQlgYgBSgCeCEGCyAFKAJwIgcgBkEDdGoiBCADOAIEIAQgCDYCACAFIAZBAWo2AnggByACQQN0aiIEKgIEIRcgBCgCACEKAkAgAkUEQEEAIQYMAQsDQEEAQX8gByACQQFrIglBAXYiBkEDdGoiCEEEaioCACIDIBdfIgQbQQFBAiAEGyADIBdgG0EDa0F+SQRAIAIhBgwCCyAHIAJBA3RqIAgpAgA3AgAgBiECIAlBAUsNAAsLIAcgBkEDdGoiAiAXOAIEIAIgCjYCAAsgBUGAAWogBUHwAGoQ8QIgBSgCgAFBAUYNAAsLAkAgBSgCdCIBRQ0AIAFBA3RFDQAgBSgCcBCxAQsgEEEARwVBAAshASAAIBs4AgQgACABNgIAIAVBkANqJAAL8BcEEn8PfQF+AnwjAEGwAWsiCiQAIAogCToAFiAKIAY4AhAjAEEQayILJAACQAJAAkACQCAIKAIAIg1FDQAgC0EIaiAIQQAgDRsiCSgCACAJKAIEKAIYEQAAIAsoAggiCSALKAIMKAIMEQYAIAlFDQBCvdvPoMiUnaJMUQ0BC0EgQQQQlAsiCUUNASAJQgA3AhQgCUEENgIQIAlCADcCCCAJQcD/wQA2AgQgCUEANgIAIAlBHGpBADoAAAJAIA1FDQAgDSAIKAIEIhAoAgARBwAgECgCBEUNACAQKAIIGiANELEBCyAIQeyWwgA2AgQgCCAJNgIACyALQRBqJAAMAQtBIEEEQezqwwAoAgAiAEGYByAAGxEAAAALAkACQAJAAkAgCCgCACIJBEAgCkEIaiAJIAgoAgQoAhwRAAAgCigCCCIMIAooAgwoAgwRBgAhKwJAIAxFDQAgK0K928+gyJSdokxSDQAgDCAMLQAcQQFzIgg6ABwgCiAIOgAXIAQgBSgCEBEEACEIIApBADYCICAKQgQ3AxggCkHwAGogCCABEL0CIAoqAhAiBkMAAAAAYARAIApBgAFqKgIAIR4gCkGEAWoqAgAhHyAKKgJ8IRwgCioCcCEdIAoqAnQhIyAKKgJ4ISQgCkEoaiIJQQhqIAdBCGoiCygCADYCACALQQA2AgAgBykCACErIAdCBDcCACAKICs3AyggCkE4aiILQShqQZDJwAA2AgAgC0EMaiAFNgIAIAogCDYCaCAKIAE2AmQgCiAANgJcIAogBzYCUCAKIAw2AkggCiAENgJAIAogAjYCOCADQTBqKgIAISYgA0EsaioCACEiIANBKGoqAgAhJyADQQxqKAIAIQ4gA0EQaigCACEPIAogCkEYajYCbCAKIApBFmo2AlggCiAKQRdqNgJUIAogCTYCTCAKIApBEGo2AjwCQCAGIBySICeVIhxDAAAAv18NACAGIB+SICaVIiVDAAAAv18NACAdIAaTICeVIh1DAAAAP2ANACAkIAaTICaVIiBDAAAAP2ANACAOuEQAAAAAAADwv6C2ISECfyAcQwAAAD+SQwAAgD8gD7hEAAAAAAAA8L+gtpUiJJWNIh8gD0EBa7MiHCAcIB9eG0MAAAAAIB9DAAAAAF4buyIsRAAAAAAAAAAAZiEAIAAgLEQAAAAAAADwQWNxBEAgLKsMAQtBAAshASAOQQFrIRFDAACAPyAhlSEfQX8gAUEAIAAbICxEAADg////70FkGyEVQX8CfyAdQwAAAD+SICSVjiIcIA9BAmuzIh0gHCAdXRtDAAAAACAcQwAAAABeG7siLEQAAAAAAAAAAGYhACAAICxEAAAAAAAA8EFjcQRAICyrDAELQQALQQAgABsgLEQAAOD////vQWQbIQECfyAlQwAAAD+SIB+VjSIcIBGzIh0gHCAdXRtDAAAAACAcQwAAAABeG7siLEQAAAAAAADwQWMgLEQAAAAAAAAAAGZxBEAgLKsMAQtBAAshACABIBVPAn8gIEMAAAA/kiAflY4iHCAOQQJrsyIdIBwgHV0bQwAAAAAgHEMAAAAAXhu7Ii1EAAAAAAAA8EFjIC1EAAAAAAAAAABmcQRAIC2rDAELQQALIQINAEF/IABBACAsRAAAAAAAAAAAZhsgLEQAAOD////vQWQbIhZBfyACQQAgLUQAAAAAAAAAAGYbIC1EAADg////70FkGyIATQ0AIAYgHpIgIpUhHCAjIAaTICKVIQYgASADQSRqKAIAIgIgASACSxshGCAOQQJ0IRcgFiAAayEQIANBFGooAgAiAiADQSBqKAIAIhIgAWwiBGohBSABIBFsIhMgAygCTEEBdmohFCAAIBIgACASSxsiGSAAayEaIAIgACAEamohBCADKAIAIgIgACABIA5sakECdGohCSACIAAgDiABQQFqbGpBAnRqIQsDQCABIBhGDQggAUEBaiENIBAhCCAaIQMgBCEHAkAgASAPSQRAICcgJCABs5RDAAAAv5IiHpQhIyAnICQgHpKUISUgCSEIIAshASAAIQcDQCAHIBlGDQsgByICQQFqIQcCQCACIAVqLQAAIgNBBnFBBkYNACACIA5PDQwgByAOTw0MIA0gD08NDCAIQQRqKgIAIR0gAUEEaioCACEeIAEqAgAhIAJAIAgqAgAiISAcXkUNACAcIB1dRQ0AIBwgIF1FDQAgHCAeXQ0BCwJAIAYgIV5FDQAgBiAdXkUNACAGICBeRQ0AIAYgHl4NAQsgIiAelCEoICIgIJQhICAmIB8gHyACs5RDAAAAv5IiKpKUIR4gIiAdlCEpICYgKpQhHSAiICGUISEgA0ECcUUEQCAKICU4AogBIAogKTgCgAEgCiAjOAJ8IAogITgCdCAKICM4AnAgCiAdOAJ4IAogHjgChAEgCiAeIB0gA0EBcSIbGzgCkAEgCiAoICAgGxs4AowBIApBOGogAiATaiAKQfAAahByCyADQQRxDQAgCiAgOAKMASAKICU4AogBIAogKDgCgAEgCiAlOAJ8IAogIzgCcCAKIB44AoQBIAogHTgCkAEgCiAdIB4gA0EBcSIDGzgCeCAKICEgKSADGzgCdCAKQThqIAIgFGogCkHwAGoQcgsgCEEEaiEIIAFBBGohASAHIBZHDQALDAELA0AgA0UNCiAHLQAAQQZxQQZHDQogA0EBayEDIAdBAWohByAIQQFrIggNAAsLIAUgEmohBSAJIBdqIQkgCyAXaiELIBEgFGohFCARIBNqIRMgBCASaiEEIBUgDSIBRw0ACwsgDEEYaigCACIERQ0EIARBAWshAUEAIQcgCi0AF0EARyEJIAwoAhAiBSEDQQAhCAJAA0ACQAJAAkAgA0EQaiICLQAARSAJRwRAIAgNAUEAIQggASAHRw0DDAoLIAhBAWohCAwBCyAHIAhrIgAgBEkEQCADKQIAISsgAyADIAhBbGxqIgApAgA3AgAgACArNwIAIANBCGoiCykCACErIAsgAEEIaiILKQIANwIAIAIoAgAhDSACIABBEGoiACgCADYCACALICs3AgAgACANNgIADAELIAAgBEGs98AAEMwIAAsgASAHRg0CCyADQRRqIQMgB0EBaiIHIARHDQALIAQgBEGc98AAEMwIAAsgCA0DDAQLIApBzABqQQA2AgAgCkHUxsAANgJIIApCATcCPCAKQfzGwAA2AjggCkE4akHwx8AAEIIKAAtB8NbAAEErQczrwAAQxAkAC0Hw1sAAQStBvOvAABDECQALIAQgCE8EQCAMQRhqIAQgCGsiBDYCAAsgDCgCACIABEAgDEEEaigCAEH/ASAAQQlqEIAMGgsgDEEANgIMIAwgACAAQQFqQQN2QQdsIABBCEkbIgk2AgggBCAJSw0BIARFDQAgBSAEQRRsaiECIAxBBGooAgAiAUEEayEIQQAhBANAIAEgBSgCACILIABxIgdqKQAAQoCBgoSIkKDAgH+DIitQBEBBCCEDA0AgAyAHaiEHIANBCGohAyABIAAgB3EiB2opAABCgIGChIiQoMCAf4MiK1ANAAsLIAVBFGohBSABICt6p0EDdiAHaiAAcSIDaiwAACIHQQBOBEAgASABKQMAQoCBgoSIkKDAgH+DeqdBA3YiA2otAAAhBwsgASADaiALQRl2Igs6AAAgA0EIayAAcSABakEIaiALOgAAIAggA0ECdGsgBDYCACAEQQFqIQQgCSAHQQFxayEJIAIgBUcNAAsgDCAJNgIIIAwgBDYCDAsgCigCKCEDIAooAjAiAARAIAMgAEGoAWxqIQADQAJAIANBBGooAgAiAUUNACABrUIwfqdFDQAgAygCABCxAQsCQCADQZgBaigCACIBRQ0AIAGtQih+p0UNACADQZQBaigCABCxAQsgACADQagBaiIDRw0ACyAKKAIoIQMLAkAgCigCLCIARQ0AIACtQqgBfqdFDQAgAxCxAQsCQCAKKAIcIgBFDQAgAEECdEUNACAKKAIYELEBCyAKQbABaiQADwtBvPfAAEHFAEHk+MAAEMQJAAtBiP/AAEEbQajTwAAQ2woAC9cVAxN/A34KfSMAQcACayIFJAAgBUEQaiABIAAoAgAQ2gMgACgCCCIHIAAoAgwiCCAAKAIELQAAIgobKAIAIhNBufPd8XlsQQV3IAggByAKGygCACIUc0G5893xeWwiDyAAKAIQIgkoAgAiBnEhBCAPQRl2IhWtQoGChIiQoMCAAX4hGSAJQQRqKAIAIg5BBGshECAJQRhqKAIAIQwgCUEQaiIRKAIAIQ0CQAJAAkACQAJAAkADQCAZIAQgDmopAAAiGIUiF0KBgoSIkKDAgAF9IBdCf4WDQoCBgoSIkKDAgH+DIRcDQCAXUARAIBggGEIBhoNCgIGChIiQoMCAf4NQRQ0DIBJBCGoiEiAEaiAGcSEEDAILIBAgF3qnQQN2IARqIAZxQQJ0aygCACILIAxPDQMgF0IBfSAXgyEXIA0gC0EUbGoiFkEEaigCACATRw0AIBZBCGooAgAgFEcNAAsLIAAoAhQiBygCCCIGIA0gC0EUbGoiASgCDCIETQ0CIAVBMGogBygCACAEQagBbGoQ5QEgAUEMaiIEIAAoAhhBCGooAgA2AgAgAUEQaiAAKAIcLQAAOgAAIAAoAhgiASgCCCIGIAFBBGooAgBGBEAgASAGEOYFIAEoAgghBgsgASgCACAGQagBbGogBUEwakGoARD/CxogASAGQQFqNgIIDAULIAAoAhgiBkEIaigCACELIAAoAhwtAAAhEiAFQeABakIANwMAIAVB6AFqQgA3AwAgBSAFKQIwNwPYAQJAIApFBEAgBygCACEMIAgoAgAhB0EAIQhBACEKIAAoAiAoAgAiBARAIAVBMGoiCkEYaiAEQRhqKAIANgIAIApBEGogBEEQaikCADcDACAKQQhqIARBCGopAgA3AwAgBSAEKQIANwMwQQEhCgsgBUGQAmoiBEEYaiAFQTBqIg1BGGoiDigCADYCACAEQRBqIA1BEGoiECkDADcDACAEQQhqIA1BCGoiBCkDADcDACAFIAUpAzA3A5ACIAEEQCAOIAFBGGooAgA2AgAgECABQRBqKQIANwMAIAQgAUEIaikCADcDACAFIAEpAgA3AzBBASEICyAFQfABaiIBQRhqIA4oAgA2AgAgAUEQaiAQKQMANwMADAELIAgoAgAhDCAHKAIAIQdBACEIQQAhCiABBEAgBUEwaiIEQRhqIAFBGGooAgA2AgAgBEEQaiABQRBqKQIANwMAIARBCGogAUEIaikCADcDACAFIAEpAgA3AzBBASEKCyAFQZACaiIBQRhqIAVBMGoiBEEYaiINKAIANgIAIAFBEGogBEEQaiIOKQMANwMAIAFBCGogBEEIaiIEKQMANwMAIAUgBSkDMDcDkAIgACgCICgCACIBBEAgDSABQRhqKAIANgIAIA4gAUEQaikCADcDACAEIAFBCGopAgA3AwAgBSABKQIANwMwQQEhCAsgBUHwAWoiAUEYaiANKAIANgIAIAFBEGogDikDADcDAAsgAUEIaiAEKQMANwMAIAUgBSkDMDcD8AEgCyIEIAZBBGooAgBGBEAgBiALEOYFIAZBCGooAgAhBAsgBigCACAEQagBbGoiAUIANwIEIAFBBDYCACABIAo2AiwgASAMNgIoIAEgBzYCJCABIAg2AkwgAUEMakIANwIAIAFBFGpCADcCACABQRxqQgA3AgAgAUEwaiAFKQOQAjcCACABQThqIAVBkAJqIgdBCGopAwA3AgAgAUFAayAHQRBqKQMANwIAIAFByABqIAdBGGooAgA2AgAgAUEANgJsIAFB+ABqQQA2AgAgAUGUAWpBBDYCACABQdAAaiAFKQPwATcCACABQdgAaiAFQfABaiIHQQhqKQMANwIAIAFB4ABqIAdBEGopAwA3AgAgAUHoAGogB0EYaigCADYCACABQfwAaiAFKQPYATcCACABQYQBaiAFQdgBaiIHQQhqKQMANwIAIAFBjAFqIAdBEGopAwA3AgAgAUGeAWpCADcBACABQZgBakIANwIAIAZBCGogBEEBajYCACAJQQRqKAIAIgQgDyAJKAIAIghxIgZqKQAAQoCBgoSIkKDAgH+DIhdQBEBBCCEBA0AgASAGaiABQQhqIQEgCHEiBiAEaikAAEKAgYKEiJCgwIB/gyIXUA0ACwsgCUEYaigCACEBIBd6p0EDdiAGaiAIcSIGIARqLAAAIgdBAE4EQCAEKQMAQoCBgoSIkKDAgH+DeqdBA3YiBiAEai0AACEHCyAHQQFxIQoCQCAJQQhqIgwoAgANACAKRQ0AIAVBCGogCSAJKAIQIAEQhQEgCUEEaigCACIEIA8gCSgCACIIcSIHaikAAEKAgYKEiJCgwIB/gyIXUARAQQghBgNAIAYgB2ogBkEIaiEGIAhxIgcgBGopAABCgIGChIiQoMCAf4MiF1ANAAsLIBd6p0EDdiAHaiAIcSIGIARqLAAAQQBIDQAgBCkDAEKAgYKEiJCgwIB/g3qnQQN2IQYLIAQgBmogFToAACAGQQhrIAhxIARqQQhqIBU6AAAgDCAMKAIAIAprIgg2AgAgCUEMaiIKKAIAQQFqIQcgCiAHNgIAIAQgBkECdGtBBGsgATYCACABIAlBFGooAgAiBEcEQCAJQRhqKAIAIQYMBAsgByAIaiAJQRhqKAIAIgZrIQQgBCABIAZrTQRAIAEhBAwECyAGIAQgBmoiBEsNAiAErUIUfiIXQiCIUEECdCEIIBenIQogBSABBH8gBSARKAIANgIwIAUgAa1CFH4+AjRBBAVBAAs2AjggBUGwAmogCiAIIAVBMGoQiAcgBSgCsAJFBEAgBSgCtAIhByAJQRRqIAQ2AgAgCSAHNgIQDAQLIAVBuAJqKAIAIgBFDQIgBSgCtAIgAEHs6sMAKAIAIgBBmAcgABsRAAAACyALIAxB3PbAABDMCAALIAQgBkH47cAAEMwIAAsQgQoACyAEIAZGBEAgESAEEOcFIAlBGGooAgAhBgsgCUEYaiAGQQFqIgc2AgAgCSgCECAGQRRsaiIEIAs2AgwgBCATNgIEIAQgDzYCACAEQRBqIBI6AAAgBEEIaiAUNgIAIAEgB0kEQCARKAIAIAFBFGxqQQxqIQQMAQsgASAHQYz3wAAQzAgACyAAKAIYIgsoAggiByAEKAIAIgFLBEAgCygCACABQagBbGohASAAQShqKAIAIQQgACgCJCELAkAgACgCBC0AAEUEQCAFQTBqIgdBCGoiBiAFQRBqIghBCGopAwA3AwAgB0EYaiIJIAhBGGooAgA2AgAgBiAGKgIAIhqMOAIAIAUgBSkDEDcDMCAFIAUpAyA3A0AgCSAFKgI8IiAgBSoCMCIbIAVBxABqIgYqAgAiIZQgBSoCNCIcIAUqAkAiIpSTIh0gHZIiHZQgHCAcIAkqAgAiI5QgGiAhlJMiHiAekiIelCAbIBogIpQgGyAjlJMiHyAfkiIflJOSICOTOAIAIAYgICAflCAbIB2UIBogHpSTkiAhkzgCACAFIBuMOAIwIAUgHIw4AjQgBSAgIB6UIBogH5QgHCAdlJOSICKTOAJAIAsgByAAKAIsIABBMGooAgAgAiADIAAoAjQqAgAgASAEKAIsERsAGgwBCyALIAVBEGogAiADIAAoAiwgAEEwaigCACAAKAI0KgIAIAEgBCgCLBEbABoLIAVBwAJqJAAPCyABIAdBiO7AABDMCAAL+RYEE38PfQF+AnwjAEGQAWsiCSQAIAkgCDoAFiAJIAU4AhAjAEEQayILJAACQAJAAkACQCAHKAIAIgxFDQAgC0EIaiAHQQAgDBsiCCgCACAIKAIEKAIYEQAAIAsoAggiCCALKAIMKAIMEQYAIAhFDQBCvOHO597piuFbUQ0BC0EgQQQQlAsiCEUNASAIQgA3AhQgCEEENgIQIAhCADcCCCAIQcD/wQA2AgQgCEEANgIAIAhBHGpBADoAAAJAIAxFDQAgDCAHKAIEIhAoAgARBwAgECgCBEUNACAQKAIIGiAMELEBCyAHQayXwgA2AgQgByAINgIACyALQRBqJAAMAQtBIEEEQezqwwAoAgAiAEGYByAAGxEAAAALAkACQAJAAkAgBygCACIIBEAgCUEIaiAIIAcoAgQoAhwRAAAgCSgCCCIKIAkoAgwoAgwRBgAhKwJAIApFDQAgK0K84c7n3umK4VtSDQAgCiAKLQAcQQFzIgc6ABwgCSAHOgAXIAlB2ABqIAMgASAEKAKIARECACAJKgIQIgVDAAAAAGAEQCAJQegAaioCACEeIAlB7ABqKgIAIR8gCSoCZCEcIAkqAlghHSAJKgJcISMgCSoCYCEkIAlBGGoiB0EIaiAGQQhqIggoAgA2AgAgCEEANgIAIAYpAgAhKyAGQgQ3AgAgCSArNwMYIAlBzABqIAQ2AgAgCUFAa0GQycAANgIAIAkgAzYCSCAJIAE2AkQgCSAANgI8IAkgBjYCMCAJIAo2AiggAkEwaioCACEmIAJBLGoqAgAhIiACQShqKgIAIScgAkEMaigCACENIAJBEGooAgAhDyAJIAlBEGo2AlAgCSAJQRZqNgI4IAkgCUEXajYCNCAJIAc2AiwCQCAFIBySICeVIhxDAAAAv18NACAFIB+SICaVIiVDAAAAv18NACAdIAWTICeVIh1DAAAAP2ANACAkIAWTICaVIiBDAAAAP2ANACANuEQAAAAAAADwv6C2ISECfyAcQwAAAD+SQwAAgD8gD7hEAAAAAAAA8L+gtpUiJJWNIh8gD0EBa7MiHCAcIB9eG0MAAAAAIB9DAAAAAF4buyIsRAAAAAAAAAAAZiEAIAAgLEQAAAAAAADwQWNxBEAgLKsMAQtBAAshASANQQFrIRFDAACAPyAhlSEfIB1DAAAAP5IgJJWOIhwgD0ECa7MiHSAcIB1dG0MAAAAAIBxDAAAAAF4buyItRAAAAAAAAAAAZiEDQX8gAUEAIAAbICxEAADg////70FkGyEVQX8CfyADIC1EAAAAAAAA8EFjcQRAIC2rDAELQQALQQAgAxsgLUQAAOD////vQWQbIQECfyAlQwAAAD+SIB+VjSIcIBGzIh0gHCAdXRtDAAAAACAcQwAAAABeG7siLEQAAAAAAADwQWMgLEQAAAAAAAAAAGZxBEAgLKsMAQtBAAshACABIBVPAn8gIEMAAAA/kiAflY4iHCANQQJrsyIdIBwgHV0bQwAAAAAgHEMAAAAAXhu7Ii1EAAAAAAAA8EFjIC1EAAAAAAAAAABmcQRAIC2rDAELQQALIQMNAEF/IABBACAsRAAAAAAAAAAAZhsgLEQAAOD////vQWQbIhZBfyADQQAgLUQAAAAAAAAAAGYbIC1EAADg////70FkGyIATQ0AIAUgHpIgIpUhHCAjIAWTICKVIQUgASACQSRqKAIAIgMgASADSxshGCANQQJ0IRcgFiAAayEQIAJBFGooAgAiAyACQSBqKAIAIhIgAWwiBmohBCABIBFsIhMgAigCTEEBdmohFCAAIBIgACASSxsiGSAAayEaIAMgACAGamohAyACKAIAIgIgACABIA1sakECdGohCCACIAAgDSABQQFqbGpBAnRqIQsDQCABIBhGDQggAUEBaiEMIBAhByAaIQIgAyEGAkAgASAPSQRAICcgJCABs5RDAAAAv5IiHpQhIyAnICQgHpKUISUgCCEHIAshASAAIQYDQCAGIBlGDQsgBiICQQFqIQYCQCACIARqLQAAIg5BBnFBBkYNACACIA1PDQwgBiANTw0MIAwgD08NDCAHQQRqKgIAIR0gAUEEaioCACEeIAEqAgAhIAJAIAcqAgAiISAcXkUNACAcIB1dRQ0AIBwgIF1FDQAgHCAeXQ0BCwJAIAUgIV5FDQAgBSAdXkUNACAFICBeRQ0AIAUgHl4NAQsgIiAelCEoICIgIJQhICAmIB8gHyACs5RDAAAAv5IiKpKUIR4gIiAdlCEpICYgKpQhHSAiICGUISEgDkECcUUEQCAJICU4AnAgCSApOAJoIAkgIzgCZCAJICE4AlwgCSAjOAJYIAkgHTgCYCAJIB44AmwgCSAeIB0gDkEBcSIbGzgCeCAJICggICAbGzgCdCAJQShqIAIgE2ogCUHYAGoQbAsgDkEEcQ0AIAkgIDgCdCAJICU4AnAgCSAoOAJoIAkgJTgCZCAJICM4AlggCSAeOAJsIAkgHTgCeCAJIB0gHiAOQQFxIg4bOAJgIAkgISApIA4bOAJcIAlBKGogAiAUaiAJQdgAahBsCyAHQQRqIQcgAUEEaiEBIAYgFkcNAAsMAQsDQCACRQ0KIAYtAABBBnFBBkcNCiACQQFrIQIgBkEBaiEGIAdBAWsiBw0ACwsgBCASaiEEIAggF2ohCCALIBdqIQsgESAUaiEUIBEgE2ohEyADIBJqIQMgFSAMIgFHDQALCyAKQRhqKAIAIgNFDQQgA0EBayEAQQAhBiAJLQAXQQBHIQggCigCECIEIQJBACEHAkADQAJAAkACQCACQQxqLQAARSAIRwRAIAcNAUEAIQcgACAGRw0DDAoLIAdBAWohBwwBCyAGIAdrIgEgA0kEQCACKQIAISsgAiACIAdBBHRrIgEpAgA3AgAgASArNwIAIAJBCGoiCykCACErIAsgAUEIaiIBKQIANwIAIAEgKzcCAAwBCyABIANBrPfAABDMCAALIAAgBkYNAgsgAkEQaiECIAZBAWoiBiADRw0ACyADIANBnPfAABDMCAALIAcNAwwECyAJQTxqQQA2AgAgCUHUxsAANgI4IAlCATcCLCAJQfzGwAA2AiggCUEoakHwx8AAEIIKAAtB8NbAAEErQYTowAAQxAkAC0Hw1sAAQStB9OfAABDECQALIAMgB08EQCAKQRhqIAMgB2siAzYCAAsgCigCACIABEAgCkEEaigCAEH/ASAAQQlqEIAMGgsgCkEANgIMIAogACAAQQFqQQN2QQdsIABBCEkbIgg2AgggAyAISw0BIANFDQAgBCADQQR0aiEHIApBBGooAgAiAUEEayELQQAhAwNAIAEgBCgCACIMIABxIgZqKQAAQoCBgoSIkKDAgH+DIitQBEBBCCECA0AgAiAGaiEGIAJBCGohAiABIAAgBnEiBmopAABCgIGChIiQoMCAf4MiK1ANAAsLIARBEGohBCABICt6p0EDdiAGaiAAcSICaiwAACIGQQBOBEAgASABKQMAQoCBgoSIkKDAgH+DeqdBA3YiAmotAAAhBgsgASACaiAMQRl2Igw6AAAgAkEIayAAcSABakEIaiAMOgAAIAsgAkECdGsgAzYCACADQQFqIQMgCCAGQQFxayEIIAQgB0cNAAsgCiAINgIIIAogAzYCDAsgCSgCGCECIAkoAiAiAARAIAIgAEGoAWxqIQADQAJAIAJBBGooAgAiAUUNACABrUIwfqdFDQAgAigCABCxAQsCQCACQZgBaigCACIBRQ0AIAGtQih+p0UNACACQZQBaigCABCxAQsgACACQagBaiICRw0ACyAJKAIYIQILAkAgCSgCHCIARQ0AIACtQqgBfqdFDQAgAhCxAQsgCUGQAWokAA8LQbz3wABBxQBB5PjAABDECQALQYj/wABBG0Go08AAENsKAAvKGQMRfwh9AX4jAEHQAGsiBCQAIABB1ABqKAIAIQYgACgCTCELIABBIGpBADYCACAEQQE6AA8CQAJAAkACQAJAIAYEQCAGQQJ0IgJBBBCUCyIMDQEMBQsgBEEANgIYIARCBDcDECAEQQA2AiggBEIENwMgQQQhDEEEIQkMAQsgBEEANgIYIAQgDDYCECAEIAY2AhQgBq1CGH4iGkIgiKciAg0BIBqnIgNBAEgNASACRUECdCECIAMEfyADIAIQlAsFIAILIgFFDQIgBCAGNgIkIAQgATYCIAJAIAZBDGwiAkENSQ0AIAZBAWsiCkEDcSEDIAZBAmtBA08EQCAKQXxxIQUDQCABQv////v3//+//wA3AgAgAUHYAGpC////+////79/NwIAIAFB0ABqQv////v3//+/fzcCACABQcgAakL////79///v/8ANwIAIAFBQGtC////+////79/NwIAIAFBOGpC////+/f//79/NwIAIAFBMGpC////+/f//7//ADcCACABQShqQv////v///+/fzcCACABQSBqQv////v3//+/fzcCACABQRhqQv////v3//+//wA3AgAgAUEQakL////7////v383AgAgAUEIakL////79///v383AgAgAUHgAGohASAFQQRrIgUNAAsLIANFDQADQCABQv////v3//+//wA3AgAgAUEQakL////7////v383AgAgAUEIakL////79///v383AgAgAUEYaiEBIANBAWsiAw0ACwsgAUL////79///v383AgggAUL////79///v/8ANwIAIAFBEGpC////+////79/NwIAIAQgBjYCKCAGQQBIDQEgAkEEEJQLIglFDQMgCSEBAkAgAkENSQ0AIAZBAWsiAkEDcSEDIAZBAmtBA08EQCACQXxxIQUDQCABQX82AgAgAUEsakF/NgIAIAFBKGpBADoAACABQSBqQn83AgAgAUEcakEAOgAAIAFBFGpCfzcCACABQRBqQQA6AAAgAUEIakJ/NwIAIAFBBGpBADoAACABQTBqIQEgBUEEayIFDQALCyADRQ0AA0AgAUF/NgIAIAFBCGpBfzYCACABQQRqQQA6AAAgAUEMaiEBIANBAWsiAw0ACwsgAUF/NgIIIAFBADoABCABQX82AgALAkAgAEE4aiICKAIAIgFFDQAgAa1CDH6nRQ0AIABBNGooAgAQsQELIAAgBjYCPCAAIAk2AjQgAiAGNgIAAkACQAJAIAYEfyAGQQFrQf////8DcSEOIABBOGohDyAAQTRqIRBBACEDA0ACQAJAAkAgACgCSCICIAsoAgAiAUsEQCALKAIEIgcgAk8NASALKAIIIgUgAk8NAiADQQFqIQogACgCQCICIAFBDGxqIgEqAgQhEyACIAdBDGxqIgcqAgQhFSACIAVBDGxqIgIqAgAhFiAHKgIIIhQgASoCCCIXXiEFIAIqAggiEiASIBQgFCAXIAUbIBcgF1wbIhggEiAYXhsgGCAYXBshGCAXIBcgFCAFGyAUIBRcGyIUIBQgEiASIBReGyASIBJcGyEXIAIqAgQiEiASIBUgFSATIBMgFV0iAhsgEyATXBsiFCASIBReGyAUIBRcGyEUIBMgEyAVIAIbIBUgFVwbIhMgEyASIBIgE14bIBIgElwbIRkgByoCACITIAEqAgAiFV4hAiAWIBYgEyATIBUgAhsgFSAVXBsiEiASIBZdGyASIBJcGyESIBUgFSATIAIbIBMgE1wbIhMgEyAWIBMgFl0bIBYgFlwbIRYgAyAGSQ0DIA8oAgAgBiICayAKIAJrIgdJBEAgECAGIAcQ8gUgACgCNCEJIAAoAjwhAgsgCSACQQxsaiEBIAdBAk8EQCADIAZrIgVBA3EgAyAGQX9zakEDTwRAIAVBfHEhBQNAIAFBfzYCACABQSxqQX82AgAgAUEoakEAOgAAIAFBIGpCfzcCACABQRxqQQA6AAAgAUEUakJ/NwIAIAFBEGpBADoAACABQQhqQn83AgAgAUEEakEAOgAAIAFBMGohASAFQQRrIgUNAAsLBEAgDSAGa0EDcSEFA0AgAUF/NgIAIAFBCGpBfzYCACABQQRqQQA6AAAgAUEMaiEBIAVBAWsiBQ0ACwsgAiAHakEBayECCyAHBEAgAUF/NgIIIAFBADoABCABQX82AgAgAkEBaiECCyAAIAIiBjYCPCAEAn8gCiAEKAIoIgcgA0sNABogCiAHIgJrIQggCCAEKAIkIAJrSwRAIARBIGogByAIEPgFIAQoAighAgsgBCgCICACQRhsaiEBIAhBAk8EQCADIAdrIgVBA3EgAyAHQX9zakEDTwRAIAVBfHEhBQNAIAFC////+/f//7//ADcCACABQdgAakL////7////v383AgAgAUHQAGpC////+/f//79/NwIAIAFByABqQv////v3//+//wA3AgAgAUFAa0L////7////v383AgAgAUE4akL////79///v383AgAgAUEwakL////79///v/8ANwIAIAFBKGpC////+////79/NwIAIAFBIGpC////+/f//79/NwIAIAFBGGpC////+/f//7//ADcCACABQRBqQv////v///+/fzcCACABQQhqQv////v3//+/fzcCACABQeAAaiEBIAVBBGsiBQ0ACwsEQCANIAdrQQNxIQUDQCABQv////v3//+//wA3AgAgAUEQakL////7////v383AgAgAUEIakL////79///v383AgAgAUEYaiEBIAVBAWsiBQ0ACwsgAiAIakEBayECCyACIAhFDQAaIAFC////+/f//79/NwIIIAFC////+/f//7//ADcCACABQRBqQv////v///+/fzcCACACQQFqCzYCKAwDCyABIAJBvOXCABDMCAALIAcgAkHM5cIAEMwIAAsgBSACQdzlwgAQzAgACyADIAZPDQIgCSADQQxsaiADNgIIIAQoAigiAiADTQ0DIAQoAiAgA0EYbGoiAiASOAIMIAIgFzgCCCACIBk4AgQgAiAWOAIAIAJBFGogGDgCACACQRBqIBQ4AgAgC0EMaiELIAQoAhgiASAEKAIURgRAIARBEGogARCUBiAEKAIQIQwgBCgCGCEBCyAMIAFBAnRqIAM2AgAgBCABQQFqNgIYIA1BAWohDSADIA5HIAohAw0ACyAAKAIgBUEACyEDIABBGGohASAAQRxqKAIAIANGBEAgASADEJcGIAAoAiAhAwsgACgCGCADQQd0aiICQQE2AmAgAkL////7////v383AzAgAkL////79///v/8ANwMgIAJC////+/f//7//ADcDECACQv////v3//+//wA3AwggAkL////79///v/8ANwMAIAJBADsBeCACQdgAakL////7////v383AwAgAkHQAGpC////+////79/NwMAIAJByABqQv////v///+/fzcDACACQUBrQv////v///+/fzcDACACQThqQv////v///+/fzcDACACQShqQv////v3//+//wA3AwAgAkEYakL////79///v/8ANwMAIAJB7ABqQn83AgAgAkHkAGpCfzcCACACQfQAakEAOgAAIAAgA0EBajYCICAEQTBqIgIgACAEQQ9qIAQoAhAiAyAEKAIYIARBIGpBAEEAEDwgBEE4aioCACEWIARBPGoqAgAhEyACQRBqKgIAIRUgAkEUaioCACESIAQqAjQhFCAAQRRqIAJBGGoqAgAiFzgCACAAQRBqIBI4AgAgACAVOAIMIAAgEzgCCCAAIBY4AgQgACAUOAIAIAAoAiBFDQIgASgCACIAIBU4AjAgACATOAIgIAAgFjgCECAAQf////sHNgIMIABC////+/f//7//ADcCBCAAIBQ4AgAgAEHcAGpB////ezYCACAAQdQAakL////7////v383AgAgAEHQAGogFzgCACAAQcwAakH///97NgIAIABBxABqQv////v///+/fzcCACAAQUBrIBI4AgAgAEE8akH///97NgIAIABBNGpC////+////79/NwIAIABBLGpB////+wc2AgAgAEEkakL////79///v/8ANwIAIABBHGpB////+wc2AgAgAEEUakL////79///v/8ANwIAAkAgBCgCJCIARQ0AIACtQhh+p0UNACAEKAIgELEBCwJAIAQoAhQiAEUNACAAQQJ0RQ0AIAMQsQELIARB0ABqJAAPCyADIAZB+IbCABDMCAALIAMgAkGIh8IAEMwIAAtBAEEAQeiGwgAQzAgACxCBCgALIAMgAkHs6sMAKAIAIgBBmAcgABsRAAAACyACQQRB7OrDACgCACIAQZgHIAAbEQAAAAvdFwIRfwd+IwBBMGsiAiQAIAJBCDYCBCACIAE2AgAgAkEgaiACELkDAkACQAJAAn8gAigCIEUEQCACKAIkIg0NAkEAQdCNwABBnITAABCcCAwBCyACKAIkCyEBIABBATYCACAAIAE2AgQMAQsgAkEoaikDACEWAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCACKAIEIgEEQCACIAFBAWs2AgQgAigCACIDKAIEIgFBB00EQCACQoHKADcDICACQSBqELQKIQEMDgsgAyABQQhrIgY2AgQgAyADKAIAIgFBCGo2AgAgAkEIaiABKQAAEPsFIAIoAggEQCACKAIMIQEMDgsCQCACKAIMIgRBgCAgBEGAIEkbIgVFBEBBBCEKDAELIAVBA3QiAUEEEJQLIgpFDRELQQAhASACQQA2AiggAiAFNgIkIAIgCjYCICAEBEADQAJAAn8gBkEDTQRAIAJCgcoANwMIIAJBCGoQtAoMAQsgAyAGQQRrIgY2AgQgAyADKAIAIgVBBGo2AgAgBkEDSw0BIAJCgcoANwMIIAJBCGoQtAoLIQEgAigCJCIGRQ0QIAZBA3RFDRAgAigCIBCxAQwQCyAEQQFrIQQgBSgAACEJIAMgBkEEayIGNgIEIAMgBUEIajYCACAFKAAEIQUgAigCJCABRgRAIAJBIGogARCFBiACKAIgIQogAigCKCEBCyAKIAFBA3RqIgcgBTYCBCAHIAk2AgAgAiABQQFqIgE2AiggBA0A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lCEgICEgGpQhGkMAAAAAIR1DAAAAACEeIAoEfSAKQbwBaioCACEdIAoqArgBIScgCioCwAEFQwAAAAALIBuUISEgHSAblCEdICcgG5QhGyAckyIcIByUICUgIpMiHCAclCAmICOTIhwgHJSSkkMAAAAAkhCIASAfIB+UICAgIJQgGiAalJKSQwAAAACSEIgBIAkEfSAJQZwCaioCAAVDAAAAAAuUkiAbIBuUIB0gHZSSICEgIZSSQwAAAACSEIgBIAoEQCAKQZwCaioCACEeC0MAAAAAQwAAAAAgESARQwAAAABdGyARIBFcGyAHQRBqIhQoAgAgB0EUaigCACITKAIIQQdqQXhxaiATKAKcARELACAIQRBqIhgoAgAgCEEUaigCACITKAIIQQdqQXhxaiATKAKcARELAJKSIREgHpSSIRpBASEVIActAJgBIAgtAJgBckUEQCAIQYABaigCACAHQfwAaigCAHFFIAhB/ABqKAIAIAdBgAFqKAIAcUVyIRULIBAgD5MgGpQgEV0NBiASQRhqIhNCADcCECATQoCAgICAgIDAPzcCCCATQgA3AgAgE0EYakIANwIAIBNBIGpCADcCACATQShqQgA3AgAgE0EwakIANwIAIBNBOGpCADcCACAJRQ0BIAktAKACDQIgEkHwAWogCUHEAGooAgA2AgAgEkHoAWogCUE8aikCADcDACASQeABaiAJQTRqKQIANwMAIBIgCUEsaikCADcD2AEgEkHQAmogEkHYAWoQwggMAwsgAEECNgIMDAYLIBJB2ABqIglBOGogEkEYaiITQThqKQMANwMAIAlBMGogE0EwaikDADcDACAJQShqIBNBKGopAwA3AwAgCUEgaiATQSBqKQMANwMAIAlBGGogE0EYaikDADcDACAJQRBqIBNBEGopAwA3AwAgCUEIaiATQQhqKQMANwMAIBIgEikDGDcDWAwCCyASQdgBaiITQRhqIAlBKGooAgA2AgAgEkHoAWogCUEgaikCADcDACATQQhqIAlBGGopAgA3AwAgEiAJKQIQNwPYASASQaADaiIWQQhqIAlB0ABqKAIANgIAIBIgCSkCSDcDoAMgEkGYAmoiF0EIaiAJQbQBaigCADYCACASIAkpAqwBNwOYAiASQZgBaiIZQQhqIAlBwAFqKAIANgIAIBIgCSkCuAE3A5gBIBJB0AJqIBMgFiAXIBkQ6AcLIBJB2ABqIglBOGogEkHQAmoiE0E4aikDADcDACAJQTBqIBNBMGopAwA3AwAgCUEoaiATQShqKQMANwMAIAlBIGogE0EgaikDADcDACAJQRhqIBNBGGopAwA3AwAgCUEQaiATQRBqKQMANwMAIAlBCGogE0EIaikDADcDACASIBIpA9ACNwNYCwJAAkACQCAKBEAgCi0AoAINASASQfABaiAKQcQAaigCADYCACASQegBaiAKQTxqKQIANwMAIBJB4AFqIApBNGopAgA3AwAgEiAKQSxqKQIANwPYASASQdACaiASQdgBahDCCAwCCyASQZgBaiIJQThqIBJBGGoiCkE4aikDADcDACAJQTBqIApBMGopAwA3AwAgCUEoaiAKQShqKQMANwMAIAlBIGogCkEgaikDADcDACAJQRhqIApBGGopAwA3AwAgCUEQaiAKQRBqKQMANwMAIAlBCGogCkEIaikDADcDACASIBIpAxg3A5gBDAILIBJB2AFqIglBGGogCkEoaigCADYCACASQegBaiAKQSBqKQIANwMAIAlBCGogCkEYaikCADcDACASIAopAhA3A9gBIBJBkANqIhNBCGogCkHQAGooAgA2AgAgEiAKKQJINwOQAyASQaADaiIWQQhqIApBtAFqKAIANgIAIBIgCikCrAE3A6ADIBJBmAJqIhdBCGogCkHAAWooAgA2AgAgEiAKKQK4ATcDmAIgEkHQAmogCSATIBYgFxDoBwsgEkGYAWoiCUE4aiASQdACaiIKQThqKQMANwMAIAlBMGogCkEwaikDADcDACAJQShqIApBKGopAwA3AwAgCUEgaiAKQSBqKQMANwMAIAlBGGogCkEYaikDADcDACAJQRBqIApBEGopAwA3AwAgCUEIaiAKQQhqKQMANwMAIBIgEikD0AI3A5gBCyALQQFGBEAgEkHYAGogDBCvCAsgDUEBRgRAIBJBmAFqIA4QrwgLAkAgBygCJEUEQCASQegCaiAHQeQAaigCADYCACASQeACaiAHQdwAaikCADcDACASQdgCaiAHQdQAaikCADcDACASIAcpAkw3A9ACDAELIBJB2AJqIAdBOGopAwA3AwAgEkHgAmogB0FAaykDADcDACASQegCaiAHQcgAaigCADYCACASIAdBMGopAwA3A9ACCyAS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IgBFDQAgAEEDdEUNACAGKAIAELEBCyAZDQELQbiNwgBBJkGkmcIAEOkLAAsgBkGwAmokACAmC9EUAwh/Bn0BfiMAQeAAayIGJAAgBkE4aiIEQQhqIAFBCGooAgA2AgAgBiABKQIANwM4IAZBEGogAEEEaiAEEPYDAkACQAJAAkACQAJAAkACQAJAAkACQCAGKAIQRQRAIAYoAhQiAUEYaigCACICIAZBGGooAgBBBGsoAgAiAE0NASABKAIQIABBFGxqKAIQIQQMCQsgBkEwaiAGQSRqKAIANgIAIAYgBkEcaikCADcDKCAAKgIAIgwgASgCCLKUIQ0gDCANkiEOIAwgDCABKAIEspQiD5IhECAMIAwgASgCALKUIgySIREgBkEYaigCACEKIAYoAhQhByADKAIIIgFFBEAgBkEANgJQDAMLIAMgAUEBayIBNgIIIAYgAygCACABQQJ0aigCACIBNgJQIAFFDQJBACEEIAFBEGpBADYCACABQRxqQQA2AgAgAUEIaiEIIAFBDGoiAygCACIFRQRAIAhBABCFBiADKAIAIQUgASgCECEECyABIARBAWoiAzYCECAEQQN0IAEoAggiBGpC////ezcCACADIAVGBEAgCCAFEIUGIAEoAgghBCABKAIQIQMLIAQgA0EDdGpC////+/f/////ADcCACABIANBAWo2AhBBACEEIAFBMGpBADYCACABIAw4AgAgASAROAIEIAFBPGpBADYCACABQShqIQggAUEsaiIDKAIAIgVFBEAgCEEAEIUGIAMoAgAhBSABKAIwIQQLIAEgBEEBaiIDNgIwIARBA3QgASgCKCIEakL///97NwIAIAMgBUYEQCAIIAUQhQYgASgCKCEEIAEoAjAhAwsgBCADQQN0akL////79/////8ANwIAIAEgA0EBajYCMEEAIQQgAUHQAGpBADYCACABIA84AiAgAUEkaiAQOAIAIAFB3ABqQQA2AgAgAUHIAGohCCABQcwAaiIDKAIAIgVFBEAgCEEAEIUGIAMoAgAhBSABKAJQIQQLIAEgBEEBaiIDNgJQIARBA3QgASgCSCIEakL///97NwIAIAMgBUYEQCAIIAUQhQYgASgCSCEEIAEoAlAhAwsgBCADQQN0akL////79/////8ANwIAIAEgA0EBajYCUCABIA04AkAgAUHEAGogDjgCACABQQA6AJABAkAgAUHkAGooAgAiA0UNACADQQJ0RQ0AIAFB4ABqKAIAELEBCyABQgQ3AmAgAUEAOgCRASABQegAakIANwIAIAFBhAFqQoCAgIBwNwIAIAEoAowBDQEgAUH4AGooAgBFDQNBwOLBAEEqQeziwQAQxAkACyAAIAJB9PjAABDMCAALIAZBADYCOCABQYwBakHs1sAAIAZBOGpBsOLBABDSCAALAkAgDCARXwRAQRBBBBCUCyIDDQEMCAsMCAsgA0L////79/////8ANwIIIANC////ezcCAAJAIA8gEF8EQEEQQQQQlAsiBA0BDAgLDAgLIARC////+/f/////ADcCCCAEQv///3s3AgACQCANIA5fBEBBEEEEEJQLIgUNAQwICwwICyAFQv////v3/////wA3AgggBUL///97NwIAQZQBQQQQlAsiAUUNASABQQA7AZABIAFBADYCjAEgAUKAgICAcDcChAEgAUIENwJ8IAFCADcCdCABQoCAgIDAADcCbCABQgA3AmQgAUKAgICAwAA3AlwgAUIENwJUIAFCgoCAgCA3AkwgASAFNgJIIAEgDjgCRCABIA04AkAgAUEANgI8IAFCBDcCNCABQoKAgIAgNwIsIAEgBDYCKCABIBA4AiQgASAPOAIgIAFBADYCHCABQgQ3AhQgAUKCgICAIDcCDCABIAM2AgggASAROAIEIAEgDDgCACAGKAJQRQ0AIAZB0ABqEI4ECyAALQA4IQMgAC0AOSEFAkAgAigCDCIEQX9GBEAgAigCCCIEIAJBBGooAgBGBEAgAiAEEOsFIAIoAgghBAsgAiAEQQFqNgIIIAIoAgAgBEEsbGoiAiADOgApIAIgBToAKCACQX82AiQgAiAMOAIMIAIgATYCBCACQQE2AgAMAQsgAigCCCIIIARNDQIgAiACKAIAIARBLGxqIgIoAiQ2AgwgAkEkagJAIAIoAgBFDQAgAigCBEUNACACQQRqEI4ECyACQQE2AgBBfzYCACACIAw4AgwgAiABNgIEIAIgAzoAKSACIAU6ACgLIAJBIGogDjgCACACQRxqIBA4AgAgAkEYaiAROAIAIAJBFGogDTgCACACQRBqIA84AgAgAEE0aigCACIBIABBMGooAgBGBEAgAEEsaiABEIYGIAAoAjQhAQsgACABQQFqNgI0IAAoAiwg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AwA3AwAgBSAFKQMoNwMQIANBAkYNACAAQQRqIAM2AgAgAEEIaiAFKQMQNwIAIABBEGogASkDADcCACAAQRhqIAIoAgA2AgAgAEEAOgAADAgLIABBAToAASAAQQE6AAAMBwsgBkEBaiEGCyAEKAIEIQcgBCgCACEBDAALAAsgAEEBOwEADAMLIAVBKGoiAyABKAIEQQhqEIIDIABBGGogA0EYaigCADYCACAAQRBqIANBEGopAwA3AgAgAEEIaiADQQhqKQMANwIAIAAgBSkDKDcCAAwCC0EBIQICQCABKAIEIgEtABgNABCACkF/IAUpAwAiCyABKQMIIgxSIAsgDFQbIgNBfyAFKAIIIgQgAUEQaigCACIGRyAEIAZJGyADG0F/Rg0AIAEtABghAyABQQE6ABggAw0AIAFBEGooAgAhAyABKQMIIQtBACECCyAAQQA6AAEgACACOgAAIABBAmogBSgBKDYBACAAQRBqIAM2AgAgAEEIaiALNwIAIABBBmogBUEsai8BADsBAAwBCyABKAIEIgItAAghASACQQE6AAggBSABQQFxIgE6ABACQAJAAkACQCABRQRAQfzqwwAoAgBB/////wdxBEACf0Hk7sMALQAABEBB6O7DACgCAEUMAQtB5O7DAEEBOgAAQejuwwBBADYCAEEBC0UhAwsgAkEIaiEEIAJBCWotAAANASAFQRBqIAJBDGoQmQQgBSgCGARAIAVBMGogBUEYaigCADYCACAFIAUpAxA3AyggBSgCLCEBAkAgAw0AQfzqwwAoAgBB/////wdxRQ0AAn9B5O7DAC0AAARAQejuwwAoAgBFDAELQeTuwwBBAToAAEHo7sMAQQA2AgBBAQsNACACQQE6AAkLIARBADoAACAAAn8gAQRAAkAgAS0AGEUEQCABLQAZRQRAQQAhAgNAIAIgAkEBaiACQQpLIAJBB09xGyECIAEtABlFDQALCyABKAIAIQIgAUECNgIAIAJBAkYNByABKAIEIQMgASgCCCEGIAEoAgwhBCABKAIQIQcgASgCFCEIIAEQsQEMAQsgASgCACECIAFBAjYCACACQQJGDQcgAUEBOgAZIAEoAgQhAyABKAIIIQYgASgCDCEEIAEoAhAhByABKAIUIQgLIABBGGogCDYCACAAQRRqIAc2AgAgAEEQaiAENgIAIABBDGogBjYCACAAQQhqIAM2AgAgAEEEaiACNgIAQQAMAQsgAEEBOgABQQELOgAAIAUoAjAiASgCACEAIAEgAEEBazYCACAAQQFHDQYgBUEwahCICQwGCyAAQQE6AAAgACACQTxqLQAAOgABIAMNBEH86sMAKAIAQf////8HcUUNBAJ/QeTuwwAtAAAEQEHo7sMAKAIARQwBC0Hk7sMAQQE6AABB6O7DAEEANgIAQQELDQQgAkEBOgAJDAQLIAVBPGpBADYCACAFQThqQciBwAA2AgAgBUIBNwIsIAVBgJnAADYCKCAFQRBqIAVBKGoQzwgACyAFIAM6ACwgBSAENgIoQdicwABBKyAFQShqQYSdwABB/IfAABCkCAALQZucwABBK0Hsh8AAEMQJAAtBm5zAAEErQdyHwAAQxAkACyAEQQA6AAALIAVBQGskAAvxEQEVfyMAQUBqIgMkAAJAIABBGGooAgAiEiABQf8BcSITSwRAAkACQAJAAkACQCAAKAIQIhQgE0EGdGoiFS0APEUNACAVQT1qLQAAIgggEk8NBCAUIAhBBnRqIghBHGooAgAiDkUNACAIQRRqKAIAIg8gDkEUbGohFiADQQhqIghBCGohDiAIQQRqIQggACgCACELIAAoAgghCQNAAkACQAJAAkACQAJAAkACQCAJIA8oAhAiAksEQCALIAJBLGxqIgIoAgBBAUcNASACKAIEIQYgAkEANgIEIAZFDQFBACECIANBEGpBADYCACADQgA3AwggBkHsAGohDUEAIQUgBkEQaiIQKAIAIgdFDQIgBigCCEEEaiECQQAhBANAAkAgAigCACIMQf////8HcSIFIAlPDQAgCyAFQSxsaigCAEEBRw0AIAMgBTYCFCANKAIAIAVNDRIgBUEFdiICIAZB6ABqKAIAIgpPDQYgBigCYCACQQJ0aiICIAIoAgBBfiAMd3E2AgBBASEFIAMgAygCCEEBajYCCCAEQQFqIQIMBAsgAkEIaiECIAcgBEEBaiIERw0AC0EAIQUMAwsgAiAJQbTcwQAQzAgAC0HE3MEAQRlB4NzBABDpCwALIAIgB0YNACAHIAJrIQogBigCCCACQQN0aiECA0ACQAJAIAJBBGooAgAiEUH/////B3EiBCAJTw0AIAsgBEEsbGooAgBBAUcNACADIAQ2AhQgDSgCACAETQ0QIARBBXYiBCAGQegAaigCACIMTw0FIAYoAmAgBEECdGoiBCAEKAIAQX4gEXdxNgIAIAMgAygCCEEBajYCCCAFQQFqIQUMAQsgAiAFQQN0ayACKQIANwIACyACQQhqIQIgCkEBayIKDQALCyAQIAcgBWs2AgACQAJ/IAZBMGoiECgCACIHRQRAQQAhBUEADAELIAYoAihBBGohAkEAIQQCQANAIAkgAigCACIMQf////8HcSIFSwRAIAsgBUEsbGooAgBBAUYNAgsgAkEIaiECIAcgBEEBaiIERw0AC0EAIQUMAgsgAyAFNgIUIA0oAgAgBU0NDiAFQQV2IgIgBkHoAGooAgAiCk8NAiAGKAJgIAJBAnRqIgIgAigCAEF+IAx3cTYCAEEBIQUgAyADKAIMQQFqNgIMIARBAWoLIgIgB0YNACAHIAJrIQogBigCKCACQQN0aiECA0ACQAJAIAkgAkEEaigCACIRQf////8HcSIESwRAIAsgBEEsbGooAgBBAUYNAQsgAiAFQQN0ayACKQIANwIADAELIAMgBDYCFCANKAIAIARNDQ8gBEEFdiIEIAZB6ABqKAIAIgxPDQQgBigCYCAEQQJ0aiIEIAQoAgBBfiARd3E2AgAgAyADKAIMQQFqNgIMIAVBAWohBQsgAkEIaiECIApBAWsiCg0ACwsgECAHIAVrNgIAAkACfyAGQdAAaiIQKAIAIgdFBEBBACEFQQAMAQsgBigCSEEEaiECQQAhBAJAA0AgCSACKAIAIgxB/////wdxIgVLBEAgCyAFQSxsaigCAEEBRg0CCyACQQhqIQIgByAEQQFqIgRHDQALQQAhBQwCCyADIAU2AhQgDSgCACAFTQ0OIAVBBXYiAiAGQegAaigCACIKTw0CIAYoAmAgAkECdGoiAiACKAIAQX4gDHdxNgIAQQEhBSADIAMoAhBBAWo2AhAgBEEBagsiAiAHRg0AIAcgAmshCiAGKAJIIAJBA3RqIQIDQAJAAkAgCSACQQRqKAIAIhFB/////wdxIgRLBEAgCyAEQSxsaigCAEEBRg0BCyACIAVBA3RrIAIpAgA3AgAMAQsgAyAENgIUIA0oAgAgBE0NDyAEQQV2IgQgBkHoAGooAgAiDE8NBCAGKAJgIARBAnRqIgQgBCgCAEF+IBF3cTYCACADIAMoAhBBAWo2AhAgBUEBaiEFCyACQQhqIQIgCkEBayIKDQALCyAQIAcgBWs2AgACQCADKAIIIgIgAygCDEYEQCACIAMoAhBGDQEgDiEICyADQQA2AiggA0EIaiAIIANBKGpB/OLBABDSCAALIAMgAkEBcSIENgIYIAQNAiAGIAYoAowBIAJBAXZrNgKMASAGQYQBaiICKAIAIQQgAkEANgIAIARFDQQgBkH8AGooAgAhAiAEQQJ0IQQCQANAIAIoAgAiBSAJTw0FIAsgBUEsbGoiBSgCAEEBRw0BIAUoAgQiBQRAIAJBBGohAiAFQX82AogBIARBBGsiBEUNBwwBCwtB8NbAAEErQfzgwQAQxAkACyADQTxqQQA2AgAgA0HUxsAANgI4IANCATcCLCADQcTfwQA2AiggA0EoakHs4MEAEIIKAAsgAiAKQcTcwAAQzAgACyAEIAxBxNzAABDMCAALIANBADYCKCADQRhqQezWwAAgA0EoakGM48EAENIIAAsgBSAJQfDcwQAQzAgACyAPKAIQIgIgCU8NAiAPQRRqIQ8CQCALIAJBLGxqIgIoAgBFDQAgAigCBEUNACACQQRqEI4ECyACQQE2AgAgAiAGNgIEIA8gFkcNAAsLAkAgFS0AOkUNACABQf8BcSAUIBNBBnRqQTtqLQAAIgFGDQIgASASTw0DIBQgAUEGdGoiAUEcaigCACIIRQ0AIABBOGohDiABQRRqKAIAQRBqIQEgCEEUbCECA0AgFSABKAIAIAAgDhCZASABQRRqIQEgAkEUayICDQALCyADQUBrJAAPCyACIAlBgN3BABDMCAALIANBPGpBADYCACADQdTGwAA2AjggA0IBNwIsIANB6O/BADYCKCADQShqQdDwwQAQggoACyADQTxqQQA2AgAgA0HUxsAANgI4IANCATcCLCADQeDwwQA2AiggA0EoakHo8MEAEIIKAAsgCCASQdzTwQAQzAgACyATIBJBzNPBABDMCAALIANBJGpBgAE2AgAgA0E8akECNgIAIANCAjcCLCADQZTcwAA2AiggAyANNgIgIANBgAE2AhwgAyADQRhqNgI4IAMgA0EUajYCGCADQShqQaTcwAAQggoAC5ESAgh/A30jAEEQayIHJAAgByAAKAIAIgU2AggCQCAHQQhqIAEQvwQiAA0AIAFBEGogBRCHBSIADQAgByAFNgIMIAdBDGogAUEcahC/BCIADQAg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AnQhAiALBH8gCyACEJQLBSACCyIJRQ0LCyAJIAwgA0ECdBD/CxogASgCsAEhCiABQbgBaigCACIMBEAgDEH/////A3EiBiAMRw0HIAxBAnQiC0EASA0HIAYgDEZBAnQhAiALBH8gCyACEJQLBSACCyIVRQ0LCyAVIAogDEECdBD/CxogASgCvAEhFgJAIAFBxAFqKAIAIgZFBEBBBCELDAELIAZB/////wNxIgIgBkcNByAGQQJ0Ig5BAEgNByACIAZGQQJ0IQogDgR/IA4gChCUCwUgCgsiC0UNCAsgCyAWIAZBAnQQ/wsaCyAEQSBqIgJBCGoiDiAEQeAAaiIKQQhqKQMANwMAIAJBEGoiFiAKQRBqKQMANwMAIAJBGGoiGSAKQRhqKQMANwMAIAJBIGoiGiAKQSBqKQMANwMAIAJBKGoiGyAKQShqKQMANwMAIAJBMGoiHCAKQTBqKQMANwMAIAJBOGoiHSAKQThqKQMANwMAIARBCGoiCiAEQaABaiICQQhqKQMANwMAIARBEGoiHiACQRBqKQMANwMAIARBGGoiHyACQRhqKAIANgIAIAQgBCkDYDcDICAEIAQpA6ABNwMAIAEtAMgBIQJBzAFBBBCUCyIBRQ0HIAEgBCkDIDcCACABIBE2AmAgASARNgJcIAEgEjYCWCABIBA2AlQgASAQNgJQIAEgGDYCTCABIA82AkggASAPNgJEIAEgFzYCQCABQThqIB0pAwA3AgAgAUEwaiAcKQMANwIAIAFBKGogGykDADcCACABQSBqIBopAwA3AgAgAUEYaiAZKQMANwIAIAFBEGogFikDADcCACABQQhqIA4pAwA3AgAgASACOgDIASABIAY2AsQBIAEgBjYCwAEgASALNgK8ASABIAw2ArgBIAEgDDYCtAEgASAVNgKwASABIAM2AqwBIAEgAzYCqAEgASAJNgKkASABIAU2AqABIAEgBTYCnAEgASAUNgKYASABIAg2ApQBIAEgCDYCkAEgASATNgKMASABIAc2AogBIAEgBzYChAEgASANNgKAASABQfwAaiAfKAIANgIAIAFB9ABqIB4pAwA3AgAgAUHsAGogCikDADcCACABIAQpAwA3AmQgAEGcyMIANgIEIAAgATYCACAEQdABaiQADwsgByAGQezqwwAoAgAiAEGYByAAGxEAAAALIAggBUHs6sMAKAIAIgBBmAcgABsRAAAACyAIIANB7OrDACgCACIAQZgHIAAbEQAAAAsgCSADQezqwwAoAgAiAEGYByAAGxEAAAALIAkgBkHs6sMAKAIAIgBBmAcgABsRAAAACxCBCgALIA4gCkHs6sMAKAIAIgBBmAcgABsRAAAAC0HMAUEEQezqwwAoAgAiAEGYByAAGxEAAAALIAUgA0Hs6sMAKAIAIgBBmAcgABsRAAAACyALIAJB7OrDACgCACIAQZgHIAAbEQAAAAvnEQIRfwd9IwBBwARrIgMkACADQYABaiIEQQxqQgA3AgAgA0IANwKEASADQQQ2AoABIANB2ANqIgUgBBBdIANBgARqIgZBDGpCADcCACADQgA3AoQEIANBBDYCgAQgBCAGEF0gAEEENgJIIABBQGsiCkIANwIAIABBOGpCgICAgMAANwIAIABBMGpCADcCACAAQShqQoCAgIDAADcCACAAQSBqQgA3AgAgAEEYaiINQoCAgIDAADcCACAAQRBqQgA3AgAgAEKAgICAwAA3AgggAEIENwIAIABB1ABqQgA3AgAgAEHMAGpCADcCACAAIAMpA9gDNwJcIABB5ABqIAVBCGoiCykDADcCACAAQewAaiAFQRBqKQMANwIAIABB9ABqIAVBGGopAwA3AgAgAEH8AGogBUEgaikDADcCACAAQYgBakIANwIAIABBBDYChAEgAEGQAWpCADcCACAAQYgCakEANgIAIABCADcCwAEgAEIENwLIASAAQdABakKAgICAwAA3AgAgAEHYAWpCADcCACAAQeABakKAgICAwAA3AgAgAEHoAWpCADcCACAAQgQ3AvABIABB+AFqQoCAgIDAADcCACAAQYACakIANwIAIAAgAykDgAE3ApgBIABBoAFqIARBCGoiCCkDADcCACAAQagBaiAEQRBqKQMANwIAIABBsAFqIARBGGoiDikDADcCACAAQbgBaiAEQSBqIg8pAwA3AgAgAEEBOgCMAiAEQQtqQgA3AAAgBUELakIANwAAIAZBC2pCADcAACADQa0EaiIHQQtqQgA3AAAgA0GaBGoiCUELakIANwAAIANCADcAgwEgA0IANwDbAyADQgA3AIMEIANCADcAsAQgA0IANwCdBCADQegAaiIMQQ9qIhAgBEEPaigAADYAACAMQQhqIgwgCCkAADcDACADIAMpAIABNwNoIANB0ABqIghBCGoiESALKQAANwMAIAhBD2oiCyAFQQ9qKAAANgAAIAMgAykA2AM3A1AgA0E4aiIFQQ9qIgggBkEPaigAADYAACAFQQhqIgUgBkEIaikAADcDACADIAMpAIAENwM4IANBIGoiBkEPaiISIAdBD2ooAAA2AAAgBkEIaiIGIAdBCGopAAA3AwAgAyADKQCtBDcDICADQQhqIgdBD2oiEyAJQQ9qKAAANgAAIAdBCGoiByAJQQhqKQAANwMAIAMgAykAmgQ3AwggDkIANwMAIA9CADcDACADQfgBakH////7BzYCACADQfABakKAgICA8P//v383AwAgA0HoAWpC////+////7//ADcDACADQeABakL////7BzcDACADQdgBakKAgICA8P//v383AwAgA0HQAWpC////+////7//ADcDACADQcgBakL////7BzcDACAEQUBrQoCAgIDw//+/fzcDACAEQTBqQgA3AwAgBEEoakKAgID8AzcDACADQYwCakEANgIAIANBhAJqQgA3AgAgBEH8AGpCADcCACADQgA3A5ABIANCgICAgICAgMA/NwOIASADQgA3A4ABIANC////+////7//ADcDuAEgA0GYAmpBADoAACAEQZABakL////7BzcDACADQawCakL////7BzcCACADQbQCakEAOgAAIARB0AFqQQA6AAAgA0HIAmpC////+wc3AwAgA0GZAmogAykDaDcAACADQaECaiAMKQMANwAAIARBqAFqIBAoAAA2AAAgA0G1AmogAykDUDcAACADQb0CaiARKQMANwAAIANBxAJqIAsoAAA2AAAgA0HsAmpBADoAACADQeQCakL////7BzcCACAEQYgCakEAOgAAIARBgAJqQv////sHNwMAIARB4AFqIAgoAAA2AAAgA0HZAmogBSkDADcAACADQdECaiADKQM4NwAAIANB/AJqIBIoAAA2AAAgA0H1AmogBikDADcAACADQe0CaiADKQMgNwAAIANBmANqIBMoAAA2AAAgA0GRA2ogBykDADcAACADQYkDaiADKQMINwAAIANBpANqQQA6AAAgA0GcA2pC////+wc3AgAgA0EBOgCsAyADQQA2AqgDIANB0ANqQQA2AgAgA0HIA2pCADcDACADQcADakIANwMAIANBuANqQgA3AwAgA0IANwOwAyADQdQDakGAgID8AzYCACAAKAIIIQYgAEEMaiANKAIAIgdBBmoiBBD+ASAAQRxqIAQQ/gEgAEEsaiAEEP4BIABBxABqKAIAIgUgCigCAEYEQCAAQTxqIAVBARCRBiAAKAJEIQULIAAgBUEBajYCRCAAKAI8IAVBBHRqIgVCADcCCCAFQgQ3AgAgACAAKALAAUEGaiIJNgLAAQJAIAAoAiggBE8EQCAAKAIcIAdBAnRqIgRBFGpBzZmz7gM2AgAgBEEMakLNmbPu05mz5j03AgAgA0HYA2oiBCADQYABahC/ASADQfADaiIKKgIAIRQgBEEUaioCACEVIAMqAugDIRYgAyoC5AMhFyADKgLgAyEYIAMqAtwDIRkgAyoC2AMhGiAAKAIIIgUgACgCBEYEQCAAIAUQ6QUgACgCwAEhCSAAKAIIIQULIAAoAgAgBUHUA2xqIgQgATYCDCAEQQA2AgggBCAHNgIEIAQgBjYCACAEQRBqIAI2AgAgBEEUaiADQYABakHYAhD/CxogBEGEA2ogFDgCACAEQYADaiAVOAIAIARB/AJqIBY4AgAgBEH4AmogFzgCACAEQfQCaiAYOAIAIARB8AJqIBk4AgAgBCAaOALsAiAEQgA3AqQDIARBrANqQgA3AgAgBEG0A2pCADcCACAEQbwDakIANwIAIARBxANqQgA3AgAgBEHMA2pCADcCACAEIAMpA9gDNwKIAyAEQZADaiADQeADaikDADcCACAEQZgDaiADQegDaikDADcCACAEQaADaiAKKAIANgIAIAAgBUEBaiIBNgIIIABByAFqIAEgCRCGAiAAKAIIIgAgBk0NASADQcAEaiQADwtBmPrAAEEdQaD7wAAQ2woACyAGIABBqKDBABDMCAALhg8CBn8BfiMAQdAAayICJAACQCAABEAgACgCAA0BIABBADYCACACQShqIgFBEGogAEEQaikCADcDACABQQhqIABBCGopAgA3AwAgAUEYaiAAQRhqKQIANwMAIAFBIGogAEEgaikCADcDACAAKQIAIQcgAkEIaiACQTRqKQIANwMAIAJBEGoiAyABQRRqKQIANwMAIAJBGGogAkHEAGopAgA3AwAgAkEgaiACQcwAaigCADYCACACIAc3AyggAiACKQIsNwMAIAAQsQEgAhC+AQJAAkACQAJAAkAg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AEEBCw0AIAZBAToAAQsgBkEAOgAAIANB+ABqIgFBEGogB0EQaikDADcDACABQQhqIAdBCGopAwA3AwAgAyAHKQMANwN4AkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCACIAEQsgRBAWsOAwECAwALQbjLwABBKEG40MAAEMQJAAsgCygCACICLQAAIQEgAkEBOgAAIAMgAUEBcSIBOgB3IAENC0EAIQVB/OrDACgCAEH/////B3EEQAJ/QeTuwwAtAAAEQEHo7sMAKAIARQwBC0Hk7sMAQQE6AABB6O7DAEEANgIAQQELRSEFCyACLQABDQMgAigCBEEMayEEIAJBDGooAgAiB0EMbCEGIAdB/////wNxIQhBACEBA0AgASAIRg0GIAZBDGshBiABQQFqIQEgBEEMaiIEKAIAIApHDQALIAFBAWsiASAHTw0EIARBCGooAgAhASAEKQIAIQ4gBCAEQQxqIAYQgQwaIAIgB0EBazYCDCABRQ0FIAEgASgCACIEQQFrNgIAIAMgATYCgAEgAyAONwN4IARBAUYEQCADQYABahCICQsCQCAFDQBB/OrDACgCAEH/////B3FFDQACf0Hk7sMALQAABEBB6O7DACgCAEUMAQtB5O7DAEEBOgAAQejuwwBBADYCAEEBCw0AIAJBAToAAQsgAkEAOgAAIAMoAjggA0EANgI4RQ0GIAAgAykCPDcCBCAAQQA2AgAgAEEsaiADKQJkNwIAIABBJGogAykCXDcCACAAQRxqIAMpAlQ3AgAgAEEUaiADKQJMNwIAIABBDGogAykCRDcCAAwCCyALKAIAIgItAAAhASACQQE6AAAgAyABQQFxIgE6AHcgAQ0KQQAhBUH86sMAKAIAQf////8HcQRAAn9B5O7DAC0AAARAQejuwwAoAgBFDAELQeTuwwBBAToAAEHo7sMAQQA2AgBBAQtFIQULIAItAAENBiACKAIEQQxrIQQgAkEMaigCACIHQQxsIQYgB0H/////A3EhCEEAIQEDQCABIAhGDQkgBkEMayEGIAFBAWohASAEQQxqIgQoAgAgCkcNAAsgAUEBayIBIAdPDQcgBEEIaigCACEBIAQpAgAhDiAEIARBDGogBhCBDBogAiAHQQFrNgIMIAFFDQggASABKAIAIgRBAWs2AgAgAyABNgKAASADIA43A3ggBEEBRgRAIANBgAFqEIgJCwJAIAUNAEH86sMAKAIAQf////8HcUUNAAJ/QeTuwwAtAAAEQEHo7sMAKAIARQwBC0Hk7sMAQQE6AABB6O7DAEEANgIAQQELDQAgAkEBOgABCyACQQA6AAAgAygCOCADQQA2AjhFDQkgACADKQI8NwIEIABBATYCACAAQSxqIAMpAmQ3AgAgAEEkaiADKQJcNwIAIABBHGogAykCVDcCACAAQRRqIAMpAkw3AgAgAEEMaiADKQJENwIADAELIAMtAG1FBEBBACEBA0AgASABQQFqIAFBCksgAUEHT3EbIQEgAy0AbUUNAAsLIABBAjYCAAsgA0GQAWokAA8LIAMgBToAfCADIAI2AnhBrNfAAEErIANB+ABqQdjXwABBiNDAABCkCAALIAEgB0H4ysAAEMsIAAtB8NbAAEErQZjQwAAQxAkAC0Hw1sAAQStBqNDAABDECQALIAMgBToAfCADIAI2AnhBrNfAAEErIANB+ABqQdjXwABB2M/AABCkCAALIAEgB0H4ysAAEMsIAAtB8NbAAEErQejPwAAQxAkAC0Hw1sAAQStB+M/AABDECQALIANBjAFqQQA2AgAgA0GIAWpB1MbAADYCACADQgE3AnwgA0Hc08AANgJ4IANB9wBqIANB+ABqENAIAAu1DgELfyMAQfAAayIIJAACQAJAAkAgASAAKAIAIgkQhwUiBg0AIAFBDGogCRCHBSIGDQAgAUEgaigCACECIAEoAhghACAJKAIAIgNBCGoiBSgCACEEIANBBGooAgAgBGtBB00EQCADIARBCBDQBiAFKAIAIQQLIAUgBEEIajYCACADKAIAIARqIAKtNwAAIAIEQCAAIAJBB3RqIQcDQCAIIAApAwA3AwggCCAAQShqKQMANwMwIAggAEEgaikDADcDKCAIIABBGGopAwA3AyAgCCAAQRBqKQMANwMYIAggAEEIaikDADcDECAIIABB2ABqKQMANwNgIAggAEHQAGopAwA3A1ggCCAAQcgAaikDADcDUCAIIABBQGspAwA3A0ggCCAAQThqKQMANwNAIAggAEEwaikDADcDOCAIIAk2AmwgCEHsAGogCEEIahDbASIGDQIgCEHsAGogCEE4ahDbASIGDQIgAEHgAGooAgAhBiAJKAIAIgNBBGoiBSgCACADQQhqIgQoAgAiAmtBA00EQCADIAJBBBDQBiAEKAIAIQILIAMoAgAgAmogBjYAACAEIAJBBGoiAjYCACAAQeQAaigCACEGIAUoAgAgAmtBA00EQCADIAJBBBDQBiAEKAIAIQILIAMoAgAgAmogBjYAACAEIAJBBGoiAjYCACAAQegAaigCACEGIAUoAgAgAmtBA00EQCADIAJBBBDQBiAEKAIAIQILIAMoAgAgAmogBjYAACAEIAJBBGoiAjYCACAAQewAaigCACEGIAUoAgAgAmtBA00EQCADIAJBBBDQBiAEKAIAIQILIAQgAkEEajYCACADKAIAIAJqIAY2AAAgAEH0AGotAAAhBSAAQfAAaigCACEGIAkoAgAiAkEEaiIKKAIAIAJBCGoiAygCACIEa0EDTQRAIAIgBEEEENAGIAMoAgAhBAsgAigCACAEaiAGNgAAIAMgBEEEaiIENgIAIAQgCigCAEYEQCACIARBARDQBiADKAIAIQQLIAMgBEEBajYCACACKAIAIARqIAU6AAAgAEH4AGotAAAhBSAJKAIAIgJBCGoiBCgCACIDIAJBBGooAgBGBEAgAiADQQEQ0AYgBCgCACEDCyAEIANBAWo2AgAgAigCACADaiAFQQBHOgAAIABB+QBqLQAAIQUgCSgCACICQQhqIgQoAgAiAyACQQRqKAIARgRAIAIgA0EBENAGIAQoAgAhAwsgBCADQQFqNgIAIAIoAgAgA2ogBUEARzoAACAHIABBgAFqIgBHDQALCyABQTBqKAIAIgNBAWsgAUEoaigCACIHIAFBJGooAgAiCmtxIQYgAUEsaigCACEEIAkoAgAiBUEIaiIAKAIAIQIgBUEEaigCACACa0EHTQRAIAUgAkEIENAGIAAoAgAhAgsgACACQQhqIgA2AgAgBSgCACACaiAGrTcAAAJAAkAgByAKSQRAIAMgCkkNBCADIApHBEAgA0ECdCAKQQJ0IgJrIQYgAiAEaiECIAVBCGohCwNAIAIoAgAhDCACQQRqIQIgCyAFQQRqKAIAIABrQQNLBH8gAAUgBSAAQQQQ0AYgCygCAAsiA0EEaiIANgIAIAUoAgAgA2ogDDYAACAGQQRrIgYNAAsLIAcgCk0NASAHIAoQ/AsACyADIAdJDQQgByAKRg0BIAdBAnQgCkECdCICayEDIAIgBGohBCAFQQhqIQcDQCAEKAIAIQYgBEEEaiEEIAcgBUEEaigCACAAa0EDSwR/IAAFIAUgAEEEENAGIAcoAgALIgJBBGoiADYCACAFKAIAIAJqIAY2AAAgA0EEayIDDQALDAELIAdFDQAgB0ECdCEDIAVBCGohBwNAIAQoAgAhBiAEQQRqIQQgByAFQQRqKAIAIABrQQNLBH8gAAUgBSAAQQQQ0AYgBygCAAsiAkEEaiIANgIAIAUoAgAgAmogBjYAACADQQRrIgMNAAsLIAFBPGooAgAhBCABKAI0IQAgCSgCACIBQQhqIgMoAgAhAiABQQRqKAIAIAJrQQdNBEAgASACQQgQ0AYgAygCACECCyADIAJBCGoiAzYCACABKAIAIAJqIAStNwAAQQAhBiAERQ0AIAAgBEEMbGohCSABQQhqIQIDQCAAQQRqLQAAIQQgACgCACEHIAFBBGoiBSgCACADa0EDTQRAIAEgA0EEENAGIAIoAgAhAwsgASgCACADaiAHNgAAIAIgA0EEaiIDNgIAIAMgBSgCAEYEQCABIANBARDQBiACKAIAIQMLIAEoAgAgA2ogBDoAACACIANBAWoiBDYCACAAQQhqKAIAIQcgBSgCACAEa0EDTQRAIAEgBEEEENAGIAIoAgAhBAsgAiAEQQRqIgM2AgAgASgCACAEaiAHNgAAIAkgAEEMaiIARw0ACwsgCEHwAGokACAGDwtB+JvAAEEjQZCBwAAQxAkACyAHIAMQ/AsAC60OAxR/AX0BfiMAQaACayICJAAgAkEANgIIIAJCBDcDAAJ/QQAgAEEgaigCACIJRQ0AGiACQQAQlAYgAigCACIHIAIoAggiBEECdGpBADYCAEEAIAQgBEEBaiIGSw0AGiAAQTxqKAIAIQogAkHkAWohCCAAKAI0IQsgACgCGCEVA0ACQCACIAZBAWsiBjYCCAJAAkACQAJAAkACQAJAAkAgByAGQQJ0aigCACIDIAlJBEAgAkEQaiAVIANBB3RqQYABEP8LGiACLQCIASIOBEAgAigCfCIEIApJIQMgCyAEQQxsakEAIAMbQQhqQQAgAxshDyACKAJ4IgQgCkkhAyALIARBDGxqQQAgAxtBCGpBACADGyEQIAIoAnQiBCAKSSEDIAsgBEEMbGpBACADG0EIakEAIAMbIREgAigCcCIEIApJIQMgCyAEQQxsakEAIAMbQQhqQQAgAxshDAsgAiABKgIIIhY4ArwBIAIgFjgCuAEgAiAWOAK0ASACIBY4ArABIAIgASoCBCIWOAKsASACIBY4AqgBIAIgFjgCpAEgAiAWOAKgASACIAEqAgAiFjgCnAEgAiAWOAKYASACIBY4ApQBIAIgFjgCkAEgAkHAAWogAkEQaiACQZABahDvAiACLQDDASESIAItAMIBIRMgAi0AwQEhFCACLQDAASENIA5FDQIgFEEBdCANciATQQJ0ciASQQN0cq0iF0IBg1ANASAMRQ0BIAwoAgAiAyAAKAJUIgRPDQUgACgCTCADQQN0aiIFKAIAIgMgACgCSCIETw0GIAUoAgQiBSAETw0HIAggACgCQCIEIAVBDGxqIgUpAgA3AgAgCEEIaiAFQQhqKAIANgIAIAJB2AFqIgVBCGogBCADQQxsaiIDQQhqKAIANgIAIAIgAykCADcD2AEgAkHwAWoiA0EIaiABQQhqKAIANgIAIAIgASkCADcD8AEgAkGAAmogBSADELwCIAItAIwCRQ0BDAMLIAMgCUH8iMIAEMwIAAsCQCAXQv8BgyIXQgKDUA0AIBFFDQAgESgCACIDIAAoAlQiBE8NBCAAKAJMIANBA3RqIgUoAgAiAyAAKAJIIgRPDQUgBSgCBCIFIARPDQYgCCAAKAJAIgQgBUEMbGoiBSkCADcCACAIQQhqIAVBCGooAgA2AgAgAkHYAWoiBUEIaiAEIANBDGxqIgNBCGooAgA2AgAgAiADKQIANwPYASACQfABaiIDQQhqIAFBCGooAgA2AgAgAiABKQIANwPwASACQYACaiAFIAMQvAIgAi0AjAINAgsCQCAXQgSDUA0AIBBFDQAgECgCACIDIAAoAlQiBE8NBCAAKAJMIANBA3RqIgUoAgAiAyAAKAJIIgRPDQUgBSgCBCIFIARPDQYgCCAAKAJAIgQgBUEMbGoiBSkCADcCACAIQQhqIAVBCGooAgA2AgAgAkHYAWoiBUEIaiAEIANBDGxqIgNBCGooAgA2AgAgAiADKQIANwPYASACQfABaiIDQQhqIAFBCGooAgA2AgAgAiABKQIANwPwASACQYACaiAFIAMQvAIgAi0AjAINAgsgF0IIg1ANACAPRQ0AIA8oAgAiAyAAKAJUIgRPDQMgACgCTCADQQN0aiIFKAIAIgMgACgCSCIETw0EIAUoAgQiBSAETw0FIAggACgCQCIEIAVBDGxqIgUpAgA3AgAgCEEIaiAFQQhqKAIANgIAIAJB2AFqIgVBCGogBCADQQxsaiIDQQhqKAIANgIAIAIgAykCADcD2AEgAkHwAWoiA0EIaiABQQhqKAIANgIAIAIgASkCADcD8AEgAkGAAmogBSADELwCIAItAIwCDQELIA1BAkYNBiAODQUCQCAUQQF0IA1yIBNBAnRyIBJBA3RyrUL/AYMiF0IBg1ANACACKAJwIgMgCUsNACACKAIEIAZGBEAgAiAGEJQGIAIoAgAhByACKAIIIQYLIAcgBkECdGogAzYCACACIAZBAWoiBjYCCAsCQCAXQgKDUA0AIAIoAnQiAyAJSw0AIAIoAgQgBkYEQCACIAYQlAYgAigCACEHIAIoAgghBgsgByAGQQJ0aiADNgIAIAIgBkEBaiIGNgIICwJAIBdCBINQDQAgAigCeCIDIAlLDQAgAigCBCAGRgRAIAIgBhCUBiACKAIAIQcgAigCCCEGCyAHIAZBAnRqIAM2AgAgAiAGQQFqIgY2AggLIBdCCINQRQ0BDAULQQEMBwsgAigCfCIDIAlLDQMgAigCBCAGRgRAIAIgBhCUBiACKAIAIQcgAigCCCEGCyAHIAZBAnRqIAM2AgAgAiAGQQFqIgY2AggMAwsgAyAEQZS0wgAQzAgACyADIARBpLTCABDMCAALIAUgBEG0tMIAEMwIAAsgBg0BCwtBAAsCQCACKAIEIgBFDQAgAEECdEUNACACKAIAELEBCyACQaACaiQAC5APAxJ/An4HfSMAQbADayIDJAAgAyABNgIMIANBEGoiAUEgaiACQSBqKAIANgIAIAFBGGogAkEYaikCADcDACABQRBqIAJBEGopAgA3AwAgAUEIaiACQQhqKQIANwMAIAMgAikCADcDECADQfAAaiACIAAoAgAiAhDTBgJAAkACQCAAKAIEIgcqAgAiF0MAAAAAYARAIANB8ABqIgFBEGoqAgAhGCABQRRqKgIAIRkgAyoCcCEaIAMqAnQhGyADKgJ4IRwgAyoCfCEdIAMgBzYCaCADIAI2AmAgAyAAKAIsNgJsIAMgACkCJDcDWCADIAApAhw3A1AgAyAAKQIUNwNIIAMgACgCEDYCQCADIAApAgg3AzggAyADQRBqNgJkIAMgA0EMajYCRCADQeABaiICQRRqIBcgGZI4AgAgAkEQaiAXIBiSOAIAIAMgFyAdkjgC7AEgAyAcIBeTOALoASADIBsgF5M4AuQBIAMgGiAXkzgC4AEgASACEMcFIAMgA0E4ajYC0AEgACgCNCIBQQA2AgggACgCMCIAQSBqKAIAIgpFDQMgAUEEaigCAA0BIAFBABCGBiABIAEoAggiBUEBaiICNgIIIAEoAgAiByAFQQJ0akEANgIAIAIgBUkNAwwCCyADQfQBakEANgIAIANB1MbAADYC8AEgA0IBNwLkASADQfzGwAA2AuABIANB4AFqQfDHwAAQggoACyABKAIAIgdBADYCAEEBIQILIABBPGooAgAhBSAAKAI0IQ0gACgCGCETIAFBBGohDgNAIAEgAkEBayIANgIIAkACQAJAIAogByAAQQJ0aigCACICSwRAIANB4AFqIBMgAkEHdGpBgAEQ/wsaIAMtANgCRQRAIANB4AJqIANB4AFqIANB8ABqENECIAMtAOMCIRAgAy0A4gIhESADLQDhAiESIAMtAOACIQIMBAsgAygCzAIhCyADKALIAiEJIAMoAsQCIQggAygCwAIhBCADQeACaiADQeABaiADQfAAahDRAiADLQDgAiICIAMtAOECIhJBAXRyIAMtAOICIhFBAnRyIAMtAOMCIhBBA3RyrSIWQv8BgyEVIBZCAYNQDQIgBCAFSSIGDQEMAgsgAiAKQZjhwAAQzAgACyANIARBDGxqQQAgBhtBCGpBACAGGyIGKAIAIQwgAygC0AEiBCgCACAEKAIEIRQgAyAGNgKAAyADIAQpAjA3AqQDIAMgBCkCKDcCnAMgAyAEKQIgNwKUAyADIAQpAhg3AowDIAMgBCkCEDcChAMgAyAEKQIINwP4AiAMIANB+AJqQdzrwAAgFCgCDBEBAAsCQCAVQgKDUA0AIAUgCE0NACANIAhBDGxqQQAgBSAISyIEG0EIakEAIAQbIggoAgAhBiADKALQASIEKAIAIAQoAgQhDyADIAg2AoADIAMgBCkCMDcCpAMgAyAEKQIoNwKcAyADIAQpAiA3ApQDIAMgBCkCGDcCjAMgAyAEKQIQNwKEAyADIAQpAgg3A/gCIAYgA0H4AmpB3OvAACAPKAIMEQEACwJAIBVCBINQDQAgBSAJTQ0AIA0gCUEMbGpBACAFIAlLIgQbQQhqQQAgBBsiCSgCACEIIAMoAtABIgQoAgAgBCgCBCEMIAMgCTYCgAMgAyAEKQIwNwKkAyADIAQpAig3ApwDIAMgBCkCIDcClAMgAyAEKQIYNwKMAyADIAQpAhA3AoQDIAMgBCkCCDcD+AIgCCADQfgCakHc68AAIAwoAgwRAQALIBVCCINQDQAgBSALTQ0AIA0gC0EMbGpBACAFIAtLIgQbQQhqQQAgBBsiCygCACEJIAMoAtABIgQoAgAgBCgCBCEGIAMgCzYCgAMgAyAEKQIwNwKkAyADIAQpAig3ApwDIAMgBCkCIDcClAMgAyAEKQIYNwKMAyADIAQpAhA3AoQDIAMgBCkCCDcD+AIgCSADQfgCakHc68AAIAYoAgwRAQALIAJB/wFxQQJGDQEgEUECdCAQQQN0ciACciASQQF0cq0iFkL/AYMhFSADLQDYAiECAkAgFkIBg1ANACACQQFxDQAgAygCwAIiBCAKSw0AIA4oAgAgAEYEQCABIAAQhgYgASgCACEHIAEoAgghAAsgByAAQQJ0aiAENgIAIAEgAEEBaiIANgIIIAMtANgCIQILAkAgFUICg1ANACACQQFxDQAgAygCxAIiBCAKSw0AIA4oAgAgAEYEQCABIAAQhgYgASgCCCEACyABKAIAIgcgAEECdGogBDYCACABIABBAWoiADYCCCADLQDYAiECCwJAIBVCBINQDQAgAkEBcQ0AIAMoAsgCIgQgCksNACAOKAIAIABGBEAgASAAEIYGIAEoAgghAAsgASgCACIHIABBAnRqIAQ2AgAgASAAQQFqIgA2AgggAy0A2AIhAgsCQCAVQgiDUARAIAAhAgwBCyACQQFxBEAgACECDAELIAogAygCzAIiBEkEQCAAIQIMAQsgDigCACAARgRAIAEgABCGBiABKAIIIQALIAEgAEEBaiICNgIIIAEoAgAiByAAQQJ0aiAENgIACyACDQALCyADQbADaiQAC4APAxF/An4HfSMAQbADayIEJAAgBCABNgIMIARBEGoiBSABIAAoAgAQxwMgBEHwAGogAiAFIAMoAogBEQIAAkACQAJAIAAoAgQiBSoCACIXQwAAAABgBEAgBEHwAGoiAUEQaioCACEYIAFBFGoqAgAhGSAEKgJwIRogBCoCdCEbIAQqAnghHCAEKgJ8IR0gBEHkAGogAzYCACAEIAU2AmggBCACNgJgIAQgACkCKDcDWCAEIAApAiA3AkwgBCAAKQIYNwJEIAQgACkCEDcCPCAEIAApAgg3AzAgBCAEQQxqNgJUIAQgBEEQajYCOCAEQeABaiICQRRqIBcgGZI4AgAgAkEQaiAXIBiSOAIAIAQgFyAdkjgC7AEgBCAcIBeTOALoASAEIBsgF5M4AuQBIAQgGiAXkzgC4AEgASACEMcFIAQgBEEwajYC0AEgACgCNCICQQA2AgggACgCMCIAQSBqKAIAIgpFDQMgAkEEaigCAA0BIAJBABCGBiACIAIoAggiA0EBaiIBNgIIIAIoAgAiBSADQQJ0akEANgIAIAEgA0kNAwwCCyAEQfQBakEANgIAIARB1MbAADYC8AEgBEIBNwLkASAEQfzGwAA2AuABIARB4AFqQfDHwAAQggoACyACKAIAIgVBADYCAEEBIQELIABBPGooAgAhCCAAKAI0IQ0gACgCGCETIAJBBGohDgNAIAIgAUEBayIANgIIAkACQAJAIAogBSAAQQJ0aigCACIBSwRAIARB4AFqIBMgAUEHdGpBgAEQ/wsaIAQtANgCRQRAIARB4AJqIARB4AFqIARB8ABqENECIAQtAOMCIRAgBC0A4gIhESAELQDhAiESIAQtAOACIQEMBAsgBCgCzAIhCyAEKALIAiEJIAQoAsQCIQcgBCgCwAIhAyAEQeACaiAEQeABaiAEQfAAahDRAiAELQDgAiIBIAQtAOECIhJBAXRyIAQtAOICIhFBAnRyIAQtAOMCIhBBA3RyrSIWQv8BgyEVIBZCAYNQDQIgAyAISSIGDQEMAgsgASAKQZjhwAAQzAgACyANIANBDGxqQQAgBhtBCGpBACAGGyIGKAIAIQwgBCgC0AEiAygCACADKAIEIRQgBCAGNgKAAyAEIAMoAjg2AqwDIAQgAykCMDcCpAMgBCADKQIoNwKcAyAEIAMpAiA3ApQDIAQgAykCGDcCjAMgBCADKQIQNwKEAyAEIAMpAgg3A/gCIAwgBEH4AmpB5O3AACAUKAIMEQEACwJAIBVCAoNQDQAgByAITw0AIA0gB0EMbGpBACAHIAhJIgMbQQhqQQAgAxsiBygCACEGIAQoAtABIgMoAgAgAygCBCEPIAQgBzYCgAMgBCADKAI4NgKsAyAEIAMpAjA3AqQDIAQgAykCKDcCnAMgBCADKQIgNwKUAyAEIAMpAhg3AowDIAQgAykCEDcChAMgBCADKQIINwP4AiAGIARB+AJqQeTtwAAgDygCDBEBAAsCQCAVQgSDUA0AIAggCU0NACANIAlBDGxqQQAgCCAJSyIDG0EIakEAIAMbIgkoAgAhByAEKALQASIDKAIAIAMoAgQhDCAEIAk2AoADIAQgAygCODYCrAMgBCADKQIwNwKkAyAEIAMpAig3ApwDIAQgAykCIDcClAMgBCADKQIYNwKMAyAEIAMpAhA3AoQDIAQgAykCCDcD+AIgByAEQfgCakHk7cAAIAwoAgwRAQALIBVCCINQDQAgCCALTQ0AIA0gC0EMbGpBACAIIAtLIgMbQQhqQQAgAxsiCygCACEJIAQoAtABIgMoAgAgAygCBCEGIAQgCzYCgAMgBCADKAI4NgKsAyAEIAMpAjA3AqQDIAQgAykCKDcCnAMgBCADKQIgNwKUAyAEIAMpAhg3AowDIAQgAykCEDcChAMgBCADKQIINwP4AiAJIARB+AJqQeTtwAAgBigCDBEBAAsgAUH/AXFBAkYNASARQQJ0IBBBA3RyIAFyIBJBAXRyrSIWQv8BgyEVIAQtANgCIQECQCAWQgGDUA0AIAFBAXENACAEKALAAiIDIApLDQAgDigCACAARgRAIAIgABCGBiACKAIAIQUgAigCCCEACyAFIABBAnRqIAM2AgAgAiAAQQFqIgA2AgggBC0A2AIhAQsCQCAVQgKDUA0AIAFBAXENACAEKALEAiIDIApLDQAgDigCACAARgRAIAIgABCGBiACKAIIIQALIAIoAgAiBSAAQQJ0aiADNgIAIAIgAEEBaiIANgIIIAQtANgCIQELAkAgFUIEg1ANACABQQFxDQAgBCgCyAIiAyAKSw0AIA4oAgAgAEYEQCACIAAQhgYgAigCCCEACyACKAIAIgUgAEECdGogAzYCACACIABBAWoiADYCCCAELQDYAiEBCwJAIBVCCINQBEAgACEBDAELIAFBAXEEQCAAIQEMAQsgCiAEKALMAiIDSQRAIAAhAQwBCyAOKAIAIABGBEAgAiAAEIYGIAIoAgghAAsgAiAAQQFqIgE2AgggAigCACIFIABBAnRqIAM2AgALIAENAAsLIARBsANqJAALtQwDDX8LfQV+IwBBEGsiDSQAIA1D2w/JQCADs5UiGSADQQF2s5Q4AgggDSAZIANBAnazlCIUOAIEIA0gGSADQQNsQQJ2s5Q4AgwgBEEIaiIPKAIAIgtBAWsiCAR+IAUoAgghBiAIrSEhIAVBBGohCUKAgICAECEfA0AgHkIBfCEgIAUgCSgCACAGRwR/IAYFIAUgBhCWBiAFKAIICyIHQQFqIgY2AgggBSgCACAHQQN0aiAeIB+ENwIAIB9CgICAgBB8IR8gISAgIh5SDQALICFCIIYFQgALISAgCCALIAAbIhBBAWsiEa0hHyAFQQRqIRIgBUEIaiEJA0BDAACAPyEYQwAAAAAhE0MAAAAAIRUgFEMAAAAAlEMAAAA/lCIXIBeUIhYgFiAUQwAAAD+UIhQgFJSSkkMAAAAAkiIWQwAAgChfRQRAIwBBEGsiB0MAAAB/OAIMIAcqAgwaIBYQiAEiExCvASEVIBMQsAFDAACAP5QhGCAUIBVDAACAP5QgE5UiE5QhFSAXIBOUIRMLIAshB0EAIQhBACEGAkAgEEUNAANAIAYgB0kEQCAGQQFqIQYgBCgCACIMIAhqIgpBCGoqAgAiFCAYIBMgCkEEaioCACIalCIbIBUgCioCACIXlJMiFiAWkiIWlCATIBMgF5QgEyAUlJMiHCAckiIclCIdIBUgFSAUlCAbkyIUIBSSIhSUk5KSIRsgGiAYIByUIBMgFJQgEyAWlJOSkiEaIBcgGCAUlCAVIBaUIB2TkpIhFCAPIARBBGooAgAgB0cEfyAHBSAEIAcQ9QUgBCgCACEMIA8oAgALIgpBAWoiBzYCACAMIApBDGxqIgogGzgCCCAKIBo4AgQgCiAUOAIAIAhBDGohCCAGIBBHDQEMAgsLIAYgB0G0j8MAEMwIAAsgEQRAIAkoAgAhBkIAIR4gCyEIA0AgCEEBaiEMIB5CAXwhHiAJIBIoAgAgBkcEfyAGBSAFIAYQlgYgCSgCAAsiCkEBaiIGNgIAIAUoAgAgCkEDdGogCK0gDK1CIIaENwIAIAwhCCAeIB9UDQALCyAOQQFqIQ4gAARAIAsgEWohCCAJKAIAIgYgEigCAEYEQCAFIAYQlgYgCSgCACEGCyAJIAZBAWo2AgAgBSgCACAGQQN0aiAgIAithDcCAAsgDkEDRwRAIA1BBGogDkECdGoqAgAhFCAHIQsMAQsLIAIEQCABIAJBA3RqIQ8gA0EBayEJA0ACQCABKAIAIgsgAUEEaigCACIOTw0AA0AgByALSwRAIAQoAgAiDCALQQxsaiIAKgIEIRggACoCACITIBOUIAAqAggiEyATlJJDAAAAAJIQiAEhFSAHIQggAwRAQwAAAAAhEyADIQADQCAVIBMQsAGUIRQgFSATEK8BlCEXIARBCGogBEEEaigCACAIRwR/IAgFIAQgCBD1BSAEKAIAIQwgBEEIaigCAAsiAkEBaiIINgIAIAwgAkEMbGoiAiAXOAIIIAIgGDgCBCACIBQ4AgAgGSATkiETIABBAWsiAA0ACwtBACAJIAcgCWoiCiAJSRsiBiAFQQRqIgwoAgAgBUEIaiICKAIAIgBrSwRAIAUgACAGEJIGIAIoAgAhAAsgC0EBaiELIAcgCkkEQCAFKAIAIABBA3RqIQYgCq0iICAHrSIeQn+FfCAgIB59QgODIiFQRQRAIB5CIIZCgICAgBB8IR8DQCAGIB4gH4Q3AgAgH0KAgICAEHwhHyAGQQhqIQYgHkIBfCEeICFCAX0iIUIAUg0ACwtCA1oEQCAeQiCGQoCAgIBAfSEfA0AgBkEYaiAfIB5CA3yENwIAIAZBEGogH0KAgICAEH0gHkICfIQ3AgAgBkEIaiAfQoCAgIAgfSAeQgF8hDcCACAGIB9CgICAgDB9IB6ENwIAIAZBIGohBiAfQoCAgIBAfSEfICAgHkIEfCIeUg0ACwsgACAJaiEACyACIAA2AgAgDCgCACAARgRAIAUgABCWBiACKAIAIQALIAIgAEEBajYCACAFKAIAIABBA3RqIAqtIAetQiCGhDcCACAIIQcgCyAORw0BDAILCyALIAdBxI/DABDMCAALIA8gAUEIaiIBRw0ACwsgDUEQaiQAC6sNAiJ9DH8jAEFAaiInJABDAACgNRCIASEdAkACQAJAAkAgA0EMaioCACIFIAWUIANBEGoqAgAiBiAGlJIgA0EUaioCACIHIAeUkkMAAAAAkhCIASINQwAAAABbDQACQCANQwAAgH9bDQAgDUMAAID/Ww0AIA2LIgtDAAAANF8NASALIAtDAAAANJRfDQELIAMqAgghEyADKgIEIRQgAyoCACEVIAUgDZUiFowiDiAHIA2VIhcgF5QgFiAWlCAGIA2VIhggGJSSkkMAAAAAkhCIASIHlSIFIAFBGGoiKioCACIelCAYjCIPIAeVIgYgAUEcaiIrKgIAIh+UkiAXjCIcIAeVIgcgAUEgaiIsKgIAIiCUkiELAn8gBSABKgIAIiGUIAYgAUEEaiItKgIAIiKUkiAHIAFBCGoiLioCACIjlJIiCSAFIAFBDGoiLyoCACIklCAGIAFBEGoiMCoCACIllJIgByABQRRqIjEqAgAiJpSSIhBeRQRAICshKSAqISggLCALIBBdRQ0BGiAwISkgLyEoIDEMAQsgKyEpICohKCAsIAkgC15FDQAaIC0hKSABISggLgshAyACQQA2ArwBIAJBADYCHCACQUBrQQA2AgAgAkE4akIANwIAIAJBNGogAyoCACAHIAEqAiQiEJSSIgc4AgAgAkEwaiApKgIAIAYgEJSSIgY4AgAgAkEsaiAoKgIAIAUgEJSSIgU4AgAgAkEoaiAHIBOTOAIAIAJBJGogBiAUkzgCACACIAUgFZM4AiAgJ0EIaiACEDpD//9/fyEJQZDOACEpAkADQCAnKgIIIgggCJQgJyoCDCIMIAyUkiAnKgIQIgogCpSSQwAAAACSIgVDAADIK15FDQMgCowgBRCIASIFlSEGIAyMIAWVIQcgCIwgBZUhCwJ9AkAgBSAJYCIyBEAgGUMAAAAAXkUNAQwGCyAgIAYgBiAGlCALIAuUIAcgB5SSkkMAAAAAkhCIASIKlSIJlCAeIAsgCpUiCJQgHyAHIAqVIgyUkpIhCiAQIAmUAn8gIyAJlCAhIAiUICIgDJSSkiIRICYgCZQgJCAIlCAlIAyUkpIiEl5FBEAgKyEoICohAyAsIAogEl1FDQEaIDAhKCAvIQMgMQwBCyArISggKiEDICwgCiARXUUNABogLSEoIAEhAyAuCyoCAJIhCiAQIAiUIAMqAgCSIREgECAMlCAoKgIAkgwBCyATIAqSIQogFSAIkiERIBQgDJILIQwgCiATkyESIAwgFJMhGiARIBWTIRsCQAJAAkAgFyAGlCAWIAuUIBggB5SSkiIJQwAAAABbDQACQCAJQwAAgH9bDQAgCUMAAID/Ww0AIAmLIghDAAAANF8NASAIIAhDAAAANJRfDQELIAYgEpQgByAalCALIBuUkpIgCZUiCEMAAAAAYA0BC0EAIQMgCUMAAKA1Xg0GIDINBgwBCwJAAkAgCUMAAAAAXUUNACAIQwAAAABeRQ0AIAQgGSAIkiIZIA2VXQRAIABBADYCAAwJCyAXIAiUIQUgGCAIlCEOIBYgCJQhDyACKAK8ASIoQQFqIQMCQCADIChJDQAgAiACKgIgIA+TOAIgIAIgAioCJCAOkzgCJCACIAIqAiggBZM4AiggKEUNACACIAIqAkQgD5M4AkQgAiACKgJIIA6TOAJIIAIgAioCTCAFkzgCTCADQQJGDQAgAiACKgJoIA+TOAJoIAIgAioCbCAOkzgCbCACIAIqAnAgBZM4AnAgA0EDRg0AIAIgAioCjAEgD5M4AowBIAIgAioCkAEgDpM4ApABIAIgAioClAEgBZM4ApQBIANBBEcNAgsgCiATIAWSIhOTIRIgDCAUIA6SIhSTIRogESAVIA+SIhWTIRtD//9/fyEFIAYhHCAHIQ8gCyEODAILIDJFDQEgAEEANgIADAcLQQRBBEGEpcIAEMwIAAsgBiASlCAHIBqUIAsgG5SSkiIGIAZcDQFBACEDIAUgBpIgHSAFlF8NBCAnQQA2AjggJ0IANwMwICcgCjgCLCAnIAw4AiggJyAROAIkICcgEjgCICAnIBo4AhwgJyAbOAIYIAIgJ0EYahDdARogJ0EIaiACEDogAigCvAFBA0cEQCAFIQkgKUEBayIpDQEMBQsLIAZDAACgtV9FDQIMAwtB5KHCAEEoQZyiwgAQxAkACyAAQQA2AgAMAgsgAEEQaiAcOAIAIABBDGogDzgCACAAQQhqIA44AgAgACAZIA2VOAIEQQEhAwsgACADNgIACyAnQUBrJAALnw0DFH0WfwJ8IwBB0ABrIhkkACAAQQI6AAwCQAJAIAIqAgAiCSAEkiABQShqKgIAIg6VIgVDAAAAv18NACACQQhqKgIAIgogBJIgAUEwaioCACIPlSIIQwAAAL9fDQAgCSAEkyAOlSILQwAAAD9gDQAgCiAEkyAPlSIHQwAAAD9gDQAgAkEEaioCACEJIAFBLGoqAgAhCkMAAIA/IAFBDGooAgAiHrhEAAAAAAAA8L+gtpUhDQJ/IAVDAAAAP5JDAACAPyABQRBqKAIAIh+4RAAAAAAAAPC/oLaVIhCVjSIFIB9BAWuzIgYgBSAGXRtDAAAAACAFQwAAAABeG7siL0QAAAAAAAAAAGYiGiAvRAAAAAAAAPBBY3EEQCAvqwwBC0EAC0EAIBobIRsgL0QAAOD////vQWQhHCALQwAAAD+SIBCVjiIFIB9BAmuzIgsgBSALXRtDAAAAACAFQwAAAABeG7siL0QAAAAAAAAAAGYiGiEdQX8gGyAcGyEmQX8CfyAaIC9EAAAAAAAA8EFjcQRAIC+rDAELQQALQQAgHRsgL0QAAOD////vQWQbIRsCfyAIQwAAAD+SIA2VjSIFIB5BAWuzIgggBSAIXRtDAAAAACAFQwAAAABeG7siL0QAAAAAAADwQWMgL0QAAAAAAAAAAGZxBEAgL6sMAQtBAAshHCAbICZPAn8gB0MAAAA/kiANlY4iBSAeQQJrsyIIIAUgCF0bQwAAAAAgBUMAAAAAXhu7IjBEAAAAAAAA8EFjIDBEAAAAAAAAAABmcQRAIDCrDAELQQALIRoNAEF/IBpBACAwRAAAAAAAAAAAZhsgMEQAAOD////vQWQbIh1BfyAcQQAgL0QAAAAAAAAAAGYbIC9EAADg////70FkGyInTw0AIAkgBJIgCpUhCCAJIASTIAqVIQsgGyABQSRqKAIAIhogGiAbSRshKyAeQQJ0ISggJyAdayEsIAFBFGooAgAiGiABQSBqKAIAIiAgG2wiHGohIiAdICAgHSAgSxsiLSAdayEuIBogHCAdamohIyABKAIAIgEgHSAbIB5sakECdGohJCABIB0gHiAbQQFqbGpBAnRqISVD//9/fyEJIAJBCGohKQNAAkAgGyArRg0DIBtBAWohKiAsIRwgLiEBICMhGiAbIB9JBEAgDiAQIBuzlEMAAAC/kiIFlCERIA4gECAFkpQhEiAkIRwgJSEbIB0hGgNAIBogLUYNBSAaIgFBAWohGgJAIAEgImotAAAiIUEGcUEGRg0AIAEgHk8NBiAaIB5PDQYgHyAqTQ0GIBxBBGoqAgAhBSAbQQRqKgIAIQcgGyoCACEGAkAgHCoCACIMIAheRQ0AIAUgCF5FDQAgBiAIXkUNACAHIAheDQELAkAgCyAMXkUNACAFIAtdRQ0AIAYgC11FDQAgByALXQ0BCyAKIAeUIRMgCiAGlCEUIA8gDSANIAGzlEMAAAC/kiIGkpQhByAKIAWUIRUgDyAGlCEGIAogDJQhDAJAICFBAnENACAZIBI4AhggGSAVOAIQIBkgETgCDCAZIAw4AgQgGSAROAIAIBkgBjgCCCAZIAc4AhQgGSAHIAYgIUEBcSIBGzgCICAZIBMgFCABGzgCHCAZQShqIBkgAiADEEQgGSoCKCIWIAIqAgCTIgUgBZQgGSoCLCIXIAJBBGoqAgCTIgUgBZSSIBkqAjAiGCApKgIAkyIFIAWUkkMAAAAAkiIFIAldRQ0AIAQgBZFgBEAgACAZKAI0NgIMIAAgGDgCCCAAIBc4AgQgACAWOAIACyAFIQkLICFBBHENACAZIBQ4AhwgGSASOAIYIBkgEzgCECAZIBI4AgwgGSAROAIAIBkgBzgCFCAZIAY4AiAgGSAGIAcgIUEBcSIBGzgCCCAZIAwgFSABGzgCBCAZQShqIBkgAiADEEQgGSoCKCIHIAIqAgCTIgUgBZQgGSoCLCIGIAJBBGoqAgCTIgUgBZSSIBkqAjAiDCApKgIAkyIFIAWUkkMAAAAAkiIFIAldRQ0AIAQgBZFgBEAgACAZKAI0NgIMIAAgDDgCCCAAIAY4AgQgACAHOAIACyAFIQkLIBxBBGohHCAbQQRqIRsgGiAnRw0ACwwBCwNAIAFFDQQgGi0AAEEGcUEGRw0EIAFBAWshASAaQQFqIRogHEEBayIcDQALDAALICAgImohIiAkIChqISQgJSAoaiElICAgI2ohIyAmICoiG0cNAAsLIBlB0ABqJAAPC0Ho4cIAEN0KAAuBDgMOfw19AnwjAEGQAmsiBSQAIAVBOGogAUHEAGopAgA3AwAgBUEwaiABQTxqKQIANwMAIAUgASkCNDcDKCAFQUBrIAVBKGogAiACQQxqEJ0BAkACQAJAIAUoAkBFDQAgBUHYAGoqAgAiE0MAAAAAXQ0AIAJBFGoqAgAhFSACKgIIIRYgAUEwaioCACEaIAFBDGooAgAhBCABQRBqKAIAIQggEyATIAMgAyATXhsgAyADXBshHQJ/AkACQCACKgIAIhtDAAAAAEMAAAAAIAUqAkQiEyATQwAAAABdGyATIBNcGyIUIAIqAgwiF5SSIAFBKGoqAgAiHpUiE0MAAAC/XQ0AIBNDAAAAP14NACAWIBQgFZSSIBqVIhRDAAAAv10NACAUQwAAAD9eRQ0BCyAEQQJrQQAgFkMAAAAAXhshB0EAIBtDAAAAAF5FDQEaIAhBAmsMAQsCfyAUQwAAAD+SQwAAgD8gBLhEAAAAAAAA8L+gtpWVjiIUIARBAmuzIhggFCAYXRtDAAAAACAUQwAAAABeG7siIEQAAAAAAAAAAGYhBiAGICBEAAAAAAAA8EFjcQRAICCrDAELQQALIQogE0MAAAA/kkMAAIA/IAi4RAAAAAAAAPC/oLaVlY4iEyAIQQJrsyIUIBMgFF0bQwAAAAAgE0MAAAAAXhu7IiFEAAAAAAAAAABmIQlBfyAKQQAgBhsgIEQAAOD////vQWQbIQdBfwJ/IAkgIUQAAAAAAADwQWNxBEAgIasMAQtBAAtBACAJGyAhRAAA4P///+9BZBsLIQYgCEEBayERIARBAWshEkMAAIA/IAS4RAAAAAAAAPC/oLaVIRhDAACAPyAIuEQAAAAAAADwv6C2lSEfIAVB6AFqQQRyIQwgBUHIAWohDSAFQbwBaiEOIAVB7ABqIQkgBUFAa0EEciELA0AgBUFAayABIAcgBhD5AQJ/QQQgBSgCQEUNABogBUGwAWoiBEEgaiALQSBqKAIANgIAIA0gC0EYaikCADcDACAEQRBqIAtBEGopAgA3AwAgBEEIaiALQQhqKQIANwMAIAUgCykCADcDsAEgBUHoAWogBCAOIA0gAhDvASAFKAL4ASIIQQRHBEAgBUHgAWoiCiAMQQhqKAIANgIAIAUgDCkCADcD2AFBBCAFKgLoASITIANfRQ0BGiAFKAL8ASEPIAVBmAFqIAooAgA2AgAgBSAFKQPYATcDkAEgEyEcIAgMAQtBBAshCAJ/QQQgBSgCaEUNABogBUGwAWoiBEEgaiAJQSBqKAIANgIAIA0gCUEYaikCADcDACAEQRBqIAlBEGopAgA3AwAgBEEIaiAJQQhqKQIANwMAIAUgCSkCADcDsAEgBUHoAWogBCAOIA0gAhDvASAFKAL4ASIKQQRHBEAgBUHgAWoiBCAMQQhqKAIANgIAIAUgDCkCADcD2AFBBCAFKgLoASITIANfRQ0BGiAFKAL8ASEQIAVBqAFqIAQoAgA2AgAgBSAFKQPYATcDoAEgEyEZIAoMAQtBBAshBAJAAn0CQAJAIAhBBEYEQCAEQQRHDQEgF0MAAAAAXg0CQQAhBEP//39/IBdDAAAAAF1FDQMaIB4gHyAGs5RDAAAAv5KUIBuTIBeVDAMLIARBBEYEQCAFQRBqIAEgByAGQQEgCCAPEMwBIAUoAhQhBiAFKAIQIQcgAEEMaiAFQZgBaigCADYCACAAIAUpA5ABNwIEIAAgHDgCAAwHCwJ/IBkgHF5FBEAgBUEgaiABIAcgBkEAIAQgEBDMASAFKAIkIQYgBSgCICEHIAVBoAFqDAELIAVBGGogASAHIAZBASAIIA8QzAEgBSgCHCEGIAUoAhghByAcIRkgBUGQAWoLIQEgACAZOAIAIAAgASkCADcCBCAAQQxqIAFBCGooAgA2AgAMBgsgBUEIaiABIAcgBkEAIAQgEBDMASAFKAIMIQYgBSgCCCEHIABBDGogBUGoAWooAgA2AgAgACAFKQOgATcCBCAAIBk4AgAMBQtBASEEIB4gHyAGQQFqs5RDAAAAv5KUIBuTIBeVCyITIB1eAn0gFUMAAAAAXkUEQEEAIQhD//9/fyAVQwAAAABdRQ0BGiAaIBggB7OUQwAAAL+SlCAWkyAVlQwBC0EBIQggGiAYIAdBAWqzlEMAAAC/kpQgFpMgFZULIhQgHV5xDQACQAJAAkACQCATIBRdIBNDAAAAAGBxRQRAIBRDAAAAAGANAQwFCyAEDQEgBkUNBCAGQQFrIQYMAwsgCA0BIAdFDQMgB0EBayEHDAILIAZBAWohBgwBCyAHQQFqIQcLIAcgEk8NACAGIBFJDQELCyAAQQQ2AhAMAgsgAEEENgIQDAELIAAgBzYCECAAIAY2AhQLIAVBkAJqJAAL4w8CC38CfiMAQdAAayIDJAAgASgCACIBKAIEIQUgAUECNgIEAkAgBUECRwRAIAFBKGooAgAhCCABQSRqKAIAIQcgAUEgai0AACEMIAFBHGooAgAhBiABKAIAIANBEGogAUEYaigCACIJNgIAIANBCGogAUEQaikCACIONwMAIAMgASkCCCIPNwMAKAIAIQogA0EkaiAONwIAIANBLGogCTYCACADIA83AhwgAyAFNgIYIANBATsBMCACKAIAIgUoAgAhASAFIAFBAWo2AgAgAUEATgRAIAYoAgwiASAGQQhqKAIARgRAIAZBBGogARDhBSAGKAIMIQELIAYoAgQgAUEMbGoiBCAFNgIIIAQgCjYCACAGIAFBAWo2AgwgBCADQRhqNgIEIAZBMGoiASgCACEEIAFBADYCACAGKAIoIgEgBEEMbCIJaiEFIARFDQIgA0FAayENA0AgAUEIaigCACIERQRAIAFBDGohAQwECyAEIAQoAhAiCyABKQIAIg6nIAsbNgIQIAMgBDYCQCADIA43AzgCQCALBEAgAygCQCEEDAELIAMoAkAiBCgCGEEYahCCBQsgBCAEKAIAIgRBAWs2AgAgBEEBRgRAIA0QiAkLIAFBDGohASAJQQxrIgkNAAsgBSEBDAILAAtB8NbAAEErQcDNwAAQxAkACyAFIAFrIgUEQCAFQQxuQQxsIQQgBigCKCIFIAEgBWtBDG1BDGxqQQhqIQEDQCABKAIAIgkoAgAhBSAJIAVBAWs2AgAgBUEBRgRAIAEQiAkLIAFBDGohASAEQQxrIgQNAAsLAkAgDA0AQfzqwwAoAgBB/////wdxRQ0AAn9B5O7DAC0AAARAQejuwwAoAgBFDAELQeTuwwBBAToAAEHo7sMAQQA2AgBBAQsNACAGQQE6AAELIAZBADoAACADQThqIgFBEGogB0EQaikDADcDACABQQhqIAdBCGopAwA3AwAgAyAHKQMANwM4AkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCACIAEQsgRBAWsOAwECAwALQbjLwABBKEG40MAAEMQJAAsgCCgCACICLQAAIQEgAkEBOgAAIAMgAUEBcSIBOgA3IAENC0EAIQVB/OrDACgCAEH/////B3EEQAJ/QeTuwwAtAAAEQEHo7sMAKAIARQwBC0Hk7sMAQQE6AABB6O7DAEEANgIAQQELRSEFCyACLQABDQMgAigCBEEMayEEIAJBDGooAgAiB0EMbCEGIAdB/////wNxIQhBACEBA0AgASAIRg0GIAZBDGshBiABQQFqIQEgBEEMaiIEKAIAIApHDQALIAFBAWsiASAHTw0EIARBCGooAgAhASAEKQIAIQ4gBCAEQQxqIAYQgQwaIAIgB0EBazYCDCABRQ0FIAEgASgCACIEQQFrNgIAIAMgATYCQCADIA43AzggBEEBRgRAIANBQGsQiAkLAkAgBQ0AQfzqwwAoAgBB/////wdxRQ0AAn9B5O7DAC0AAARAQejuwwAoAgBFDAELQeTuwwBBAToAAEHo7sMAQQA2AgBBAQsNACACQQE6AAELIAJBADoAACADKAIYIQEgA0ECNgIYIAFBAkYNBiAAIAE2AgQgAEEANgIAIABBGGogAygCLDYCACAAQRBqIAMpAiQ3AgAgAEEIaiADKQIcNwIADAILIAgoAgAiAi0AACEBIAJBAToAACADIAFBAXEiAToANyABDQpBACEFQfzqwwAoAgBB/////wdxBEACf0Hk7sMALQAABEBB6O7DACgCAEUMAQtB5O7DAEEBOgAAQejuwwBBADYCAEEBC0UhBQsgAi0AAQ0GIAIoAgRBDGshBCACQQxqKAIAIgdBDGwhBiAHQf////8DcSEIQQAhAQNAIAEgCEYNCSAGQQxrIQYgAUEBaiEBIARBDGoiBCgCACAKRw0ACyABQQFrIgEgB08NByAEQQhqKAIAIQEgBCkCACEOIAQgBEEMaiAGEIEMGiACIAdBAWs2AgwgAUUNCCABIAEoAgAiBEEBazYCACADIAE2AkAgAyAONwM4IARBAUYEQCADQUBrEIgJCwJAIAUNAEH86sMAKAIAQf////8HcUUNAAJ/QeTuwwAtAAAEQEHo7sMAKAIARQwBC0Hk7sMAQQE6AABB6O7DAEEANgIAQQELDQAgAkEBOgABCyACQQA6AAAgAygCGCEBIANBAjYCGCABQQJGDQkgACABNgIEIABBATYCACAAQRhqIAMoAiw2AgAgAEEQaiADKQIkNwIAIABBCGogAykCHDcCAAwBCyADLQAxRQRAQQAhAQNAIAEgAUEBaiABQQpLIAFBB09xGyEBIAMtADFFDQALCyAAQQI2AgALIANB0ABqJAAPCyADIAU6ADwgAyACNgI4QazXwABBKyADQThqQdjXwABBiNDAABCkCAALIAEgB0H4ysAAEMsIAAtB8NbAAEErQZjQwAAQxAkAC0Hw1sAAQStBqNDAABDECQALIAMgBToAPCADIAI2AjhBrNfAAEErIANBOGpB2NfAAEHYz8AAEKQIAAsgASAHQfjKwAAQywgAC0Hw1sAAQStB6M/AABDECQALQfDWwABBK0H4z8AAEMQJAAsgA0HMAGpBADYCACADQcgAakHUxsAANgIAIANCATcCPCADQdzTwAA2AjggA0E3aiADQThqENAIAAuDDAIFfw59IwBBsAFrIgQkAAJAIAEEQCAAKAIEIQhBBCEGIARBQGsiB0EYaiAAKAIIKAIAIgVBGGoqAgAgAUEYaioCAJMiCSABQQxqKgIAIg4gAUEEaioCACIRIAVBEGoqAgAgASoCEJMiD5QgASoCACILIAVBFGoqAgAgAUEUaioCAJMiDJSTIg0gDZIiE5QgESABQQhqKgIAIg0gDJQgESAJlJMiCiAKkiIVlCALIAsgCZQgDSAPlJMiCSAJkiISlJOSkjgCACAHQRRqIAwgDiASlCALIBOUIA0gFZSTkpI4AgAgBCANIAUqAggiCZQgESAFKgIEIgyUIAsgBSoCACIKlCAOIAUqAgwiEJSSkpI4AkwgBCARIAqUIA4gCZQgCyAMlJOSIA0gEJSTOAJIIAQgDiAMlCALIAmUkiARIBCUkyANIAqUkzgCRCAEIA0gDJQgDiAKlCALIBCUkyARIAmUk5I4AkAgBCAPIA4gFZQgDSASlCARIBOUk5KSOAJQIAQgACgCDCIFQQhqKgIAIgogDiARIAUqAgAiCZQgCyAFQQRqKgIAIgyUkyIQIBCSIhCUIBEgDSAMlCARIAqUkyIPIA+SIhOUIAsgCyAKlCANIAmUkyIKIAqSIg+Uk5KSOAI4IAQgDCAOIA+UIAsgEJQgDSATlJOSkjgCNCAEIAkgDiATlCANIA+UIBEgEJSTkpI4AjAgBEH4AGogCCAHIARBMGogAiADIAAoAhAgAEEUaigCACAAKAIYKgIAEC4CQCAELQCsASICQQVGDQAgBEEoaiAEQZABaigCADYCACAEQRhqIARBqAFqKAIANgIAIAQgBCkDiAE3AyAgBCAEKQOgATcDECAEKgJ4IREgAkEERg0AIAQqAoQBIQ8gBCoCgAEhEyAEKgJ8IRUgBCoClAEhDiAEKgKYASENIAQqApwBIQsgBEGAAWogBEEoaigCADYCACAEQQhqIARBGGooAgA2AgAgBCAEKQMgNwN4IAQgBCkDEDcDACALIAFBDGoqAgAiECANIAEqAgAiCZQgDiABQQRqKgIAIgyUkyIKIAqSIhKUIAkgDiABQQhqKgIAIgqUIAsgCZSTIhQgFJIiFJQgDCALIAyUIA0gCpSTIgsgC5IiFpSTkpIhCyANIBAgFJQgCiAWlCAJIBKUk5KSIQ0gDiAQIBaUIAwgEpQgCiAUlJOSkiEOIAFBGGoqAgAgDyAQIBMgCZQgFSAMlJMiEiASkiISlCAJIBUgCpQgDyAJlJMiFCAUkiIUlCAMIA8gDJQgEyAKlJMiDyAPkiIWlJOSkpIhDyABQRRqKgIAIBMgECAUlCAKIBaUIAkgEpSTkpKSIQkgASoCECAVIBAgFpQgDCASlCAKIBSUk5KSkiEMIAIhBgsgACgCACIAIA84AgwgACAJOAIIIAAgDDgCBCAAIBE4AgAgACAEKQN4NwIQIAAgCzgCJCAAIA04AiAgACAOOAIcIAAgBCkDADcCKCAAIAY6ADQgAEEYaiAEQYABaigCADYCACAAQTBqIARBCGooAgA2AgAMAQsgBEH4AGogACgCBCAAKAIIKAIAIAAoAgwgAiADIAAoAhAgAEEUaigCACAAKAIYKgIAEC5BBCEBIAQtAKwBIgJBBUcEQCAEQUBrIgFBMGogBEH4AGoiA0EwaigCADYCACABQShqIANBKGopAwA3AwAgAUEgaiADQSBqKQMANwMAIAFBGGogA0EYaikDADcDACABQRBqIANBEGopAwA3AwAgAUEIaiADQQhqKQMANwMAIARBMmogBEGvAWotAAA6AAAgBCAEKQN4NwNAIAQgBC8ArQE7ATAgAiEBCyAAKAIAIgAgBCkDQDcCACAAIAE6ADQgACAELwEwOwA1IABBCGogBEFAayIBQQhqKQMANwIAIABBEGogAUEQaikDADcCACAAQRhqIAFBGGopAwA3AgAgAEEgaiABQSBqKQMANwIAIABBKGogAUEoaikDADcCACAAQTBqIAFBMGooAgA2AgAgAEE3aiAEQTJqLQAAOgAACyAEQbABaiQAC7kNAwx/Bn0CfiMAQeACayIIJAAgCCAHOAIMIAhBMGogBSACIAYoAogBEQIAIAdDAAAAAGAEQCAIQUBrKgIAIRUgCEHEAGoiDCoCACEUIAgqAjAhFyAIKgI0IRYgCCoCOCEYIAgqAjwhGSAAQQA2AgAgCEEQaiIJQRRqIAY2AgAgCCAANgIsIAggBTYCICAIIAI2AhwgCCABNgIYIAggAzYCECAIIAhBDGo2AiggCCAENgIUIAhBjAFqIBQgB5IiFDgCACAIQYgBaiAUOAIAIAhBhAFqIBQ4AgAgCEGAAWogFDgCACAIQfwAaiAVIAeSIhQ4AgAgCEH4AGogFDgCACAIQfQAaiAUOAIAIAhB8ABqIBQ4AgAgCEHsAGogGSAHkiIUOAIAIAhB6ABqIBQ4AgAgCEHkAGogFDgCACAIQdwAaiAYIAeTIhU4AgAgCEHYAGogFTgCACAIQdQAaiAVOAIAIAhBzABqIBYgB5MiFjgCACAIQcgAaiAWOAIAIAwgFjgCACAIIBQ4AmAgCCAVOAJQIAggFjgCQCAIIBcgB5MiBzgCPCAIIAc4AjggCCAHOAI0IAggBzgCMCAIIAk2ApABIAMgBCgCEBEEACEAIAhBADYCqAEgCEIENwOgAQJAIABBIGooAgAiBUUNACAIQaABakEAEJQGIAgoAqABIgMgCCgCqAEiAUECdGpBADYCACABIAFBAWoiAksNACAAQTxqKAIAIQQgACgCNCEGIAAoAhghESAIKAKQASEBA0AgCCACQQFrIgI2AqgBAkACQAJAIAMgAkECdGooAgAiACAFSQRAIAhBsAFqIBEgAEEHdGpBgAEQ/wsaIAgtAKgCIhJFBEAgCEGwAmogCEGwAWogCEEwahDRAiAILQCzAiEOIAgtALICIQ8gCC0AsQIhECAILQCwAiEADAQLIAgoApwCIQwgCCgCmAIhCSAIKAKUAiEKIAgoApACIQsgCEGwAmogCEGwAWogCEEwahDRAiAILQCwAiIAIAgtALECIhBBAXRyIAgtALICIg9BAnRyIAgtALMCIg5BA3RyrSIbQv8BgyEaIBtCAYNQDQIgBCALSyINDQEMAgsgACAFQfyIwgAQzAgACyAGIAtBDGxqQQAgDRsoAgghCyABKAIAIAEoAgQhEyAIIAEpAhg3A9gCIAggASkCEDcD0AIgCCABKQIINwPIAiALIAhByAJqQdCUwgAgEygCDBEBAAsCQCAaQgKDUA0AIAQgCk0NACABKAIAIAYgCkEMbGpBACAEIApLGygCCCABKAIEIQ0gCCABKQIYNwPYAiAIIAEpAhA3A9ACIAggASkCCDcDyAIgCEHIAmpB0JTCACANKAIMEQEACwJAIBpCBINQDQAgBCAJTQ0AIAEoAgAgBiAJQQxsakEAIAQgCUsbKAIIIAEoAgQhCyAIIAEpAhg3A9gCIAggASkCEDcD0AIgCCABKQIINwPIAiAIQcgCakHQlMIAIAsoAgwRAQALIBpCCINQDQAgBCAMTQ0AIAEoAgAgBiAMQQxsakEAIAQgDEsbKAIIIAEoAgQhCiAIIAEpAhg3A9gCIAggASkCEDcD0AIgCCABKQIINwPIAiAIQcgCakHQlMIAIAooAgwRAQALIABB/wFxQQJGDQECQCASDQACQCAPQQJ0IA5BA3RyIAByIBBBAXRyrUL/AYMiGkIBg1ANACAIKAKQAiIAIAVLDQAgCCgCpAEgAkYEQCAIQaABaiACEJQGIAgoAqABIQMgCCgCqAEhAgsgAyACQQJ0aiAANgIAIAggAkEBaiICNgKoAQsCQCAaQgKDUA0AIAgoApQCIgAgBUsNACAIKAKkASACRgRAIAhBoAFqIAIQlAYgCCgCoAEhAyAIKAKoASECCyADIAJBAnRqIAA2AgAgCCACQQFqIgI2AqgBCwJAIBpCBINQDQAgCCgCmAIiACAFSw0AIAgoAqQBIAJGBEAgCEGgAWogAhCUBiAIKAKgASEDIAgoAqgBIQILIAMgAkECdGogADYCACAIIAJBAWoiAjYCqAELIBpCCINQDQAgCCgCnAIiACAFSw0AIAgoAqQBIAJGBEAgCEGgAWogAhCUBiAIKAKgASEDIAgoAqgBIQILIAMgAkECdGogADYCACAIIAJBAWoiAjYCqAELIAINAAsLAkAgCCgCpAEiAEUNACAAQQJ0RQ0AIAgoAqABELEBCyAIQeACaiQADwsgCEHEAWpBADYCACAIQczxwQA2AsABIAhCATcCtAEgCEHYgMIANgKwASAIQbABakHggMIAEIIKAAvADAIZfQN/IwBBQGoiICQAQwAAoDUQiAEhHwJAAkACQAJAIAVBDGoqAgAiByAHlCAFQRBqKgIAIhMgE5SSIAVBFGoqAgAiCCAIlJJDAAAAAJIQiAEiEUMAAAAAWw0AAkAgEUMAAIB/Ww0AIBFDAACA/1sNACARiyIJQwAAADRfDQEgCSAJQwAAADSUXw0BCyAFKgIIIRUgBSoCBCEWIAUqAgAhFyATIBGVIhiMIhIgCCARlSIZIBmUIAcgEZUiGiAalCAYIBiUkpJDAAAAAJIQiAEiB5UhDwJAAn0CQCAZjCIdIAeVIgggCJQgGowiHiAHlSIJIAmUQwAAAACSkkMAAAAAkhCIASIHQwAAAABcBEAgAYwhEyAPIAGUIgwgCCAIIAeVIAKUIg6UIAkgCSAHlSAClCIKlCAMk5JeDQEgEyEHDAMLIAGMIRMgASAPmAwBC0MAAAAAIQ4gAQshB0MAAAAAIQoLIARBADYCHCAEQQA2ArwBIARBQGtBADYCACAEQThqQgA3AgAgBEE0aiAIIAOUIA6SIgg4AgAgBEEwaiAPIAOUIAeSIgc4AgAgBEEsaiAJIAOUIAqSIgk4AgAgBEEoaiAIIBWTOAIAIARBJGogByAWkzgCACAEIAkgF5M4AiAgIEEIaiAEEDpD//9/fyEHQZDOACEiAkADQCAgKgIIIgogCpQgICoCDCILIAuUkiAgKgIQIgwgDJSSQwAAAACSIghDAADIK15FDQMgDIwgCBCIASIIlSEJIAuMIAiVIQ4gCowgCJUhDwJ9AkACfQJAAkAgByAIXyIhBEAgG0MAAAAAXkUNAQwJCyAOIAkgCZQgDyAPlCAOIA6UkpJDAAAAAJIQiAEiB5UhDSAJIAeVIgogCpQgDyAHlSIQIBCUQwAAAACSkkMAAAAAkhCIASILQwAAAABbDQEgEyEHIA0gAZQiFCAKIAogC5UgApQiDJQgECAQIAuVIAKUIguUIBSTkl5FDQNDAAAAACEMIAEMAgsgFiALkiEUIBcgCpIhCyAVIAySDAMLQwAAAAAhDCABIA2YCyEHQwAAAAAhCwsgDSADlCAHkiEUIBAgA5QgC5IhCyAKIAOUIAySCyIMIBWTIQogFCAWkyEHIAsgF5MhHAJAAkACQCAZIAmUIBogD5QgGCAOlJKSIhBDAAAAAFsNAAJAIBBDAACAf1sNACAQQwAAgP9bDQAgEIsiDUMAAAA0Xw0BIA0gDUMAAAA0lF8NAQsgCSAKlCAOIAeUIA8gHJSSkiAQlSINQwAAAABgDQELQQAhBSAQQwAAoDVeDQYgIQ0GDAELAkACQCAQQwAAAABdRQ0AIA1DAAAAAF5FDQAgBiAbIA2SIhsgEZVdBEAgAEEANgIADAkLIBkgDZQhByAYIA2UIQggGiANlCESIAQoArwBIiFBAWohBQJAIAUgIUkNACAEIAQqAiAgEpM4AiAgBCAEKgIkIAiTOAIkIAQgBCoCKCAHkzgCKCAhRQ0AIAQgBCoCRCASkzgCRCAEIAQqAkggCJM4AkggBCAEKgJMIAeTOAJMIAVBAkYNACAEIAQqAmggEpM4AmggBCAEKgJsIAiTOAJsIAQgBCoCcCAHkzgCcCAFQQNGDQAgBCAEKgKMASASkzgCjAEgBCAEKgKQASAIkzgCkAEgBCAEKgKUASAHkzgClAEgBUEERw0CCyAMIBUgB5IiFZMhCiAUIBYgCJIiFpMhByALIBcgEpIiF5MhHEP//39/IQggCSEdIA4hEiAPIR4MAgsgIUUNASAAQQA2AgAMBwtBBEEEQYSlwgAQzAgACyAJIAqUIA4gB5QgDyAclJKSIgkgCVwNAUEAIQUgCCAJkiAfIAiUXw0EICBBADYCOCAgQgA3AzAgICAMOAIsICAgFDgCKCAgIAs4AiQgICAKOAIgICAgBzgCHCAgIBw4AhggBCAgQRhqEN0BGiAgQQhqIAQQOiAEKAK8AUEDRwRAIAghByAiQQFrIiINAQwFCwsgCUMAAKC1X0UNAgwDC0HkocIAQShBnKLCABDECQALIABBADYCAAwCCyAAQRBqIB04AgAgAEEMaiASOAIAIABBCGogHjgCACAAIBsgEZU4AgRBASEFCyAAIAU2AgALICBBQGskAAuiEAMEfAN/An0jAEEQayIHJAACQAJAAkACQCABvCIIQf////8HcSIGQdufpPoDTwRAIAZB0qftgwRJDQEgBkHW44iHBEkNAiAGQf////sHTQ0DIAEgAZMiCSEBDAQLIAZBgICAzANPBEAgAbsiAyADoiICIAKiIQQgAkSBXgz9///fv6JEAAAAAAAA8D+gIAREQjoF4VNVpT+ioCACIASiIAJEaVDu4EKT+T6iRCceD+iHwFa/oKKgtiEJIAIgA6IiBSAEoiACRKdGO4yHzcY+okR058ri+QAqv6CiIAUgAkSy+26JEBGBP6JEd6zLVFVVxb+goiADoKC2IQEMBAsgBkGAgMAATwRAIAcgAUMAAIB7kjgCCCAHKgIIGkMAAIA/IQkMBAsgByABQwAAgAOUOAIIIAcqAggaQwAAgD8hCQwDCwJAIAZB5JfbgARPBEAgCEEASA0BIAFD2w9JwJK7IgMgA6IiAiACoiEEIAJEgV4M/f//37+iRAAAAAAAAPA/oCAEREI6BeFTVaU/oqAgAiAEoiACRGlQ7uBCk/k+okQnHg/oh8BWv6CioLaMIQkgAiADoiIFIASiIAJEp0Y7jIfNxj6iRHTnyuL5ACq/oKIgBSACRLL7bokQEYE/okR3rMtUVVXFv6CiIAOgoLaMIQEMBAsgCEEATgRAQ9sPyT8gAZO7IgMgA6IiAiACoiEEIAJEgV4M/f//37+iRAAAAAAAAPA/oCAEREI6BeFTVaU/oqAgAiAEoiACRGlQ7uBCk/k+okQnHg/oh8BWv6CioLYhASACIAOiIgUgBKIgAkSnRjuMh83GPqJEdOfK4vkAKr+goiAFIAJEsvtuiRARgT+iRHesy1RVVcW/oKIgA6CgtiEJDAQLIAFD2w/JP5K7IgMgA6IiAiADoiIFIAIgAqIiBKIgAkSnRjuMh83GPqJEdOfK4vkAKr+goiAFIAJEsvtuiRARgT+iRHesy1RVVcW/oKIgA6CgtiEJIAJEgV4M/f//37+iRAAAAAAAAPA/oCAEREI6BeFTVaU/oqAgAiAEoiACRGlQ7uBCk/k+okQnHg/oh8BWv6CioLaMIQEMAwsgAUPbD0lAkrsiAyADoiICIAKiIQQgAkSBXgz9///fv6JEAAAAAAAA8D+gIAREQjoF4VNVpT+ioCACIASiIAJEaVDu4EKT+T6iRCceD+iHwFa/oKKgtowhCSACIAOiIgUgBKIgAkSnRjuMh83GPqJEdOfK4vkAKr+goiAFIAJEsvtuiRARgT+iRHesy1RVVcW/oKIgA6CgtowhAQwCCwJAIAZB4Nu/hQRPBEAgCEEASA0BIAFD2w/JwJK7IgMgA6IiAiACoiEEIAJEgV4M/f//37+iRAAAAAAAAPA/oCAEREI6BeFTVaU/oqAgAiAEoiACRGlQ7uBCk/k+okQnHg/oh8BWv6CioLYhCSACIAOiIgUgBKIgAkSnRjuMh83GPqJEdOfK4vkAKr+goiAFIAJEsvtuiRARgT+iRHesy1RVVcW/oKIgA6CgtiEBDAMLIAhBAE4EQCABQ+TLlsCSuyIDIAOiIgIgA6IiBSACIAKiIgSiIAJEp0Y7jIfNxj6iRHTnyuL5ACq/oKIgBSACRLL7bokQEYE/okR3rMtUVVXFv6CiIAOgoLYhCSACRIFeDP3//9+/okQAAAAAAADwP6AgBERCOgXhU1WlP6KgIAIgBKIgAkRpUO7gQpP5PqJEJx4P6IfAVr+goqC2jCEBDAMLIAFD5MuWQJK7IgMgA6IiAiACoiEEIAJEgV4M/f//37+iRAAAAAAAAPA/oCAEREI6BeFTVaU/oqAgAiAEoiACRGlQ7uBCk/k+okQnHg/oh8BWv6CioLYhASACIAOiIgUgBKIgAkSnRjuMh83GPqJEdOfK4vkAKr+goiAFIAJEsvtuiRARgT+iRHesy1RVVcW/oKIgA6CgtowhCQwCCyABQ9sPyUCSuyIDIAOiIgIgAqIhBCACRIFeDP3//9+/okQAAAAAAADwP6AgBERCOgXhU1WlP6KgIAIgBKIgAkRpUO7gQpP5PqJEJx4P6IfAVr+goqC2IQkgAiADoiIFIASiIAJEp0Y7jIfNxj6iRHTnyuL5ACq/oKIgBSACRLL7bokQEYE/okR3rMtUVVXFv6CiIAOgoLYhAQwBCyAHQgA3AwgCfCAGQdqfpO4ETQRAIAG7IgNEg8jJbTBf5D+iRAAAAAAAADhDoEQAAAAAAAA4w6AiAkQAAAAAAADgwWYhCEEAQf////8HAn8gAplEAAAAAAAA4EFjBEAgAqoMAQtBgICAgHgLQYCAgIB4IAgbIAJEAADA////30FkGyACIAJiGyEGIAMgAkQAAABQ+yH5v6KgIAJEY2IaYbQQUb6ioAwBCyAHIAYgBkEXdkGWAWsiBkEXdGu+uzkDACAHIAdBCGogBhBIIQYgCEEATgRAIAcrAwgMAQtBACAGayEGIAcrAwiaCyIDIAMgA6IiAqIiBSACIAKiIgSiIAJEp0Y7jIfNxj6iRHTnyuL5ACq/oKIgAyAFIAJEsvtuiRARgT+iRHesy1RVVcW/oKKgoLYhASACRIFeDP3//9+/okQAAAAAAADwP6AgBERCOgXhU1WlP6KgIAIgBKIgAkRpUO7gQpP5PqJEJx4P6IfAVr+goqC2IgohCQJAAkACQCAGQQNxQQFrDgMAAQIDCyABjCEJIAohAQwCCyAKjCEJIAGMIQEMAQsgASEJIAqMIQELIAAgCTgCBCAAIAE4AgAgB0EQaiQAC98LAiZ9AX8gASoCACIJIANBEGoqAgAiGZQgAUEEaioCACIKIAMqAgwiGpSTIgUgBZIhDCABQQhqKgIAIgsgGpQgCSADQRRqKgIAIhuUkyIFIAWSIQ0gAyoCBCIOIAmUIAMqAgAiDyAKlJMiBSAFkiEQIA8gC5QgAyoCCCIRIAmUkyIFIAWSIRUgAUEYaioCACIoIBsgAUEMaioCACISIAyUIAkgDZQgCiAKIBuUIAsgGZSTIgUgBZIiGJSTkpKSIhwgKCARIBIgEJQgCSAVlCAKIBEgCpQgDiALlJMiBSAFkiITlJOSkpIiHZMiIiAilCABQRBqKgIAIikgGiASIBiUIAogDJQgCyANlJOSkpIiHiApIA8gEiATlCAKIBCUIAsgFZSTkpKSIh+TIiMgI5QgAUEUaioCACIqIBkgEiANlCALIBiUIAkgDJSTkpKSIgUgKiAOIBIgFZQgCyATlCAJIBCUk5KSkiIQkyIkICSUkpJDAAAAAJIhFgJAIAJBDGoqAgAiFSACKgIAIheTIiUgJZQgAkEQaioCACIYIAJBBGoqAgAiDJMiJiAmlJIgAkEUaioCACITIAJBCGoqAgAiDZMiFCAUlJJDAAAAAJIiIEMAAAA0XyIBIBZDAAAANF9xDQAgIyAXIB+TIgiUICQgDCAQkyIHlJIgIiANIB2TIgaUkiEnAkACfwJAAkACQAJAAkACQCABRQRAICUgCJQgJiAHlJIgFCAGlJIhISAWQwAAADRfDQECfUMAAAAAIBYgIJQiCCAjICWUICQgJpSSICIgFJSSIhQgFJQiB5MiBkMAAAA0XkUNABpDAAAAACAGi0MAAAA0Xw0AGkMAAMB/QwAAgD8gCJggCCAIXBtDAADAf0MAAIA/IAeYIAcgB1wbWwRAQwAAAAAgCLwiAiAHvCIBa0EESyABIAJrQQRLIAEgAkkbQQFHDQEaCyAUICeUIBYgIZSTIAaVIgZDAACAPyAGQwAAgD9dG0MAAAAAIAZDAAAAAF4bCyEIICcgFCAIlJIgFpUiB0MAAAAAXQ0DIAdDAACAP14NAgwECyAnIBaVIgZDAAAAAF5FDQggBkMAAIA/IAZDAACAP10bIQcMBAtDAAAAACEHICGMICCVIgZDAAAAAF5FDQcgBkMAAIA/IAZDAACAP10bIQgMAgsgFCAhkyAglSIGQwAAAABeRQ0FIAZDAACAPyAGQwAAgD9dGyEIQwAAgD8hBwwBC0MAAAAAIQcgIYwgIJUiBkMAAAAAXkUNBSAGQwAAgD8gBkMAAIA/XRshCAsgCEMAAAAAXA0BC0EBDAELIAhDAACAP1sEQEEBIStBAQwBC0MAAIA/IAiTvCErQQALIQMCfyAHQwAAAABbBEBBASECQQAMAQtBASECQQEgB0MAAIA/Ww0AGkEAIQJDAACAPyAHk7wLIQECQAJAAkAgAwRAICsOAgMCAQsgEyAIlCANICu+IhOUkiENIBggCJQgDCATlJIhDCAVIAiUIBcgE5SSIRcMAgtBgLjCAEEOQZC4wgAQxAkACyAVIRcgGCEMIBMhDQsCQCACBEAgAQ4CAwIBCyAoIBsgB5QgESABviIFlJIiESASIAkgGSAHlCAOIAWUkiIOlCAKIBogB5QgDyAFlJIiD5STIgUgBZIiHJQgCSALIA+UIAkgEZSTIgUgBZIiHpQgCiAKIBGUIAsgDpSTIgUgBZIiBZSTkpKSIR0gKiAOIBIgHpQgCyAFlCAJIByUk5KSkiEQICkgDyASIAWUIAogHJQgCyAelJOSkpIhHwwCC0GAuMIAQQ5BkLjCABDECQALIBwhHSAFIRAgHiEfIBohDyAZIQ4gGyERC0ECIQEgACAdIA2TIgUgBZQgHyAXkyIFIAWUIBAgDJMiBSAFlJKSQwAAAACSIAQgBJRfBH8gACAXOAIEIABBGGogETgCACAAQRRqIA44AgAgAEEQaiAPOAIAIABBDGogDTgCACAAQQhqIAw4AgBBAQVBAgs2AgALqwwCH30CfyMAQUBqIiQkAEMAAKA1EIgBISMCQAJAAkACQAJAIANBDGoqAgAiBSAFlCADQRBqKgIAIgYgBpSSIANBFGoqAgAiByAHlJJDAAAAAJIQiAEiD0MAAAAAWw0AAkAgD0MAAIB/Ww0AIA9DAACA/1sNACAPiyIKQwAAADRfDQEgCiAKQwAAADSUXw0BCyAHIA+VIhWMIQ0gBiAPlSIWjCEOIAUgD5UiF4whGyADKgIIIREgAyoCBCESIAMqAgAhE0MAAIA/IQVDAAAAACEGQwAAAAAhByAVIBWUIBcgF5QgFiAWlJKSQwAAAACSIgpDAAAAAF4EQCANIAoQiAEiB5UhBiAOIAeVIQUgGyAHlSEHCyACQQA2ArwBIAJBADYCHCACQUBrQQA2AgAgAkE4akIANwIAIAcgASoCACIclCAFIAFBBGoqAgAiHZSSIAYgAUEIaioCACIelJIgByABQQxqKgIAIh+UIAUgAUEQaioCACIglJIgBiABQRRqKgIAIiGUkl4hAyACQTRqIAYgASoCGCIUlCAeICEgAxuSIgY4AgAgAkEwaiAFIBSUIB0gICADG5IiBTgCACACQSxqIAcgFJQgHCAfIAMbkiIHOAIAIAJBKGogBiARkzgCACACQSRqIAUgEpM4AgAgAiAHIBOTOAIgICRBCGogAhA6Q///f38hC0GQzgAhAQNAICQqAggiCSAJlCAkKgIMIgggCJSSICQqAhAiDCAMlJJDAAAAAJIiBUMAAMgrXkUNAyAMjCAFEIgBIgWVIQYgCIwgBZUhByAJjCAFlSEKAn0gBSALYCIlRQRAQwAAAAAhC0MAAIA/IQlDAAAAACEIIAYgBpQgCiAKlCAHIAeUkpJDAAAAAJIiDEMAAAAAXgRAIAYgDBCIASIIlSELIAcgCJUhCSAKIAiVIQgLIBQgC5QgHiAhIB4gC5QgHSAJlCAcIAiUkpIgISALlCAgIAmUIB8gCJSSkl4iAxuSIRkgFCAIlCAcIB8gAxuSIRogFCAJlCAdICAgAxuSDAELIBhDAAAAAF4NBCARIAySIRkgEyAJkiEaIBIgCJILISIgGSARkyELICIgEpMhCSAaIBOTIQgCQAJAAkAgFSAGlCAXIAqUIBYgB5SSkiIMQwAAAABbDQACQCAMQwAAgH9bDQAgDEMAAID/Ww0AIAyLIhBDAAAANF8NASAQIBBDAAAANJRfDQELIAYgC5QgByAJlCAKIAiUkpIgDJUiEEMAAAAAYA0BC0EAIQMgDEMAAKA1Xg0GICUNBgwBCwJAAkAgDEMAAAAAXUUNACAQQwAAAABeRQ0AIAQgGCAQkiIYIA+VXQRAIABBADYCAAwJCyAVIBCUIQUgFiAQlCENIBcgEJQhDiACKAK8ASIlQQFqIQMCQCADICVJDQAgAiACKgIgIA6TOAIgIAIgAioCJCANkzgCJCACIAIqAiggBZM4AiggJUUNACACIAIqAkQgDpM4AkQgAiACKgJIIA2TOAJIIAIgAioCTCAFkzgCTCADQQJGDQAgAiACKgJoIA6TOAJoIAIgAioCbCANkzgCbCACIAIqAnAgBZM4AnAgA0EDRg0AIAIgAioCjAEgDpM4AowBIAIgAioCkAEgDZM4ApABIAIgAioClAEgBZM4ApQBIANBBEcNAgsgGSARIAWSIhGTIQsgIiASIA2SIhKTIQkgGiATIA6SIhOTIQhD//9/fyEFIAYhDSAHIQ4gCiEbDAILICVFDQEgAEEANgIADAcLQQRBBEGEpcIAEMwIAAsgBiALlCAHIAmUIAogCJSSkiIGIAZbBEBBACEDIAUgBpIgIyAFlF8NBSAkQQA2AjggJEIANwMwICQgGTgCLCAkICI4AiggJCAaOAIkICQgCzgCICAkIAk4AhwgJCAIOAIYIAIgJEEYahDdARogJEEIaiACEDogAigCvAFBA0YNAyAFIQsgAUEBayIBDQEMBQsLQeShwgBBKEGcosIAEMQJAAsgAEEANgIADAMLIAZDAACgtV8NAQsgAEEQaiANOAIAIABBDGogDjgCACAAQQhqIBs4AgAgACAYIA+VOAIEQQEhAwsgACADNgIACyAkQUBrJAAL2gwCCH8VfSMAQeABayIFJAAgBUEgakEANgIAIAVCADcDGCAFQoCAgICAgIDAPzcDECAFQgA3AwhDAACgNRCIASEhAkACQAJAAkACQCADQQxqKgIAIg4gDpQgA0EQaioCACINIA2UkiADQRRqKgIAIhAgEJSSQwAAAACSEIgBIhJDAAAAAFsNAAJAIBJDAACAf1sNACASQwAAgP9bDQAgEosiEUMAAAA0Xw0BIBEgEUMAAAA0lF8NAQsgAyoCACEVIAMqAgQhFiADKgIIIRcgBUEoaiIDQQhqIgcgECASlSIejDgCACAFIA0gEpUiH4w4AiwgBSAOIBKVIiCMOAIoIAVBQGsiCSAHKAIANgIAIAUgBSkDKDcDOCAFQcgAaiAFQQhqIAEgAxDWBCACQQA2ArwBIAJBADYCHCACQSxqIAUpAlQ3AgAgAkE0aiAFQdwAaigCADYCACACQThqIAUpA2A3AgAgAkFAayAFQegAaigCADYCACACQShqIAUqAlAgF5M4AgAgAkEkaiAFKgJMIBaTOAIAIAIgBSoCSCAVkzgCICAFQfAAaiACEDoCQCAFKgJwIhAgEJQgBSoCdCIRIBGUkiAFKgJ4Ig8gD5SSQwAAAACSIg5DAADIK14EQCAFQbgBaiIDQRhqIQcgBUGQAWoiCEEYaiEKIANBDGohCyAIQQxqIQhD//9/fyENQZDOACEMA0AgBSAPjCAOEIgBIg6VIhs4AogBIAUgEYwgDpUiHDgChAEgBSAQjCAOlSIdOAKAAQJAIA0gDl8iBkUEQCAFQZABaiAFQQhqIAEgBUGAAWoQ1gQgBSoCmAEhGCAFKgKUASEZIAUqApABIRoMAQsgBUEANgKwASAFQgA3A6gBIAUgDyAXkiIYOAKkASAFIBEgFpIiGTgCoAEgBSAQIBWSIho4ApwBIAUgGDgCmAEgBSAZOAKUASAFIBo4ApABIBRDAAAAAF4NBgsgGCAXkyEQIBkgFpMhESAaIBWTIQ8CQAJAAkAgHiAblCAgIB2UIB8gHJSSkiINQwAAAABbDQACQCANQwAAgH9bDQAgDUMAAID/Ww0AIA2LIhNDAAAANF8NASATIBNDAAAANJRfDQELIBsgEJQgHCARlCAdIA+UkpIgDZUiE0MAAAAAYA0BC0EAIQMgDUMAAKA1Xg0IIAYNCAwBCwJAAkAgDUMAAAAAXUUNACATQwAAAABeRQ0AIAkgBUGIAWooAgA2AgAgBSAFKQOAATcDOCAEIBQgE5IiFCASlV0EQCAAQQA2AgAMCwsgHiATlCEOIB8gE5QhDSAgIBOUIQ8gAigCvAEiBkEBaiEDAkAgAyAGSQ0AIAIgAioCICAPkzgCICACIAIqAiQgDZM4AiQgAiACKgIoIA6TOAIoIAZFDQAgAiACKgJEIA+TOAJEIAIgAioCSCANkzgCSCACIAIqAkwgDpM4AkwgA0ECRg0AIAIgAioCaCAPkzgCaCACIAIqAmwgDZM4AmwgAiACKgJwIA6TOAJwIANBA0YNACACIAIqAowBIA+TOAKMASACIAIqApABIA2TOAKQASACIAIqApQBIA6TOAKUASADQQRHDQILIBggFyAOkiIXkyEQIBkgFiANkiIWkyERIBogFSAPkiIVkyEPQ///f38hDgwCCyAGRQ0BIABBADYCAAwJC0EEQQRBhKXCABDMCAALIBsgEJQgHCARlCAdIA+UkpIiDSANXA0CQQAhAyAOIA2SICEgDpRfDQYgCyAIKQIANwIAIAcgCikCADcCACALQQhqIAhBCGooAgA2AgAgB0EIaiAKQQhqKAIANgIAIAUgEDgCwAEgBSAROAK8ASAFIA84ArgBIAIgBUG4AWoQ3QEaIAVB8ABqIAIQOiACKAK8AUEDRg0EIAxBAWsiDEUNBiAOIQ0gBSoCcCIQIBCUIAUqAnQiESARlJIgBSoCeCIPIA+UkkMAAAAAkiIOQwAAyCteDQALCyAAQQE2AgAgAEEIaiAFKQM4NwIAIAAgFCASlTgCBCAAQRBqIAkoAgA2AgAMBQtB5KHCAEEoQZyiwgAQxAkACyAAQQA2AgAMAwsgDUMAAKC1Xw0BCyAAQQhqIAUpAzg3AgAgACAUIBKVOAIEIABBEGogBUFAaygCADYCAEEBIQMLIAAgAzYCAAsgBUHgAWokAAvDCwILfwN9IwBB8AFrIgQkAAJ9AkAgACgCLCIFBEAgBSgCACIIQQJHDQELQQAhCCAEQTBqQQA2AgAgBEEoakIANwMAIARBIGpCADcDACAEQRhqQgA3AwAgBEIANwMQQwAAgD8hEUMAAAAADAELIARBGGogBUEQaikCADcDACAEQRBqIgZBEGogBUEYaikCADcDACAGQRhqIAVBIGopAgA3AwAgBkEgaiAFQShqKAIANgIAIAQgBSkCCDcDECAFKgIsIREgBSoCBAshDyAAQgA3AgAgAEEgakIANwIAIABBGGpCADcCACAAQRBqQgA3AgAgAEEIakIANwIAIABBKGpBgICA/AM2AgAgAigCCCIGBEAgAigCACIFIAZBA3RqIQkgBEE4aiICQQhqIQYgASgCCCEKIAEoAgAhCyACQSBqIQwgAkEQaiENA0ACQCAFKAIAIgEgCkkiAkUNACALIAFBqAFsakEAIAIbIgEoAgBBAUcNACABKAIEIAVBBGooAgBHDQAgAUEsaigCAEEBRw0AIAwgAUHQAGooAgA2AgAgBEHQAGogAUHIAGopAgA3AwAgDSABQUBrKQIANwMAIAYgAUE4aikCADcDACAEIAEpAjA3AzggBEEIaiICIAFBGGoiB0EEaigCACIONgIEIAIgBygCACAOKAIIQQdqQXhxajYCACAEKAIMIQIgBCgCCCEHAkACQAJAAkACQCABKAIgQQFrDgIBAAILIARBkAFqIgJBCGogASgCJCIBQQhqKQIANwMAIAJBEGogAUEQaikCADcDACACQRhqIAFBGGopAgA3AwAgAkEgaiABQSBqKQIANwMAIAJBKGogAUEoaigCADYCACAEIAEpAgA3A5ABDAMLIAEqAiQiEEMAAAAAWw0BIARBwAFqIgEgB0MAAIA/IAIoApABERQAIAEgEBChCCAEQZABaiICQShqIAFBKGooAgA2AgAgAkEgaiABQSBqKQMANwMAIAJBGGogAUEYaikDADcDACACQRBqIAFBEGopAwA3AwAgAkEIaiABQQhqKQMANwMAIAQgBCkDwAE3A5ABDAILIAEqAiQiEEMAAAAAWw0AIARBkAFqIAcgECACKAKQAREUAAwBCyAEQZABaiIBQSBqQgA3AwAgAUEYakIANwMAIAFBEGpCADcDACABQQhqQgA3AwAgBEIANwOQASAEQYCAgPwDNgK4AQsgBEHgAGoiASAEQZABaiAGELsDIARBwAFqIgJBKGogAUEoaigCADYCACACQSBqIAFBIGopAwA3AwAgAkEYaiABQRhqKQMANwMAIAJBEGogAUEQaikDADcDACACQQhqIAFBCGopAwA3AwAgBCAEKQNgNwPAASAAIAIQ3AULIAkgBUEIaiIFRw0ACwsCQCAIRQRAIARB6AFqIBE4AgAgBEHMAWogBEEYaikDADcCACAEQdQBaiAEQSBqKQMANwIAIARB3AFqIARBKGopAwA3AgAgBEHkAWogBEEwaigCADYCACAEIA84AsABIAQgBCkDEDcCxAEgACAEQcABahDcBQwBCyAAIA9DAAAAAEMAAIA/IAAqAgwiD5UgD0MAAAAAWxuSEKEICyAEQcABaiIBIAAgAxD8BSAAQThqIARByAFqIgIoAgA2AgAgACAEKQPAATcCMCAAQcQAaiAAKgIMIg84AgAgAEFAayAPOAIAIAAgDzgCPCABIAAgAxCWAiAAQdgAaiAEQdABaikDADcCACAAQdAAaiACKQMANwIAIAAgBCkDwAE3AkggAC0AYCIBQQFxBEAgAEEANgI8CyABQQJxBEAgAEEANgJACyABQQRxBEAgAEEANgJECyABQQhxBEAgAEIANwJIIABB0ABqQQA2AgALIAFBEHEEQCAAQcwAakEANgIAIABB1ABqQgA3AgALIAFBIHEEQCAAQdAAakEANgIAIABB2ABqQgA3AgALIARB8AFqJAALnAwCAX8JfSMAQcABayILJAAgASABKAIAQQlyNgIAIAcgBCoCDCISIAhBFGoqAgAiDpQgBCoCACIMIAgqAggiD5STIAQqAgQiDSAIQQxqKgIAIhOUkyAEKgIIIhAgCEEQaioCACIUlJM4AgwgByAQIA6UIAwgE5QgEiAUlJIgDSAPlJOSOAIIIAcgECAPlCANIA6UIBIgE5QgDCAUlJOSkjgCBCAHIA0gFJQgEiAPlCAMIA6UkpIgECATlJM4AgAgDCAIQRxqKgIAIhOUIA0gCEEYaioCACIUlJMiDiAOkiEOIBAgFJQgDCAIQSBqKgIAIhGUkyIPIA+SIQ8gB0EYaiAEQRhqKgIAIBEgEiAOlCAMIA+UIA0gDSARlCAQIBOUkyIRIBGSIhGUk5KSkjgCACAHQRRqIARBFGoqAgAgEyASIA+UIBAgEZQgDCAOlJOSkpI4AgAgByAEKgIQIBQgEiARlCANIA6UIBAgD5STkpKSOAIQIAIqAgAhDCALQRhqIgEgCUEEaigCACIHNgIEIAEgCSgCACAHKAIIQQdqQXhxajYCACACIAwgDCALKAIYIAsoAhwoApwBEQsAIg0gDCANXRsgDSANXBs4AgAgC0EQaiIBIAlBBGooAgAiBzYCBCABIAkoAgAgBygCCEEHakF4cWo2AgAgC0EgaiALKAIQIAhBCGoiCCALKAIUKAKMARECACACKgIEIQwgAiALKgIgIg0gDZQgCyoCJCINIA2UkiALKgIoIg0gDZSSQwAAAACSEIgBIAsqAiySIg0gDSAMIAwgDV0bIAwgDFwbOAIEIAtBCGoiASAJQQRqKAIAIgI2AgQgASAJKAIAIAIoAghBB2pBeHFqNgIAIAsoAgwhAiALKAIIIQcCQAJAAkACQCAKKAIAQQFrDgIBAAILIAtB4ABqIgJBCGogCigCBCIBQQhqKQIANwMAIAJBEGogAUEQaikCADcDACACQRhqIAFBGGopAgA3AwAgAkEgaiABQSBqKQIANwMAIAJBKGogAUEoaigCADYCACALIAEpAgA3A2AMAgsgCioCBCIMQwAAAABbBEAgC0GAAWpCADcDACALQfgAakIANwMAIAtB8ABqQgA3AwAgC0HoAGpCADcDACALQYgBakGAgID8AzYCACALQgA3A2AMAgsgC0GQAWoiASAHQwAAgD8gAigCkAERFAAgASAMEKEIIAtB4ABqIgJBKGogAUEoaigCADYCACACQSBqIAFBIGopAwA3AwAgAkEYaiABQRhqKQMANwMAIAJBEGogAUEQaikDADcDACACQQhqIAFBCGopAwA3AwAgCyALKQOQATcDYAwBCyAKKgIEIgxDAAAAAFsEQCALQYABakIANwMAIAtB+ABqQgA3AwAgC0HwAGpCADcDACALQegAakIANwMAIAtBiAFqQYCAgPwDNgIAIAtCADcDYAwBCyALQeAAaiAHIAwgAigCkAERFAALIAtBMGogC0HgAGogCBC7AyAAKAIIIgggAEEEaigCAEYEQCAAIAgQhQYgACgCCCEICyAAIAhBAWo2AgggACgCACAIQQN0aiIAIAY2AgQgACAFNgIAIAtBkAFqIgBBKGogC0EwaiIBQShqKAIANgIAIABBIGogAUEgaikDADcDACAAQRhqIAFBGGopAwA3AwAgAEEQaiIFIAFBEGopAwA3AwAgAEEIaiICIAFBCGopAwA3AwAgCyALKQMwNwOQASADIAAQ3AUgACADIAQQ/AUgA0E4aiACKAIANgIAIAMgCykDkAE3AjAgA0HEAGogAyoCDCIMOAIAIANBQGsgDDgCACADIAw4AjwgACADIAQQlgIgA0HYAGogBSkDADcCACADQdAAaiACKQMANwIAIAMgCykDkAE3AkggAy0AYCIAQQFxBEAgA0EANgI8CyAAQQJxBEAgA0EANgJACyAAQQRxBEAgA0EANgJECyAAQQhxBEAgA0IANwJIIANB0ABqQQA2AgAL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aiAeOAIAIABBHGogHzgCACAAQRhqICI4AgAgAEEQakL/////DzcCACAAQQxqIAg2AgAgAEEIaiAMNgIAIABBOGoMAQsgCSgCCCICIAlBBGooAgBGBEAgCSACEPAFIAkoAgghAgsgCUEIaiELIAkoAgAgAkH0AGxqIgAgATYCBCAAQQM2AgAgAEE0akEBNgIAIABBMGogHDgCACAAQSxqIBo4AgAgAEEoaiAEOAIAIABBJGogBDgCACAAQSBqIB44AgAgAEEcaiAfOAIAIABBGGogIjgCACAAQRBqQv////8PNwIAIABBDGogCDYCACAAQQhqIAw2AgAgAEE4agsgBjYCACALIAJBAWo2AgAgByAIIBBqNgIAIA1BEGokAA8LIA8gAhD9CwALIAIgCxD8CwALQZj6wABBHUGg+8AAENsKAAtBiP/AAEEbQaCxwQAQ2woAC0GI/8AAQRtBsLHBABDbCgALQZj6wABBHUGg+8AAENsKAAtBgtXAAEEcQezVwAAQxAkAC0GI/8AAQRtBwLHBABDbCgALIAIgAEHQscEAEMwIAAvYCgIefQR/IwBBQGoiIyQAQwAAoDUQiAEhHQJAAkACQAJAAkAgA0EMaioCACIFIAWUIANBEGoqAgAiBiAGlJIgA0EUaioCACIIIAiUkkMAAAAAkhCIASIMQwAAAABbDQACQCAMQwAAgH9bDQAgDEMAAID/Ww0AIAyLIglDAAAANF8NASAJIAlDAAAANJRfDQELIAJBADYCvAEgAkEANgIcIAJBQGtBADYCACACQThqQgA3AgAgAUEMaiImKgIAIRogAkE0aiABICYgAUEEaioCACIeIAYgDJUiG4wiCpQgBSAMlSIQIAEqAgAiH5STIAggDJUiESABQQhqKgIAIiCUkyABQRBqKgIAIiEgCpQgECAalJMgESABQRRqKgIAIiKUk14bIiQqAggiBTgCACACQTBqICQqAgQiBjgCACACQSxqICQqAgAiCDgCACACQShqIAUgAyoCCCISkzgCACACQSRqIAYgAyoCBCITkzgCACACIAggAyoCACIUkzgCICAjQQhqIAIQOiARjCENIBCMIRxD//9/fyELQZDOACEkA0AgIyoCCCIHIAeUICMqAgwiDyAPlJIgIyoCECIOIA6UkkMAAAAAkiIFQwAAyCteRQ0DIA6MIAUQiAEiBZUh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BEYEQCAJQQxqDAELA0AgACAITw0CIAwgAEE4bGoiCSgCLCIAIARHDQALIAlBLGoLIB1CIIg+AgALIAtBCGoiCUEwaiAMIARBOGxqIgBBMGoiDikCADcDACAJQShqIABBKGoiESkCADcDACAJQSBqIhUgAEEgaiIWKQIANwMAIAlBGGoiFyAAQRhqIhgpAgA3AwAgCUEQaiIZIABBEGoiGikCADcDACAJQQhqIhsgAEEIaiIcKQIANwMAIAsgACkCADcDCCAMIAhBAWsiCUE4bGoiCCkCACEdIAhBCGopAgAhHiAIQRBqKQIAIR8gCEEYaikCACEgIAhBIGopAgAhISAIQShqKQIAISIgDiAIQTBqKQIANwIAIBEgIjcCACAWICE3AgAgGCAgNwIAIBogHzcCACAcIB43AgAgACAdNwIAIA8gCTYCFCAEIAlPBEAgByALKQMINwIAIAdBIGogFSkDADcCACAHQRhqIBcpAwA3AgAgB0EQaiAZKQMANwIAIAdBCGogGykDADcCAAwBCwJAIAApAjAiHaciACATTw0AIB1CIIinIQgCQAJ/IAkgECAAQQR0aiIPKAIIIgBGBEAgD0EIagwBCwNAIAAgCU8NAiAJIAwgAEE4bGoiDygCKCIARw0ACyAPQShqCyAENgIACyAIIBNPDQACfyAJIBAgCEEEdGoiCCgCDCIARgRAIAhBDGoMAQsDQCAAIAlPDQIgCSAMIABBOGxqIggoAiwiAEcNAAsgCEEsagsgBDYCAAsgByALKQMINwIAIAdBIGogC0EIaiIAQSBqKQMANwIAIAdBGGogAEEYaikDADcCACAHQRBqIABBEGopAwA3AgAgB0EIaiAAQQhqKQMANwIACyAKLQAsQQJGDQAgCkEwaiIAQSBqIApBCGoiBEEgaikDADcDACAAQRhqIARBGGopAwA3AwAgAEEQaiAEQRBqKQMANwMAIABBCGogBEEIaikDADcDACAKIAopAwg3AzACQCAKLQBURQ0AAkAgAUUNACASKAIkQQFGBEAgASADIBIoAiggEkEsaigCABDKBQsgFCgCJEEBRw0AIAEgAyANKAIwIBRBLGooAgAQygULIA0oApABIBIoAogBckEBcUUNACAKQQA6AFUgCkHsAGpBADYCACAKQeQAaiAKKQM4NwIAIAogCikDMDcCXCAKQQE2Algg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DEUNACAEQn83AgggBCAJOgAEIAQgCjYCACAHQQFqIQcLIAhBCGogBzYCAAJAIAAoAgQiBUEIaiIJKAIAIgcgBk8NACAGIAdrIQggCCAFQQRqKAIAIAciBmtLBEAgBSAHIAgQ8QUgBUEIaigCACEGCyAFKAIAIAZBGGxqIQQgCEECTwRAIAEgB2siCkEDcSEFIAdBf3MgAWpBA08EQCAKQXxxIQcDQCAEQv////v3//+//wA3AgAgBEHYAGpC////+////79/NwIAIARB0ABqQv////v3//+/fzcCACAEQcgAakL////79///v/8ANwIAIARBQGtC////+////79/NwIAIARBOGpC////+/f//79/NwIAIARBMGpC////+/f//7//ADcCACAEQShqQv////v///+/fzcCACAEQSBqQv////v3//+/fzcCACAEQRhqQv////v3//+//wA3AgAgBEEQakL////7////v383AgAgBEEIakL////79///v383AgAgBEHgAGohBCAHQQRrIgcNAAsLIAUEQANAIARC////+/f//7//ADcCACAEQRBqQv////v///+/fzcCACAEQQhqQv////v3//+/fzcCACAEQRhqIQQgBUEBayIFDQALCyAGIAhqQQFrIQYLIAhFDQAgBEL////79///v383AgggBEL////79///v/8ANwIAIARBEGpC////+////79/NwIAIAZBAWohBgsgCSAGNgIAIAAoAgAiCCgCCCEECwJAIAEgBEkEQCAIKAIAIAFBBHRqIgYgATYCCCAGQQxqIAI2AgAgACgCBCICKAIIIgYgAU0NASACKAIAIAFBGGxqIgIgAykCADcCACACQRBqIANBEGopAgA3AgAgAkEIaiADQQhqKQIANwIAIAAoAggiACgCCCIFIABBBGooAgBGBEAgACAFEIYGIAAoAgghBQsgACAFQQFqNgIIIAAoAgAgBUECdGogATYCACALQRBqJAAPCyABIARB1N7AABDMCAALIAEgBkHk3sAAEMwIAAuoCAIHfwN+IwBB0ABrIgIkAAJ/IAEoAgQiBUUEQCAAQQA2AgRBAAwBCyABIAVBAWs2AgQCQCABKAIAIgcoAgQiAUEHTQRAIAJCgcoANwMgIAJBIGoQtAohBAwBCyAHIAFBCGs2AgQgByAHKAIAIgFBCGo2AgAg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IgFBEGogBkEIaiIDQRBqKQIANwMAIAFBCGogA0EIaikCADcDACAAIAMpAgA3AwhBASAAQfzVwAAgAEEEakH81cAAIAFBqNTBABCpBAALIABBFGooAgBBACEDIAFBGHRBGHUQwwgiC0P//39+IAtD//9/fl0bIQtFBEAgCEEAEIoGIABBGGooAgAhAgsgAEEYaiACQQFqNgIAIAAoAhAgAkEGdGoiAEEAOgA8IABBADsAOSAAIAE6ADggAEIENwIsIABBADYCBCAAIAs4AgAgAEE0akEANgIAIABBJGpCADcCACAAQRxqQoCAgIDAADcCACAAQRRqQgQ3AgAgAEEMakIANwIAIABBCGpB+IzBADYCAAwFCyACQf8BcSABQf8BcUYEQCAEIQMMBQsgByAEQQZ0aiICLQA6IQogAkEBOgA6IAJBO2oiAi0AACEFIAIgAzoAAAJAIAoEQCADIAVNDQQgByAFQQZ0aiICQQE6ADwgAkE9aiADOgAADAELIAkgAzoAAAsgAEEUaigCACABQRh0QRh1EMMIIgtD//9/fiALQ///f35dGyELIAMiAkYEQCAIIAMQigYgACgCECEHIABBGGooAgAhAgsgAEEYaiACQQFqNgIAIAcgAkEGdGoiAkEBOgA8IAIgCjoAOiACIAM6ADkgAiABOgA4IAJCBDcCLCACQQA2AgQgAiALOAIAIAJBPWogBDoAACACQTtqIAU6AAAgAkE0akEANgIAIAJBJGpCADcCACACQRxqQoCAgIDAADcCACACQRRqQgQ3AgAgAkEMakIANwIAIAJBCGpB+IzBADYCACAAIAMQXwwECyAALQBhIgQgA08NAiAHIARBBnRqIgJBAToAPCACQT1qIAM6AAAgAEEUaigCACABQRh0QRh1EMMIIgtD//9/fiALQ///f35dGyELIAMiAkYEQCAIIAMQigYgACgCECEHIABBGGooAgAhAgsgACADOgBhIABBGGogAkEBajYCACAHIAJBBnRqIgJBADoAPCACQQE6ADogAiADOgA5IAIgAToAOCACQgQ3AiwgAkEANgIEIAIgCzgCACACQTtqIAQ6AAAgAkE0akEANgIAIAJBJGpCADcCACACQRxqQoCAgIDAADcCACACQRRqQgQ3AgAgAkEMakIANwIAIAJBCGpB+IzBADYCACAAIAMQXwwDCyAEIANB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C0GAAWooAgA2AgAgAEEkaiALQfAAaigCADYCACAAQTBqIAtB4ABqKAIANgIADAMLIABBBToANAwCCyADIAQoApwBEQsAIAYgBygCnAERCwCSIREgAyAEKAKgARELACEQIAYgBygCoAERCwAiEiASIBAgECASXRsgECAQXBshEEEBCyEKIAtB6ABqIAMgBCgCgAERAAAgC0H4AGogBiAHKAKAAREAAAJAIAsqAnQgCyoChAFgRQRAIAtBKGogEDgCACALIBE4AiQgCyAKNgIgIAtBiAFqIAEgBSAOIA8gBiAHIAIgDCANIAMgBCAIIAkgC0EgahBAIAstALwBIgNBBEcEQCALQSBqIgFBGGogC0GIAWoiAkEMaigCADYCACABQQxqIAJBGGooAgA2AgAgAUEwaiACQSRqKAIANgIAIAFBJGogAkEwaigCADYCACALIAspAowBNwMwIAsgCykDmAE3AiQgCyALKQKkATcDSCALIAspA7ABNwI8IAsgCyoCiAE4AiALIAsgAzoAVAwBCyALQZABaiAQOAIAIAsgETgCjAEgCyAKNgKIASALQSBqIAEgAiAMIA0gAyAEIAUgDiAPIAYgByAIIAkgC0GIAWoQQAsgACALKQMgNwIAIABBMGogC0EgaiIBQTBqKQMANwIAIABBKGogAUEoaikDADcCACAAQSBqIAFBIGopAwA3AgAgAEEYaiABQRhqKQMANwIAIABBEGogAUEQaikDADcCACAAQQhqIAFBCGopAwA3AgALIAtBwAFqJAAL9gYCG30CfyAAAn0gA0EIaioCACIEQwAAAACUIgVDAACAPyADQRhqKgIAIheYIg4gAyoCACIGlJMiByAHkiEMIAYgAigCBEH/////B3EiHyADKgIMIgogDJQgBiAGQwAAAACUIgggA0EEaioCACIHQwAAAACUIguTIgkgCZIiCZQgBCAOIAeUIAWTIg0gDZIiDZSTkrxBgICAgHhxcr4iGJQgByACKAIAQf////8HcSIgIAogDZQgBCAMlCAHIAmUk5K8QYCAgIB4cXK+Ig+UkyESIAQgD5QgBiACKAIIQf////8HcSICIAogCZQgByANlCAGIAyUk5IgDpO8QYCAgIB4cXK+Ig2UkyEPIAQgCiALQwAAgD8gA0EUaioCACIZmCIMIASUkyIJIAmSIhOUIAQgBSAIkyIJ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IAsgAyoCDCIVIBOUIAsgECALlCANIANBBGoqAgAiDJSTIhEgEZIiEpQgCiAPIAyUIBAgCpSTIhEgEZIiFJSTkiAQk7xBgICAgHhxIAIoAgRB/////wdxcr4iGZQgDCAVIBSUIAogE5QgDCASlJOSIA2TvEGAgICAeHEgAigCAEH/////B3FyviIalJMiESARkiERIAYgDyAdIBUgEZQgCyAKIBqUIAsgFSASlCAMIBSUIAsgE5STkiAPk7xBgICAgHhxIAIoAghB/////wdxcr4iE5STIhIgEpIiEpQgDCAMIBOUIAogGZSTIhQgFJIiFJSTkiATkpIgASgCCEH/////B3EgD7xBgICAgHhxcr6TlCANIBsgFSAUlCAMIBGUIAogEpSTkiAakpIgASgCAEH/////B3EgDbxBgICAgHhxcr6TlCAQIBwgFSASlCAKIBSUIAsgEZSTkiAZkpIgASgCBEH/////B3EgELxBgICAgHhxcr6TlJKSOAIAIAQqAnAiCiAOXkUNACAEKgJ8IRggBCoCeCEXIAQqAnQhFiAKIQ4LIAggBUEMaiIFRw0ACyAAIBY4AgQgACAOOAIAIABBDGogGDgCACAAQQhqIBc4AgAgBEGQAWokAAv2BgEIfyMAQTBrIgIkACACIAA2AggCQAJAAkACQAJAAkAgAEECSQRAAkACQCABIABByABsaigCDCIFQQJPDQAgASAFQcgAbGotAERFDQMgASAAQcgAbGpBEGooAgAiBkECTwRAIAYhBQwBCyABIAZByABsai0AREUNAyABIABByABsakEUaigCACIHQQJJDQEgByEFCyAFQQJBwIXDABDMCAALIAEgB0HIAGxqLQBERQ0BIAJBADYCDCABIABByABsaigCGCIDQQJLDQUgASAFQcgAbGogA0ECdGpBDGoiBCgCACAARw0CIAEgBUHIAGxqIANBAnRqIghBGGoiBCgCAA0DIAIgCEEkaigCACIINgIQIAIgASAAQcgAbGpBKGooAgAiBDYCFCAEIAhHDQQgAiABIAVByABsaiADQQFqQf8BcUEDcEECdGpBJGooAgAiBTYCECACIAEgAEHIAGxqIgMoAiQiBDYCFAJAIAQgBUcNACACQQE2AgwgA0EcaigCACIDQQJLDQYgASAGQcgAbGogA0ECdGoiCUEMaiIEKAIAIABHDQMg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k5KSIgYgASoCACIFjCIJYEUNACAFIAZgRQ0AIA0gE18NAQsgBSAGXQ0BQQAhAiAGIAldDQIgFCEIIAYhBSAOIQcMAwtBASECIAQEQCAGIQUMAwsgEyANkyEPIAUgBpMiECAFIAaSIhFdIA8gEF5xDQIgByAOIBAgEV4gDyARXnEiARshByAJIAYgARshBSAIIBQgARshCAwCCyAHIA4gDSATXyIBGyEHIAggFCABGyEIQQAhAgwBCyAHIA4gDSATXyIBGyEHIAggFCABGyEIIAkhBQsgACACOgAMIAAgFiAIIBIgDCAFlCALIAeUkyIGIAaSIg6UIAwgCiAHlCAMIAiUkyIGIAaSIgmUIAsgCyAIlCAKIAWUkyIGIAaSIgaUk5KSkjgCCCAAIBUgBSASIAmUIAogBpQgDCAOlJOSkpI4AgQgACAXIAcgEiAGlCALIA6UIAogCZSTkpKSOAIAC70FAQV/AkAgAEEIaiIHKAIAIgUgAU8NACABIAUiBGshBiAGIABBBGooAgAgBGtLBEAgACAFIAYQ8QUgAEEIaigCACEECyAAKAIAIARBGGxqIQMgBkECTwRAIAVBf3MgAWoiBUEHcSEBIAZBAmtBB08EQCAFQXhxIQUDQCADQgA3AgAgA0EQakIANwIAIANBCGpCADcCACADQRhqQgA3AgAgA0EgakIANwIAIANBKGpCADcCACADQTBqQgA3AgAgA0E4akIANwIAIANBQGtCADcCACADQcgAakIANwIAIANB0ABqQgA3AgAgA0HYAGpCADcCACADQeAAakIANwIAIANB6ABqQgA3AgAgA0HwAGpCADcCACADQYgBakIANwIAIANBgAFqQgA3AgAgA0H4AGpCADcCACADQaABakIANwIAIANBmAFqQgA3AgAgA0GQAWpCADcCACADQagBakIANwIAIANBsAFqQgA3AgAgA0G4AWpCADcCACADQcABaiEDIAVBCGsiBQ0ACwsgAQRAA0AgA0IANwIAIANBEGpCADcCACADQQhqQgA3AgAgA0EYaiEDIAFBAWsiAQ0ACwsgBCAGakEBayEECyAGRQRAIAQhAQwBCyADQgA3AgAgA0EQakIANwIAIANBCGpCADcCACAEQQFqIQELIAcgATYCAAJAAkACQCACRQRAQQQhAwwBCyACQf////8DcSIBIAJHDQEgAkEC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IA1BCGopAAA3AwAgCEEQaiANQRBqKQAANwMAIAhBGGogDUEYaikAADcDACAIQSBqIA1BIGopAAA3AwAgCEEoaiANQShqKQAANwMAIAhBMGogDUEwaikAADcDACAIQTdqIA1BN2opAAA3AAAgEEHgBGoiCEEIaiAVQQhqKQAANwMAIAhBEGogFUEQaikAADcDACAIQRhqIBVBGGopAAA3AwAgCEEgaiAVQSBqKQAANwMAIAhBKGogFUEoaikAADcDACAIQTBqIBVBMGopAAA3AwAgCEE3aiAVQTdqKQAANwAAIBAgDSkAADcDoAUgECAVKQAANwPgBCAQLQD8ByEUIBAtALwIIRogEC0A/AghCCAQQaAEaiILQTdqIBZBN2opAAA3AAAgC0EwaiAWQTBqKQAANwMAIAtBKGogFkEoaikAADcDACALQSBqIBZBIGopAAA3AwAgC0EYaiAWQRhqKQAANwMAIAtBEGogFkEQaikAADcDACALQQhqIBZBCGopAAA3AwAgECAWKQAANwOgBCAQLQC8CSELIBBBkgRqICFBAmotAAA6AAAgECAhLwAAOwGQBAsgEEHAB2oiEUE4aiAQQeAFaiISQThqKAIANgIAIBFBMGogEkEwaikDADcDACARQShqIBJBKGopAwA3AwAgEUEgaiASQSBqKQMANwMAIBFBGGogEkEYaikDADcDACARQRBqIBJBEGopAwA3AwAgEUEIaiASQQhqKQMANwMAIBAgECkD4AU3A8AHIBAgFDoA/AcgDSAQKQOgBTcAACANQQhqIBBBoAVqIhFBCGopAwA3AAAgDUEQaiARQRBqKQMANwAAIA1BGGogEUEYaikDADcAACANQSBqIBFBIGopAwA3AAAgDUEoaiARQShqKQMANwAAIA1BMGogEUEwaikDADcAACANQTdqIBFBN2opAAA3AAAgECAaOgC8CCAVIBApA+AENwAAIBVBCGogEEHgBGoiEUEIaikDADcAACAVQRBqIBFBEGopAwA3AAAgFUEYaiARQRhqKQMANwAAIBVBIGogEUEgaikDADcAACAVQShqIBFBKGopAwA3AAAgFUEwaiARQTBqKQMANwAAIBVBN2ogEUE3aikAADcAACAQIAg6APwIIBZBN2ogEEGgBGoiCEE3aikAADcAACAWQTBqIAhBMGopAwA3AAAgFkEoaiAI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aiABIAIgA0EBEIoDIAQoAgggBEHQAGokAEEBRgueCwEOfyMAQcAFayIGJAACQAJAAkAgAEUNACAAKAIAIgRBf0YNASAAIARBAWo2AgAgAUUNACABKAIAIgRBf0YNASABIARBAWo2AgAgAkUNACACKAIAIgRBf0YNASACIARBAWo2AgAgA0UNACADKAIAIgRBf0YNASADIARBAWo2AgAgBkEYaiIMIABBBGoiBEEIaigCADYCACAGQRBqIg0gBCkCADcDACAGQQhqIg4gAUEEaiIEQQhqKQIANwMAIAYgBCkCADcDACAGQSBqIgRBGGoiDyACQQRqIgVBCGooAgA2AgAgBEEQaiIQIAUpAgA3AwAgBEEIaiIRIANBDGopAgA3AwAgBiADKQIENwMgIwBB4ABrIgVBzQBqIgdBC2pCADcAACAFQTpqIghBC2pCADcAACAFQSdqIglBC2pCADcAACAFQRRqIgpBC2pCADcAACAFQQFqIgtBC2pCADcAACAFQgA3AFAgBkHwAmoiBEGZAWogBSkATTcAACAEQaEBaiAHQQhqKQAANwAAIARBqAFqIAdBD2ooAAA2AAAgBUIANwA9IARBvQFqIAhBCGopAAA3AAAgBUIANwAqIAVCADcAFyAFQgA3AAQgBEHEAWogCEEPaigAADYAACAEQbUBaiAFKQA6NwAAIARB4AFqIAlBD2ooAAA2AAAgBEHZAWogCUEIaikAADcAACAEQdEBaiAFKQAnNwAAIARB/AFqIApBD2ooAAA2AAAgBEH1AWogCkEIaikAADcAACAEQe0BaiAFKQAUNwAAIARBmAJqIAtBD2ooAAA2AAAgBEGRAmogC0EIaikAADcAACAEQYkCaiAFKQABNwAAIARBIGpCADcCACAEQRhqIgVCADcCACAEQgA3AhAgBEH8AGpCADcCACAEQYQBakIANwIAIARBjAFqQQA2AgAgBEEBOgCsAiAEQT82AqgCIARBpAJqQQA6AAAgBEGcAmpC////+wc3AgAgBEGIAmpBADoAACAEQYACakL////7BzcCACAEQewBakEAOgAAIARB5AFqQv////sHNwIAIARB0AFqQQA6AAAgBEHIAWpC////+wc3AgAgBEG0AWpBADoAACAEQawBakL////7BzcCACAEQZgBakEAOgAAIARBkAFqQv////sHNwIAIARB+ABqQf////sHNgIAIARB8ABqQoCAgIDw//+/fzcCACAEQegAakL////7////v/8ANwIAIARB4ABqQv////sHNwIAIARB2ABqQoCAgIDw//+/fzcCACAEQdAAakL////7////v/8ANwIAIARByABqQv////sHNwIAIARBQGtCgICAgPD//79/NwIAIARC////+////7//ADcCOCAEQTBqQgA3AgAgBEEoakKAgID8AzcCACAEQoCAgICAgIDAPzcCCCAEQgA3AgAgBkGgBWoiB0EYaiIJIAwoAgA2AgAgB0EQaiIIIA0pAwA3AwAgB0EIaiIKIA4pAwA3AwAgBiAGKQMANwOgBSAEIAcpAgA3AgAgBSAJKAIANgIAIARBEGogCCkCADcCACAEQQhqIAopAgA3AgAgBkFAayIFIARBsAIQ/wsaIAkgDygCADYCACAIIBApAwA3AwAgCiARKQMANwMAIAYgBikDIDcDoAUgBSAHKQIANwIcIAVBNGogCSgCADYCACAFQSxqIAgpAgA3AgAgBUEkaiAKKQIANwIAIAQgBUGwAhD/CxogBSAEEN0LIAMgAygCAEEBazYCACACIAIoAgBBAWs2AgAgASABKAIAQQFrNgIAIAAgACgCAEEBazYCAEG0AkEEEJQLIgBFDQIgAEEANgIAIABBBGogBkFAa0GwAhD/CxogBkHABWokACAADwsQ9AsACxD1CwALQbQCQQRB7OrDACgCACIAQZgHIAAbEQAAAAuVBAIHfwN9IwBBIGsiBSQAAkACQAJAAkAgAkEMaigCACIHIABBBGooAgAiAyAAKAIAIgZqTwRAIAEoAgghBCABKAIAIQkgBSAHNgIIIAUgAzYCBCAFIAIoAgAgBkECdGoiATYCACAAQQhqKAIAIgIgBEsNASADQQFqIgcgA2ohCCAIIAQgAmsgB2pLDQIgBSADNgIYIAUgAzYCFCAFIAkgAkECdGo2AhAgBUEQaiAFEMkBIQogACAAKgIQIgsgACoCHCAKIAAqAiCSIAsgACoCLJSTlJIiCiAAQRhqKgIAIgwgCiAMXRsgACoCFCIMIAogDF4bIgo4AhAgAiADaiIGIARLDQMgBCAHaiAGayAISQ0EAkAgA0UNACAKIAuTIQsgA0EBcUEAIQAgA0EBRwRAIAkgBkECdGohBEEAIQJBACADQX5xayEDIAEh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IQ0LIAsoAgAgDWogCjYAACALQQhqIA1BBGo2AgAgDi0A3QIhDSASKAIAIgpBCGoiDCgCACELIAsgCkEEaigCAEYEQCAKIAtBARDQBiAMKAIAIQsLIAwgC0EBajYCACAKKAIAIAtqIA06AAAgDkEQaikDACEgIA4pAwghISASKAIAIgpBCGoiDCgCACELIApBBGooAgAgC2tBD00EQCAKIAtBEBDQBiAMKAIAIQsLIAwgC0EQajYCACAKKAIAIAtqIgsgIDcACCALICE3AAAMAQsgDkEIaigCACEQIBIoAgAiC0EEaiEMIAtBCGoiCigCACINIAwoAgBGBEAgCyANQQEQ0AYgCigCACENCyALKAIAIA1qQQE6AAAgCiANQQFqIg02AgAgDCgCACANa0EDTQRAIAsgDUEEENAGIAooAgAhDQsgCiANQQRqNgIAIAsoAgAgDWogEDYAAAsgEyAOQeACaiIORw0ACwsgDygCDCEOIBIoAgAiCkEIaiIMKAIAIQsgCkEEaigCACALa0EDTQRAIAogC0EEENAGIAwoAgAhCwsgDCALQQRqNgIAIAooAgAgC2ogDjYAAAJAIA9BEGooAgBFBEAgEigCACIKQQhqIgwoAgAhCyALIApBBGooAgBGBEAgCiALQQEQ0AYgDCgCACELCyAMIAtBAWo2AgAgCigCACALakEAOgAADAELIA9BFGooAgAhDiASKAIAIgtBBGohCiALQQhqIgwoAgAiDSAKKAIARgRAIAsgDUEBENAGIAwoAgAhDQsgCygCACANakEBOgAAIAwgDUEBaiINNgIAIAooAgAgDWtBA00EQCALIA1BBBDQBiALQQhqKAIAIQ0LIAtBCGogDUEEajYCACALKAIAIA1qIA42AAALIA81AhghICASKAIAIgpBCGoiDCgCACELIApBBGooAgAgC2tBB00EQCAKIAtBCBDQBiAMKAIAIQsLIAwgC0EIajYCACAKKAIAIAtqICA3AAAgD0EkaigCACEOIA8oAhwhCiASKAIAIgxBCGooAgAhECAMQQRqKAIAIBBrQQdNBEAgDCAQQQgQ0AYgDEEIaigCACEQCyAMQQhqIg8gEEEIaiILNgIAIAwoAgAgEGogDq03AAAgDgRAIAogDkEDdGohDgNAIApBBGooAgAhECAKKAIAIQ0gDEEEaiIRKAIAIAtrQQNN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QQhqIgUgAjYCBCAFIAE2AgAgBygCDCEJIABBCGooAgAiBCAHKAIIIgZNBEAgAEEIagJAIAZBAWoiAiAETQ0AIAQhBSACIARrIgggAEEEaigCACAEa0sEQCAAIAQgCBCMBiAAQQhqKAIAIQULIAAoAgAgBUEDdGohASAIQQJPBH8gBiAEayILQQdxIQIgBiAEQX9zakEHTwRAIAtBeHEhBANAIAFC/////w83AgAgAUE4akL/////DzcCACABQTBqQv////8PNwIAIAFBKGpC/////w83AgAgAUEgakL/////DzcCACABQRhqQv////8PNwIAIAFBEGpC/////w83AgAgAUEIakL/////DzcCACABQUBrIQEgBEEIayIEDQALCyACBEADQCABQv////8PNwIAIAFBCGohASACQQFrIgINAAsLIAUgCGpBAWsFIAULIQIgCEUNACABQv////8PNwIAIAJBAWohAgsgAiIENgIACyAEIAZLBEAgACgCACAGQQN0aiIAIAM2AgQgACAJNgIAIAdBEGokAA8LIAYgBEGAqcAAEMwIAAutAwEHfyMAQRBrIgkkAAJAAkACQAJAAkAgAkUEQEEAIQUMAQsgBkECSw0DIAUgBkECdCIFaiEMIAUgCWohDUEAIQUgAiIGIQoDQCACIAVNDQIgASAFQQJ0aiIOKAIAIgsgBE8NBSAJIAMgC0EYbGoiCEEIaioCACAIQRRqKgIAkkMAAAA/lDgCCCAJIAhBBGoqAgAgCEEQaioCAJJDAAAAP5Q4AgQgCSAIKgIAIAhBDGoqAgCSQwAAAD+UOAIAAkAgDSoCACAMKgIAXkUEQCAFQQFqIQUMAQsgCkEBayIKIAJPDQQgDiABIApBAnRqIggoAgA2AgAgCCALNgIACyAGQQFrIgYNAAsLAkACQCAHBEAgBUUNASACIAVGDQELIAIgBU8NAUHw9MEAQSNBzIrCABDECQALIAJBAXYhBQsgACAFNgIEIAAgATYCACAAQQxqIAIgBWs2AgAgACABIAVBAnRqNgIIIAlBEGokAA8LIAUgAkGMisIAEMwIAAsgCiACQbyKwgAQzAgACyABKAIAIgsgBE8NAEGsisIAEN0KAAsgCyAEQZyKwgAQzAgAC/sCAgp/An4gASACQQJ0aiEKAkAgBARAIARBAWohCyAEQQJ0IQwDQCAAIAlB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NgIAIAhFDQAgCCgCAA0BIAhBfzYCACAJRQ0AIAkoAgANASAJQX82AgAgCkUNACAKKAIADQEgCkF/NgIAIABBCGogAUEEaiACQQRqIANBBGogBEEEaiAFQQRqIAZBBGogB0EEaiAIQQRqIAlBBGogCkEEakHIgcAAQYzCwABByIHAAEGwwsAAECAgCkEANgIAIAlBADYCACAIQQA2AgAgB0EANgIAIAZBADYCACAFQQA2AgAgBEEANgIAIANBADYCACACIAIoAgBBAWs2AgAgASABKAIAQQFrNgIAIABBADYCAA8LEPQLAAsQ9QsAC5kDAQR/IwBBQGoiASQAAkACQCAABEAgACgCAA0BIABBADYCACAAQcwAaiIELQAAIQMgBEECOgAAIAFBEGogAEEcaikCADcDACABQRhqIABBJGopAgA3AwAgAUEgaiAAQSxqKQIANwMAIAFBKGogAEE0aikCADcDACABQTBqIABBPGopAgA3AwAgAUE4aiAAQcQAaikCADcDACABQQZqIABBzwBqLQAAOgAAIAEgAEEUaikCADcDCCABIABBzQBqLwAAOwEEIANBAkcEQEHAAEEEEJQLIgJFDQMgAkEANgIAIAIgASkDCDcCBCACIAM6ADwgAiABLwEEOwA9IAJBDGogAUEQaikDADcCACACQRRqIAFBGGopAwA3AgAgAkEcaiABQSBqKQMANwIAIAJBJGogAUEoaikDADcCACACQSxqIAFBMGopAwA3AgAgAkE0aiABQThqKQMANwIAIAJBP2ogAUEGai0AADoAAAsgAUFAayQAIAIPCxD0CwALEPULAAtBwABBBEHs6sMAKAIAIgBBmAcgABsRAAAAC4QDAgd/An0jAEEQayICJAAgAAJ/IAACfyABKAIEIgVBB00EQCACQoHKADcDCCACQQhqELQKDAELIAEgBUEIayIENgIEIAEgASgCACIDQQhqNgIAIAIgAykAABD7BSACKAIABEAgAigCBAwBCwJAAkAgAigCBCIGRQRAQQAhBAwBCyAEQQNNDQEgASAFQQxrIgc2AgQgASADQQxqNgIAQQEhBCAGQQFGDQAgB0EESQ0BIAMoAAghByABIAVBEGsiCDYCBCABIANBEGo2AgBBAiEEIAZBAkYNACAIQQRJDQEgAyoADCEJIAEgBUEUayIENgIEIAEgA0EUajYCACAGQQNHBEAgBEEESQ0CIAEgBUEYazYCBCABIANBGGo2AgBBAyACQZCAwAAQnAgMAwsgAyoAECEKIAAgBzYCBCAAQQxqIAo4AgAgAEEIaiAJOAIAQQAMAwsgBCACQZCAwAAQnAgMAQsgAkKBygA3AwggAkEIahC0Cgs2AgRBAQs2AgAgAkEQaiQAC8gIAgx/AX4jAEFAaiIHJAACQAJAAkAgAEUNACAAKAIAIgZBf0YNASAAIAZBAWo2AgAgAkUNACACKAIAIgZBf0YNASACIAZBAWo2AgAgBEUNACAEKAIAIgZBf0YNASAEIAZBAWo2AgAgAkEEaiEKIARBBGohDCMAQaABayIGJAAgBkEYaiIIIAO9IhJCIIg+AgQgCCASPgIAAkACQCAAQQRqIgkgBigCGCIOIAYoAhwiDxCkCSIIBEAgBkEQaiILIAG9IhJCIIg+AgQgCyASPgIAIAkgBigCECAGKAIUEKQJIglFDQEgBkEIaiAJEPkJIAYoAgwhCyAGKAIIIQ0gBiAIEPkJIAZB4ABqIAlBzABqIAogDSALIAhBzABqIAwgBigCACAGKAIEIAUQtAICfwJAIAYtAJQBIgpBBUcEQCAGQShqIghBMGoiDCAGQeAAaiIJQTBqKAIANgIAIAhBKGoiCyAJQShqKQMANwMAIAhBIGoiDSAJQSBqKQMANwMAIAhBGGoiECAJQRhqKQMANwMAIAhBEGoiESAJQRBqKQMANwMAIAhBCGoiCCAJQQhqKQMANwMAIAZBJmogBkGXAWotAAA6AAAgBiAGKQNgNwMoIAYgBi8AlQE7ASQgCkEERw0BCyAHIAYpAmA3AgAgB0E4aiAGQeAAaiIIQThqKAIANgIAIAdBMGogCEEwaikCADcCACAHQShqIAhBKGopAgA3AgAgB0EgaiAIQSBqKQIANwIAIAdBGGogCEEYaikCADcCACAHQRBqIAhBEGopAgA3AgAgB0EIaiAIQQhqKQIANwIAQQQhCiAGQd0AagwBCyAHIA82AgQgByAONgIAIAcgBikDKDcCCCAHQRBqIAgpAwA3AgAgB0EYaiARKQMANwIAIAdBIGogECkDADcCACAHQShqIA0pAwA3AgAgB0EwaiALKQMANwIAIAdBOGogDCgCADYCACAGQSRqCyEIIAcgCjoAPCAHIAgvAAA7AD0gB0E/aiAIQQJqLQAAOgAAIAZBoAFqJAAMAgtBsL3AAEHMAEHwv8AAEOkLAAtBsL3AAEHMAEGkvsAAEOkLAAsgBCAEKAIAQQFrNgIAIAIgAigCAEEBazYCACAAIAAoAgBBAWs2AgBBACEAIActADwiAkEERwRAQcQAQQQQlAsiAEUNAyAAQQA2AgAgACAHKQMANwIEIAAgAjoAQCAAQQxqIAdBCGopAwA3AgAgAEEUaiAHQRBqKQMANwIAIABBHGogB0EYaikDADcCACAAQSRqIAdBIGopAwA3AgAgAEEsaiAHQShqKQMANwIAIABBNGogB0EwaikDADcCACAAQTxqIAdBOGooAgA2AgAgAEHDAGogB0E9aiICQQJqLQAAOgAAIAAgAi8AADsAQQsgB0FAayQAIAAPCxD0CwALEPULAAtBxABBBEHs6sMAKAIAIgBBmAcgABsRAAAAC/oCAwd/AX0BfiABKAIIIQIgASgCACEEIAAoAgAoAgAiA0EIaiIAKAIAIQEgA0EEaigCACABa0EHTQRAIAMgAUEIENAGIAAoAgAhAQsgACABQQhqIgA2AgAgAygCACABaiACrTcAACACBEAgBCACQQR0aiEIIANBBGohBwNAIAQoAgghBSAEKAIAIQEgBygCACAAa0EHTQRAIAMgAEEIENAGIANBCGooAgAhAAsgA0EIaiIGIABBCGoiAjYCACADKAIAIABqIAWtNwAAIAUEQCAFQQJ0IQUDQCABKgIAIQkgAUEEaiEBIAYgBygCACACa0EDSwR/IAIFIAMgAkEEENAGIAYoAgALIgBBBGoiAjYCACADKAIAIABqIAk4AAAgBUEEayIFDQALCyAEQRBqIQEgBDUCDCEKIAcoAgAgAmtBB00EQCADIAJBCBDQBiAGKAIAIQILIAYgAkEIaiIANgIAIAMoAgAgAmogCjcAACAIIAEiBEcNAAsLQQALhwMCBn8CfiMAQYABayIBQThqIgNBEGogAEEQaikCADcDACADQQhqIABBCGoiBSkCADcDACABIAApAgA3AzggAUH8AGogA0EUaigCACIENgIAIAFB0ABqIgNBFGogBDYCACADQRhqIAEpAkQiCTcDACADQSBqIgYgBDYCACADQQhqIgQgBSgCADYCACABIAk3AnQgASAJNwJcIAEgACkCACIKNwNQIAFBCGoiAEEoaiIFIANBKGop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AUEwaiAAQagCaikCADcDACABQShqIABBoAJqKQIANwMAIAFBIGogAEGYAmopAgA3AwAgAUEYaiAAQZACaikCADcDACABQRBqIABBiAJqKQIANwMAIAFBCGogAEGAAmopAgA3AwAgASAAQfgBaikCADcDACADBEBByABBBBCUCyICRQ0DIAIgAzYCBCACQQA2AgAgAiABKQMANwIIIAJBEGogAUEIaikDADcCACACQRhqIAFBEGopAwA3AgAgAkEgaiABQRhqKQMANwIAIAJBKGogAUEgaikDADcCACACQTBqIAFBKGopAwA3AgAgAkE4aiABQTBqKQMANwIAIAJBQGsgAUE4aikDADcCAAsgAUFAayQAIAIPCxD0CwALEPULAAtByABBBEHs6sMAKAIAIgBBmAcgABsRAAAAC8cKAgl/AX4jAEEwayIFJAAgACgCACIAKAIAIQIgAEEANgIAAkAgAgRAIAApAgQiC6ciBygCAEGUAWohAyACKAIAIQAjAEEgayICJAAgAy0AACEEIANBAToAACACIARBAXEiBDoABwJAAkACQCAERQRAQfzqwwAoAgBB/////wdxBEACf0Hk7sMALQAABEBB6O7DACgCAEUMAQtB5O7DAEEBOgAAQejuwwBBADYCAEEBC0UhCAsgAy0AAQ0BIAEoAgAiBigCACEEIAYgBEEBajYCACAEQQBIDQIgA0EMaigCACIEIANBCGooAgBGBEAgA0EEaiAEEOEFIAMoAgwhBAsgA0EEaigCACAEQQxsaiIJIAY2AgggCUEANgIEIAkgADYCACADIARBAWoiBjYCDCADIANBGGooAgBFIAQgBktxOgAcAkAgCA0AQfzqwwAoAgBB/////wdxRQ0AAn9B5O7DAC0AAARAQejuwwAoAgBFDAELQeTuwwBBAToAAEHo7sMAQQA2AgBBAQsNACADQQE6AAELIANBADoAACACQSBqJAAMAwsgAkEcakEANgIAIAJBGGpB1MbAADYCACACQgE3AgwgAkHc08AANgIIIAJBB2ogAkEIahDQCAALIAIgCDoADCACIAM2AghBrNfAAEErIAJBCGpB2NfAAEGoy8AAEKQIAAsACyALQiCIpyEDIAcoAgAiAigCjAEgAigCAGogAigCQCACKAKQAUF/c3FGBEAgBygCACICKAKQASACKAJAcUUNAgsgASgCACIEKAIQIQIgBCACQQEgAhs2AhAMAQtB8NbAAEErQcDNwAAQxAkACyAFQQhqIgJBEGogA0EQaikDADcDACACQQhqIANBCGopAwA3AwAgBSADKQMANwMIAkACQCABIAIQsgQiAUEBa0ECTwRAAkACQCABQQFrDgMAAAMBCwALQbjLwABBKEHI0cAAEMQJAAsgBUEIaiEIIAcoAgBBlAFqIQFBACEGQQAhByMAQSBrIgMkACABLQAAIQIgAUEBOgAAIAMgAkEBcSICOgAHAkACQAJAIAJFBEBB/OrDACgCAEH/////B3EEQAJ/QeTuwwAtAAAEQEHo7sMAKAIARQwBC0Hk7sMAQQE6AABB6O7DAEEANgIAQQELRSEGCyABLQABDQEgAUEMaigCACICQQxsIQkgAUEEaigCAEEMayEEIAJB/////wNxIQoCQAJAA0AgByAKRg0BIAlBDGshCSAHQQFqIQcgBEEMaiIEKAIAIABHDQALIAdBAWsiACACTw0EIAggBCkCADcCACAIQQhqIARBCGooAgA2AgAgBCAEQQxqIAkQgQwaIAFBDGogAkEBayICNgIADAELIAhBADYCCAsgASACIAFBGGooAgByRToAHAJAIAYNAEH86sMAKAIAQf////8HcUUNAAJ/QeTuwwAtAAAEQEHo7sMAKAIARQwBC0Hk7sMAQQE6AABB6O7DAEEANgIAQQELDQAgAUEBOgABCyABQQA6AAAgA0EgaiQADAMLIANBHGpBADYCACADQRhqQdTGwAA2AgAgA0IBNwIMIANB3NPAADYCCCADQQdqIANBCGoQ0AgACyADIAY6AAwgAyABNgIIQazXwABBKyADQQhqQdjXwABBiMvAABCkCAALIAAgAkH4ysAAEMsIAAsgBSgCEEUNASAFQShqIgEgBUEQaigCACIANgIAIAUgBSkDCDcDICAAIAAoAgAiAEEBazYCACAAQQFHDQAgARCICQsgBUEwaiQADwtB8NbAAEErQbjRwAAQxAkAC+kCAgF/DX0jAEEwayIEJAAgBCABIAIQsAIgASoCYCIFQwAAAABgRQRAIARBLGpBADYCACAEQczxwQA2AiggBEIBNwIcIARB2IDCADYCGCAEQRhqQeCAwgAQggoACyAEQRBqKgIAIQYgBEEUaioCACEHIAQqAgAhCCAEKgIEIQkgBCoC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QCAALQCYBCIERQ0CAkAgASADQQJ0aigCACIDKAIIIgEgAC0AlAQiAk0NACADKAIAIAJBMGxqIgEgAEHkAGoqAgA4AiQgAUEoaiAAQaQBaikCADcCACAEQQFGDQMgAygCCCIBIABBlQRqLQAAIgJNDQAgAygCACACQTBsaiIBIABB2AFqKgIAOAIkIAFBKGogAEGYAmopAgA3AgAgBEECRg0DIAMoAggiASAAQZYEai0AACICTQ0AIAMoAgAgAkEwbGoiASAAQcwCaioCADgCJCABQShqIABBjANqKQIANwIAIARBA0YNAyADKAIIIgEgAEGXBGotAAAiAksNAgsgAiABQdTMwQAQzAgACyADIAJBtMzBABDMCAALIAMoAgAgAkEwbGoiASAAQcADaioCADgCJCABQShqIABBgARqKQIANwIAIARBBEYNAEEEQQRBxMzBABDMCAALC+0CAQJ/AkACQCACIAAoAvACIgNLBEAgAC0A+AIiBEUNAgJAIAEgA0ECdGooAgAiAygCCCIBIAAtAPQCIgJNDQAgAygCACACQTBsaiIBIABBxABqKgIAOAIkIAFBKGogAEHsAGopAgA3AgAgBEEBRg0DIAMoAggiASAAQfUCai0AACICTQ0AIAMoAgAgAkEwbGoiASAAQZQBaioCADgCJCABQShqIABBvAFqKQIANwIAIARBAkYNAyADKAIIIgEgAEH2AmotAAAiAk0NACADKAIAIAJBMGxqIgEgAEHkAWoqAgA4AiQgAUEoaiAAQYwCaikCADcCACAEQQNGDQMgAygCCCIBIABB9wJqLQAAIgJLDQILIAIgAUH4zsEAEMwIAAsgAyACQdjOwQAQzAgACyADKAIAIAJBMGxqIgEgAEG0AmoqAgA4AiQgAUEoaiAAQdwCaikCADcCACAEQQRGDQBBBEEEQejOwQAQzAgACwuhAgEBfwJAIABBBGooAgAiAUUNACABrUIMfqdFDQAgACgCABCxAQsCQCAAQRBqKAIAIgFFDQAgAUEDdEUNACAAQQxqKAIAELEBCwJAIABBHGooAgAiAUUNACABrUIUfqdFDQAgAEEYaigCABCxAQsCQCAAQShqKAIAIgFFDQAgAUEFdEUNACAAQSRqKAIAELEBCwJAIABBNGooAgAiAUUNACABQQJ0RQ0AIABBMGooAgAQsQELAkAgAEFA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DQEMAgsgAiABNgIAIAENAEGc68MAQZzrwwAoAgBBfiAAKAIcd3E2AgAPCyABIAQ2AhggACgCECICBEAgASACNgIQIAIgATYCGAsgAEEUaigCACIARQ0AIAFBFGogADYCACAAIAE2AhgLC4QCAgt9AX8gAkEEaioCACABQRRqKgIAkyIKIAFBCGoqAgAiA5QgAkEIaioCACABQRhqKgIAkyILIAFBBGoqAgAiBZSTIgYgBpIhBiALIAEqAgAiCJQgAioCACABQRBqKgIAkyIEIAOUkyIHIAeSIQcCQCAEIAEqAgwiDCAGlCADIAeUIAUgBCAFlCAKIAiUkyIEIASSIgSUk5KSIg0gACoCACIJjF0NACAJIA1dDQAgCiAMIAeUIAggBJQgAyAGlJOSkiIDIAAqAgQiCYxdDQAgAyAJXg0AIAsgDCAElCAFIAaUIAggB5STkpIiAyAAKgIIIgVeRSADIAWMXUF/c3EhDgsgDgueAgECfyMAQfAAayIBJAACQCAABEAgACgCAA0BIABBADYCACABQThqIgJBEGogAEEQaikCADcDACACQQhqIABBCGopAgA3AwAgAkEYaiAAQRhqKQIANwMAIAJBIGogAEEgaikCADcDACACQShqIABBKGopAgA3AwAgAkEwaiAAQTBqKQIANwMAIAFBCGogAUHEAGopAgA3AwAgAUEQaiABQcwAaikCADcDACABQRhqIAFB1ABqKQIANwMAIAFBIGogAUHcAGopAgA3AwAgAUEoaiABQeQAaikCADcDACABQTBqIAFB7ABqKAIANgIAIAEgACkCADcDOCABIAEpAjw3AwAgABCxASABEKgFIAFB8ABqJAAPCxD0CwALEPULAAu6AgEEfyMAQTBrIgEkAAJAAkAgAARAIAAoAgANASAAQQA2AgAgAEHwAmoiBCgCACEDIARBAjYCACABQShqIABB6AJqKQIANwMAIAFBCGogAEH8AmopAgA3AwAgAUEQaiAAQYQDaikCADcDACABQRhqIABBjANqKQIANwMAIAEgAEHgAmopAgA3AyAgASAAQfQCaikCADcDACADQQJHBEBBOEEEEJQLIgJFDQMgAkEANgIAIAIgASkDIDcCBCACIAM2AhQgAiABKQMANwIYIAJBDGogAUEoaikDADcCACACQSBqIAFBCGopAwA3AgAgAkEoaiAB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lJOSkjgCECADIAsgDCAElCAIIAWUIAkgBpSTkpI4AgwgAyAKIAwgBpQgCSAElCAHIAWUk5KSOAIIIANBGGogACADQQhqQQEQRCADLQAkIANBQGskAEEARwuzDAIOfwR9IwBBsAJrIgkkAAJAAkACQCAARQ0AIAAoAgAiBkF/Rg0BIAAgBkEBajYCACABRQ0AIAEoAgAiBkF/Rg0BIAEgBkEBajYCACACRQ0AIAIoAgAiBkF/Rg0BIAIgBkEBajYCACAAQQRqIQ0gAUEEaiEOIANBAEchEiMAQZAHayIGJAACQAJAAkAgAkEEaiIDKgIAIhUgFZQgAyoCBCIWIBaUkiADKgIIIhQgFJSSQwAAAACSIhdDAAAAAF4EQCAGIBQgFxCIASIUlTgCuAIgBiAWIBSVOAK0AiAGIBUgFJU4ArACIwBBEGsiCCQAIAhBCGoiCiAGQbACaiIMQQhqKAIANgIAIAggDCkCADcDACMAQbAFayIDJAAgA0HIAmpCADcDACADQdACakIANwMAIANBrANqQgA3AgAgA0G0A2pCADcCACADQbwDakEANgIAIANBC2pCADcAACADQZ0FaiIHQQtqQgA3AAAgA0GKBWoiD0ELakIANwAAIANB9wRqIhBBC2pCADcAACADQgA3A8ACIANCADcAAyADQgA3AKAFIANCADcAjQUgA0IANwD6BCADQeQEaiIRQQtqQgA3AAAgA0IANwDnBCADQdEDaiADQQhqIhMpAAA3AAAgA0HYA2ogA0EPaigAADYAACADQckDaiADKQAANwAAIANB7QNqIAdBCGopAAA3AAAgA0H0A2ogB0EPaigAADYAACADQeUDaiADKQCdBTcAACADQZAEaiAPQQ9qKAAANgAAIANBiQRqIA9BCGopAAA3AAAgA0GBBGogAykAigU3AAAgA0GsBGogEEEPaigAADYAACADQaUEaiAQQQhqKQAANwAAIANBnQRqIAMpAPcENwAAIANByARqIBFBD2ooAAA2AAAgA0HBBGogEUEIaikAADcAACADQbkEaiADKQDkBDcAACADQdQEakEAOgAAIANBzARqQv////sHNwIAIANBuARqQQA6AAAgA0GwBGpC////+wc3AwAgA0GcBGpBADoAACADQZQEakL////7BzcCACADQYAEakEAOgAAIANB+ANqQv////sHNwMAIANB5ANqQQA6AAAgA0HcA2pC////+wc3AgAgA0HIA2pBADoAACADQcADakL////7BzcDACADQagDakH////7BzYCACADQaADakKAgICA8P//v383AwAgA0GYA2pC////+////7//ADcDACADQZADakL////7BzcDACADQYgDakKAgICA8P//v383AwAgA0GAA2pC////+////7//ADcDACADQfgCakL////7BzcDACADQfACakKAgICA8P//v383AwAgA0HgAmpCADcDACADQdgCakKAgID8AzcDACADQQE6ANwEIANBPjYC2AQgA0L////7////v/8ANwPoAiADQoCAgICAgIDAPzcDuAIgA0IANwOwAiATIAooAgA2AgAgAyAIKQIANwMAIANBsAJqIgcgAxDiAyADIAdBsAIQ/wsiA0GwAmoiB0EIaiAKKAIANgIAIAMgCCkCADcDsAIgA0EcaiAHEOIDIAcgA0GwAhD/CxogBkHgBGoiCiAHQbACEP8LGiADQbAFaiQAIAhBEGokACAGQQhqIA1BCGooAgA2AgAgBiANKQIANwMAIAwgCiAGENwKIApBCGogDkEIaigCADYCACAGIA4pAgA3A+AEIAYgDCAKENAKIBINAQwCCyAJQQI6AJgBDAILIAZB4ARqIgMgBkGwAhD/CxogBiAFOAK0AiAGIAQ4ArACIAMgBkGwAmopAgA3AjggAyADLQCpAkEBcjoAqQIgBiADQbACEP8LGgsgBkHgBGoiAyAGQbACEP8LGiAGQbACaiIIIAMQ3QsgCSAIQbACEP8LGgsgBkGQB2okACACIAIoAgBBAWs2AgAgASABKAIAQQFrNgIAIAAgACgCAEEBazYCACAJLQCYASIAQQJHBEBBtAJBBBCUCyILRQ0DIAtBADYCACALQQRqIAlBmAEQ/wsaIAsgADoAnAEgC0GdAWogCUGZAWpBlwEQ/wsaCyAJQbACaiQAIAsPCxD0CwALEPULAAtBtAJBBEHs6sMAKAIAIgBBmAcgABsRAAAAC5kCAQR/IwBBMGsiASQAAkACQCAABEAgACgCAA0BIABBADYCACAAQcgCaiIEKAIAIQMgBEECNgIAIAFBKGogAEHAAmopAgA3AwAgAUEQaiAAQdQCaikCADcDACABQRhqIABB3AJqKAIANgIAIAEgAEG4AmopAgA3AyAg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KgIAIAYgASoCJCIDlJI4AgggACAKKgIAIAUgA5SSOAIEIAAgCSoCACAEIAOUkjgCAAv1AQEFfyAAKAIAIQEgACgCCCICBEAgAkGoAWwhAgNAAkAgASgCAEUNACABQRhqIgQoAgAiBSgCACEDIAUgA0EBazYCACADQQFGBEAgBCgCACABQRxqKAIAEKYICyABQSBqKAIAQQJJDQAgAUEkaigCABCxAQsgAUGoAWohASACQagBayICDQALIAAoAgAhAQsCQCAAQQRqKAIAIgJFDQAgAq1CqAF+p0UNACABELEBCwJAIABBIGooAgAiAUUNACABQQN0RQ0AIABBHGooAgAQsQELAkAgAEEsaigCACIBRQ0AIAFBA3RFDQAgAEEoaigCABCxAQsLrAgBCH8jAEHwBGsiBCQAAkACQAJAIABFDQAgACgCACICQX9GDQEgACACQQFqNgIAIAFFDQAgASgCACICQX9GDQEgASACQQFqNgIAIwBB4ABrIgNBzQBqIgVBC2pCADcAACADQTpqIgZBC2pCADcAACADQSdqIgdBC2pCADcAACADQRRqIghBC2pCADcAACADQQFqIglBC2pCADcAACADQgA3AFAgBEGwAmoiAkGZAWogAykATTcAACACQaEBaiAFQQhqKQAANwAAIAJBqAFqIAVBD2ooAAA2AAAgA0IANwA9IAJBvQFqIAZBCGopAAA3AAAgA0IANwAqIANCADcAFyADQgA3AAQgAkHEAWogBkEPaigAADYAACACQbUBaiADKQA6NwAAIAJB4AFqIAdBD2ooAAA2AAAgAkHZAWogB0EIaikAADcAACACQdEBaiADKQAnNwAAIAJB/AFqIAhBD2ooAAA2AAAgAkH1AWogCEEIaikAADcAACACQe0BaiADKQAUNwAAIAJBmAJqIAlBD2ooAAA2AAAgAkGRAmogCUEIaikAADcAACACQYkCaiADKQABNwAAIAJBIGpCADcCACACQRhqQgA3AgAgAkIANwIQIAJB/ABqQgA3AgAgAkGEAWpCADcCACACQYwBakEANgIAIAJBAToArAIgAkEHNgKoAiACQaQCakEAOgAAIAJBnAJqQv////sHNwIAIAJBiAJqQQA6AAAgAkGAAmpC////+wc3AgAgAkHsAWpBADoAACACQeQBakL////7BzcCACACQdABakEAOgAAIAJByAFqQv////sHNwIAIAJBtAFqQQA6AAAgAkGsAWpC////+wc3AgAgAkGYAWpBADoAACACQZABakL////7BzcCACACQfgAakH////7BzYCACACQfAAakKAgICA8P//v383AgAgAkHoAGpC////+////7//ADcCACACQeAAakL////7BzcCACACQdgAakKAgICA8P//v383AgAgAkHQAGpC////+////7//ADcCACACQcgAakL////7BzcCACACQUBrQoCAgIDw//+/fzcCACACQv////v///+//wA3AjggAkEwakIANwIAIAJBKGpCgICA/AM3AgAgAkKAgICAgICAwD83AgggAkIANwIAIARB4ARqIgNBCGoiBSAAQQRqIgZBCGooAgA2AgAgBCAGKQIANwPgBCAEIAIgAxDcCiAFIAFBDGooAgA2AgAgBCABKQIENwPgBCACIAQgAxDQCiAEIAIQ3QsgASABKAIAQQFrNgIAIAAgACgCAEEBazYCAEG0AkEEEJQLIgBFDQIgAEEANgIAIABBBGogBEGwAhD/CxogBEHwBGokACAADwsQ9AsACxD1CwALQbQCQQRB7OrDACgCACIAQZgHIAAbEQAAAAvwAQECfyMAQeAAayIBJAACQCAABEAgACgCAA0BIABBADYCACABQTBqIgJBEGogAEEQaikCADcDACACQQhqIABBCGopAgA3AwAgAkEYaiAAQRhqKQIANwMAIAJBIGogAEEgaikCADcDACACQShqIABBKGooAgA2AgAgAUEIaiICQQhqIAFBPGopAgA3AwAgAkEQaiABQcQAaikCADcDACACQRhqIAFBzABqKQIANwMAIAJBIGogAUHUAGopAgA3AwAgASAAKQIANwMwIAEgASkCNDcDCCAAELEBIAIQsQYgAUHgAGokAA8LEPQLAAsQ9QsAC8ELAgx/BH0jAEGwAmsiByQAAkACQAJAIABFDQAgACgCACIDQX9GDQEgACADQQFqNgIAIAFFDQAgASgCACIDQX9GDQEgASADQQFqNgIAIAJFDQAgAigCACIDQX9GDQEgAiADQQFqNgIAIABBBGohCSABQQRqIQojAEHwBGsiBCQAAkAgAkEEaiIDKgIAIhAgEJQgAyoCBCIRIBGUkiADKgIIIg8gD5SSQwAAAACSIhJDAAAAAF4EQCAEIA8gEhCIASIPlTgCCCAEIBEgD5U4AgQgBCAQIA+VOAIAIwBBEGsiBiQAIAZBCGoiCCAEQQhqKAIANgIAIAYgBCkCADcDACMAQbAFayIDJAAgA0HIAmpCADcDACADQdACakIANwMAIANBrANqQgA3AgAgA0G0A2pCADcCACADQbwDakEANgIAIANBC2pCADcAACADQZ0FaiIFQQtqQgA3AAAgA0GKBWoiC0ELakIANwAAIANB9wRqIgxBC2pCADcAACADQgA3A8ACIANCADcAAyADQgA3AKAFIANCADcAjQUgA0IANwD6BCADQeQEaiINQQtqQgA3AAAgA0IANwDnBCADQdEDaiADQQhqIg4pAAA3AAAgA0HYA2ogA0EPaigAADYAACADQckDaiADKQAANwAAIANB7QNqIAVBCGopAAA3AAAgA0H0A2ogBUEPaigAADYAACADQeUDaiADKQCdBTcAACADQZAEaiALQQ9qKAAANgAAIANBiQRqIAtBCGopAAA3AAAgA0GBBGogAykAigU3AAAgA0GsBGogDEEPaigAADYAACADQaUEaiAMQQhqKQAANwAAIANBnQRqIAMpAPcENwAAIANByARqIA1BD2ooAAA2AAAgA0HBBGogDUEIaikAADcAACADQbkEaiADKQDkBDcAACADQdQEakEAOgAAIANBzARqQv////sHNwIAIANBuARqQQA6AAAgA0GwBGpC////+wc3AwAgA0GcBGpBADoAACADQZQEakL////7BzcCACADQYAEakEAOgAAIANB+ANqQv////sHNwMAIANB5ANqQQA6AAAgA0HcA2pC////+wc3AgAgA0HIA2pBADoAACADQcADakL////7BzcDACADQagDakH////7BzYCACADQaADakKAgICA8P//v383AwAgA0GYA2pC////+////7//ADcDACADQZADakL////7BzcDACADQYgDakKAgICA8P//v383AwAgA0GAA2pC////+////7//ADcDACADQfgCakL////7BzcDACADQfACakKAgICA8P//v383AwAgA0HgAmpCADcDACADQdgCakKAgID8AzcDACADQQE6ANwEIANBNzYC2AQgA0L////7////v/8ANwPoAiADQoCAgICAgIDAPzcDuAIgA0IANwOwAiAOIAgoAgA2AgAgAyAGKQIANwMAIANB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aiANKQMANwIAIAVBDGogDikDADcCAEEBCzYCACAEQZABaiQADAILQbC9wABBzABBgMDAABDpCwALQbC9wABBzABBpL7AABDpCwALIAAgACgCAEEBazYCAAJAIAkoAghFBEBBACEADAELQThBBBCUCyIARQ0DIABBADYCACAAIAlBCGpBBHIiBSkCADcCBCAAQQxqIAVBCGopAgA3AgAgAEEUaiAFQRBqKQIANwIAIABBHGogBUEYaikCADcCACAAQSRqIAVBIGopAgA3AgAgAEEsaiAFQShqKQIANwIAIABBNGogBUEwaigCADYCAAsgCUFAayQAIAAPCxD0CwALEPULAAtBOEEEQezqwwAoAgAiAEGYByAAGxEAAAAL5QECCX0BfyMAQRBrIgwkACACKgIAIAFBEGoqAgCTIgkgAUEEaioCACIGlCACQQRqKgIAIAFBFGoqAgCTIgogASoCACIHlJMiBCAEkiEEIAogAUEIaioCACIIlCACQQhqKgIAIAFBGGoqAgCTIgMgBpSTIgUgBZIhBSAMIAMgASoCDCILIASUIAYgBZQgByADIAeUIAkgCJSTIgMgA5IiA5STkpI4AgggDCAKIAsgA5QgByAElCAIIAWUk5KSOAIEIAwgCSALIAWUIAggA5QgBiAElJOSkjgCACAAIAwQZCAMQRBqJAAL5gECCX0BfyMAQRBrIgwkACACKgIAIAFBEGoqAgCTIgkgAUEEaioCACIGlCACQQRqKgIAIAFBFGoqAgCTIgogASoCACIHlJMiBCAEkiEEIAogAUEIaioCACIIlCACQQhqKgIAIAFBGGoqAgCTIgMgBpSTIgUgBZIhBSAMIAMgASoCDCILIASUIAYgBZQgByADIAeUIAkgCJSTIgMgA5IiA5STkpI4AgggDCAKIAsgA5QgByAElCAIIAWUk5KSOAIEIAwgCSALIAWUIAggA5QgBiAElJOSkjgCACAAIAwQkgEgDEEQaiQAC+UBAgl9AX8jAEEQayIMJAAgAioCACABQRBqKgIAkyIJIAFBBGoqAgAiBpQgAkEEaioCACABQRRqKgIAkyIKIAEqAgAiB5STIgQgBJIhBCAKIAFBCGoqAgAiCJQgAkEIaioCACABQRhqKgIAkyIDIAaUkyIFIAWSIQUgDCADIAEqAgwiCyAElCAGIAWUIAcgAyAHlCAJIAiU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dGpBACABIAVLGyIFKAIAIAJHDQAgBUEEaigCACADRg0BCyAEIAE2ArACIABBBGooAgAgAUYEQCAAIAEQhQYgACgCACEGIABBCGooAgAhAQsgAEEIaiABQQFqNgIAIAYgAUEDdGoiACADNgIEIAAgAjYCAAsLkQICAn0EfyAAKAIIIgRBJGwiBUUEQEP//39/DwsgACgCACEDIARBAWtB/////wNxAn8gBEEBcUUEQEP//39/IQEgAwwBCyADQRxqKAIAIANBIGooAgAiACgCCEEHakF4cWogACgCnAERCwAiAUP//39/IAFD//9/f10bIQEgA0EkagshAARAIAMgBWohAwNAIAEgASAAQRxqKAIAIABBIGooAgAiBCgCCEEHakF4cWogBCgCnAERCwAiAiABIAJdGyACIAJcGyICIAIgAEFAaygCACAAQcQAaigCACIEKAIIQQdqQXhxaiAEKAKcARELACIBIAEgAl4bIAEgAVwbIQEgAyAAQcgAaiIARw0ACwsgAQueAgIDfQR/IAAoAggiBkEkbCIHRQRAQ///f38PCyAAKAIAIQQgBkEBa0H/////A3ECfyAGQQFxRQRAQ///f38hAiAEDAELQ///f39D//9/fyAEQRxqKAIAIARBIGooAgAiACgCCEEHakF4cWogACgCoAERCwAiASABQ///f39dGyABIAFcGyECIARBJGoLIQAEQCAEIAdqIQUDQCAAQRxqKAIAIABBIGooAgAiBCgCCEEHakF4cWogBCgCoAERCwAhASAAQUBrKAIAIABBxABqKAIAIgQoAghBB2pBeHFqIAQoAqABEQsAIgMgAyABIAEgAiABIAJeGyACIAJcGyIBIAEgA10bIAEgAVwbIQIgBSAAQcgAaiIARw0ACwsgAgv/AQIBfwF9AkACQAJAIAEgA0kEQCAAKAIkIgQgA08NASACIAFBDGxqIgMqAgAgAiAEQQxsaiICKgIAkyAAKgIAlCADKgIEIAIqAgSTIABBBGoqAgCUkiADKgIIIAIqAgiTIABBCGoqAgCUkiIFQwAAADReRQ0CIAUgACoCQF5FDQMgACABNgI8IAAgBTgCQAwDCyABIANBxIPDABDMCAALIAQgA0HUg8MAEMwIAAtB+ILDAEE5QbSDwwAQxAkACyAAQThqKAIAIgMgAEE0aigCAEYEQCAAQTBqIAMQlAYgACgCOCEDCyAAIANBAWo2AjggACgCMCADQQJ0aiABNgIAC90BAQN/IAAoAhAhASAAQRhqKAIAIgIEQCABIAJBqAFsaiECA0ACQCABQQRqKAIAIgNFDQAgA61CMH6nRQ0AIAEoAgAQsQELAkAgAUGYAWooAgAiA0UNACADrUIofqdFDQAgAUGUAWooAgAQsQELIAIgAUGoAWoiAUcNAAsgACgCECEBCwJAIABBFGooAgAiAkUNACACrUKoAX6nRQ0AIAEQsQELAkAgACgCHCIBRQ0AIAEgAEEgaiIBKAIAKAIAEQcAIAEoAgAiASgCBEUNACABKAIIGiAAKAIcELEBCwv+AQICfwF+IwBBsAFrIgUkAAJAAkAgAEUNACAAKAIADQEgAEF/NgIAIAJFDQAgAigCAA0BIAJBfzYCACADRQ0AIAMoAgANASADQX82AgAgBUEIaiIGIAG9IgdCIIg+AgQgBiAHPgIAIAVBEGogAEEEaiAFKAIIIAUoAgwgAkEEaiADQQRqIARBAEcQnAECQCAFKAI0QQJGDQAgBSgCICIGKAIAIQQgBiAEQQFrNgIAIARBAUYEQCAFKAIgIAUoAiQQpggLIAUoAihBAkkNACAFKAIsELEBCyADQQA2AgAgAkEANgIAIABBADYCACAFQbABaiQADwsQ9AsACxD1CwAL7QEBCH0gAioCACIGIAaUIAIqAgQiAyADlJIgAioCCCIEIASUkkMAAAAAkhCIASEFIAMgBZUhCAJAAkACQCAEIAWVIgMgA5QgBiAFlSIFIAWUQwAAAACSkkMAAAAAkhCIASIEQwAAAABcBEAgCCABKgIAIgaUIgkgAyADIASVIAEqAgQiCpQiB5QgBSAFIASVIAqUIgSUIAmTkl4NASAGjCEGDAMLIAEqAgAgCJghBgwBC0MAAAAAIQcLQwAAAAAhBAsgACAHIAMgASoCCCIDlJI4AgggACAGIAggA5SSOAIEIAAgBCAFIAOUkjgCAAvkAQEBfyMAQRBrIgIkACACQQA2AgwgACACQQxqAn8CQAJAIAFBgAFPBEAgAUGAEEkNASABQYCABE8NAiACIAFBP3FBgAFyOgAOIAIgAUEMdkHgAXI6AAwgAiABQQZ2QT9xQYABcjoADUEDDAMLIAIgAToADEEBDAILIAIgAUE/cUGAAXI6AA0gAiABQQZ2QcABcjoADEECDAELIAIgAUE/cUGAAXI6AA8gAiABQRJ2QfABcjoADCACIAFBBnZBP3FBgAFyOgAOIAIgAUEMdkE/cUGAAXI6AA1BBAsQ9gEgAkEQaiQAC5gCAgR/AX4jAEEgayIDJAACQAJAAkAgAEUNACAAKAIAIgRBf0YNASAAIARBAWo2AgAgAkUNACACKAIAIgRBf0YNASACIARBAWo2AgAgA0EIaiIEIAG9IgdCIIg+AgQgBCAHPgIAIABBBGogAygCCCADKAIMEKQJIgRFDQIgA0EYaiACQQxqKAIANgIAIAMgAikCBDcDECADIARBEGoiBUEEaigCACIGNgIEIAMgBSgCACAGKAIIQQdqQXhxajYCACADKAIAIARBzABqIANBEGogAygCBCgCSBEFACACIAIoAgBBAWs2AgAgACAAKAIAQQFrNgIAIANBIGokAA8LEPQLAAsQ9QsAC0GwvcAAQcwAQaS+wAAQ6QsAC/UBAgF/AX0jAEEwayIFJAAgBSABIAIgAkEMahCdAUEAIQICQCAFKAIARQ0AAkAgBSoCBCIGQwAAAABdRQRAIAMgBmBFDQIgACAGOAIEIABBCGogBUEIaiIBKQIANwIAIABBEGogAUEIaikCADcCAAwBCyAFQShqKAIAIQEgBEUEQCADIAVBGGoqAgAiA2BFDQIgACADOAIEIABBCGogBUEcaiICKQIANwIAIABBFGogATYCACAAQRBqIAJBCGooAgA2AgAMAQsgAEIANwIEIABBDGpCADcCACAAQRRqIAE2AgALQQEhAgsgACACNgIAIAVBMGokAAvmAQEIfSAAIAEqAgAiAyADlCABQQRqKgIAIgMgA5SSEIgBOAIMIAAgAkEYaioCACACQQxqKgIAIgMgAioCACIHQwAAAACUIgQgAkEEaioCACIIQwAAAACUIgWTIgYgBpIiBpQgByACQQhqKgIAIglDAAAAAJQiCiAEkyIEIASSIgSUIAggBSAKkyIFIAWSIgWUk5JDAAAAAJKSOAIIIAAgAkEUaioCACADIASUIAkgBZQgByAGlJOSQwAAAACSkjgCBCAAIAJBEGoqAgAgAyAFlCAIIAaUIAkgBJSTkkMAAAAAkpI4AgALiAICAX8EfQJAAkACfyAAvCIBQYCAgAROBEAgAUH////7B0sNAkMAAAAAIQBBgX8gAUGAgID8A0cNARoMAgsgAUH/////B3FFBEBDAACAvyAAIACUlQ8LIAFBAEgNAiAAQwAAAEyUvCEBQeh+CyABQY32qwJqIgFBF3ZqsiEDIAFB////A3FB84nU+QNqvkMAAIC/kiIAIABDAAAAQJKVIgQgBJQiBSAFlCECIANDgHExP5QgACADQ9H3FzeUIAQgACAAQwAAAD+UlCIAIAUgAkPu6ZE+lEOqqio/kpQgAiACQyaeeD6UQxPOzD6SlJKSlJIgAJOSkiEACyAADwsgACAAk0MAAAAAlQvYDAISfwV9IwBBMGsiCCQAAkACQAJAIAQEQCAEKAIAIgpBf0YNASAEIApBAWo2AgAgAUEBaiIBIABBAWoiAGwgA0cNAiAIIAE2AhggCCAANgIUIAggAzYCECAIIAM2AgwgCCACNgIIIAhBKGogBEEMaigCADYCACAIIAQpAgQ3AyAjAEGAAWsiDSQAIA1B2ABqIg5BEGogCEEIaiIAQRBqKAIANgIAIA5BCGogAEEIaikCADcDACANIAApAgA3A1ggDUHwAGoiEUEIaiAIQSBqIgBBCGooAgA2AgAgDSAAKQIANwNwIA1BCGohBiMAQSBrIhAkAAJAAkACQAJAIA5BDGooAgAiB0ECSQ0AIA5BEGooAgAiFEECSQ0AIAcgFGwiC0UNAyAOKAIAIgAgB0ECdGoiASAAIAAgACAHQQAgCxtBAnRqIgBGIgMbIgIqAgAhFyALQQFrIhVFBEAgFyEYDAQLIAEgACADGyIDIAIgFUEAR0ECdGoiD0YhCSAHQQJ0IgAgAmoiASAPIAkbIQUgC0ECayIKRQ0BIAtBA2shEgJAIAtBAXFFBEAgFyEYIAMhACACIQwMAQsgFyAFKgIAIhggFyAYYBshGCABIAIgAyAPRiIAGyIMIAdBAnRqIQEgAyAHQQAgABtBAnRqIgAgBUEEaiIKRiEJIAEgCiAJGyITIQUgEiEKCyASBEADQCAHQQJ0IhMgASAMIAlBAXEiARsiFmohDCAFQQRqIgkgACAHQQAgARtBAnRqIgBGIQEgGCAFKgIAIhkgGCAZYBsiGCAMIAkgARsiBSoCACIZIBggGWAbIRggACAHQQAgARtBAnRqIgAgBUEEaiIFRiEJIBMgDCAWIAEbIgxqIgEgBSAJGyITIQUgCkECayIKDQALCyAYIBMqAgAiGSAYIBlgGyEYIBVFDQMgAiAHQQJ0aiIJIA8gAyAPRiIFGyEBIAtBAmsiCkUNAiALQQFxBEAgFyABKgIAIhkgFyAZXxshFyALQQNrIQogCSACIAMgD0YiABsiAiAHQQJ0aiEJIAMgB0EAIAAbQQJ0aiIDIAFBBGoiAEYhBSAJIAAgBRsiACEBCyASRQRAIAAhAQwDCwNAIAkgAiAFQQFxIgAbIhIgB0ECdCIMaiECIAFBBGoiBSADIAdBACAAG0ECdGoiA0YhACAXIAEqAgAiGSAXIBlfGyIXIAIgBSAAGyIBKgIAIhkgFyAZXxshFyADIAdBACAAG0ECdGoiAyABQQRqIgFGIQUgDCACIBIgABsiAmoiCSABIAUbIQEgCkECayIKDQALDAILIBBBHGpBADYCACAQQczxwQA2AhggEEIBNwIMIBBBtOLCADYCCCAQQQhqQbziwgAQggoACyAAIAJqIA8gAyAPRhshASAXIAUqAgAiGCAXIBhgGyEYCyAXIAEqAgAiGSAXIBlfGyEXCyARKgIIIRogESoCACEbIBEqAgQhGUEBIQUCQAJAAkAgFEEBayIBIAdBAWsiAmwiAARAIABBAEgNASAAQQEQlAsiBUUNAiAFQQAgABCADBoLIAYgBTYCFCAGIBEpAgA3AiggBiAOKQIANwIAIAYgAEEBdDYCTCAGQcgAaiAaQwAAAD+UIho4AgAgBkHEAGogGCAZlDgCACAGQUBrIBtDAAAAP5QiGDgCACAGQTxqIBqMOAIAIAZBOGogFyAZlDgCACAGIBiMOAI0IAZBJGogATYCACAGQSBqIAI2AgAgBkEcaiAANgIAIAZBGGogADYCACAGQTBqIBFBCGooAgA2AgAgBkEIaiAOQQhqKQIANwIAIAZBEGogDkEQaigCADYCACAQQSBqJAAMAgsQgQoACyAAQQFB7OrDACgCACIAQZgHIAAbEQAAAAtB2ABBBBCUCyIARQRAQdgAQQRB7OrDACgCACIAQZgHIAAbEQAAAAsgAEEIaiANQQhqQdAAEP8LGiAAQoGAgIAQNwIAIAhB+MrCADYCBCAIIAA2AgAgDUGAAWokACAIKAIEIQEgCCgCACECIAQgBCgCAEEBazYCAEEMQQQQlAsiAEUNAyAAIAE2AgggACACNgIEIABBADYCACAIQTBqJAAgAA8LEPQLAAsQ9QsAC0GcgsAAQdoAQeSDwAAQ2QoAC0EMQQRB7OrDACgCACIAQZgHIAAbEQAAAAvgAgECfyMAQSBrIgEkACAALQAAIQIgAEEBOgAAIAEgAkEBcSICOgAHAkAgAkUEQEEAIQJB/OrDACgCAEH/////B3EEQAJ/QeTuwwAtAAAEQEHo7sMAKAIARQwBC0Hk7sMAQQE6AABB6O7DAEEANgIAQQELRSECCyAALQABDQEgAEE0ai0AAEUEQCAAQQE6ADQgAEEEahCDBCAAQRxqEIMECwJAIAINAEH86sMAKAIAQf////8HcUUNAAJ/QeTuwwAtAAAEQEHo7sMAKAIARQwBC0Hk7sMAQQE6AABB6O7DAEEANgIAQQELDQAgAEEBOgABCyAAQQA6AAAgAUEgaiQADwsgAUEcakEANgIAIAFBGGpByIHAADYCACABQgE3AgwgAUGAmcAANgIIIAFBB2ogAUEIahDPCAALIAEgAjoADCABIAA2AghB2JzAAEErIAFBCGpBhJ3AAEHMh8AAEKQIAAvcAgECfyMAQSBrIgEkACAALQAAIQIgAEEBOgAAIAEgAkEBcSICOgAHAkAgAkUEQEEAIQJB/OrDACgCAEH/////B3EEQAJ/QeTuwwAtAAAEQEHo7sMAKAIARQwBC0Hk7sMAQQE6AABB6O7DAEEANgIAQQELRSECCyAALQABDQEgAEEEahCDBCAAIABBDGooAgAgAEEYaigCAHJFOgAcAkAgAg0AQfzqwwAoAgBB/////wdxRQ0AAn9B5O7DAC0AAARAQejuwwAoAgBFDAELQeTuwwBBAToAAEHo7sMAQQA2AgBBAQsNACAAQQE6AAELIABBADoAACABQSBqJAAPCyABQRxqQQA2AgAgAUEYakHIgcAANgIAIAFCATcCDCABQYCZwAA2AgggAUEHaiABQQhqEM8IAAsgASACOgAMIAEgADYCCEHYnMAAQSsgAUEIakGEncAAQcCGwAAQpAgAC/YBAQN/AkACQAJAIAIgAUHUAGooAgAiA0kEQCABKAJMIAJBDGxqIgMoAgAiBCABQcgAaigCACICTw0BIAIgAygCBCIFTQ0CIAMoAggiAyACTw0DIAAgASgCQCIBIANBDGxqIgIpAgA3AhggACABIARBDGxqIgMpAgA3AgAgACABIAVBDGxqIgEpAgA3AgwgAEEgaiACQQhqKAIANgIAIABBCGogA0EIaigCADYCACAAQRRqIAFBCGooAgA2AgAPCyACIANB/OTCABDMCAALIAQgAkGM5cIAEMwIAAsgBSACQZzlwgAQzAgACyADIAJBrOXCABDMCAAL1AEBCX0gACABLQAMOgAMIAEqAgQiCSACKgIAIgaUIAEqAgAiCiACQQRqKgIAIgeUkyIEIASSIQQgCiACQQhqKgIAIgiUIAEqAggiAyAGlJMiBSAFkiEFIAAgAkEYaioCACADIAJBDGoqAgAiCyAElCAGIAWUIAcgAyAHlCAJIAiUkyIDIAOSIgOUk5KSkjgCCCAAIAJBFGoqAgAgCSALIAWUIAggA5QgBiAElJOSkpI4AgQgACACQRBqKgIAIAogCyADlCAHIASUIAggBZSTkpKSOAIAC94BAQV9IAFBBGoqAgAiBSACKgIEjJQgAioCACABKgIAIgaUkyACKgIIIAFBCGoqAgAiB5STIQgCQCAERUUgCEMAAAAAXnFFBEAgCCAGIAJBDGoqAgCUIAUgAkEQaioCAJSSIAcgAkEUaioCAJSSlSIJQwAAAABgIAMgCWBxDQEgAEEENgIQDwsgAEIANwIAIABCAjcCECAAQQhqQgA3AgAPCyAAQgI3AhAgACAJOAIAIAAgB4wgByAIQwAAAABeIgEbOAIMIAAgBYwgBSABGzgCCCAAIAaMIAYgARs4AgQLkg4CAn8afSMAQeAAayICJAAgAkEoaiAAQShqKAIANgIAIAJBIGogAEEgaikCADcDACACQRhqIABBGGopAgA3AwAgAkEQaiAAQRBqKQIANwMAIAJBCGogAEEIaikCADcDACACIAApAgA3AwAgAkEwaiIDQShqIAFBKGooAgA2AgAgA0EgaiABQSBqKQIANwMAIANBGGogAUEYaikCADcDACADQRBqIAFBEGopAgA3AwAgA0EIaiABQQhqKQIANwMAIAIgASkCADcDMCMAQUBqIgEkAAJAAkACQCACKgIAIg5DAAAAAFwNACACQQRqKgIAQwAAAABcDQAgAkEIaioCAEMAAAAAXA0AIAIqAgxDAAAAAFwNACACKgIQQwAAAABcDQAgAkEUaioCAEMAAAAAXA0AIAJBGGoqAgBDAAAAAFwNACACKgIcQwAAAABcDQAgAkEgaioCAEMAAAAAXA0AIAJBJGoqAgAiBUMAAAAAWwRAIAJBKGoqAgBDAACAP1sNAiACQSRqKgIAIQULIAVDAAAAAFwNACACQShqKgIAQwAAgL9bDQELAkACQCADKgIAIgdDAAAAAFwEQCADQQRqKgIAIQgMAQsgA0EEaioCACIIQwAAAABcDQAgA0EIaioCAEMAAAAAXA0AIAMqAgxDAAAAAFwNACADKgIQQwAAAABcDQAgA0EUaioCAEMAAAAAXA0AIANBGGoqAgBDAAAAAFwNACADKgIcQwAAAABcDQAgA0EgaioCAEMAAAAAXA0AIANBJGoqAgAiBUMAAAAAWwRAIANBKGoqAgBDAACAP1sNAiADQSRqKgIAIQULIAVDAAAAAFwNACADQShqKgIAQwAAgL9bDQELIAJBBGoqAgAhCSACKgIIIQogAyoCCCEFIAIqAgwhBCADKgIMIQYgAUEYaiACEOgBQwAAAABDAACAP0MAAAAAQwAAgD8gBJUgBEMAAAAAWxsiDEMAAAAAQwAAgD8gBpUgBkMAAAAAWxsiBJIiFJUgFEMAAAAAWxsiBiAMIAqUIAQgBZSSlCEQIAkgDJQgBCAIlJIgBpQhESAOIAyUIAcgBJSSIAaUIRICfSACKgIMIgVDAAAAAFsEQCABQTRqKgIAIRUgAUEsaioCACEWIAFBKGoqAgAhFyABKgIwIRggASoCJCEZIAEqAiAhGiABKgIcIRsgASoCGCEcIAFBOGoqAgAMAQtDAACAPyAFlSIIIBEgCZMiCSAQIAqTIgaUQwAAAACSlCIFIAFBNGoqAgCSIRUgCCASIA6TIgQgBpRDAAAAAJKUIgcgASoCMJIhGCAFIAFBLGoqAgCSIRYgCCAEIAmUQwAAAACSlCIFIAEqAiSSIRkgByABKgIgkiEaIAUgASoCHJIhGyAGIAaUIgYgBCAElCIHIAkgCZQiBZKSQwAAAACSIQQgCCAFIASSlCABQShqKgIAkiEXIAggByAEkpQgASoCGJIhHCAIIAYgBJKUIAFBOGoqAgCSCyEFIANBBGoqAgAhCiADKgIAIQQgAyoCCCEGIAFBGGogAxDoAQJ9IAMqAgwiB0MAAAAAWwRAIAFBOGoqAgAhDSABQTRqKgIAIR0gAUEsaioCACEMIAFBKGoqAgAhBCABKgIwIQ4gASoCJCEIIAEqAiAhCSABKgIcIQogASoCGAwBCyARIAqTIhMgECAGkyILlEMAAAAAkkMAAIA/IAeVIg+UIgcgAUE0aioCAJIhHSASIASTIg0gC5RDAAAAAJIgD5QiBiABKgIwkiEOIAcgAUEsaioCAJIhDCANIBOUQwAAAACSIA+UIgcgASoCJJIhCCAGIAEqAiCSIQkgByABKgIckiEKIAsgC5QiBCANIA2UIgYgEyATlCIHkpJDAAAAAJIhCyAPIAQgC5KUIAFBOGoqAgCSIQ0gDyAHIAuSlCABQShqKgIAkiEEIA8gBiALkpQgASoCGJILIQcgASAQOAIQIAEgETgCDCABIBI4AgggAUE4aiAFIA2SOAIAIAFBNGogFSAdkjgCACABQSxqIBYgDJI4AgAgAUEoaiAXIASSOAIAIAEgGCAOkjgCMCABIBkgCJI4AiQgASAaIAmSOAIgIAEgGyAKkjgCHCABIBwgB5I4AhggACABQQhqIBQgAUEYahCCAgwCCyAAIAIpAgA3AgAgAEEoaiACQShqKAIANgIAIABBIGogAkEgaikCADcCACAAQRhqIAJBGGopAgA3AgAgAEEQaiACQRBqKQIANwIAIABBCGogAkEIaikCADcCAAwBCyAAIAMpAgA3AgAgAEEoaiADQShqKAIANgIAIABBIGogA0EgaikCADcCACAAQRhqIANBGGopAgA3AgAgAEEQaiADQRBqKQIANwIAIABBCGogA0EIaikCADcCAAsgAUFAayQAIAJB4ABqJAALnwIBBH0gASoCBCIEIASUIgNDAABAQJQhBSABKgIAIgQgA0PbD0lAlJQiAyADkkMAAEBAlSAClCECIAVDAACgQZUgBCAElEMAAIBAlEMAAEBAlEMAAKBClZIgApQiBhCIASEDIAVDAAAgQZUgApQQiAEhBSAGEIgBIQYgAEEkakKAgICAgICAwD83AgAgAEIANwIcIABBADYCCCAAIARDAAAAv5Q4AgQgAEEANgIAIABDAAAAAEMAAIA/IAOVIANDAAAAAFsbOAIQIABDAAAAAEMAAIA/IAKVIAJDAAAAAFsbOAIMIABBFGpDAAAAAEMAAIA/IAWVIAVDAAAAAFsbOAIAIABBGGpDAAAAAEMAAIA/IAaVIAZDAAAAAFsbOAIAC9YBAQp9An8gASoCACIMIAIqAgAiBpQgAUEEaioCACINIAJBBGoqAgAiB5SSIAFBCGoqAgAiDiACQQhqKgIAIgWUkiIIQwAAAABfIgEEQCAFIQkgByEKIAYhC0EBIAMNARoLIAUgDiAIlJMhCSAHIA0gCJSTIQogBiAMIAiUkyELIAELIQJBAiEBIAAgBSAJkyIFIAWUIAcgCpMiBSAFlCAGIAuTIgUgBZSSkkMAAAAAkhCIASAEXgR/QQIFIAAgCTgCCCAAIAo4AgQgACALOAIAIAILOgAMC4gCAgJ/Bn0jAEEgayIDJAAgA0EANgIIIANCgICA/AM3AwAgA0EQaiIEIAEgAiADEPEDIANBgICA/Hs2AgAgAyoCECEFIAQgASACIAMQ8QMgA0KAgICAgICAwD83AwAgAyoCECEGIAQgASACIAMQ8QMgA0GAgID8ezYCBCADKgIUIQcgBCABIAIgAxDxAyADQoCAgICAgIDAPzcCBCADKgIUIQggBCABIAIgAxDxAyADQYCAgPx7NgIIIAMqAhghCSAEIAEgAiADEPEDIAMqAhghCiAAQRRqIAk4AgAgAEEQaiAHOAIAIAAgBTgCDCAAIAo4AgggACAIOAIEIAAgBjgCACADQSBqJAALiAICAn8GfSMAQSBrIgMkACADQQA2AgggA0KAgID8AzcDACADQRBqIgQgASACIAMQhwMgA0GAgID8ezYCACADKgIQIQUgBCABIAIgAxCHAyADQoCAgICAgIDAPzcDACADKgIQIQYgBCABIAIgAxCHAyADQYCAgPx7NgIEIAMqAhQhByAEIAEgAiADEIcDIANCgICAgICAgMA/NwIEIAMqAhQhCCAEIAEgAiADEIcDIANBgICA/Hs2AgggAyoCGCEJIAQgASACIAMQhwMgAyoCGCEKIABBFGogCTgCACAAQRBqIAc4AgAgACAFOAIMIAAgCjgCCCAAIAg4AgQgACAGOAIAIANBIGokAAvmAQIFfwF+IwBBIGsiAiQAAkAgASABQQFqIgFLDQBBBCEDIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgGtQgx+IgdCIIhQQQJ0IQQgB6chBgJAIAVFBEBBACEDDAELIAIgACgCADYCECACIAWtQgx+PgIUCyACIAM2AhggAiAGIAQgAkEQahCIByACKAIABEAgAkEIaigCACIARQ0BIAIoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyACKAIEIQMgAEEEaiABNgIAIAAgAzYCACACQSBqJAAPCxCBCgAL5gECBX8BfiMAQSBrIgIkAAJAIAEgAUEBaiIBSw0AQQQhAyAAQQRqKAIAIgVBAXQiBCABIAEgBEkbIgFBBCABQQRLGyIBrUIYfiIHQiCIUEECdCEEIAenIQYCQCAFRQRAQQAhAwwBCyACIAAoAgA2AhAgAiAFrUIYfj4CFAsgAiADNgIYIAIgBiAEIAJBEGoQiAcgAigCAARAIAJBCGooAgAiAEUNASACKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAigCBCEDIABBBGogATYCACAAIAM2AgAgAkEgaiQADwsQgQoAC+YBAgV/AX4jAEEgayICJAACQCABIAFBAWoiAUsNAEEEIQMgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAa1CJH4iB0IgiFBBAnQhBCAHpyEGAkAgBUUEQEEAIQMMAQsgAiAAKAIANgIQIAIgBa1CJH4+AhQLIAIgAzYCGCACIAYgBCACQRBqEIgHIAIoAgAEQCACQQhqKAIAIgBFDQEgAigCBCAAQezqwwAoAgAiAEGYByAAGxEAAAALIAIoAgQhAyAAQQRqIAE2AgAgACADNgIAIAJBIGokAA8LEIEKAAvmAQIFfwF+IwBBIGsiAiQAAkAgASABQQFqIgFLDQBBBCEDIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgGtQjB+IgdCIIhQQQJ0IQQgB6chBgJAIAVFBEBBACEDDAELIAIgACgCADYCECACIAWtQjB+PgIUCyACIAM2AhggAiAGIAQgAkEQahCIByACKAIABEAgAkEIaigCACIARQ0BIAIoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyACKAIEIQMgAEEEaiABNgIAIAAgAzYCACACQSBqJAAPCxCBCgAL5gECBX8BfiMAQSBrIgIkAAJAIAEgAUEBaiIBSw0AQQQhAyAAQQRqKAIAIgVBAXQiBCABIAEgBEkbIgFBBCABQQRLGyIBrUIofiIHQiCIUEECdCEEIAenIQYCQCAFRQRAQQAhAwwBCyACIAAoAgA2AhAgAiAFrUIofj4CFAsgAiADNgIYIAIgBiAEIAJBEGoQiAcgAigCAARAIAJBCGooAgAiAEUNASACKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAigCBCEDIABBBGogATYCACAAIAM2AgAgAkEgaiQADwsQgQoAC+gBAgV/AX4jAEEgayICJAACQCABIAFBAWoiAUsNAEEEIQMgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAa1CqAF+IgdCIIhQQQJ0IQQgB6chBgJAIAVFBEBBACEDDAELIAIgACgCADYCECACIAWtQqgBfj4CFAsgAiADNgIYIAIgBiAEIAJBEGoQiAcgAigCAARAIAJBCGooAgAiAEUNASACKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAigCBCEDIABBBGogATYCACAAIAM2AgAgAkEgaiQADwsQgQoAC+YBAgV/AX4jAEEgayICJAACQCABIAFBAWoiAUsNAEEEIQMgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAa1CFH4iB0IgiFBBAnQhBCAHpyEGAkAgBUUEQEEAIQMMAQsgAiAAKAIANgIQIAIgBa1CFH4+AhQLIAIgAzYCGCACIAYgBCACQRBqEIgHIAIoAgAEQCACQQhqKAIAIgBFDQEgAigCBCAAQezqwwAoAgAiAEGYByAAGxEAAAALIAIoAgQhAyAAQQRqIAE2AgAgACADNgIAIAJBIGokAA8LEIEKAAvoAQIFfwF+IwBBIGsiAiQAAkAgASABQQFqIgFLDQBBBCEDIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgGtQvACfiIHQiCIUEECdCEEIAenIQYCQCAFRQRAQQAhAwwBCyACIAAoAgA2AhAgAiAFrULwAn4+AhQLIAIgAzYCGCACIAYgBCACQRBqEIgHIAIoAgAEQCACQQhqKAIAIgBFDQEgAigCBCAAQezqwwAoAgAiAEGYByAAGxEAAAALIAIoAgQhAyAAQQRqIAE2AgAgACADNgIAIAJBIGokAA8LEIEKAAvoAQIFfwF+IwBBIGsiAiQAAkAgASABQQFqIgFLDQBBBCEDIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgGtQtQDfiIHQiCIUEECdCEEIAenIQYCQCAFRQRAQQAhAwwBCyACIAAoAgA2AhAgAiAFrULUA34+AhQLIAIgAzYCGCACIAYgBCACQRBqEIgHIAIoAgAEQCACQQhqKAIAIgBFDQEgAigCBCAAQezqwwAoAgAiAEGYByAAGxEAAAALIAIoAgQhAyAAQQRqIAE2AgAgACADNgIAIAJBIGokAA8LEIEKAAvmAQIFfwF+IwBBIGsiAiQAAkAgASABQQFqIgFLDQBBBCEDIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgGtQjh+IgdCIIhQQQJ0IQQgB6chBgJAIAVFBEBBACEDDAELIAIgACgCADYCECACIAWtQjh+PgIUCyACIAM2AhggAiAGIAQgAkEQahCIByACKAIABEAgAkEIaigCACIARQ0BIAIoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyACKAIEIQMgAEEEaiABNgIAIAAgAzYCACACQSBqJAAPCxCBCgAL5gECBX8BfiMAQSBrIgIkAAJAIAEgAUEBaiIBSw0AQQQhAyAAQQRqKAIAIgVBAXQiBCABIAEgBEkbIgFBBCABQQRLGyIBrUIsfiIHQiCIUEECdCEEIAenIQYCQCAFRQRAQQAhAwwBCyACIAAoAgA2AhAgAiAFrUIsfj4CFAsgAiADNgIYIAIgBiAEIAJBEGoQiAcgAigCAARAIAJBCGooAgAiAEUNASACKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAigCBCEDIABBBGogATYCACAAIAM2AgAgAkEgaiQADwsQgQoAC+gBAgR/AX4jAEEgayIDJAACQCABIAEgAmoiAUsNAEEEIQIgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAa1CmAJ+IgdCIIhQQQJ0IQQgB6chBgJAIAVFBEBBACECDAELIAMgACgCADYCECADIAWtQpgCfj4CFAsgAyACNgIYIAMgBiAEIANBEGoQiAcgAygCAARAIANBCGooAgAiAEUNASADKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAygCBCECIABBBGogATYCACAAIAI2AgAgA0EgaiQADwsQgQoAC+YBAgR/AX4jAEEgayIDJAACQCABIAEgAmoiAUsNAEEEIQIgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAa1CDH4iB0IgiFBBAnQhBCAHpyEGAkAgBUUEQEEAIQIMAQsgAyAAKAIANgIQIAMgBa1CDH4+AhQLIAMgAjYCGCADIAYgBCADQRBqEIgHIAMoAgAEQCADQQhqKAIAIgBFDQEgAygCBCAAQezqwwAoAgAiAEGYByAAGxEAAAALIAMoAgQhAiAAQQRqIAE2AgAgACACNgIAIANBIGokAA8LEIEKAAvmAQIFfwF+IwBBIGsiAiQAAkAgASABQQFqIgFLDQBBBCEDIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgGtQjR+IgdCIIhQQQJ0IQQgB6chBgJAIAVFBEBBACEDDAELIAIgACgCADYCECACIAWtQjR+PgIUCyACIAM2AhggAiAGIAQgAkEQahCIByACKAIABEAgAkEIaigCACIARQ0BIAIoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyACKAIEIQMgAEEEaiABNgIAIAAgAzYCACACQSBqJAAPCxCBCgAL6AECBX8BfiMAQSBrIgIkAAJAIAEgAUEBaiIBSw0AQQQhAyAAQQRqKAIAIgVBAXQiBCABIAEgBEkbIgFBBCABQQRLGyIBrUKwBH4iB0IgiFBBAnQhBCAHpyEGAkAgBUUEQEEAIQMMAQsgAiAAKAIANgIQIAIgBa1CsAR+PgIUCyACIAM2AhggAiAGIAQgAkEQahCIByACKAIABEAgAkEIaigCACIARQ0BIAIoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyACKAIEIQMgAEEEaiABNgIAIAAgAzYCACACQSBqJAAPCxCBCgAL6AECBX8BfiMAQSBrIgIkAAJAIAEgAUEBaiIBSw0AQQQhAyAAQQRqKAIAIgVBAXQiBCABIAEgBEkbIgFBBCABQQRLGyIBrUL0AH4iB0IgiFBBAnQhBCAHpyEGAkAgBUUEQEEAIQMMAQsgAiAAKAIANgIQIAIgBa1C9AB+PgIUCyACIAM2AhggAiAGIAQgAkEQahCIByACKAIABEAgAkEIaigCACIARQ0BIAIoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyACKAIEIQMgAEEEaiABNgIAIAAgAzYCACACQSBqJAAPCxCBCgAL5gECBH8BfiMAQSBrIgMkAAJAIAEgASACaiIBSw0AQQQhAiAAQQRqKAIAIgVBAXQiBCABIAEgBEkbIgFBBCABQQRLGyIBrUIYfiIHQiCIUEECdCEEIAenIQYCQCAFRQRAQQAhAgwBCyADIAAoAgA2AhAgAyAFrUIYfj4CFAsgAyACNgIYIAMgBiAEIANBEGoQiAcgAygCAARAIANBCGooAgAiAEUNASADKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAygCBCECIABBBGogATYCACAAIAI2AgAgA0EgaiQADwsQgQoAC+YBAgR/AX4jAEEgayIDJAACQCABIAEgAmoiAUsNAEEEIQIgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAa1CDH4iB0IgiFBBAnQhBCAHpyEGAkAgBUUEQEEAIQIMAQsgAyAAKAIANgIQIAMgBa1CDH4+AhQLIAMgAjYCGCADIAYgBCADQRBqEIQHIAMoAgAEQCADQQhqKAIAIgBFDQEgAygCBCAAQezqwwAoAgAiAEGYByAAGxEAAAALIAMoAgQhAiAAQQRqIAE2AgAgACACNgIAIANBIGokAA8LEIEKAAvmAQIFfwF+IwBBIGsiAiQAAkAgASABQQFqIgFLDQBBBCEDIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgGtQiR+IgdCIIhQQQJ0IQQgB6chBgJAIAVFBEBBACEDDAELIAIgACgCADYCECACIAWtQiR+PgIUCyACIAM2AhggAiAGIAQgAkEQahCEByACKAIABEAgAkEIaigCACIARQ0BIAIoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyACKAIEIQMgAEEEaiABNgIAIAAgAzYCACACQSBqJAAPCxCBCgAL5gECBX8BfiMAQSBrIgIkAAJAIAEgAUEBaiIBSw0AQQQhAyAAQQRqKAIAIgVBAXQiBCABIAEgBEkbIgFBBCABQQRLGyIBrUIofiIHQiCIUEECdCEEIAenIQYCQCAFRQRAQQAhAwwBCyACIAAoAgA2AhAgAiAFrUIofj4CFAsgAiADNgIYIAIgBiAEIAJBEGoQhAcgAigCAARAIAJBCGooAgAiAEUNASACKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAigCBCEDIABBBGogATYCACAAIAM2AgAgAkEgaiQADwsQgQoAC+YBAgV/AX4jAEEgayICJAACQCABIAFBAWoiAUsNAEEEIQMgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAa1CDH4iB0IgiFBBAnQhBCAHpyEGAkAgBUUEQEEAIQMMAQsgAiAAKAIANgIQIAIgBa1CDH4+AhQLIAIgAzYCGCACIAYgBCACQRBqEIQHIAIoAgAEQCACQQhqKAIAIgBFDQEgAigCBCAAQezqwwAoAgAiAEGYByAAGxEAAAALIAIoAgQhAyAAQQRqIAE2AgAgACADNgIAIAJBIGokAA8LEIEKAAvmAQIFfwF+IwBBIGsiAiQAAkAgASABQQFqIgFLDQBBBCEDIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgGtQjR+IgdCIIhQQQJ0IQQgB6chBgJAIAVFBEBBACEDDAELIAIgACgCADYCECACIAWtQjR+PgIUCyACIAM2AhggAiAGIAQgAkEQahCEByACKAIABEAgAkEIaigCACIARQ0BIAIoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyACKAIEIQMgAEEEaiABNgIAIAAgAzYCACACQSBqJAAPCxCBCgAL5gECBX8BfiMAQSBrIgIkAAJAIAEgAUEBaiIBSw0AQQQhAyAAQQRqKAIAIgVBAXQiBCABIAEgBEkbIgFBBCABQQRLGyIBrUIUfiIHQiCIUEECdCEEIAenIQYCQCAFRQRAQQAhAwwBCyACIAAoAgA2AhAgAiAFrUIUfj4CFAsgAiADNgIYIAIgBiAEIAJBEGoQhAcgAigCAARAIAJBCGooAgAiAEUNASACKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAigCBCEDIABBBGogATYCACAAIAM2AgAgAkEgaiQADwsQgQoAC+YBAgR/AX4jAEEgayIDJAACQCABIAEgAmoiAUsNAEEEIQIgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAa1CGH4iB0IgiFBBAnQhBCAHpyEGAkAgBUUEQEEAIQIMAQsgAyAAKAIANgIQIAMgBa1CGH4+AhQLIAMgAjYCGCADIAYgBCADQRBqEIQHIAMoAgAEQCADQQhqKAIAIgBFDQEgAygCBCAAQezqwwAoAgAiAEGYByAAGxEAAAALIAMoAgQhAiAAQQRqIAE2AgAgACACNgIAIANBIGokAA8LEIEKAAveAQIFfwF+IwBBIGsiAiQAIAEhA0EEIQEgAEEEaigCACIFQQF0IgQgAyADIARJGyIDQQQgA0EESxsiA61CFH4iB0IgiFBBAnQhBCAHpyEGAkAgBUUEQEEAIQEMAQsgAiAAKAIANgIQIAIgBa1CFH4+AhQLIAIgATYCGCACIAYgBCACQRBqEIQHAkAgAigCAARAIAJBCGooAgAiAEUNASACKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAigCBCEBIABBBGogAzYCACAAIAE2AgAgAkEgaiQADwsQgQoAC+cBAgJ/BH0jAEFAaiIFJAAgAUEIaiIGKgIAIQkgASoCACEHIAEqAgQhCCAFQRxqIAYoAgA2AgAgBSAJjDgCECAFIAiMOAIMIAUgB4w4AgggBSABKQIANwIUIAVBIGogBUEIaiACIAMQkwIgBS0ALCEDQQIhASAAIAIqAgAgBSoCICIJkyIHIAeUIAJBBGoqAgAgBSoCJCIHkyIIIAiUkiACQQhqKgIAIAUqAigiCJMiCiAKlJJDAAAAAJIQiAEgBF4Ef0ECBSAAIAg4AgggACAHOAIEIAAgCTgCACADCzoADCAFQUBrJAALgAIBAn8jAEHQAGsiAiQAIAIgATcDAAJAIAACfyABQoCAgIAQWgRAIAJBPGpBAjYCACACQcwAakEBNgIAIAJCAzcCLCACQZDEwAA2AiggAkGoxMAANgJIIAJB8QA2AkQgAiACQUBrNgI4IAIgAjYCQCACQRhqIgMgAkEoahCFAyACQRRqIANBCGooAgA2AAAgAiACKQMYNwAMQRBBBBCUCyIDRQ0CIANBCDoAACADIAIpAAk3AAEgA0EIaiACQRBqKQAANwAAIAAgAzYCBEEBDAELIAAgAT4CBEEACzYCACACQdAAaiQADwtBEEEEQezqwwAoAgAiAEGYByAAGxEAAAALygEBCX0gASoCBCIJIAIqAgAiBpQgASoCACIKIAJBBGoqAgAiB5STIgQgBJIhBCAKIAJBCGoqAgAiCJQgASoCCCIDIAaUkyIFIAWSIQUgACACQRhqKgIAIAMgAkEMaioCACILIASUIAYgBZQgByADIAeUIAkgCJSTIgMgA5IiA5STkpKSOAIIIAAgAkEUaioCACAJIAsgBZQgCCADlCAGIASUk5KSkjgCBCAAIAJBEGoqAgAgCiALIAOUIAcgBJQgCCAFlJOSkpI4AgAL2wECAX8CfSMAQTBrIgQkACAEIAFB2ABqIgEgAhC9AiAEQRhqIgIgASADEL0CIABBFGogBEEUaioCACIFIAJBFGoqAgAiBiAFIAZgGzgCACAAQRBqIARBEGoqAgAiBSACQRBqKgIAIgYgBSAGYBs4AgAgACAEKgIMIgUgBCoCJCIGIAUgBmAbOAIMIAAgBCoCCCIFIAQqAiAiBiAFIAZfGzgCCCAAIAQqAgQiBSAEKgIcIgYgBSAGXxs4AgQgACAEKgIAIgUgBCoCGCIGIAUgBl8bOAIAIARBMGokAAvaAQIBfwJ9IwBBMGsiBCQAIAQgAUE0aiIBIAIQvQIgBEEYaiICIAEgAxC9AiAAQRRqIARBFGoqAgAiBSACQRRqKgIAIgYgBSAGYBs4AgAgAEEQaiAEQRBqKgIAIgUgAkEQaioCACIGIAUgBmAbOAIAIAAgBCoCDCIFIAQqAiQiBiAFIAZgGzgCDCAAIAQqAggiBSAEKgIgIgYgBSAGXxs4AgggACAEKgIEIgUgBCoCHCIGIAUgBl8bOAIEIAAgBCoCACIFIAQqAhgiBiAFIAZfGzgCACAEQTBqJAALzwEBB30gACABKgIAIgQgAioCECIFkiIGIAQgAyoCECIHkiIIIAYgCGAbOAIMIAAgBSAEkyIFIAcgBJMiBiAFIAZfGzgCACAAQRRqIAQgAkEYaioCACIFkiIGIAQgA0EYaioCACIHkiIIIAYgCGAbOAIAIABBEGogBCACQRRqKgIAIgaSIgggBCADQRRqKgIAIgmSIgogCCAKYBs4AgAgACAFIASTIgUgByAEkyIHIAUgB18bOAIIIAAgBiAEkyIFIAkgBJMiBCAEIAVgGzgCBAv6AQIDfwF+IwBBIGsiAiQAAkACQAJAIAAEQCAAKAIAIgNBf0YNASAAIANBAWo2AgAgAkEIaiIDIAG9IgVCIIg+AgQgAyAFPgIAIABBBGogAigCCCACKAIMEKMJIgNFDQIgAkEYaiIEIANBLGoiA0EIaikCADcDACADKQIAIQUgACAAKAIAQQFrNgIAIAIgBTcDEEEUQQQQlAsiAEUNAyAAQQA2AgAgACACKQMQNwIEIABBDGogBCkDADcCACACQSBqJAAgAA8LEPQLAAsQ9QsAC0GYvMAAQc0AQZC9wAAQ6QsAC0EUQQRB7OrDACgCACIAQZgHIAAbEQAAAAv7AQIDfwF+IwBBIGsiAiQAAkACQAJAIAAEQCAAKAIAIgNBf0YNASAAIANBAWo2AgAgAkEIaiIDIAG9IgVCIIg+AgQgAyAFPgIAIABBBGogAigCCCACKAIMEKMJIgNFDQIgAkEYaiIEIANBxAFqIgNBCGooAgA2AgAgAykCACEFIAAgACgCAEEBazYCACACIAU3AxBBEEEEEJQLIgBFDQMgAEEANgIAIAAgAikDEDcCBCAAQQxqIAQoAgA2AgAgAkEgaiQAIAAPCxD0CwALEPULAAtBmLzAAEHNAEGQvcAAEOkLAAtBEEEEQezqwwAoAgAiAEGYByAAGxEAAAAL+wECA38BfiMAQSBrIgIkAAJAAkACQCAABEAgACgCACIDQX9GDQEgACADQQFqNgIAIAJBCGoiAyABvSIFQiCIPgIEIAMgBT4CACAAQQRqIAIoAgggAigCDBCjCSIDRQ0CIAJBGGoiBCADQdABaiIDQQhqKAIANgIAIAMpAgAhBSAAIAAoAgBBAWs2AgAgAiAFNwMQQRBBBBCUCyIARQ0DIABBADYCACAAIAIpAxA3AgQgAEEMaiAEKAIANgIAIAJBIGokACAADwsQ9AsACxD1CwALQZi8wABBzQBBkL3AABDpCwALQRBBBEHs6sMAKAIAIgBBmAcgABsRAAAAC/sBAgN/AX4jAEEgayICJAACQAJAAkAgAARAIAAoAgAiA0F/Rg0BIAAgA0EBajYCACACQQhqIgMgAb0iBUIgiD4CBCADIAU+AgAgAEEEaiACKAIIIAIoAgwQpAkiA0UNAiACQRhqIgQgA0HMAGoiA0EIaikCADcDACADKQIAIQUgACAAKAIAQQFrNgIAIAIgBTcDEEEUQQQQlAsiAEUNAyAAQQA2AgAgACACKQMQNwIEIABBDGogBCkDADcCACACQSBqJAAgAA8LEPQLAAsQ9QsAC0GwvcAAQcwAQaS+wAAQ6QsAC0EUQQRB7OrDACgCACIAQZgHIAAbEQAAAAuFAgEFfSAAQQA2AgggAEIANwIAIAEqAgQiBCAElEMAAEBAlSIGIAEqAggiBSAFlEMAAEBAlSIHkiABKgIAIgMgBJQgBZRDAAAAQZQgApQiApQQiAEhBCADIAOUQwAAQECVIgMgB5IgApQQiAEhBSADIAaSIAKUEIgBIQMgAEEkakKAgICAgICAwD83AgAgAEIANwIcIABDAAAAAEMAAIA/IASVIARDAAAAAFsbOAIQIABDAAAAAEMAAIA/IAKVIAJDAAAAAFsbOAIMIABBFGpDAAAAAEMAAIA/IAWVIAVDAAAAAFsbOAIAIABBGGpDAAAAAEMAAIA/IAOVIANDAAAAAFsbOAIAC+UBAQV/IwBBIGsiAiQAAkAgASABQQFqIgFLDQBBBCEDIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgFB/////wFxIAFGQQJ0IQQgAUEDdCEGAkAgBUUEQEEAIQMMAQsgAiAFQQN0NgIUIAIgACgCADYCEAsgAiADNgIYIAIgBiAEIAJBEGoQiAcgAigCAARAIAJBCGooAgAiAEUNASACKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAigCBCEDIABBBGogATYCACAAIAM2AgAgAkEgaiQADwsQgQoAC+UBAQV/IwBBIGsiAiQAAkAgASABQQFqIgFLDQBBBCEDIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgFB/////wNxIAFGQQJ0IQQgAUECdCEGAkAgBUUEQEEAIQMMAQsgAiAFQQJ0NgIUIAIgACgCADYCEAsgAiADNgIYIAIgBiAEIAJBEGoQiAcgAigCAARAIAJBCGooAgAiAEUNASACKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAigCBCEDIABBBGogATYCACAAIAM2AgAgAkEgaiQADwsQgQoAC+UBAQV/IwBBIGsiAiQAAkAgASABQQFqIgFLDQBBBCEDIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgFB/////wBxIAFGQQJ0IQQgAUEEdCEGAkAgBUUEQEEAIQMMAQsgAiAFQQR0NgIUIAIgACgCADYCEAsgAiADNgIYIAIgBiAEIAJBEGoQiAcgAigCAARAIAJBCGooAgAiAEUNASACKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAigCBCEDIABBBGogATYCACAAIAM2AgAgAkEgaiQADwsQgQoAC7YBAQF/AkAgAEEEaigCACIBRQ0AIAFBA3RFDQAgACgCABCxAQsCQCAAQRBqKAIAIgFFDQAgAa1CDH6nRQ0AIABBDGooAgAQsQELAkAgAEEsaigCACIBRQ0AIAFBBHRFDQAgAEEoaigCABCxAQsCQCAAQThqKAIAIgFFDQAgAa1C8AJ+p0UNACAAQTRqKAIAELEBCwJAIABBxABqKAIAIgFFDQAgAUEDdEUNACAAQUBrKAIAELEBCwvZAQEEfyMAQSBrIgIkAAJAIAEgAUEBaiIBSw0AIABBBGooAgAiA0EBdCIEIAEgASAESRsiAUEEIAFBBEsbIgFB////D3EgAUZBBHQhBCABQQd0IQUgAiADBH8gAiADQQd0NgIUIAIgACgCADYCEEEQBUEACzYCGCACIAUgBCACQRBqEIgHIAIoAgAEQCACQQhqKAIAIgBFDQEgAigCBCAAQezqwwAoAgAiAEGYByAAGxEAAAALIAIoAgQhAyAAQQRqIAE2AgAgACADNgIAIAJBIGokAA8LEIEKAAvkAQEFfyMAQSBrIgIkAAJAIAEgAUEBaiIBSw0AQQQhAyAAQQRqKAIAIgVBAXQiBCABIAEgBEkbIgFBBCABQQRLGyIBQf///x9xIAFGQQJ0IQQgAUEGdCEGAkAgBUUEQEEAIQMMAQsgAiAFQQZ0NgIUIAIgACgCADYCEAsgAiADNgIYIAIgBiAEIAJBEGoQiAcgAigCAARAIAJBCGooAgAiAEUNASACKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAigCBCEDIABBBGogATYCACAAIAM2AgAgAkEgaiQADwsQgQoAC+UBAQR/IwBBIGsiAyQAAkAgASABIAJqIgFLDQBBBCECIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgFB/////wNxIAFGQQJ0IQQgAUECdCEGAkAgBUUEQEEAIQIMAQsgAyAFQQJ0NgIUIAMgACgCADYCEAsgAyACNgIYIAMgBiAEIANBEGoQiAcgAygCAARAIANBCGooAgAiAEUNASADKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAygCBCECIABBBGogATYCACAAIAI2AgAgA0EgaiQADwsQgQoAC+UBAQR/IwBBIGsiAyQAAkAgASABIAJqIgFLDQBBBCECIABBBGooAgAiBUEBdCIEIAEgASAESRsiAUEEIAFBBEsbIgFB/////wFxIAFGQQJ0IQQgAUEDdCEGAkAgBUUEQEEAIQIMAQsgAyAFQQN0NgIUIAMgACgCADYCEAsgAyACNgIYIAMgBiAEIANBEGoQiAcgAygCAARAIANBCGooAgAiAEUNASADKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAygCBCECIABBBGogATYCACAAIAI2AgAgA0EgaiQADwsQgQoAC9UBAgF/An0jAEEwayIEJAAgBCABIAIQvQQgBEEYaiICIAEgAxC9BCAAQRRqIARBFGoqAgAiBSACQRRqKgIAIgYgBSAGYBs4AgAgAEEQaiAEQRBqKgIAIgUgAkEQaioCACIGIAUgBmAbOAIAIAAgBCoCDCIFIAQqAiQiBiAFIAZgGzgCDCAAIAQqAggiBSAEKgIgIgYgBSAGXxs4AgggACAEKgIEIgUgBCoCHCIGIAUgBl8bOAIEIAAgBCoCACIFIAQqAhgiBiAFIAZfGzgCACAEQTBqJAAL1QECAX8CfSMAQTBrIgQkACAEIAEgAhDTBiAEQRhqIgIgASADENMGIABBFGogBEEUaioCACIFIAJBFGoqAgAiBiAFIAZgGzgCACAAQRBqIARBEGoqAgAiBSACQRBqKgIAIgYgBSAGYBs4AgAgACAEKgIMIgUgBCoCJCIGIAUgBmAbOAIMIAAgBCoCCCIFIAQqAiAiBiAFIAZfGzgCCCAAIAQqAgQiBSAEKgIcIgYgBSAGXxs4AgQgACAEKgIAIgUgBCoCGCIGIAUgBl8bOAIAIARBMGokAAv6AQIDfwF+IwBBIGsiAiQAAkACQAJAIAAEQCAAKAIAIgNBf0YNASAAIANBAWo2AgAgAkEIaiIDIAG9IgVCIIg+AgQgAyAFPgIAIABBBGogAigCCCACKAIMEKMJIgNFDQIgAkEYaiIEIANBLGoiA0EYaigCADYCACADKQIQIQUgACAAKAIAQQFrNgIAIAIgBTcDEEEQQQQQlAsiAEUNAyAAQQA2AgAgACACKQMQNwIEIABBDGogBCgCADYCACACQSBqJAAgAA8LEPQLAAsQ9QsAC0GYvMAAQc0AQZC9wAAQ6QsAC0EQQQRB7OrDACgCACIAQZgHIAAbEQAAAAv7AQIDfwF+IwBBIGsiAiQAAkACQAJAIAAEQCAAKAIAIgNBf0YNASAAIANBAWo2AgAgAkEIaiIDIAG9IgVCIIg+AgQgAyAFPgIAIABBBGogAigCCCACKAIMEKQJIgNFDQIgAkEYaiIEIANBzABqIgNBGGooAgA2AgAgAykCECEFIAAgACgCAEEBazYCACACIAU3AxBBEEEEEJQLIgBFDQMgAEEANgIAIAAgAikDEDcCBCAAQQxqIAQoAgA2AgAgAkEgaiQAIAAPCxD0CwALEPULAAtBsL3AAEHMAEGkvsAAEOkLAAtBEEEEQezqwwAoAgAiAEGYByAAGxEAAAAL5QEBBH8jAEEgayIDJAACQCABIAEgAmoiAUsNAEEEIQIgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAUH/////AHEgAUZBAnQhBCABQQR0IQYCQCAFRQRAQQAhAgwBCyADIAVBBHQ2AhQgAyAAKAIANgIQCyADIAI2AhggAyAGIAQgA0EQahCIByADKAIABEAgA0EIaigCACIARQ0BIAMoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyADKAIEIQIgAEEEaiABNgIAIAAgAjYCACADQSBqJAAPCxCBCgAL5QEBBH8jAEEgayIDJAACQCABIAEgAmoiAUsNAEEEIQIgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAUH/////AXEgAUZBAnQhBCABQQN0IQYCQCAFRQRAQQAhAgwBCyADIAVBA3Q2AhQgAyAAKAIANgIQCyADIAI2AhggAyAGIAQgA0EQahCEByADKAIABEAgA0EIaigCACIARQ0BIAMoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyADKAIEIQIgAEEEaiABNgIAIAAgAjYCACADQSBqJAAPCxCBCgAL5QEBBH8jAEEgayIDJAACQCABIAEgAmoiAUsNAEEEIQIgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAUH/////A3EgAUZBAnQhBCABQQJ0IQYCQCAFRQRAQQAhAgwBCyADIAVBAnQ2AhQgAyAAKAIANgIQCyADIAI2AhggAyAGIAQgA0EQahCEByADKAIABEAgA0EIaigCACIARQ0BIAMoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyADKAIEIQIgAEEEaiABNgIAIAAgAjYCACADQSBqJAAPCxCBCgAL5QEBBX8jAEEgayICJAACQCABIAFBAWoiAUsNAEEEIQMgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAUH/////A3EgAUZBAnQhBCABQQJ0IQYCQCAFRQRAQQAhAwwBCyACIAVBAnQ2AhQgAiAAKAIANgIQCyACIAM2AhggAiAGIAQgAkEQahCEByACKAIABEAgAkEIaigCACIARQ0BIAIoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyACKAIEIQMgAEEEaiABNgIAIAAgAzYCACACQSBqJAAPCxCBCgAL5QEBBX8jAEEgayICJAACQCABIAFBAWoiAUsNAEEEIQMgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAUH/////AHEgAUZBAnQhBCABQQR0IQYCQCAFRQRAQQAhAwwBCyACIAVBBHQ2AhQgAiAAKAIANgIQCyACIAM2AhggAiAGIAQgAkEQahCEByACKAIABEAgAkEIaigCACIARQ0BIAIoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyACKAIEIQMgAEEEaiABNgIAIAAgAzYCACACQSBqJAAPCxCBCgAL5QEBBX8jAEEgayICJAACQCABIAFBAWoiAUsNAEEEIQMgAEEEaigCACIFQQF0IgQgASABIARJGyIBQQQgAUEESxsiAUH/////AXEgAUZBAnQhBCABQQN0IQYCQCAFRQRAQQAhAwwBCyACIAVBA3Q2AhQgAiAAKAIANgIQCyACIAM2AhggAiAGIAQgAkEQahCEByACKAIABEAgAkEIaigCACIARQ0BIAIoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyACKAIEIQMgAEEEaiABNgIAIAAgAzYCACACQSBqJAAPCxCBCgAL2QEBBH8jAEEgayICJAACQCABIAFBAWoiAUsNACAAQQRqKAIAIgNBAXQiBCABIAEgBEkbIgFBBCABQQRLGyIBQf///w9xIAFGQQR0IQQgAUEHdCEFIAIgAwR/IAIgA0EHdDYCFCACIAAoAgA2AhBBEAVBAAs2AhggAiAFIAQgAkEQahCEByACKAIABEAgAkEIaigCACIARQ0BIAIoAgQgAEHs6sMAKAIAIgBBmAcgABsRAAAACyACKAIEIQMgAEEEaiABNgIAIAAgAzYCACACQSBqJAAPCxCBCgAL3QEBBX8jAEEgayICJAAgASEDQQQhASAAQQRqKAIAIgVBAXQiBCADIAMgBEkbIgNBBCADQQRLGyIDIANB/////wBxRkECdCEEIANBBHQhBgJAIAVFBEBBACEBDAELIAIgBUEEdDYCFCACIAAoAgA2AhALIAIgATYCGCACIAYgBCACQRBqEIQHAkAgAigCAARAIAJBCGooAgAiAEUNASACKAIEIABB7OrDACgCACIAQZgHIAAbEQAAAAsgAigCBCEBIABBBGogAzYCACAAIAE2AgAgAkEgaiQADwsQgQoAC9UBAgF/An0jAEEwayIEJAAgBCABIAIQ9AIgBEEYaiICIAEgAxD0AiAAQRRqIARBFGoqAgAiBSACQRRqKgIAIgYgBSAGYBs4AgAgAEEQaiAEQRBqKgIAIgUgAkEQaioCACIGIAUgBmAbOAIAIAAgBCoCDCIFIAQqAiQiBiAFIAZgGzgCDCAAIAQqAggiBSAEKgIgIgYgBSAGXxs4AgggACAEKgIEIgUgBCoCHCIGIAUgBl8bOAIEIAAgBCoCACIFIAQqAhgiBiAFIAZfGzgCACAEQTBqJAAL1QECAX8CfSMAQTBrIgQkACAEIAEgAhCwAiAEQRhqIgIgASADELACIABBFGogBEEUaioCACIFIAJBFGoqAgAiBiAFIAZgGzgCACAAQRBqIARBEGoqAgAiBSACQRBqKgIAIgYgBSAGYBs4AgAgACAEKgIMIgUgBCoCJCIGIAUgBmAbOAIMIAAgBCoCCCIFIAQqAiAiBiAFIAZfGzgCCCAAIAQqAgQiBSAEKgIcIgYgBSAGXxs4AgQgACAEKgIAIgUgBCoCGCIGIAUgBl8bOAIAIARBMGokAAvVAQIBfwJ9IwBBMGsiBCQAIAQgASACEMUDIARBGGoiAiABIAMQxQMgAEEUaiAEQRRqKgIAIgUgAkEUaioCACIGIAUgBmAbOAIAIABBEGogBEEQaioCACIFIAJBEGoqAgAiBiAFIAZgGzgCACAAIAQqAgwiBSAEKgIkIgYgBSAGYBs4AgwgACAEKgIIIgUgBCoCICIGIAUgBl8bOAIIIAAgBCoCBCIFIAQqAhwiBiAFIAZfGzgCBCAAIAQqAgAiBSAEKgIYIgYgBSAGXxs4AgAgBEEwaiQAC9UBAgF/An0jAEEwayIEJAAgBCABIAIQ4QQgBEEYaiICIAEgAxDhBCAAQRRqIARBFGoqAgAiBSACQRRqKgIAIgYgBSAGYBs4AgAgAEEQaiAEQRBqKgIAIgUgAkEQaioCACIGIAUgBmAbOAIAIAAgBCoCDCIFIAQqAiQiBiAFIAZgGzgCDCAAIAQqAggiBSAEKgIgIgYgBSAGXxs4AgggACAEKgIEIgUgBCoCHCIGIAUgBl8bOAIEIAAgBCoCACIFIAQqAhgiBiAFIAZfGzgCACAEQTBqJAAL1QECAX8CfSMAQTBrIgQkACAEIAEgAhC9AiAEQRhqIgIgASADEL0CIABBFGogBEEUaioCACIFIAJBFGoqAgAiBiAFIAZgGzgCACAAQRBqIARBEGoqAgAiBSACQRBqKgIAIgYgBSAGYBs4AgAgACAEKgIMIgUgBCoCJCIGIAUgBmAbOAIMIAAgBCoCCCIFIAQqAiAiBiAFIAZfGzgCCCAAIAQqAgQiBSAEKgIcIgYgBSAGXxs4AgQgACAEKgIAIgUgBCoCGCIGIAUgBl8bOAIAIARBMGokAAvVAQIBfwJ9IwBBMGsiBCQAIAQgASACEOIEIARBGGoiAiABIAMQ4gQgAEEUaiAEQRRqKgIAIgUgAkEUaioCACIGIAUgBmAbOAIAIABBEGogBEEQaioCACIFIAJBEGoqAgAiBiAFIAZgGzgCACAAIAQqAgwiBSAEKgIkIgYgBSAGYBs4AgwgACAEKgIIIgUgBCoCICIGIAUgBl8bOAIIIAAgBCoCBCIFIAQqAhwiBiAFIAZfGzgCBCAAIAQqAgAiBSAEKgIYIgYgBSAGXxs4AgAgBEEwaiQAC9UBAgF/An0jAEEwayIEJAAgBCABIAIQtgIgBEEYaiICIAEgAxC2AiAAQRRqIARBFGoqAgAiBSACQRRqKgIAIgYgBSAGYBs4AgAgAEEQaiAEQRBqKgIAIgUgAkEQaioCACIGIAUgBmAbOAIAIAAgBCoCDCIFIAQqAiQiBiAFIAZgGzgCDCAAIAQqAggiBSAEKgIgIgYgBSAGXxs4AgggACAEKgIEIgUgBCoCHCIGIAUgBl8bOAIEIAAgBCoCACIFIAQqAhgiBiAFIAZfGzgCACAEQTBqJAALkAIBA38jAEEgayIFJABBASEGQfzqwwBB/OrDACgCACIHQQFqNgIAAkBB5O7DAC0AAARAQejuwwAoAgBBAWohBgwBC0Hk7sMAQQE6AAALQejuwwAgBjYCAAJAAkAgB0EASA0AIAZBAksNACAFIAQ6ABggBSADNgIUIAUgAjYCEEHw6sMAKAIAIgJBAEgNAEHw6sMAIAJBAWoiAjYCAEHw6sMAQfjqwwAoAgAiAwR/QfTqwwAoAgAgBSAAIAEoAhARAAAgBSAFKQMANwMIIAVBCGogAygCFBEAAEHw6sMAKAIABSACC0EBazYCACAGQQFLDQAgBA0BCwALIwBBEGsiAiQAIAIgATYCDCACIAA2AggAC+cBAwN/AX4BfSMAQRBrIgMkAAJAAkACQAJAIAAEQCAAKAIAIgRBf0YNASAAIARBAWo2AgAgAkEGTw0CIANBCGoiBCABvSIGQiCIPgIEIAQgBj4CACADIABBBGogAygCCCADKAIMEIcHIAMoAgAiBEUNAyADKAIEIgUgBCgCCE8NBCAEKAIAIAVB1ANsaiACQQxsakHMAGoqAgAgACAAKAIAQQFrNgIAIANBEGokAA8LEPQLAAsQ9QsAC0HZvsAAQRkQ8wsAC0HgusAAQckAQdi7wAAQ6QsAC0GbnMAAQStB6LvAABDECQAL5wEDA38BfgF9IwBBEGsiAyQAAkACQAJAAkAgAARAIAAoAgAiBEF/Rg0BIAAgBEEBajYCACACQQZPDQIgA0EIaiIEIAG9IgZCIIg+AgQgBCAGPgIAIAMgAEEEaiADKAIIIAMoAgwQhwcgAygCACIERQ0DIAMoAgQiBSAEKAIITw0EIAQoAgAgBUHUA2xqIAJBDGxqQdAAaioCACAAIAAoAgBBAWs2AgAgA0EQaiQADwsQ9AsACxD1CwALQdm+wABBGRDzCwALQeC6wABByQBB2LvAABDpCwALQZucwABBK0Hou8AAEMQJAAvLAQEIfQJ/IAIqAgAiByAHlCACQQRqKgIAIgggCJSSIAJBCGoqAgAiBSAFlJJDAAAAAJIiDCABKgIAIgsgC5RfIgIEQCAFIQkgCCEKIAchBkEBIAMNARoLIAUgCyAMEIgBlSIGlCEJIAggBpQhCiAHIAaUIQYgAgshAUECIQIgACAFIAmTIgUgBZQgCCAKkyIFIAWUIAcgBpMiBSAFlJKSQwAAAACSEIgBIAReBH9BAgUgACAJOAIIIAAgCjgCBCAAIAY4AgAgAQs6AAwLyQEBBn1BACECIAAgASoCDCABKgIAIgaTIgkgAUEcaioCACABKgIEIgWTIgeUIAFBEGoqAgAgBZMiBSABKgIYIAaTIgqUkyIIIAiUIAUgAUEgaioCACABKgIIIgWTIgaUIAFBFGoqAgAgBZMiBSAHlJMiByAHlCAFIAqUIAkgBpSTIgYgBpSSkkMAAAAAkiIFQwAAgCheBH8gAEEMaiAIIAUQiAEiBZU4AgAgAEEIaiAGIAWVOAIAIAAgByAFlTgCBEEBBUEACzYCAAv1AQIDfwF+IwBBIGsiAiQAAkACQAJAIAAEQCAAKAIAIgNBf0YNASAAIANBAWo2AgAgAkEIaiIDIAG9IgVCIIg+AgQgAyAFPgIAIABBBGogAigCCCACKAIMELgIIgNFDQIgAkEYaiIEIANBGGopAgA3AwAgAykCECEFIAAgACgCAEEBazYCACACIAU3AxBBFEEEEJQLIgBFDQMgAEEANgIAIAAgAikDEDcCBCAAQQxqIAQpAwA3AgAgAkEgaiQAIAAPCxD0CwALEPULAAtBwLnAAEHQAEHAusAAEOkLAAtBFEEEQezqwwAoAgAiAEGYByAAGxEAAAAL9QECA38BfiMAQSBrIgIkAAJAAkACQCAABEAgACgCACIDQX9GDQEgACADQQFqNgIAIAJBCGoiAyABvSIFQiCIPgIEIAMgBT4CACAAQQRqIAIoAgggAigCDBC4CCIDRQ0CIAJBGGoiBCADQTRqKQIANwMAIAMpAiwhBSAAIAAoAgBBAWs2AgAgAiAFNwMQQRRBBBCUCyIARQ0DIABBADYCACAAIAIpAxA3AgQgAEEMaiAEKQMANwIAIAJBIGokACAADwsQ9AsACxD1CwALQcC5wABB0ABBwLrAABDpCwALQRRBBEHs6sMAKAIAIgBBmAcgABsRAAAAC/UBAgN/AX4jAEEgayICJAACQAJAAkAgAARAIAAoAgAiA0F/Rg0BIAAgA0EBajYCACACQQhqIgMgAb0iBUIgiD4CBCADIAU+AgAgAEEEaiACKAIIIAIoAgwQuAgiA0UNAiACQRhqIgQgA0EoaigCADYCACADKQIgIQUgACAAKAIAQQFrNgIAIAIgBTcDEEEQQQQQlAsiAEUNAyAAQQA2AgAgACACKQMQNwIEIABBDGogBCgCADYCACACQSBqJAAgAA8LEPQLAAsQ9QsAC0HAucAAQdAAQcC6wAAQ6QsAC0EQQQRB7OrDACgCACIAQZgHIAAbEQAAAAv2AQIDfwF+IwBBIGsiAiQAAkACQAJAIAAEQCAAKAIAIgNBf0YNASAAIANBAWo2AgAgAkEIaiIDIAG9IgVCIIg+AgQgAyAFPgIAIABBBGogAigCCCACKAIMELgIIgNFDQIgAkEYaiIEIANBxABqKAIANgIAIAMpAjwhBSAAIAAoAgBBAWs2AgAgAiAFNwMQQRBBBBCUCyIARQ0DIABBADYCACAAIAIpAxA3AgQgAEEMaiAEKAIANgIAIAJBIGokACAADwsQ9AsACxD1CwALQcC5wABB0ABBwLrAABDpCwALQRBBBEHs6sMAKAIAIgBBmAcgABsRAAAAC/UBAgN/AX4jAEEgayICJAACQAJAAkAgAARAIAAoAgAiA0F/Rg0BIAAgA0EBajYCACACQQhqIgMgAb0iBUIgiD4CBCADIAU+AgAgAEEEaiACKAIIIAIoAgwQowkiA0UNAiACQRhqIgQgA0EoaigCADYCACADKQIgIQUgACAAKAIAQQFrNgIAIAIgBTcDEEEQQQQQlAsiAEUNAyAAQQA2AgAgACACKQMQNwIEIABBDGogBCgCADYCACACQSBqJAAgAA8LEPQLAAsQ9QsAC0GYvMAAQc0AQZC9wAAQ6QsAC0EQQQRB7OrDACgCACIAQZgHIAAbEQAAAAv1AQIDfwF+IwBBIGsiAiQAAkACQAJAIAAEQCAAKAIAIgNBf0YNASAAIANBAWo2AgAgAkEIaiIDIAG9IgVCIIg+AgQgAyAFPgIAIABBBGogAigCCCACKAIMEKMJIgNFDQIgAkEYaiIEIANBGGopAgA3AwAgAykCECEFIAAgACgCAEEBazYCACACIAU3AxBBFEEEEJQLIgBFDQMgAEEANgIAIAAgAikDEDcCBCAAQQxqIAQpAwA3AgAgAkEgaiQAIAAPCxD0CwALEPULAAtBmLzAAEHNAEGQvcAAEOkLAAtBFEEEQezqwwAoAgAiAEGYByAAGxEAAAALxRUDDH8BfQJ+IwBBEGsiCyQAAkACQCABBEAgASgCACIFQX9GDQEgASAFQQFqNgIAIwBBgAFrIgMkACADQUBrIgUgAr0iEEIgiD4CBCAFIBA+AgACQAJAAkACQAJAAkACQAJAIAFBBGogAygCQCADKAJEEKQJIgUEQCADQThqIAUQ+QkCQAJAIAMoAjggAygCPCgClAERBABB/wFxQQNrDg8BBwYAAAAABQAAAAQAAAMACyALQQA2AgAMBwsgAyAFEPkJIAMoAgAhBCADKAIEIQUjAEEQayIHJAAgB0EIaiAEIAUoAmARAAAgBygCCCIFIAcoAgwoAgwRBgAhECAHQRBqJAAgBUEAIBBChMnLnLGnuaUZURsiBEUEQCALQQA2AgAMBwsgA0HIAGoiBUEIaiAEQQhqKAIANgIAIAQpAgAhECAFQRRqIARBFGooAgA2AgAgAyAQNwNIIAMgBCkCDDcCVCADKgJIIQ9BEEEEEJQLIgoEQCADQeAAaiEOIAogDzgCACADQoSAgIAQNwJ0IAMgCjYCcCADQcgAaiIIQQRyIQZBAiEHQQQhDEEBIQkgCEEMaiINIQQDQAJAIAcEQCAHIQUMAQsCQCAERQ0AIAQgDkYNAEEDIQUgBCIGIQggBEEMaiINIQQMAQsgCyADKQNwNwIAIAtBCGogA0H4AGooAgA2AgAMCQsgBiANRgRAIAZBDGohDSAIQQxqIgYhCAsgBioCACEPIAZBBGogBiAFQQFrIgcbIQYgAygCdCAJRgRAIANB8ABqIAkgBRCLBiADKAJwIQoLIAogDGogDzgCACADIAlBAWoiCTYCeCAMQQRqIQwMAAsACwwHC0GwvcAAQcwAQaS+wAAQ6QsACyADQTBqIAUQ+QkgAygCMCADKAI0ENgJIgRFBEAgC0EANgIADAULIAsCfyAEKAIIIgUEQCAEKAIAIggqAgAhD0EQQQQQlAsiCgRAIAggBUEMbGohDiAKIA84AgAgA0KEgICAEDcCTCADIAo2AkggCEEEaiEGQQIhB0EEIQxBASEJIAhBDGoiDSEEA0ACQCAHBEAgByEFDAELAkAgBEUNACAEIA5GDQBBAyEFIAQiBiEIIARBDGoiDSEEDAELIAMoAkghByADKAJMDAQLIAYgDUYEQCAGQQxqIQ0gCEEMaiIGIQgLIAYqAgAhDyAGQQRqIAYgBUEBayIHGyEGIAMoAkwgCUYEQCADQcgAaiAJIAUQiwYgAygCSCEKCyAKIAxqIA84AgAgAyAJQQFqIgk2AlAgDEEEaiEMDAALAAsMBwtBBCEHQQALNgIEIAsgBzYCACALQQhqIAk2AgAMBAsgA0EoaiAFEPkJIAMoAiggAygCLBDTCSIERQRAIAtBADYCAAwECyADQcgAaiIFQQhqIARBCGooAgA2AgAgBUEUaiAEQRRqKAIANgIAIAVBIGogBEEgaigCADYCACADIAQpAgA3A0ggAyAEKQIMNwJUIAMgBCkCGDcDYCADKgJIIQ9BEEEEEJQLIgoEQCADQewAaiEOIAogDzgCACADQoSAgIAQNwJ0IAMgCjYCcCADQcgAaiIIQQRyIQZBAiEHQQQhDEEBIQkgCEEMaiINIQQDQAJAIAcEQCAHIQUMAQsCQCAERQ0AIAQgDkYNAEEDIQUgBCIGIQggBEEMaiINIQQMAQsgCyADKQNwNwIAIAtBCGogA0H4AGooAgA2AgAMBgsgBiANRgRAIAZBDGohDSAIQQxqIgYhCAsgBioCACEPIAZBBGogBiAFQQFrIgcbIQYgAygCdCAJRgRAIANB8ABqIAkgBRCLBiADKAJwIQoLIAogDGogDzgCACADIAlBAWoiCTYCeCAMQQRqIQwMAAsACwwECyADQSBqIAUQ+QkgAygCICADKAIkENQJIgRFBEAgC0EANgIADAMLIAsCfyAEKAIIIgUEQCAEKAIAIggqAgAhD0EQQQQQlAsiCgRAIAggBUEMbGohDiAKIA84AgAgA0KEgICAEDcCTCADIAo2AkggCEEEaiEGQQIhB0EEIQxBASEJIAhBDGoiDSEEA0ACQCAHBEAgByEFDAELAkAgBEUNACAEIA5GDQBBAyEFIAQiBiEIIARBDGoiDSEEDAELIAMoAkghByADKAJMDAQLIAYgDUYEQCAGQQxqIQ0gCEEMaiIGIQgLIAYqAgAhDyAGQQRqIAYgBUEBayIHGyEGIAMoAkwgCUYEQCADQcgAaiAJIAUQiwYgAygCSCEKCyAKIAxqIA84AgAgAyAJQQFqIgk2AlAgDEEEaiEMDAALAAsMBQtBBCEHQQALNgIEIAsgBzYCACALQQhqIAk2AgAMAgsgA0EYaiAFEPkJIAMoAhggAygCHBDQCSIERQRAIAtBADYCAAwCCyADQRBqIgUgBEHIAGooAgA2AgQgBSAEKAJANgIAIAsCfyADKAIUIgUEQCADKAIQIggqAgAhD0EQQQQQlAsiCgRAIAggBUEMbGohDiAKIA84AgAgA0KEgICAEDcCTCADIAo2AkggCEEEaiEGQQIhB0EEIQxBASEJIAhBDGoiDSEEA0ACQCAHBEAgByEFDAELAkAgBEUNACAEIA5GDQBBAyEFIAQiBiEIIARBDGoiDSEEDAELIAMoAkghByADKAJMDAQLIAYgDUYEQCAGQQxqIQ0gCEEMaiIGIQgLIAYqAgAhDyAGQQRqIAYgBUEBayIHGyEGIAMoAkwgCUYEQCADQcgAaiAJIAUQiwYgAygCSCEKCyAKIAxqIA84AgAgAyAJQQFqIgk2AlAgDEEEaiEMDAALAAsMBAtBBCEHQQALNgIEIAsgBzYCACALQQhqIAk2AgAMAQsgA0EIaiAFEPkJIAMoAgggAygCDBDPCSIHRQRAIAtBADYCAAwBCyADQcgAaiIEQQhqIAdBCGooAgA2AgAgB0EUaigCACEFIAcpAgwhESAHKQIAIRAgBEEgaiAHQSBqKAIANgIAIARBFGogBTYCACADIBA3A0ggAyAHKQIYNwNgIAMgETcCVCADKgJIIQ9BEEEEEJQLIgoEQCADQewAaiEOIAogDzgCACADQoSAgIAQNwJ0IAMgCjYCcCADQcgAaiIIQQRyIQZBAiEHQQQhDEEBIQkgCEEMaiINIQQDQAJAIAcEQCAHIQUMAQsCQCAERQ0AIAQgDkYNAEEDIQUgBCIGIQggBEEMaiINIQQMAQsgCyADKQNwNwIAIAtBCGogA0H4AGooAgA2AgAMAwsgBiANRgRAIAZBDGohDSAIQQxqIgYhCAsgBioCACEPIAZBBGogBiAFQQFrIgcbIQYgAygCdCAJRgRAIANB8ABqIAkgBRCLBiADKAJwIQoLIAogDGogDzgCACADIAlBAWoiCTYCeCAMQQRqIQwMAAsACwwBCyADQYABaiQADAELQRBBBEHs6sMAKAIAIgBBmAcgABsRAAAACyABIAEoAgBBAWs2AgACQCALKAIAIgFFBEBBACEHQQAhAQwBCyALQQhqKAIAIgcgCygCBCIFTw0AIAVBAnQhBCAHQQJ0IgVFBEAgBEUEQEEEIQEMAgsgARCxAUEEIQEMAQsgASAEQQQgBRCDCyIBRQ0DCyAAIAc2AgQgACABNgIAIAtBEGokAA8LEPQLAAsQ9QsACyAFQQRB7OrDACgCACIAQZgHIAAbEQAAAAvgDwIKfwF+IwBBEGsiCSQAAkACQCABBEAgASgCACIDQX9GDQEgASADQQFqNgIAIwBB8ABrIgQkACAEQUBrIgMgAr0iDUIgiD4CBCADIA0+AgACQAJAAkACQAJAAkACQCABQQRqIAQoAkAgBCgCRBCkCSIDBEAgBEE4aiADEPkJAkACQCAEKAI4IAQoAjwoApQBEQQAQf8BcUEFaw4NAQUAAAAEAAAAAAAAAwALIAlBADYCAAwGCyAEQRBqIAMQ+QkgBCgCECAEKAIUENAJIgNFBEAgCUEANgIADAYLIARBCGoiBSADQdQAaigCADYCBCAFIAMoAkw2AgACQCAEKAIIIgNFDQAgBCgCDCIFRQ0AIAMoAgAhBkEQQQQQlAsiCgRAIAMgBUEMbGohDCAKIAY2AgAgBEKEgICAEDcCTCAEIAo2AkggA0EEaiEGQQQhB0EBIQggA0EMaiILIQMDQAJAAkACQCAGIAtHBEAgAyEFIAYhAwwBCyADRQ0BIAMgDEYNASADQQxqIgshBQsgA0EEaiEGIAMoAgAhAyAIIAQoAkxHDQEgBEHIAGogCCALIAZrQQJ2QQFqEIsGIAQoAkghCgwBCyAEKAJMIQMgBCgCSCEHDAgLIAcgCmogAzYCACAEIAhBAWoiCDYCUCAHQQRqIQcgBSEDDAALAAsMBwtBBCEHQQAhAwwEC0GwvcAAQcwAQaS+wAAQ6QsACyAEQTBqIAMQ+QkgBCgCMCAEKAI0ENgJIgNFBEAgCUEANgIADAQLIARByABqIAMQ+AICfyAEQdwAaigCACIFBEAgBCgCVCIDKAIAIQZBEEEEEJQLIgoEQCADIAVBDGxqIQwgCiAGNgIAIARChICAgBA3AmQgBCAKNgJgIANBBGohBkEEIQdBASEIIANBDGoiCyEDA0ACQAJAAkAgBiALRwRAIAMhBSAGIQMMAQsgA0UNASADIAxGDQEgA0EMaiILIQULIANBBGohBiADKAIAIQMgCCAEKAJkRw0BIARB4ABqIAggCyAGa0ECdkEBahCLBiAEKAJgIQoMAQsgBCgCYCEHIAQoAmQMBAsgByAKaiADNgIAIAQgCEEBaiIINgJoIAdBBGohByAFIQMMAAsACwwGC0EEIQdBAAshAwJAIAQoAkwiBUUNACAFrUIMfqdFDQAgBCgCSBCxAQsCQCAEQdgAaigCACIFRQ0AIAWtQgx+p0UNACAEKAJUELEBCyAJIAM2AgQgCSAHNgIAIAlBCGogCDYCAAwDCyAEQShqIAMQ+QkgBCgCKCAEKAIsENQJIgNFBEAgCUEANgIADAMLIARByABqIAMQ+AICfyAEQdwAaigCACIFBEAgBCgCVCIDKAIAIQZBEEEEEJQLIgoEQCADIAVBDGxqIQwgCiAGNgIAIARChICAgBA3AmQgBCAKNgJgIANBBGohBkEEIQdBASEIIANBDGoiCyEDA0ACQAJAAkAgBiALRwRAIAMhBSAGIQMMAQsgA0UNASADIAxGDQEgA0EMaiILIQULIANBBGohBiADKAIAIQMgCCAEKAJkRw0BIARB4ABqIAggCyAGa0ECdkEBahCLBiAEKAJgIQoMAQsgBCgCYCEHIAQoAmQMBAsgByAKaiADNgIAIAQgCEEBaiIINgJoIAdBBGohByAFIQMMAAsACwwFC0EEIQdBAAshAwJAIAQoAkwiBUUNACAFrUIMfqdFDQAgBCgCSBCxAQsCQCAEQdgAaigCACIFRQ0AIAWtQgx+p0UNACAEKAJUELEBCyAJIAM2AgQgCSAHNgIAIAlBCGogCDYCAAwCCyAEQSBqIAMQ+QkgBCgCICEFIAQoAiQhBiMAQRBrIgMkACADQQhqIAUgBigCYBEAACADKAIIIgUgAygCDCgCDBEGACENIANBEGokACAFQQAgDULx6PCWi8rYv39RGyIDRQRAIAlBADYCAAwCCyAEQRhqIgUgA0HUAGooAgA2AgQgBSADKAJMNgIAIAkCfwJAIAQoAhgiA0UNACAEKAIcIgVFDQAgAygCACEGQRBBBBCUCyIKBEAgAyAFQQN0aiEMIAogBjYCACAEQoSAgIAQNwJMIAQgCjYCSCADQQRqIQZBBCEHQQEhCCADQQhqIgshAwNAAkACQAJAIAYgC0cEQCADIQUgBiEDDAELIANFDQEgAyAMRg0BIANBCGoiCyEFCyADQQRqIQYgAygCACEDIAggBCgCTEcNASAEQcgAaiAIIAsgBmtBAnZBAWoQiwYgBCgCSCEKDAELIAQoAkghByAEKAJMDAQLIAcgCmogAzYCACAEIAhBAWoiCDYCUCAHQQRqIQcgBSEDDAALAAsMBAtBBCEHQQALNgIEIAkgBzYCACAJQQhqIAg2AgAMAQsgCSADNgIEIAkgBzYCACAJQQhqIAg2AgALIARB8ABqJAAMAQtBEEEEQezqwwAoAgAiAEGYByAAGxEAAAALIAEgASgCAEEBazYCAAJAIAkoAgAiAUUEQEEAIQNBACEBDAELIAlBCGooAgAiAyAJKAIEIgVPDQAgBUECdCEFIANBAnQiBkUEQCAFRQRAQQQhAQwCCyABELEBQQQhAQwBCyABIAVBBCAGEIMLIgFFDQMLIAAgAzYCBCAAIAE2AgAgCUEQaiQADwsQ9AsACxD1CwALIAZBBEHs6sMAKAIAIgBBmAcgABsRAAAAC6IEAgd/AX4jAEEQayIFJAACQAJAIAEEQCABKAIAIgNBf0YNASABIANBAWo2AgAjAEEgayIEJAAgBEEYaiIDIAK9IgpCIIg+AgQgAyAKPgIAAkACQAJAIAFBBGogBCgCGCAEKAIcEKQJIgMEQCAEQRBqIAMQ+QkCQCAEKAIQIAQoAhQoApQBEQQAQf8BcUEIRgRAIARBCGogAxD5CSAEKAIIIAQoAgwQ0QkiA0UEQCAFQQA2AgAMAgsgAygCACEJAkAgAygCCCIHRQRAQQQhAwwBCyAHQf////8DcSIDIAdHDQQgB0ECdCIIQQBIDQQgAyAHRkECdCEGIAgEfyAIIAYQlAsFIAYLIgNFDQULIAMgCSAHQQJ0EP8LIQMgBUEIaiAHNgIAIAUgBzYCBCAFIAM2AgAMAQsgBUEANgIACyAEQSBqJAAMAwtBsL3AAEHMAEGkvsAAEOkLAAsQgQoACyAIIAZB7OrDACgCACIAQZgHIAAbEQAAAAsgASABKAIAQQFrNgIAAkAgBSgCACIBRQRAQQAhA0EAIQEMAQsgBUEIaigCACIDIAUoAgQiBk8NACAGQQJ0IQYgA0ECdCIERQRAIAZFBEBBBCEBDAILIAEQsQFBBCEBDAELIAEgBkEEIAQQgwsiAUUNAwsgACADNgIEIAAgATYCACAFQRBqJAAPCxD0CwALEPULAAsgBEEEQezqwwAoAgAiAEGYByAAGxEAAAAL4AEBA38jAEEgayIEJAACQAJAIAEgAEHUAGooAgAiBUkEQCAAKAJMIAFBA3RqIgYoAgAiBSAAQcgAaigCACIBTw0BIAYoAgQiBiABTw0CIARBHGogACgCQCIAIAZBDGxqIgFBCGooAgA2AgAgBCABKQIANwIUIARBCGoiAUEIaiAAIAVBDGxqIgBBCGooAgA2AgAgBCAAKQIANwMIIAJBACABQdC1wgAgAygCEBEBACAEQSBqJAAPCyABIAVBlLTCABDMCAALIAUgAUGktMIAEMwIAAsgBiABQbS0wgAQzAgAC9ABAQh9IAAgASoCADgCDCAAIAJBGGoqAgAgAkEMaioCACIGIAIqAgAiB0MAAAAAlCIDIAJBBGoqAgAiCEMAAAAAlCIEkyIFIAWSIgWUIAcgAkEIaioCACIJQwAAAACUIgogA5MiAyADkiIDlCAIIAQgCpMiBCAEkiIElJOSQwAAAACSkjgCCCAAIAJBFGoqAgAgBiADlCAJIASUIAcgBZSTkkMAAAAAkpI4AgQgACACQRBqKgIAIAYgBJQgCCAFlCAJIAOUk5JDAAAAAJKSOAIAC94BAQd9IAAgASoCACICQwAAAD+UIAEqAgwiA0MAAAA/lJIiBiADkyIDIAOUIAEqAgQiB0MAAAA/lCABQRBqKgIAIgRDAAAAP5SSIgMgBJMiBCAElJIgASoCCCIIQwAAAD+UIAFBFGoqAgAiBUMAAAA/lJIiBCAFkyIFIAWUkkMAAAAAkiIFIAYgApMiAiAClCADIAeTIgIgApSSIAQgCJMiAiAClJJDAAAAAJIiAkMAAAAAIAJDAAAAAF4bIgIgAiAFXRsQiAE4AgwgACAEOAIIIAAgAzgCBCAAIAY4AgALvAEBA38gACgCACEBIAAoAggiAgRAIAJB4AJsIQIDQAJAIAEoAgBFDQAgAUH8AGooAgAiAwRAIAMQsQELIAFBwAJqKAIAIgNFDQAgA0EDdEUNACABQbwCaigCABCxAQsgAUHgAmohASACQeACayICDQALIAAoAgAhAQsCQCAAQQRqKAIAIgJFDQAgAq1C4AJ+p0UNACABELEBCwJAIABBIGooAgAiAUUNACABQQN0RQ0AIABBHGooAgAQsQELC9EBAQh9IABB////+wc2AgwgACACQRhqKgIAIAJBDGoqAgAiBiACKgIAIgdDAAAAAJQiAyACQQRqKgIAIghDAAAAAJQiBJMiBSAFkiIFlCAHIAJBCGoqAgAiCUMAAAAAlCIKIAOTIgMgA5IiA5QgCCAEIAqTIgQgBJIiBJSTkkMAAAAAkpI4AgggACACQRRqKgIAIAYgA5QgCSAElCAHIAWUk5JDAAAAAJKSOAIEIAAgAkEQaioCACAGIASUIAggBZQgCSADlJOSQwAAAACSkjgCAAuwAQEBfwJAIABBBGooAgAiAUUNACABQQN0RQ0AIAAoAgAQsQELAkAgAEEQaigCACIBRQ0AIAFBA3RFDQAgAEEMaigCABCxAQsCQCAAQRxqKAIAIgFFDQAgAUECdEUNACAAQRhqKAIAELEBCwJAIABBLGooAgAiAUUNACABQQN0RQ0AIABBKGooAgAQsQELAkAgAEE4aigCACIBRQ0AIAFBA3RFDQAgAEE0aigCABCxAQsLtwMCBH8BfgJAAkAgAEUNACAAKAIAIgVBf0YNASAAIAVBAWo2AgAgAkUNACACKAIAIgVBf0YNASACIAVBAWo2AgAgA0UNACADKAIAIgVBf0YNASADIAVBAWo2AgAgBEUNACAEKAIAIgVBf0YNASAEIAVBAWo2AgAgAkEEaiEGIwBBMGsiBSQAIAVBKGogA0EEaiIHQQhqKAIANgIAIAVBGGogBEEEaiIIQQhqKQIANwMAIAUgBykCADcDICAFIAgpAgA3AxAgBUEIaiIHIAG9IglCIIg+AgQgByAJPgIAIABBBGogBSgCCCAFKAIMEKQJIgdFBEBBsL3AAEHMAEGkvsAAEOkLAAsgBSAGQQRqKAIAIgg2AgQgBSAGKAIAIAgoAghBB2pBeHFqNgIAIAdBEGoiCEEEaigCACEGIAdBzABqIAgoAgAgBigCCEEHakF4cWogBiAFQRBqIAUoAgAgBSgCBBD4AyAFQTBqJAAgBCAEKAIAQQFrNgIAIAMgAygCAEEBazYCACACIAIoAgBBAWs2AgAgACAAKAIAQQFrNgIAQf8BcSIAIABBAkdxDwsQ9AsACxD1CwAL770BAyh/En0GfiAAQfwDakEANgIAIABBiARqQQA2AgAgAyEXIAYhKyAJIRkgCiE2IABBgARqITQjAEHgAGsiEiQAIAwhIyALIgwgI0EDdGohOQJAAkACQAJAAkACQAJAICNFDQAgF0EoaigCAARAIBdBIGooAgAiJkEEayEsIBdBGGooAgAhNyAXQRxqKAIAITggF0E0aigCACEbIBdBLGooAgAhLyAXKAIQITIgFygCACEWIBcoAgghNSAMIRoDQCAaQQRqKAIAIgogGigCACITQbnz3fF5bEEFd3NBufPd8XlsIgNBGXatQoGChIiQoMCAAX4hTiAaQQhqIRpBACEGAkACQANAIAMgOHEiFSAmaikAACJPIE6FIkxCgYKEiJCgwIABfSBMQn+Fg0KAgYKEiJCgwIB/gyFNA0AgTVAEQCBPIE9CAYaDQoCBgoSIkKDAgH+DUEUNBCAVIAZBCGoiBmohAwwCCyAsIE16p0EDdiAVaiA4cUECdGsoAgAiAyAbTw0CIE1CAX0gTYMhTSAvIANBBHRqIgNBBGooAgAgE0cNACADQQhqKAIAIApHDQALCyADKAIMIgNBf0YNASADIDVJBEAgFiADQSxsaiIKLQAoIgYgN0kEQCAKQRxqIgMqAgAhQCAKQSBqKgIAIT4gA0L////39/////4ANwIAIApBFGoiAyoCACE8IApBGGoqAgAhQSADQv////f3/////gA3AgAgCkEQaioCACE7IApBDGoiAyoCACADQv////f3/////gA3AgACfyBBIDIgBkEGdGoiHCoCACI9lY4iQYtDAAAAT10EQCBBqAwBC0GAgICAeAshBiA9lY4iOkMAAADPYCEDIAZBgICAgHggQUMAAADPYBshFSBBQ////05eIRMCfyA6i0MAAABPXQRAIDqoDAELQYCAgIB4C0GAgICAeCADGyEKIDpD////Tl4hAwJ/ID4gPZWOIj+LQwAAAE9dBEAgP6gMAQtBgICAgHgLIQZB/////wcgFSATGyEVIEEgQVwhE0H/////ByAKIAMbIQogOiA6XCEDAn8gQCA9lY4iPotDAAAAT10EQCA+qAwBC0GAgICAeAshFEEAIBUgExshKEEAIAogAxshEwJ/IDwgPZWOIkGLQwAAAE9dBEAgQagMAQtBgICAgHgLIQMgEyAoSgJ/IDsgPZWOIjqLQwAAAE9dBEAgOqgMAQtBgICAgHgLIRUNA0EAQf////8HIBVBgICAgHggOkMAAADPYBsgOkP///9OXhsgOiA6XBsiCkEAQf////8HIBRBgICAgHggPkMAAADPYBsgPkP///9OXhsgPiA+XBsiMEoEQANAIBMgKE4NBSAoIBMgEyAoSGoiE04NAAwFCwALQQBB/////wcgA0GAgICAeCBBQwAAAM9gGyBBQ////05eGyBBIEFcGyIVQQBB/////wcgBkGAgICAeCA/QwAAAM9gGyA/Q////05eGyA/ID9cGyIzSgRAA0AgCiEDA0AgAyAwSARAIDAgAyADIDBIaiIDTg0BCwsgEyAoTg0FICggEyATIChIaiITTg0ADAULAAsCQCAcQRBqKAIABEAgHEEIaigCACIlQQRrISogHEEEaigCACEeIBxBHGooAgAhHSAcQRRqKAIAIS4MAQsDQCAKIQYDQCAVIQMDQCADIDNIBEAgMyADIAMgM0hqIgNODQELCyAGIDBIBEAgMCAGIAYgMEhqIgZODQEL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yABqEIgHIBIoAihFBEAgEigCLCEGIDIgCjYCACAXIAY2AiwMBAsgEkEwaigCACIARQ0CIBIoAiwgAEHs6sMAKAIAIgBBmAcgABsRAAAACyATIANB+NTBABDMCAALIBogFUHc9sAAEMwIAAsQgQoACyADIApGBEAgLyAKEIcGICYoAgAhAwsgJiADQQFqNgIAIBcoAiwgA0EEdGoiAyAUNgIMIAMgJTYCBCADICw2AgAgA0EIaiAqNgIAICcgFDYCmAEMAQsgA0EQaiEZDAALAAtB8NbAAEErQfzgwQAQxAkACyASQdwAakEANgIAIBJB1MbAADYCWCASQgE3AkwgEkHE38EANgJIIBJByABqQezgwQAQggoACyASQdwAakEANgIAIBJB1MbAADYCWCASQgE3AkwgEkHo78EANgJIIBJByABqQdDwwQAQggoACyASQdwAakEANgIAIBJB1MbAADYCWCASQgE3AkwgEkHg8MEANgJIIBJByABqQejwwQAQggoACyASQQA2AkhBASASQcQAaiASQRBqIBJByABqQazkwQAQ0QgACyARBEACQCAJIRUgCyETIwBBgAFrIhYkAAJ+QYDrwwApAwBQRQRAQZDrwwApAwAhTkGI68MAKQMADAELIBZBCGoiA0ICNwMIIANCATcDAEGA68MAQgE3AwBBkOvDACAWKQMQIk43AwAgFikDCAshTCAWQRhqIgNBGGpCADcDACADQRRqQfiMwQA2AgAgFiBMNwMYQYjrwwAgTEICfDcDACAWQQA2AiggFiBONwMgIBZBOGoiA0EYakIANwMAIANBFGpB+IzBADYCACAWQQA2AkggFiBONwNAIBYgTEIBfDcDOAJAAkAgI0UNACATICNBA3RqIRcDQAJAAkAgEygCACIGIAQoAkBJIgNFDQAgBCgCOCAGQQxsakEAIAMbIgMoAgAgE0EEaiIcKAIARw0AIANBfzYCACADKQIEIVAgA0J/NwIEIFBCIIinIQYCQCAWKAI0RQ0AIBYpAxggFikDICATEIMDIUwgFigCKCIUIEyncSERIExCGYhC/wCDQoGChIiQoMCAAX4hTiAcKAIAIQogEygCACEJQQAhAyAWKAIsIQwDQCAMIBFqKQAAIk8gToUiTEKBgoSIkKDAgAF9IExCf4WDQoCBgoSIkKDAgH+DIU0DQCBNUARAIE8g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gcAAELsIIQEMEgsgB0EDTQRAIANCgcoANwPYAyADQdgDahC0CiEBDBILIAsgAkEmazYCBCALIAhBJmo2AgAgCCgAIiEzIANB2ANqIAsQjwMgAygC2AMNCyADKALcAyIsRQRAQQhB/InAAEGchMAAEJwIIQEMEgsgAykD4AMhSiALKAIEIgJBA00EQCADQoHKADcD2AMgA0HYA2oQtAohAQwRCyALIAJBBGsiBzYCBCALIAsoAgAiCEEEajYCACAHQQNNBEAgA0KBygA3A9gDIANB2ANqELQKIQEMEQsgCCgAACE0IAsgAkEIayIHNgIEIAsgCEEIajYCACAHQQNNBEAgA0KBygA3A9gDIANB2ANqELQKIQEMEQsgCCoABCFyIAsgAkEMayIHNgIEIAsgCEEMajYCAAJAAkACQCAHBEAgCCoACCFzIAsgAkENayIHNgIEIAsgCEENajYCACAILQAMIiEOAgIDAQsgA0KBygA3A9gDIANB2ANqELQKIQEMEwtBEEEEEJQLIgFFDTQgASAhOgABIAFBAjoAAAwSC0EAISELIAdBA00EQCADQoHKADcD2AMgA0HYA2oQtAohAQwRCyALIAJBEWsiBzYCBCALIAhBEWo2AgAgB0EESQ0MIAgoAA0hKiALIAJBFWsiBzYCBCALIAhBFWo2AgAgCCgAESItQQRPBEAgA0EBOgDYAyADIC2tNwPgAyADQdgDakHMj8AAQZyEwAAQuwghAQwRCyAHRQRAIANCgcoANwPYAyADQdgDahC0CiEBDBELIAsgAkEWayIHNgIEIAsgCEEWajYCACAHQQ9LDQEgA0KBygA3A9gDIANB2ANqELQKIQEMEAsgA0KBygA3A9gDIANB2ANqELQKIQYMEQsgS6chByBQpyFHIE6nITAgUachKyAILQAVIUggCyACQSZrNgIEIAsgCEEmajYCACADQfgFaiICQQhqIBwpAwA3AwAgAkEQaiAfKQMANwMAIANB4AVqIgJBCGogICkDADcDACACQRBqIBkpAwA3AwAgA0G4BWoiAkEIaiAnKQMANwMAIAJBEGogKCkDADcDACACQRhqICkpAwA3AwAgAkEgaiAkKQMANwMAIAMgAykDqAY3A/gFIAMgAykDkAY3A+AFIAMgAykDwAY3A7gFIAhBHmopAAAiUEIghiAIKQAWIk5CIIiEIUsg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IElCIIg+AgAgCEEwaiAENgIAIAhBLGogEDYCACAIQSRqIA6tIEtCIIaENwIAIAhBIGogETYCACAIQRhqIEw3AgAgCEEUaiAKNgIAIAhBEGogBzYCACAIQQhqIEo3AgAgCCASNgIEC0EADAwLIAJBBEHs6sMAKAIAIgBBmAcgABsRAAAACyAGQoHKADcDoAkgBkGgCWoQtAohBQwHCyAGQoHKADcDoAkgBkGgCWoQtAohBQwGCyAGKAKkCSEFDAILQQNBqJPAAEGchMAAEJwICyEFAkAgBEUNACAEQQR0RQ0AIBAQsQELIAFFDQIgAa1C8AJ+p0UNAiACELEBDAILIAYoAhwiAUUNACABrULwAn6nRQ0AIAIQsQELIEmnIgFFDQAgAUEEdEUNACAQELEBCyAKRQ0BIAqtQgx+p0UNASAHELEBDAELIEmnIgFFDQAgAa1CDH6nRQ0AIAcQsQELIEqnIgFFDQAgAUEDdEUNACASELEBCyAIIAU2AgRBAQs2AgAgBkHwC2okAAJAAkACfyADKALYA0UEQCAYKAIAIgFBAkcNAkEHQcjDwABBnITAABCcCAwBCyADKALcAwshASAUQQE2AgAgFCABNgIEDAELIANBkANqIANB2ANqIg5BHGooAgA2AgAgA0GIA2ogA0HsA2oiJSkCADcDACADQYADaiADQeQDaikCADcDACADQZgDaiADQfwDaikCADcDACADQaADaiADQYQEaikCADcDACADQagDaiADQYwEaikCADcDACADQbADaiADQZQEaikCADcDACADQbgDaiADQZwEaikCADcDACADQcADaiADQaQEaigCADYCACADIAMpAtwDNwP4AiADQZQDaiABNgIAQQAhBEEAIQZBACESQQAhCUEAIQJBACERQgAhSUIAIUpCACFLQQAhHkEAIQtBACEMQQAhIUEAIRNBACEVQQAhF0EAISBBACEaQQAhGUIAIU9BACEcQQAhH0EAISNBACEoQQAhLEEAIS1BACEpQQAhJ0IAIUxCACFOQgAhUEIAIVRCACFVQgAhU0EAISpBACEzQQAhNEEAIS9BACEiIwBBgA5rIgckAAJAIA4CfwJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAn8CQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAC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A1QEQEIAIRcgDCEBDAELIBdC/P///w+DIRpCACEXQoCAgIAgIRggDCEBA0AgAUEYaiAYQoCAgIAgfCAXQgN8hDcCACABQRBqIBhCgICAgBB8IBdCAnyENwIAIAFBCGogGCAXQgF8hDcCACABIBhCgICAgBB9IBeENwIAIAFBIGohASAYQoCAgIBAfSEYIBogF0IEfCIXUg0ACwsgGVBFBEAgF0IghkKAgICAEHwhGANAIAEgFyAYhDcCACAYQoCAgIAQfCEYIAFBCGohASAXQgF8IRcgGUIBfSIZQgBSDQALCyAKDAILIAIgAUHs6sMAKAIAIgBBmAcgABsRAAAACyABQQhqKAIAIQogASgCBAtBIEEEEJQLIgJFDQIhEyADQSRqQgA3AgAgA0EsakIANwIAIANBOGpBCDYCACADQTRqIAI2AgAgA0EQNgIgIANBCGoiAUEQakL////7////v383AwAgAUEgakEANgIAIANC////+/f//79/NwMQIANC////+/f//7//ADcDCCADQQE6AE8gCkH/////AXEhAgJAAkACQCAKQQN0IgsEQCALQQF2IgFBBBCUCyIRDQEgAUEEQezqwwAoAgAiAEGYByAAGxEAAAALIANBADYCWCADIAI2AlRBBCERIANBBDYCUCADQQA2AmggA0IENwNgQQQhBwwBCyADQQA2AlggAyARNgJQIAMgAjYCVCACrSIXQhh+IhhCIIinIgENAiAYpyIGQQBIDQIgAUVBAnQhByAGBH8gBiAHEJQLBSAHCyIBRQ0DIAMgAjYCZCADIAE2AmACQCALQQlJDQAgAkEBayIHQQNxIQQgAkECa0EDTwRAIAdBfHEhBQNAIAFC////+/f//7//ADcCACABQdgAakL////7////v383AgAgAUHQAGpC////+/f//79/NwIAIAFByABqQv////v3//+//wA3AgAgAUFAa0L////7////v383AgAgAUE4akL////79///v383AgAgAUEwakL////79///v/8ANwIAIAFBKGpC////+////79/NwIAIAFBIGpC////+/f//79/NwIAIAFBGGpC////+/f//7//ADcCACABQRBqQv////v///+/fzcCACABQQhqQv////v3//+/fzcCACABQeAAaiEBIAVBBGsiBQ0ACwsgBEUNAANAIAFC////+/f//7//ADcCACABQRBqQv////v///+/fzcCACABQQhqQv////v3//+/fzcCACABQRhqIQEgBEEBayIEDQALCyABQv////v3//+/fzcCCCABQv////v3//+//wA3AgAgAUEQakL////7////v383AgAgAyACNgJoIBdCDH4iF0IgiKciAQ0CIBenIgZBAEgNAiABRUECdCEBIAYEfyAGIAEQlAsFIAELIgdFDQEgByEBAkAgC0EJSQ0AIAJBAWsiAUEDcSEEAkAgAkECa0EDSQRAIAchAQwBCyABQXxxIQUgByEBA0AgAUF/NgIAIAFBLGpBfzYCACABQShqQQA6AAAgAUEgakJ/NwIAIAFBHGpBADoAACABQRRqQn83AgAgAUEQakEAOgAAIAFBCGpCfzcCACABQQRqQQA6AAAgAUEwaiEBIAVBBGsiBQ0ACwsgBEUNAANAIAFBfzYCACABQQhqQX82AgAgAUEEakEAOgAAIAFBDGohASAEQQFrIgQNAAsLIAFBfzYCCCABQQA6AAQgAUF/NgIAIAIhBgsgAyAGNgJEIAMgAjYCQCADIAc2AjwCQAJAAkACQAJAIAsgDGoiFCAMRgRAQQAhAQwBCyADQTxqIRVBACEEIAwhEANAAkACQCAPKAIIIgEgECgCACICSwRAIBAoAgQiCCABTw0BIARBAWohCyACQQxsIA8oAgAiAmoiASoCCCEbIAEqAgQhHCABKgIAIR0gAiAIQQxsaiIBKgIEIR4gASoCACEfIAEqAgghICAEIAZJDQIgCyAGIgJrIQggCCADKAJAIAJrSwRAIBUgBiAIEPIFIAMoAjwhByADKAJEIQILIAcgAkEMbGohASAIQQJPBEAgBCAGayIFQQNxIAQgBkF/c2pBA08EQCAFQXxxIQUDQCABQX82AgAgAUEsakF/NgIAIAFBKGpBADoAACABQSBqQn83AgAgAUEcakEAOgAAIAFBFGpCfzcCACABQRBqQQA6AAAgAUEIakJ/NwIAIAFBBGpBADoAACABQTBqIQEgBUEEayIFDQALCwRAIBIgBmtBA3EhBQNAIAFBfzYCACABQQhqQX82AgAgAUEEakEAOgAAIAFBDGohASAFQQFrIgUNAAsLIAIgCGpBAWshAgsgAyAIBH8gAUF/NgIIIAFBADoABCABQX82AgAgAkEBagUgAgsiBjYCRCADAn8gCyADKAJoIgggBEsNABogCyAIIgJrIQ4gDiADKAJkIAJrSwRAIANB4ABqIAggDhD4BSADKAJoIQILIAMoAmAgAkEYbGohASAOQQJPBEAgBCAIayIFQQNxIAQgCEF/c2pBA08EQCAFQXxxIQUDQCABQv////v3//+//wA3AgAgAUHYAGpC////+////79/NwIAIAFB0ABqQv////v3//+/fzcCACABQcgAakL////79///v/8ANwIAIAFBQGtC////+////79/NwIAIAFBOGpC////+/f//79/NwIAIAFBMGpC////+/f//7//ADcCACABQShqQv////v///+/fzcCACABQSBqQv////v3//+/fzcCACABQRhqQv////v3//+//wA3AgAgAUEQakL////7////v383AgAgAUEIakL////79///v383AgAgAUHgAGohASAFQQRrIgUNAAsLBEAgEiAIa0EDcSEFA0AgAUL////79///v/8ANwIAIAFBEGpC////+////79/NwIAIAFBCGpC////+/f//79/NwIAIAFBGGohASAFQQFrIgUNAAsLIAIgDmpBAWshAgsgAiAORQ0AGiABQv////v3//+/fzcCCCABQv////v3//+//wA3AgAgAUEQakL////7////v383AgAgAkEBags2AmgMAgsgAiABQfSzwgAQzAgACyAIIAFBhLTCABDMCAALIAQgBk8NAyAHIARBDGxqIAQ2AgggAygCaCIBIARNDQQgEEEIaiEQIAMoAmAgBEEYbGoiASAdIB8gHSAcQwAAAACUIiOSIBtDAAAAAJQiIZIgHyAeQwAAAACUIiSSICBDAAAAAJQiIpJeGzgCDCABIBsgICAdQwAAAACUIiUgI5IiJyAbkyAfQwAAAACUIiYgJJIiKCAgk14bOAIIIAEgHCAeICUgHJMgIZIgJiAekyAikl4bOAIEIAEgHSAfICMgHZMgIZIgJCAfkyAikl4bOAIAIAFBFGogGyAgIBsgJ5IgICAokl4bOAIAIAFBEGogHCAeICUgHJIgIZIgJiAekiAikl4bOAIAIAMoAlgiASADKAJURgRAIANB0ABqIAEQlAYgAygCUCERIAMoAlghAQsgESABQQJ0aiAENgIAIAMgAUEBajYCWCASQQFqIRIgCyEEIBAgFEcNAAsgAygCJCIBIAMoAigiBEcNAQsgA0EgaiABEJcGIAMoAighBAsgAygCICAEQQd0aiIBQQE2AmAgAUL////7////v383AzAgAUL////79///v/8ANwMgIAFC////+/f//7//ADcDECABQv////v3//+//wA3AwggAUL////79///v/8ANwMAIAFBADsBeCABQdgAakL////7////v383AwAgAUHQAGpC////+////79/NwMAIAFByABqQv////v///+/fzcDACABQUBrQv////v///+/fzcDACABQThqQv////v///+/fzcDACABQShqQv////v3//+//wA3AwAgAUEYakL////79///v/8ANwMAIAFB7ABqQn83AgAgAUHkAGpCfzcCACABQfQAakEAOgAAIAMgBEEBajYCKCADQfAAaiIBIANBCGogA0HPAGogAygCUCICIAMoAlggA0HgAGpBAEEAEDwgAyABQRhqKgIAIhs4AhwgAyABQRRqKgIAIhw4AhggAyADQYABaioCACIdOAIUIAMgA0H8AGoqAgAiHjgCECADIANB+ABqKgIAIh84AgwgAyADKgJ0IiA4AgggAygCKEUNAiADKAIgIgEgHTgCMCABIB44AiAgASAfOAIQIAFB////+wc2AgwgAUL////79///v/8ANwIEIAEgIDgCACABQdwAakH///97NgIAIAFB1ABqQv////v///+/fzcCACABQdAAaiAbOAIAIAFBzABqQf///3s2AgAgAUHEAGpC////+////79/NwIAIAFBQGsgHDgCACABQTxqQf///3s2AgAgAUE0akL////7////v383AgAgAUEsakH////7BzYCACABQSRqQv////v3//+//wA3AgAgAUEcakH////7BzYCACABQRRqQv////v3//+//wA3AgACQCADKAJkIgFFDQAgAa1CGH6nRQ0AIAMoAmAQsQELAkAgAygCVCIBRQ0AIAFBAnRFDQAgAhCxAQsgCSADKQMINwIAIAlBOGogA0EIaiIBQThqKQMANwIAIAlBMGogAUEwaikDADcCACAJQShqIAFBKGopAwA3AgAgCUEgaiABQSBqKQMANwIAIAlBGGogAUEYaikDADcCACAJQRBqIAFBEGopAwA3AgAgCUEIaiABQQhqKQMANwIAIAkgDykCADcCQCAJQcgAaiAPQQhqKAIA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AgggAygCDBCjCSICRQ0CQQEhBAJAIAIqAsQBQwAAAABcDQAgAkHIAWoqAgBDAAAAAFwNACACQcwBaioCAEMAAAAAXA0AIAJB0AFqKgIAQwAAAABcDQAgAkHUAWoqAgBDAAAAAFwNACACQdgBaioCAEMAAAAAXA0AQQAhBAsgACAAKAIAQQFrNgIAIANBEGokACAEDwsQ9AsACxD1CwALQZi8wABBzQBBkL3AABDpCwALsQEDAn8BfQF+IwBBEGsiAyQAAkACQCAABEAgACgCACICQX9GDQEgACACQQFqNgIAIANBCGoiAiABvSIFQiCIPgIEIAIgBT4CACAAQQRqIAMoAgggAygCDBCjCSICRQ0CIAJByABqKgIMIQQgACAAKAIAQQFrNgIAIANBEGokAEMAAAAAQwAAgD8gBJUgBEMAAAAAWxsPCxD0CwALEPULAAtBmLzAAEHNAEGQvcAAEOkLAAuXAQICfwF+IwBBEGsiAyQAAkACQCAABEAgACgCACICQX9GDQEgACACQQFqNgIAIANBCGoiAiABvSIEQiCIPgIEIAIgBD4CACAAQQRqIAMoAgggAygCDBCjCSICRQ0CIAJBoQJqLQAAIAAgACgCAEEBazYCACADQRBqJAAPCxD0CwALEPULAAtBmLzAAEHNAEGQvcAAEOkLAAuXAQICfwF+IwBBEGsiAyQAAkACQCAABEAgACgCACICQX9GDQEgACACQQFqNgIAIANBCGoiAiABvSIEQiCIPgIEIAIgBD4CACAAQQRqIAMoAgggAygCDBCjCSICRQ0CIAItANQCQQFGIAAgACgCAEEBazYCACADQRBqJAAPCxD0CwALEPULAAtBmLzAAEHNAEGQvcAAEOkLAAuaAQICfwF+IwBBEGsiAyQAAkACQCAABEAgACgCACICQX9GDQEgACACQQFqNgIAIANBCGoiAiABvSIEQiCIPgIEIAIgBD4CACAAQQRqIAMoAgggAygCDBCjCSICRQ0CIAItANQCQQJxQQF2IAAgACgCAEEBazYCACADQRBqJAAPCxD0CwALEPULAAtBmLzAAEHNAEGQvcAAEOkLAAuVAQICfwF+IwBBEGsiAyQAAkACQCAABEAgACgCACICQX9GDQEgACACQQFqNgIAIANBCGoiAiABvSIEQiCIPgIEIAIgBD4CACAAQQRqIAMoAggg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CCAFNgIUIAggAjYCECAIIAw2AiggCCALNgIkIAggADYCICAIQQhqIRUjAEHwAWsiAyQAIANB0AFqIgBBCGogCEEQaiIBQQhqKAIANgIAIAMgASkCADcD0AEgA0HgAWoiAUEIaiICIAhBIGoiBEEIaigCADYCACADIAQpAgA3A+ABIwBBIGsiCSQAAkAgAigCAARAQSBBBBCUCyICBEAgA0EAOgDIASADQQA2AqQBIANBADYCgAEgA0EANgJYIANBEDYCGCADQv////v3//+/fzcCCCADQv////v3//+//wA3AgAgA0EkakIANwIAIANBHGpCADcCACADIAApAgA3AkAgAyABKQIANwJMIANBOGpCADcCACADQTBqQoiAgIDAADcCACADQSxqIAI2AgAgA0EQakL////7////v383AgAgA0HIAGogAEEIaigCADYCACADQdQAaiIAIAFBCGooAgA2AgAjAEGgAWsiBCQAIAlBCGoiGEECNgIAIAAoAgAhGQJAIAMoAoABIgBFDQACQCADQYQBaigCACIBRQ0AIAFBAnRFDQAgABCxAQsCQCADQZABaigCACIARQ0AIABBAnRFDQAgA0GMAWooAgAQsQELIANBnAFqKAIAIgBFDQAgAEEEdEUNACADQZgBaigCABCxAQsgA0EANgKAAQJAIAMoAlgiAEUNAAJAIANB3ABqKAIAIgFFDQAgAa1CDH6nRQ0AIAAQsQELIANB5ABqKAIAIgAEQCADQegAaigCACAAQQJ0QQtqQXhxaxCxAQsgA0H4AGooAgAiAEUNACAArUIYfqdFDQAgA0H0AGooAgAQsQELIANBADYCWAJAIAMoAqQBIgBFDQACQCADQagBaigCACIBRQ0AIAFBAnRFDQAgABCxAQsCQCADQbQBaigCACIARQ0AIABBAnRFDQAgA0GwAWooAgAQsQELIANBwAFqKAIAIgBFDQAgAEECdEUNACADQbwBaigCABCxAQsgA0EANgKkAQJAIAMtAMgBQX9zQQBxIhZB8ABxRQ0AIARBMGpBADYCACAEQgQ3AyggBEIANwMgIARBwP/BADYCHCAEQQA2AhhBBCEBQQQhAAJAAkACQAJAIANByABqKAIAIgYEQCAGrUIMfiIbQiCIpyIADQEgG6ciBUEASA0BIABFQQJ0IQIgBQR/IAUgAhCUCwUgAgsi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AEEgayICJAAgACgCACEDIAJBCGoiACABQdTGwAAQpgogAiADNgIYIAIgA0EEajYCHCAAIAJBGGpB+NfAABDsBCAAIAJBHGpB+NfAABDsBCAAEMcHIAJBIGokAAtrACAAQgA3AhwgACABKQIANwIAIABBJGpCADcCACAAQSxqQgA3AgAgAEE0akIANwIAIABBPGpBADYCACAAQRhqIAFBGGooAgA2AgAgAEEQaiABQRBqKQIANwIAIABBCGogAUEIaikCADcCAAtsAgJ/An1DAACgQCEEQwAAoEBDAACAPyAAQR91IgEgAGogAXMiAUEBcRshAyABQQJPBEADQCADIAQgBJQiBEMAAIA/IAFBAnEblCEDIAFBA0sgAUEBdiEBDQALC0MAAIA/IAOVIAMgAEEASBsLcQIEfwF8IwBBEGsiASQAAkAgAARAIAAoAgAiAkF/Rg0BIAAgAkEBajYCACAAKAIEIgIoAgAhAyABQQhqIgQgAigCBDYCBCAEIAM2AgAgASsDCCAAIAAoAgBBAWs2AgAgAUEQaiQADwsQ9AsACxD1CwALbwIDfwF8IwBBEGsiASQAAkAgAARAIAAoAgAiAkF/Rg0BIAAgAkEBajYCACAAKAIEIQIgAUEIaiIDIABBCGooAgA2AgQgAyACNgIAIAErAwggACAAKAIAQQFrNgIAIAFBEGokAA8LEPQLAAsQ9QsAC9QBACAAQv////v///+/fzcDMCAAQv////v3//+//wA3AyAgAEL////79///v/8ANwMQIABC////+/f//7//ADcDCCAAQv////v3//+//wA3AwAgAEHYAGpC////+////79/NwMAIABB0ABqQv////v///+/fzcDACAAQcgAakL////7////v383AwAgAEFAa0L////7////v383AwAgAEE4akL////7////v383AwAgAEEoakL////79///v/8ANwMAIABBGGpC////+/f//7//ADcDAAtpAQJ/IwBBIGsiAiQAIAIgATYCBEEBIQMCQCAAKAIAIAFGDQBBAiEDIAAoAgQgAUYNAEEAIQMgACgCCCABRg0AIAJBADYCCCAAQQhqIAJBBGogAkEIakHAnMIAENUIAAsgAkEgaiQAIAMLYQIBfQJ/AkAgAARAIAAoAgAiA0F/Rg0BIAAgA0EBajYCACABIAAoAgQiBEGcAWooAgBJBEAgBEGUAWooAgAgAUEobGpBDGoqAgAhAgsgACADNgIAIAIPCxD0CwALEPULAAtpACAAQgA3AgAgAEIANwIwIABCADcCQCAAQShqQgA3AgAgAEEgakIANwIAIABBGGpCADcCACAAQRBqQgA3AgAgAEEIakIANwIAIABBOGpCADcCACAAQcgAakIANwIAIABB0ABqQgA3AgALcAEBfyMAQTBrIgIkACACIAE2AgQgAiAANgIAIAJBHGpBAjYCACACQSxqQQE2AgAgAkIDNwIMIAJB8KrDADYCCCACQQE2AiQgAiACQSBqNgIYIAIgAkEEajYCKCACIAI2AiAgAkEIakGkq8MAEIIKAAttAQF/IwBBMGsiAyQAIAMgATYCBCADIAA2AgAgA0EcakECNgIAIANBLGpBATYCACADQgM3AgwgA0HIq8MANgIIIANBATYCJCADIANBIGo2AhggAyADQQRqNgIoIAMgAzYCICADQQhqIAIQggoAC20BAX8jAEEwayIDJAAgAyABNgIEIAMgADYCACADQRxqQQI2AgAgA0EsakEBNgIAIANCAjcCDCADQbDEwwA2AgggA0EBNgIkIAMgA0EgajYCGCADIAM2AiggAyADQQRqNgIgIANBCGogAhCCCgALWQEDfyMAQSBrIgIkACABQRxqKAIAIQMgASgCGCACQQhqIgFBEGogAEEQaikCADcDACABQQhqIABBCGopAgA3AwAgAiAAKQIANwMIIAMgARC3AiACQSBqJAALWQEDfyMAQSBrIgIkACAAQRxqKAIAIQMgACgCGCACQQhqIgBBEGogAUEQaikCADcDACAAQQhqIAFBCGopAgA3AwAgAiABKQIANwMIIAMgABC3AiACQSBqJAALawEBfyMAQSBrIgIkACACQdyYwAA2AgQgAiAANgIAIAJBCGoiAEEQaiABQRBqKQIANwMAIABBCGogAUEIaikCADcDACACIAEpAgA3AwhBACACQZSdwAAgAkEEakGUncAAIABB8JnAABCpBAALawEBfyMAQSBrIgIkACACQbjTwAA2AgQgAiAANgIAIAJBCGoiAEEQaiABQRBqKQIANwMAIABBCGogAUEIaikCADcDACACIAEpAgA3AwhBACACQZjYwAAgAkEEakGY2MAAIABBzNTAABCpBAALZQEBfyMAQSBrIgUkACAFIAI2AgQgBSABNgIAIAVBCGoiAUEQaiADQRBqKQIANwMAIAFBCGogA0EIaikCADcDACAFIAMpAgA3AwggACAFQejXwAAgBUEEakHo18AAIAEgBBCpBAALZQEBfyMAQSBrIgQkACAEIAE2AgQgBCAANgIAIARBCGoiAEEQaiACQRBqKQIANwMAIABBCGogAkEIaikCADcDACAEIAIpAgA3AwhBACAEQfjXwAAgBEEEakH418AAIAAgAxCpBAALZQEBfyMAQSBrIgQkACAEIAE2AgQgBCAANgIAIARBCGoiAEEQaiACQRBqKQIANwMAIABBCGogAkEIaikCADcDACAEIAIpAgA3AwhBACAEQbjYwAAgBEEEakG42MAAIAAgAxCpBAALWQECfyMAQSBrIgIkACACQQhqIgMgAUHUxsAAEKYKIAIgADYCGCACIABBBGo2AhwgAyACQRhqQfjXwAAQ7AQgAyACQRxqQfjXwAAQ7AQgAxDHByACQSBqJAALZQEBfyMAQSBrIgQkACAEIAE2AgQgBCAANgIAIARBCGoiAEEQaiACQRBqKQIANwMAIABBCGogAkEIaikCADcDACAEIAIpAgA3AwhBACAEQdD0wQAgBEEEakHQ9MEAIAAgAxCpBAALWQECfyMAQSBrIgIkACACQQhqIgMgAUHM8cEAEKYKIAIgADYCGCACIABBBGo2AhwgAyACQRhqQdD0wQAQ7AQgAyACQRxqQdD0wQAQ7AQgAxDHByACQSBqJAALawEBfyMAQSBrIgIkACACQcyfwwA2AgQgAiAANgIAIAJBCGoiAEEQaiABQRBqKQIANwMAIABBCGogAUEIaikCADcDACACIAEpAgA3AwhBACACQdCdwwAgAkEEakHQncMAIABBmKXDABCpBAALaAEBfyMAQSBrIgMkACADQdCfwwA2AgQgAyAANgIAIANBCGoiAEEQaiABQRBqKQIANwMAIABBCGogAUEIaikCADcDACADIAEpAgA3AwhBACADQcCdwwAgA0EEakHAncMAIAAgAhCpBAALXAEBfyMAQSBrIgIkACACIAAoAgA2AgQgAkEIaiIAQRBqIAFBEGopAgA3AwAgAEEIaiABQQhqKQIANwMAIAIgASkCADcDCCACQQRqQeCbwAAgABC3AiACQSBqJAALXwECfyMAQaABayIBJAACQCAA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JAAgAEGIAWoiBUEIakIANwMAIAVBIGpCADcDACAAQgA3A4gBIABCADcDoAEgAEHgAmoiAUEIakIANwMAIAFBIGpCADcDACABQThqQgA3AwAgAUHQAGpCADcDACABQegAakIANwMAIABCADcD4AIgAEIANwP4AiAAQgA3A5ADIABCADcDqAMgAEIANwPAAyAAQdgDaiICQQhqIgZCADcDACAAQfADaiIHQgA3AwAgAkEgaiIIQgA3AwAgAEIANwPYAyAAQYgEaiICQSBqQgA3AwAgAkEIakIANwMAIAJBOGpCADcDACACQdAAakIANwMAIAJB6ABqQgA3AwAgAEIANwOgBCAAQgA3A4gEIABCADcDuAQgAEIANwPQBCAAQgA3A+gEIABBgAVqIgRBCGpCADcDACAEQSBqQgA3AwAgBEE4akIANwMAIARB0ABqQgA3AwAgAEIANwOABSAAQgA3A5gFIABCADcDsAUgAEIANwPIBSAAQbgBaiABQfgAEP8LGiAAQdgCaiAAQYAEaikDADcDACAAQdACaiAIKQMANwMAIABByAJqIAcpAwA3AwAgAEHAAmogAEHoA2opAwA3AwAgAEG4AmogBikDADcDACAAIAApA9gDNwOwAiAAQRBqIAJB+AAQ/wsaIANBCGoiAkHgAmogBEHgABD/CxogAiAFQdgBEP8LIgFB2AFqQQA2AgAgAUHcAWogAEEMakH8ABD/CxogAUGQBGpCADcDACABQYgEakKAgICAwAA3AwAgAUIENwOABCABQfgDakIANwMAIAFB8ANqQoCAgIDAADcDACABQgQ3A+gDIAFB4ANqQgA3AwAgAUHYA2pCgICAgMAANwMAIAFCBDcD0AMgAUEBOgDIAyABQcADakEANgIAIAFB2AJqQgA3AwAgAEHgBWokACADQagEaiACQZgEEP8LGkGgBEEIEJQLIgBFBEBBoARBCEHs6sMAKAIAIgBBmAcgABsRAAAACyAAQQA2AgAgAEEEaiADQaQEakGcBBD/CxogA0HACGokACAAC2UBA38jAEEwayIEJAAgACgCBCEFIARBEGoiBiABIAAoAggQ2gMgBEEIaiAFIAYgAiADIAAoAgwgAEEQaigCABAsIAQoAgghASAAKAIAIgAgBCoCDDgCBCAAIAE2AgAgBEEwaiQAC0cBAX8gACgCACIBBEAgACgCBCABQQJ0QQtqQXhxaxCxAQsCQCAAQRRqKAIAIgFFDQAgAa1CFH6nRQ0AIABBEGooAgAQsQELC2wBAn8gACABKQIANwIMIAAgAikCADcCGCAAQRRqIAFBCGoiAygCADYCACAAQSBqIAJBCGoiBCgCADYCACAAIAEqAgQgAioCBJM4AgQgACABKgIAIAIqAgCTOAIAIAAgAyoCACAEKgIAkzgCCAtcAQF/IwBBIGsiAiQAIAIgACgCADYCBCACQQhqIgBBEGogAUEQaikCADcDACAAQQhqIAFBCGopAgA3AwAgAiABKQIANwMIIAJBBGpBoJzDACAAELcCIAJBIGokAAtoACMAQTBrIgEkAEGo5MMALQAABEAgAUEcakEBNgIAIAFCAjcCDCABQZChwwA2AgggAUEBNgIkIAEgADYCLCABIAFBIGo2AhggASABQSxqNgIgIAFBCGpBuKHDABCCCgALIAFBMGokAAtcAQF/IwBBIGsiAiQAIAIgACgCADYCBCACQQhqIgBBEGogAUEQaikCADcDACAAQQhqIAFBCGopAgA3AwAgAiABKQIANwMIIAJBBGpB9KjDACAAELcCIAJBIGokAAt4AQJ/IAEoAgAhAwJAAkACQCABQQhqKAIAIgFFBEBBASECDAELIAFBAEgNASABQQEQlAsiAkUNAgsgAiADIAEQ/wshAiAAIAE2AgggACABNgIEIAAgAjYCAA8LEIEKAAsgAUEBQezqwwAoAgAiAEGYByAAGxEAAAALXAEBfyMAQSBrIgIkACACIAAoAgA2AgQgAkEIaiIAQRBqIAFBEGopAgA3AwAgAEEIaiABQQhqKQIANwMAIAIgASkCADcDCCACQQRqQcDIwwAgABC3AiACQSBqJAALWQEBfyMAQSBrIgIkACACIAA2AgQgAkEIaiIAQRBqIAFBEGopAgA3AwAgAEEIaiABQQhqKQIANwMAIAIgASkCADcDCCACQQRqQeCbwAAgABC3AiACQSBqJAALtAIBBn8jAEEQayIEJAACQCAABEAgACgCACICQX9GDQEgACACQQFqNgIAIAQgATYCDCAEQQxqIQYjAEEgayIBJAAgAUEhNgIYIAFBEGoiAiAAQQRqIgVBNGooAgAiAzYCACACIAMgBUE8aigCAEHwAmxqNgIEAkAgASgCECICIAEoAhQiBUYNAANAIAJB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AiAdNgIAIAMoAgghBiADKAIMCyECIAMgBq0gAq1CIIaEvxABNgIoIAMgA0EgaiADQSRqIANBKGoQmQkgAygCBCICQSRPBEAgAhAACyADKAIoIgJBJEkNCCACEAAMCAtBm5zAAEErQbSuwAAQxAkACyAJIAZBxK7AABDMCAALQZucwABBK0G0rsAAEMQJAAsgCiAGQcSuwAAQzAgACyAHIAZB1K7AABDMCAALQQAhBQwACwALCyAAIAAoAgBBAWs2AgAPCxD0CwALEPULAAtIAQF9IAAgAkEYaioCACADKgIIIAEqAgAiBJSSOAIIIAAgAkEUaioCACAEIAMqAgSUkjgCBCAAIAIqAhAgBCADKgIAlJI4AgALXAAgACABKAIIQf////8HcSACKAIIQYCAgIB4cXI2AgggACABKAIEQf////8HcSACKAIEQYCAgIB4cXI2AgQgACABKAIAQf////8HcSACKAIAQYCAgIB4cXI2AgALYQEBfyMAQeAAayICJAAgAiABEKMBQeAAQQQQlAsiAUUEQEHgAEEEQezqwwAoAgAiAEGYByAAGxEAAAALIAEgAkHgABD/CyEBIABBwM3CADYCBCAAIAE2AgAgAkHgAGokAAvHAgEDfyMAQdAAayIAJAACQAJAQQhBBBCUCyIBBEAgAUKBgICAEDcCAEEgQQQQlAsiAkUNASAAQQA6AEwgAEGKro/hAzYCSCAAQv////v3//+//wA3AgggAEHw0cEANgIEIAAgATYCACAAQSxqQgA3AgAgAEEkakIANwIAIABBQGtCADcCACAAQThqQoiAgIDAADcCACAAQTRqIAI2AgAgAEEgakEQNgIAIABBGGpC////+////79/NwIAIABBEGpC////+/f//79/NwIADAILQQhBBEHs6sMAKAIAIgBBmAcgABsRAAAAC0EgQQRB7OrDACgCACIAQZgHIAAbEQAAAAtB1ABBBBCUCyIBRQRAQdQAQQRB7OrDACgCACIAQZgHIAAbEQAAAAsgAUEANgIAIAFBBGogAEHQABD/CxogAEHQAGokACABC7UDAQV/IwBB0ABrIgAkACMAQSBrIgEkACABQQA2AhggAUEwQQQgAUEQahCIBwJAAkACQAJAIAEoAgAEQCABQQhqKAIAIgBFDQEgASgCBCAAQezqwwAoAgAiAEGYByAAGxEAAAALIAEoAgQiAkIANwIoIAJCAzcCICACQoCAgIAQNwIYIAJCgYCAgCA3AhAgAkIBNwIIIAJCgICAgBA3AgBBoAFBBBCUCyIDRQ0BQeAcQQQQlAsiBEUNAiAAQgQ3AkAgACADNgIoIAAgAjYCDCAAQQA2AgggAEIENwIAIABByABqQQA2AgAgAEE4akIKNwIAIABBNGogBDYCACAAQSxqQgo3AgAgAEEgakIANwIAIABBGGpCgICAgBA3AgAgAEEQakKEgICAwAA3AgAgAUEgaiQADAMLEIEKAAtBoAFBBEHs6sMAKAIAIgBBmAcgABsRAAAAC0HgHEEEQezqwwAoAgAiAEGYByAAGxEAAAALQdAAQQQQlAsiAUUEQEHQAEEEQezqwwAoAgAiAEGYByAAGxEAAAALIAFBADYCACABQQRqIABBzAAQ/wsaIABB0ABqJAAgAQvKAgEEfyMAQdAAayIAJAAjAEEgayIBJAAgAUEMakIANwIAIAFBADYCGCABQQQ2AgAgAUIANwIEIAFBBBCBAgJAAkBBoAFBBBCUCyICBEBBoAFBBBCUCyIDRQ0CIAAgASkDADcCACAAQgQ3AkAgACACNgIoIABCBDcCHCAAQcgAakEANgIAIABBOGpCCjcCACAAQTRqIAM2AgAgAEEsakIKNwIAIABBJGpBADYCACAAQRhqIAFBGGooAgA2AgAgAEEQaiABQRBqKQMANwIAIABBCGogAUEIaikDADcCACABQSBqJAAMAQsMAQtB0ABBBBCUCyIBRQRAQdAAQQRB7OrDACgCACIAQZgHIAAbEQAAAAsgAUEANgIAIAFBBGogAEHMABD/CxogAEHQAGokACABDwtBoAFBBEHs6sMAKAIAIgBBmAcgABsRAAAAC8cCAQN/IwBB0ABrIgAkAAJAAkBBCEEEEJQLIgEEQCABQoGAgIAQNwIAQSBBBBCUCyICRQ0BIABBADoATCAAQv////v3//+//wA3AgggAEHw0cEANgIEIAAgATYCACAAQYquj+EDNgJIIABBLGpCADcCACAAQSRqQgA3AgAgAEFAa0IANwIAIABBOGpCiICAgMAANwIAIABBNGogAjYCACAAQSBqQRA2AgAgAEEYakL////7////v383AgAgAEEQakL////79///v383AgAMAgtBCEEEQezqwwAoAgAiAEGYByAAGxEA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QCAABEAgACgCAA0BIABBfzYCACACQQBHIQQgA0EARyEFIwBBEGsiAyQAIANBCGoiAiABvSIGQiCIPgIEIAIgBj4CAAJAAkACQCAAQQRqIAMoAgggAygCDBD8BiICBEAgAi0AqAFBB3FBB0YNAyACLQDUAg0CIAUNAQwCC0GYvMAAQc0AQaC9wAAQ6QsACyACQcwCai0AAARAIAIgAigC0AJBBHI2AtACCyACQQA6AMwCIAJByAJqQQA2AgALIAIgAi0AqAFB+AFxQQdBACAEG3I6AKgBIAIQ5wQLIANBEGokACAAQQA2AgAPCxD0CwALEPULAAv7AQICfwF+AkAgAARAIAAoAgANASAAQX82AgAgAkEARyEEIANBAEchBSMAQRBrIgMkACADQQhqIgIgAb0iBkIgiD4CBCACIAY+AgACQAJAAkAgAEEEaiADKAIIIAMoAgwQ/AYiAgRAIAItAKgBQThxQThGDQMgAi0A1AINAiAFDQEMAgtBmLzAAEHNAEGgvcAAEOkLAAsgAkHMAmotAAAEQCACIAIoAtACQQRyNgLQAgsgAkEAOgDMAiACQcgCakEANgIACyACIAItAKgBQccBcUE4QQAgBBtyOgCoASACEOcECyADQRBqJAAgAEEANgIADwsQ9AsACxD1CwALPQECfyMAQTBrIgQkACAEQQhqIgUgASACIAMQLSAAQQhqIAVBCGopAwA3AgAgACAEKQMINwIAIARBMGokAAs9AQJ/IwBBMGsiBCQAIARBCGoiBSABIAIgAxBEIABBCGogBUEIaikDADcCACAAIAQpAwg3AgAgBEEwaiQAC0wCAX8BfiMAQRBrIgIkACACQQhqIAAgASgCYBEAACACKAIIIgAgAigCDCgCDBEGACEDIAJBEGokACAAQQAgA0Luye+d9eWt3NwAURsLSwIBfwF+IwBBEGsiAiQAIAJBCGogACABKAJgEQAAIAIoAggiACACKAIMKAIMEQYAIQMgAkEQaiQAIABBACADQsrB4ICU0e2BClEbC0wCAX8BfiMAQRBrIgIkACACQQhqIAAgASgCYBEAACACKAIIIgAgAigCDCgCDBEGACEDIAJBEGokACAAQQAgA0Kjtdb+hvX17e4AURsLTAIBfwF+IwBBEGsiAiQAIAJBCGogACABKAJgEQAAIAIoAggiACACKAIMKAIMEQYAIQMgAkEQaiQAIABBACADQuGY14yRrLqEpn9RGwtLAgF/AX4jAEEQayICJAAgAkEIaiAAIAEoAmARAAAgAigCCCIAIAIoAgwoAgwRBgAhAyACQRBqJAAgAEEAIANCjMvFoJqa6KJAURsLSwIBfwF+IwBBEGsiAiQAIAJBCGogACABKAJgEQAAIAIoAggiACACKAIMKAIMEQYAIQMgAkEQaiQAIABBACADQp7msrv/mOXpFFEbC0sCAX8BfiMAQRBrIgIkACACQQhqIAAgASgCYBEAACACKAIIIgAgAigCDCgCDBEGACEDIAJBEGokACAAQQAgA0L7g4nltYnZ0VZRGwtLAgF/AX4jAEEQayICJAAgAkEIaiAAIAEoAmARAAAgAigCCCIAIAIoAgwoAgwRBgAhAyACQRBqJAAgAEEAIANC6JX/laDpub0wURsLSwIBfwF+IwBBEGsiAiQAIAJBCGogACABKAJgEQAAIAIoAggiACACKAIMKAIMEQYAIQMgAkEQaiQAIABBACADQqagoPvk0MSKUFEbC0wCAX8BfiMAQRBrIgIkACACQQhqIAAgASgCYBEAACACKAIIIgAgAigCDCgCDBEGACEDIAJBEGokACAAQQAgA0LirI+RpbH9vPAAURsLTAIBfwF+IwBBEGsiAiQAIAJBCGogACABKAJgEQAAIAIoAggiACACKAIMKAIMEQYAIQMgAkEQaiQAIABBACADQoT7gbXFmLnqo39RGwtLAgF/AX4jAEEQayICJAAgAkEIaiAAIAEoAmARAAAgAigCCCIAIAIoAgwoAgwRBgAhAyACQRBqJAAgAEEAIANCnq2ars/Y9bxGURsLSwIBfwF+IwBBEGsiAiQAIAJBCGogACABKAJgEQAAIAIoAggiACACKAIMKAIMEQYAIQMgAkEQaiQAIABBACADQtWf+IOeoqrOGVEbC0wCAX8BfiMAQRBrIgIkACACQQhqIAAgASgCYBEAACACKAIIIgAgAigCDCgCDBEGACEDIAJBEGokACAAQQAgA0KF8qXj+dmOoJZ/URsLWQECfSABQQRqKgIAIQIgASoCACEDQQhBBBCUCyIBRQRAQQhBBEHs6sMAKAIAIgBBmAcgABsRAAAACyABIAI4AgQgASADOAIAIABBuNDCADYCBCAAIAE2AgALWQECfSABQQRqKgIAIQIgASoC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aioCACABQQhqKgIAlJJDAAAAAF8LVAEBf0EFQQEQlAsiAUUEQEEFQQFB7OrDACgCACIAQZgHIAAbEQAAAAsgAUEEakHYvsAALQAAOgAAIAFB1L7AACgAADYAACAAQQU2AgQgACABNgIAC04BAX9BFEEEEJQLIgRFBEBBFEEEQezqwwAoAgAiBEGYByAEGxEAAAALIAQgAzgCECAEIAI4AgwgBCABOAIIIAQgADgCBCAEQQA2AgAgBAtbAQN/IwBBEGsiAiQAIAJBCGoiAyABQRBqIgFBBGooAgAiBDYCBCADIAEoAgAgBCgCCEEHakF4cWo2AgAgAigCDCEBIAAgAigCCDYCACAAIAE2AgQgAkEQaiQACzgBAX8jAEEgayIEJAAgBCABIAIgAxA5IABBCGogBEEIaikDADcCACAAIAQpAwA3AgAgBEEgaiQACzwBAX0gAEEUaiABKgIAIgI4AgAgAEEQaiACOAIAIAAgAjgCDCAAIAKMIgI4AgggACACOAIEIAAgAjgCAAs1ACMAQSBrIgMkACADIAEgAhC8AiAAQQhqIANBCGopAwA3AgAgACADKQMANwIAIANBIGokAAs3AQF/IwBBEGsiAyQAIANBCGogAkEIaigCADYCACADIAIpAgA3AwAgACABIAMQqQEgA0EQaiQACzcBAX8jAEEQayIDJAAgA0EIaiABQQhqKAIANgIAIAMgASkCADcDACACIAAgAxCpASADQRBqJAALMwECfSAAKgIMIAAqAgAiASAAQQRqKgIAIgIgASACXxsiASAAQQhqKgIAIgIgASACXxuSC0ABAX8jAEEgayIAJAAgAEEcakEANgIAIABBuJzDADYCGCAAQgE3AgwgAEH0osMANgIIIABBCGpBrKPDABCCCgALQAEBfyMAQSBrIgAkACAAQRxqQQA2AgAgAEGMqcMANgIYIABCATcCDCAAQcypwwA2AgggAEEIakHUqcMAEIIKAAvAAgEDfyMAQSBrIgIkACACQQE6ABggAiABNgIUIAIgADYCECACQezEwwA2AgwgAkHgq8MANgIIIwBBEGsiACQAIAJBCGoiASgCDCICRQRAQcicwwBBK0HkocMAEMQJAAsgASgCCCIERQRAQcicwwBBK0H0ocMAEMQJAAsgACACNgIIIAAgATYCBCAAIAQ2AgAgACgCACEBIAAoAgQhAiAAKAIIIQQjAEEQayIAJAAgAUEUaigCACEDAkACfwJAAkAgAUEEaigCAA4CAAEDCyADDQJBACEBQbicwwAMAQsgAw0BIAEoAgAiAygCBCEBIAMoAgALIQMgACABNgIEIAAgAzYCACAAQbiiwwAgAigCCCAEIAItABAQoAYACyAAQQA2AgQgACABNgIAIABBpKLDACACKAIIIAQgAi0AEBCgBgALKwACQCAAQXxLDQAgAEUEQEEEDwsgACAAQX1JQQJ0EJQLIgBFDQAgAA8LAAs4AQF/IABBDGpBADYCACAAIAEoAgAiAjYCBCAAIAEoAhg2AgAgAEEIaiACIAEoAghB4AJsajYCAAs4AQF/IABBDGpBADYCACAAIAEoAgAiAjYCBCAAIAEoAhg2AgAgAEEIaiACIAEoAghBqAFsajYCAAs2ACAAIAEpAgA3AgAgACACKQIANwIMIABBCGogAUEIaigCADYCACAAQRRqIAJBCGooAgA2AgALTAECfSAAKgIEIAAqAgAQiAwiAUMAAAAAYARAQ9sPyT8gAZMiAiACIAEgAZIiASABIAJeGyABIAFcGw8LQfjUwgBBKEGE1sIAEMQJAAs1AQJ/IwBBMGsiBCQAIARBCGoiBSAAIAEQ2QUgAkEAIAVBxL/CACADKAIQEQEAIARBMGokAAtHAQF/QRBBBBCUCyIDRQRAQRBBBEHs6sMAKAIAIgNBmAcgAxsRAAAACyADIAI4AgwgAyABOAIIIAMgADgCBCADQQA2AgAgAwssAQF/IwBBIGsiAyQAIANBCGogACABIAJBARClASADKAIYIANBIGokAEEERwssAQF/IwBBIGsiAyQAIANBCGogACABIAJBARCoASADKAIYIANBIGokAEEERwsrAQF/IwBBEGsiAyQAIANBCGogACABIAJBARBSIAMoAgggA0EQaiQAQQFGCywBAX8jAEEgayIDJAAgA0EIaiAAIAEgAkEBEMYBIAMoAhggA0EgaiQAQQRHCywBAX8jAEEgayIDJAAgA0EIaiAAIAEgAkEBENMBIAMoAhggA0EgaiQAQQRHCysBAX8jAEEgayIDJAAgA0EIaiAAIAEgAkEBEHcgAygCGCADQSBqJABBBEcLKwEBfyMAQRBrIgMkACADQQhqIAAgASACQQEQTCADKAIIIANBEGokAEEBRgssAQF/IwBBIGsiAyQAIANBCGogACABIAJBARC4ASADKAIYIANBIGokAEEERwssAQF/IwBBIGsiAyQAIANBCGogACABIAJBARCbASADKAIYIANBIGokAEEERwssAQF/IwBBIGsiAyQAIANBCGogACABIAJBARDWASADKAIYIANBIGokAEEERwssAQF/IwBBIGsiAyQAIANBCGogACABIAJBARCzASADKAIYIANBIGokAEEERwsrAQF/IwBBEGsiAyQAIANBCGogACABIAJBARBPIAMoAgggA0EQaiQAQQFGCywBAX8jAEEgayIDJAAgA0EIaiAAIAEgAkEBEKYBIAMoAhggA0EgaiQAQQRHCywBAX8jAEEgayIDJAAgA0EIaiAAIAEgAkEBEN4BIAMoAhggA0EgaiQAQQRHCz4AIAAoAgAhACABLQAAQRBxQQR2RQRAIAEtAABBIHFBBXZFBEAgACABEOgLDwsgACABEJgHDwsgACABEJcHCywBAX8jAEEQayIEJAAgBCAAKAIANgIMIARBDGogASACIAMQwwYgBEEQaiQACywBAX8jAEEQayIAJAAgAEEIaiICIAFBnJ/AAEELELsKIAIQ5QYgAEEQaiQACykBAX8jAEEwayICJAAgAkEIaiAAIAFBARBiIAItABQgAkEwaiQAQQBHC0cBAX9BFEEEEJQLIgBFBEBBFEEEQezqwwAoAgAiAEGYByAAGxEAAAALIABCADcCACAAQYCAgPwDNgIQIABBCGpCADcCACAAC/UCAQN/IAAoAgAhACABLQAAQRBxQQR2RQRAIAEtAABBIHFBBXZFBEAgAC4BACIAQQBOIQMgAK1C//8DgyAAQX9zrUIwhkIwh0IBfCADGyADIAEQ3wQPCyMAQYABayIDJAAgAC8BACECQQAhAANAIAAgA2pB/wBqQTBBNyACQQ9xIgRBCkkbIARqOgAAIABBAWshACACQf//A3EiBEEEdiECIARBD0sNAAsgAEGAAWoiAkGBAU8EQCACQYABEPsLAAsgAUEBQfTGwwBBAiAAIANqQYABakEAIABrEMsBIANBgAFqJAAPCyMAQYABayIDJAAgAC8BACECQQAhAANAIAAgA2pB/wBqQTBB1wAgAkEPcSIEQQpJGyAEajoAACAAQQFrIQAgAkH//wNxIgRBBHYhAiAEQQ9LDQALIABBgAFqIgJBgQFPBEAgAkGAARD7CwALIAFBAUH0xsMAQQIgACADakGAAWpBACAAaxDLASADQYABaiQAC9ICAQN/IAAoAgAhACABLQAAQRBxQQR2RQRAIAEtAABBIHFBBXZFBEAgADEAAEEBIAEQ3wQPCyMAQYABayIDJAAgAC0AACECQQAhAANAIAAgA2pB/wBqQTBBNyACQQ9xIgRBCkkbIARqOgAAIABBAWshACACQf8BcSIEQQR2IQIgBEEPSw0ACyAAQYABaiICQYEBTwRAIAJBgAEQ+wsACyABQQFB9MbDAEECIAAgA2pBgAFqQQAgAGsQywEgA0GAAWokAA8LIwBBgAFrIgMkACAALQAAIQJBACEAA0AgACADakH/AGpBMEHXACACQQ9xIgRBCkkbIARqOgAAIABBAWshACACQf8BcSIEQQR2IQIgBEEPSw0ACyAAQYABaiICQYEBTwRAIAJBgAEQ+wsACyABQQFB9MbDAEECIAAgA2pBgAFqQQAgAGsQywEgA0GAAWokAAssAQF/IwBBEGsiACQAIABBCGoiAiABQYHbwABBCxC7CiACEOUGIABBEGokAAspAQF/IwBBMGsiAiQAIAJBCGogACABQQEQRCACLQAUIAJBMGokAEEARwtIAQF/IAEoAgAhAkEEQQQQlAsiAUUEQEEEQQRB7OrDACgCACIAQZgHIAAbEQAAAAsgASACNgIAIABB7KjCADYCBCAAIAE2AgALLQECfSAAKgIAIgEgAEEEaioCACICIAEgAl8bIgEgAEEIaioCACICIAEgAl8bCzIBAX0gACABKgIAIgIgApQgAUEEaioCACICIAKUkhCIATgCDCAAQQA2AgggAEIANwIAC0wBAn0gACoCBCAAKgIAEIgMIgFDAAAAAGBFBEBB+NTCAEEoQYTWwgAQxAkAC0PbD8k/IAGTIgIgAiABIAGSIgEgASACXhsgASABXBsLLAEBfyMAQRBrIgAkACAAQQhqIgIgAUHUn8MAQQsQuwogAhDlBiAAQRBqJAALMwAgACABKAIYIAJBACABQRxqKAIAKAIMEQUAOgAIIAAgATYCACAAQQE6AAkgAEEANgIEC2YBAX8gACgCACEBAkAgAC0ABA0AQfzqwwAoAgBB/////wdxRQ0AAn9B5O7DAC0AAARAQejuwwAoAgBFDAELQeTuwwBBAToAAEHo7sMAQQA2AgBBAQsNACABQQE6AAELIAFBADoAAAsrAAJAIAAEQCAAKAIADQEgAEEANgIAIABBDGogATgCAA8LEPQLAAsQ9QsACysAAkAgAARAIAAoAgANASAAQQA2AgAgAEEcaiABOAIADwsQ9AsACxD1CwALKwACQCAABEAgACgCAA0BIABBADYCACAAQSRqIAE4AgAPCxD0CwALEPULAAsrAAJAIAAEQCAAKAIADQEgAEEANgIAIABBKGogATYCAA8LEPQLAAsQ9QsACysAAkAgAARAIAAoAgANASAAQQA2AgAgAEEsaiABNgIADwsQ9AsACxD1CwALKwACQCAABEAgACgCAA0BIABBADYCACAAQTBqIAE2AgAPCxD0CwALEPULAAsrAAJAIAAEQCAAKAIADQEgAEEANgIAIABBNGogATYCAA8LEPQLAAsQ9QsACysAAkAgAARAIAAoAgANASAAQQA2AgAgAEE4aiABNgIADwsQ9AsACxD1CwALKwACQCAABEAgACgCAA0BIABBADYCACAAQQhqIAE4AgAPCxD0CwALEPULAAsxAQF/IAAgATYCDCAAQQA2AgggACABKAIcIgI2AgAgACACIAFBJGooAgBBFGxqNgIECykBAX8CQCAAQX9GDQAgACAAKAIEIgFBAWs2AgQgAUEBRw0AIAAQsQELCyYAAkAgAARAIAAoAgANASAAQQA2AgAgABCxAQ8LEPQLAAsQ9QsAC0ABAX4gACkCACEBQRBBBBCUCyIARQRAQRBBBEHs6sMAKAIAIgBBmAcgABsRAAAACyAAIAE3AgQgAEEAOgAAIAALMAEBfSAAIAIqAgggASoCACIDlDgCCCAAIAMgAioCBJQ4AgQgACADIAIqAgCUOAIACy4AIAAgASkCWDcCACAAQRBqIAFB6ABqKQIANwIAIABBCGogAUHgAGopAgA3AgALLAAgACABKQIANwIAIABBEGogAUEQaikCADcCACAAQQhqIAFBCGopAgA3AgALLQAgACABKQI0NwIAIABBEGogAUHEAGopAgA3AgAgAEEIaiABQTxqKQIANwIAC/IJAQV/IwBBEGsiBCQAIAQgAzYCDCAEIAI2AgggBCABNgIEIAQgADYCACAEKAIEIQIgBCgCCCEBIAQoAgwhAyAEKAIAIQUjAEHwAGsiACQAIAAgAzYCDCAAIAE2AggCQAJA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NAAgAEL////3//////4ANwIIIABC////9/////9+NwIAIABBEGpC////9/f////+ADcCAAsdACAAQZS7wgA2AgQgACABNgIAIABBCGpBADYCAAsdACAAQZzBwgA2AgQgACABNgIAIABBCGpBADYCAAsdACAAQZi+wgA2AgQgACABNgIAIABBCGpBADYCAAsdACAAQZjPwgA2AgQgACABNgIAIABBCGpBADYCAAsdACAAQZDSwgA2AgQgACABNgIAIABBCGpBADYCAAsdACAAQbDWwgA2AgQgACABNgIAIABBCGpBADYCAAs0ACAAQv////f//////gA3AgggAEL////3/////343AgAgAEEQakL////39/////4ANwIACzQAIABC////9//////+ADcCCCAAQv////f/////fjcCACAAQRBqQv////f3/////gA3AgALGgAgAEEANgIIIABCADcCACAAIAEqAgA4AgwLHAAgASgCGEHww8MAQQ4gAUEcaigCACgCDBEFAAscACABKAIYQcbawwBBBSABQRxqKAIAKAIMEQUACxgAIAAoAgAgASgCACACKAIAIAMoAgAQCguZBwEHfyAAIQgCQAJAAkAgAkEJTwRAIAMgAhCQBCIADQFBACEADAMLQQAhACADQc3/e08NAkEQIANBBGogA0ELSRtBB2pBeHEhBSAIQQhrIgQoAgRBeHEhASABIARqIQcCQAJAAkACQAJAAkACQCAELQAEQQNxBEAgASAFTw0BIAdBtO7DACgCAEYNAiAHQbDuwwAoAgBGDQMgBy0ABEECcUEBdg0HIAcoAgRBeHEiBiABaiIKIAVJDQcgCiAFayEJIAZBgAJJDQQgBxD3BAwFCyAEKAIEQXhxIQEgBUGAAkkNBiABIAVrQYGACEkgBUEEaiABTXENBSAEKAIAGgwGCyABIAVrIgJBEEkNBCAEIAQoAgRBAXEgBXJBAnI2AgQgBCAFaiIGIAYoAgRBAXI2AgQgBiAGKAIEQQFxIAJyQQJyNgIEIAIgBmoiASABKAIEQQFyNgIEIAYgAhDaAgwEC0Gs7sMAKAIAIAFqIgEgBU0NBCAEIAQoAgRBAXEgBXJBAnI2AgQgBCAFaiICIAIoAgRBAXI2AgQgAiABIAVrIgFBAXI2AgRBrO7DACABNgIAQbTuwwAgAjYCAAwDC0Go7sMA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ACABNgIACxMAIABBgPPBADYCBCAAIAE2AgALEwAgAEGQ88EANgIEIAAgATYCAAsTACAAQaDzwQA2AgQgACABNgIACxMAIABBsPPBADYCBCAAIAE2AgALEwAgAEHA88EANgIEIAAgATYCAAsTACAAQdDzwQA2AgQgACABNgIACxMAIABB4PPBADYCBCAAIAE2AgALEwAgAEHw88EANgIEIAAgATYCAAsTACAAQYD0wQA2AgQgACABNgIACxMAIABBkPTBADYCBCAAIAE2AgALEwAgAEGg9MEANgIEIAAgATYCAAsTACAAQbD0wQA2AgQgACABNgIACxMAIABBwPTBADYCBCAAIAE2AgALEAAgAEEDNgIAIAAgATYCBAsQACAAQQQ2AgAgACABNgIECxAAIABBAjYCACAAIAE2AgQLEAAgAEEBNgIAIAAgATYCBAsQACAAQQA2AgAgACABNgIECxMAIABBoLjCADYCBCAAIAE2AgALEwAgAEH4usIANgIEIAAgATYCAAsTACAAQfy9wgA2AgQgACABNgIACxMAIABBgMHCADYCBCAAIAE2AgALEwAgAEG8wcIANgIEIAAgATYCAAsPACAAIAFB2ABqIAIQvQILEAAgAEEJNgIAIAAgATYCBAsTACAAQaDEwgA2AgQgACABNgIACxAAIABBBjYCACAAIAE2AgQLEwAgAEH8xsIANgIEIAAgATYCAAsQACAAQQU2AgAgACABNgIECxMAIABB2MnCADYCBCAAIAE2AgALDgAgACABQTRqIAIQvQILEAAgAEEINgIAIAAgATYCBAsQACAAQQo2AgAgACABNgIECxMAIABB/M7CADYCBCAAIAE2AgALEAAgAEELNgIAIAAgATYCBAsTACAAQfTRwgA2AgQgACABNgIACxAAIABBDDYCACAAIAE2AgQLEwAgAEGU1sIANgIEIAAgATYCAAsZACAAQoCAgIDw//+//wA3AgggAEIANwIACxAAIABBBzYCACAAIAE2AgQLEAAgAEENNgIAIAAgATYCBAsTACAAQYiUwwA2AgQgACABNgIACxAAIABBDjYCACAAIAE2AgQLEwAgAEGklMMANgIEIAAgATYCAAsQACAAQQ82AgAgACABNgIECxMAIABBwJTDADYCBCAAIAE2AgALEAAgAEEQNgIAIAAgATYCBAsTACAAQdyU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ZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvbmFsZ2VicmEtMC4zMS4wL3NyYy9iYXNlL2RlZmF1bHRfYWxsb2NhdG9yLnJzdgEQAG4AAAB+AAAACQAAAHN0cnVjdCBCaXRWZWMgd2l0aCAyIGVsZW1lbnRzAAAA9AEQAB0AAAAEAAAACAAAAAQAAAAIAAAAc3RydWN0IFRyaU1lc2ggd2l0aCA3IGVsZW1lbnRzAAAsAhAAHgAAAGEgdHVwbGUgb2Ygc2l6ZSAzAAAABAAAAAAAAAABAAAACQAAAHN0cnVjdCBDb21wb3VuZCB3aXRoIDQgZWxlbWVudHMAeAIQAB8AAABzdHJ1Y3QgUG9seWxpbmUgd2l0aCAzIGVsZW1lbnRzAKACEAAfAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9jcm9zc2JlYW0tY2hhbm5lbC0wLjUuNS9zcmMvd2FrZXIucnMAAADIAhAAZQAAAGgAAAArAAAAyAIQAGUAAAADAQAAKwAAAMgCEABlAAAA3gAAAC8AAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL2Nyb3NzYmVhbS1jaGFubmVsLTAuNS41L3NyYy9mbGF2b3JzL3plcm8ucnNgAxAAbAAAAGYBAAArAAAAYAMQAGwAAAC5AAAANgAAAGADEABsAAAAwAAAADYAAABgAxAAbAAAABYBAAArAAAAc3RydWN0IFRyaU1lc2hUb3BvbG9neSB3aXRoIDMgZWxlbWVudHMAAAwEEAAmAAAAdmFyaWFudCBpbmRleCAwIDw9IGkgPCAyPAQQABgAAABzdHJ1Y3QgRWRnZSB3aXRoIDMgZWxlbWVudHMAXAQQABsAAABzdHJ1Y3QgQXJlbmEgd2l0aCA0IGVsZW1lbnRzgAQQABwAAABzdHJ1Y3QgVHJpTWVzaFBzZXVkb05vcm1hbHMgd2l0aCAyIGVsZW1lbnRzAKQEEAArAAAAc3RydWN0IFJpZ2lkQm9keSB3aXRoIDE0IGVsZW1lbnRzAAAA2AQQACEAAABzdHJ1Y3QgRWRnZSB3aXRoIDQgZWxlbWVudHMABAUQABsAAAB2YXJpYW50IGluZGV4IDAgPD0gaSA8IDE5AAAAKAUQABkAAABzdHJ1Y3QgQ29hcmVuYSB3aXRoIDEgZWxlbWVudAAAAEwFEAAdAAAAc3RydWN0IFRyaU1lc2hDb25uZWN0ZWRDb21wb25lbnRzIHdpdGggMyBlbGVtZW50cwAAAHQFEAAxAAAAc3RydWN0IEdyYXBoIHdpdGggMiBlbGVtZW50c7AFEAAcAAAAc3RydWN0IENvbGxpZGVyU2V0IHdpdGggMyBlbGVtZW50cwAA1AUQACIAAABzdHJ1Y3QgQ29udGFjdFBhaXIgd2l0aCA2IGVsZW1lbnRzAAAABhAAIgAAAHN0cnVjdCBMVSB3aXRoIDIgZWxlbWVudHMAAAAsBhAAGQAAAHN0cnVjdCBSaWdpZEJvZHlTZXQgd2l0aCAyIGVsZW1lbnRzAFAGEAAjAAAAc3RydWN0IElzbGFuZE1hbmFnZXIgd2l0aCA0IGVsZW1lbnRzfAYQACQAAABzdHJ1Y3QgQ29udmV4UG9seWhlZHJvbiB3aXRoIDggZWxlbWVudHMAqAYQACcAAABzdHJ1Y3QgUm91bmRTaGFwZSB3aXRoIDIgZWxlbWVudHMAAADYBhAAIQAAAHN0cnVjdCBDb250YWN0TWFuaWZvbGREYXRhIHdpdGggNyBlbGVtZW50cwAABAcQACoAAABzdHJ1Y3QgUUJWSCB3aXRoIDQgZWxlbWVudHMAOAcQABsAAABzdHJ1Y3QgTWFzc1Byb3BlcnRpZXMgd2l0aCA0IGVsZW1lbnRzAAAAXAcQACUAAABzdHJ1Y3QgSXNvbWV0cnkgd2l0aCAyIGVsZW1lbnRzAIwHEAAfAAAAdmFyaWFudCBpbmRleCAwIDw9IGkgPCA0tAcQABgAAAB2YXJpYW50IGluZGV4IDAgPD0gaSA8IDPUBxAAGAAAAHN0cnVjdCBTQVBBeGlzIHdpdGggMyBlbGVtZW50cwAA9AcQAB4AAABzdHJ1Y3QgU0FQTGF5ZXIgd2l0aCA2IGVsZW1lbnRzABwIEAAfAAAAc3RydWN0IFNBUFByb3hpZXMgd2l0aCAyIGVsZW1lbnRzAAAARAgQACEAAABzdHJ1Y3QgTXVsdGlib2R5IHdpdGggMTYgZWxlbWVudHMAAABwCBAAIQAAAHN0cnVjdCBTQVBSZWdpb24gd2l0aCA3IGVsZW1lbnRznAgQACAAAABzdHJ1Y3QgQnJvYWRQaGFzZSB3aXRoIDYgZWxlbWVudHMAAADECBAAIQAAAHN0cnVjdCBHZW5lcmljSGVpZ2h0RmllbGQgd2l0aCA1IGVsZW1lbnRzAAAA8AgQACkAAABzdHJ1Y3QgSW1wdWxzZUpvaW50IHdpdGggNSBlbGVtZW50cwAkCRAAIwAAAHN0cnVjdCBNdWx0aWJvZHlKb2ludCB3aXRoIDMgZWxlbWVudHMAAABQCRAAJQAAAHN0cnVjdCBJbXB1bHNlSm9pbnRTZXQgd2l0aCA0IGVsZW1lbnRzAACACRAAJgAAAHN0cnVjdCBNdWx0aWJvZHlKb2ludFNldCB3aXRoIDQgZWxlbWVudHOwCRAAKAAAAHN0cnVjdCBNdWx0aWJvZHlXb3Jrc3BhY2Ugd2l0aCAyIGVsZW1lbnRzAAAA4AkQACkAAAB2YXJpYW50IGluZGV4IDAgPD0gaSA8IDYUChAAGAAAAHN0cnVjdCBUcmlNZXNoU2hhcGVDb250YWN0TWFuaWZvbGRzV29ya3NwYWNlIHdpdGggMyBlbGVtZW50czQKEAA8AAAAc3RydWN0IEhlaWdodEZpZWxkU2hhcGVDb250YWN0TWFuaWZvbGRzV29ya3NwYWNlIHdpdGggMiBlbGVtZW50c3gKEABAAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy9zaGFwZS9oZWlnaHRmaWVsZDMucnPAChAAaAAAAD0AAAAJAAAAc3RydWN0IENvbnRhY3RNYW5pZm9sZCB3aXRoIDggZWxlbWVudHMAADgLEAAmAAAAc3RydWN0IENvbXBvc2l0ZVNoYXBlU2hhcGVDb250YWN0TWFuaWZvbGRzV29ya3NwYWNlIHdpdGggMiBlbGVtZW50cwBoCxAAQwAAAHN0cnVjdCBIZWlnaHRGaWVsZENvbXBvc2l0ZVNoYXBlQ29udGFjdE1hbmlmb2xkc1dvcmtzcGFjZSB3aXRoIDIgZWxlbWVudHMAAAC0CxAASQAAAHN0cnVjdCBDb21wb3NpdGVTaGFwZUNvbXBvc2l0ZVNoYXBlQ29udGFjdE1hbmlmb2xkc1dvcmtzcGFjZSB3aXRoIDIgZWxlbWVudHMIDBAATAAAAABjYW5ub3QgcmVjdXJzaXZlbHkgYWNxdWlyZSBtdXRleAAAAF0MEAAgAAAAL3J1c3RjLzc3NjUyYjllZjNmYzk4ZTJkZjBlMjYwZWZlZGI4MGFhNjhjMDhjMDYvbGlicmFyeS9zdGQvc3JjL3N5cy93YXNtLy4uL3Vuc3VwcG9ydGVkL2xvY2tzL211dGV4LnJzAACIDBAAZgAAABcAAAAJAAAABAAAAAgAAAAEAAAACgAAAAsAAAAEAAAAJAAAAAQAAAAMAAAABAAAAAwAAAAEAAAADQAAAA4AAAAMAAAABAAAAA8AAAAQAAAAEQAAAGEgRGlzcGxheSBpbXBsZW1lbnRhdGlvbiByZXR1cm5lZCBhbiBlcnJvciB1bmV4cGVjdGVkbHkvcnVzdGMvNzc2NTJiOWVmM2ZjOThlMmRmMGUyNjBlZmVkYjgwYWE2OGMwOGMwNi9saWJyYXJ5L2FsbG9jL3NyYy9zdHJpbmcucnMAAIMNEABLAAAAsQkAAA4AAAAEAAAABAAAAAQAAAASAAAAEwAAABQAAABhc3NlcnRpb24gZmFpbGVkOiBtaWQgPD0gc2VsZi5sZW4oKWNhbGxlZCBgT3B0aW9uOjp1bndyYXAoKWAgb24gYSBgTm9uZWAgdmFsdWUAAAQAAAAAAAAAAQAAABUAAABjYWxsZWQgYFJlc3VsdDo6dW53cmFwKClgIG9uIGFuIGBFcnJgIHZhbHVlABYAAAAIAAAABAAAABcAAAAEAAAABAAAAAQAAAAYAAAABAAAAAQAAAAEAAAAGQAAAC9ydXN0Yy83NzY1MmI5ZWYzZmM5OGUyZGYwZTI2MGVmZWRiODBhYTY4YzA4YzA2L2xpYnJhcnkvYWxsb2Mvc3JjL2NvbGxlY3Rpb25zL3ZlY19kZXF1ZS9tb2QucnNhc3NlcnRpb24gZmFpbGVkOiBzZWxmLmNhcCgpID09IG9sZF9jYXAgKiAyAAAAtA4QAF4AAADPCAAACQAAAGludmFsaWQgdmFsdWU6ICwgZXhwZWN0ZWQgAABQDxAADwAAAF8PEAALAAAAaW52YWxpZCBsZW5ndGggAHwPEAAPAAAAXw8QAAsAAABQb2lzb25FcnJvci9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvcGFydGl0aW9uaW5nL3FidmgvdHJhdmVyc2FsLnJzpw8QAHEAAAAiAAAAGAAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvc2hhcGUvdHJpbWVzaC5ycwAoEBAAYwAAAJ8BAAARAAAAKBAQAGMAAACgAQAAEQAAACgQEABjAAAAoQEAABEAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL2luZGV4bWFwLTEuOS4xL3NyYy9tYXAvY29yZS5ycwC8EBAAXwAAACoAAAAjAAAAvBAQAF8AAAAiAAAADwAAAE1hdHJpeCBpbml0LiBlcnJvcjogdGhlIHNsaWNlIGRpZCBub3QgY29udGFpbiB0aGUgcmlnaHQgbnVtYmVyIG9mIGVsZW1lbnRzLi9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvbmFsZ2VicmEtMC4zMS4wL3NyYy9iYXNlL2NvbnN0cnVjdGlvbi5yc4cREABpAAAAYAAAAAkAAABNYXRyaXggaW5kZXggb3V0IG9mIGJvdW5kcy4vVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3JhcGllcjNkLTAuMTQuMC9zcmMvZGF0YS9hcmVuYS5ycwAAABsSEABiAAAACgEAAB4AAABjb3JydXB0IGZyZWUgbGlzdAAAAJASEAARAAAAGxIQAGIAAAALAQAAKwAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcmFwaWVyM2QtMC4xNC4wL3NyYy9kYXRhL2dyYXBoLnJzAAC8EhAAYgAAAJIAAAAYAAAAYXNzZXJ0aW9uIGZhaWxlZDogc2VsZi5lZGdlcy5sZW4oKSAhPSBjcmF0ZTo6SU5WQUxJRF9VU0laRQAAvBIQAGIAAADcAAAACQAAAEdyYXBoOjphZGRfZWRnZTogbm9kZSBpbmRpY2VzIG91dCBvZiBib3VuZHMAfBMQACsAAAC8EhAAYgAAAOQAAAAbAAAAYXNzZXJ0aW9uIGZhaWxlZDogc2VsZi5ub2Rlcy5sZW4oKSAhPSBjcmF0ZTo6SU5WQUxJRF9VU0laRQAAvBIQAGIAAACzAAAACQAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcmFwaWVyM2QtMC4xNC4wL3NyYy9kYXRhL2NvYXJlbmEucnMMFBAAZAAAAF0AAAAZAAAADBQQAGQAAABOAAAACQAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcmFwaWVyM2QtMC4xNC4wL3NyYy9keW5hbWljcy9qb2ludC9pbXB1bHNlX2pvaW50L2ltcHVsc2Vfam9pbnRfc2V0LnJzAACQFBAAhgAAAO8AAAAJAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9yYXBpZXIzZC0wLjE0LjAvc3JjL2R5bmFtaWNzL2pvaW50L211bHRpYm9keV9qb2ludC9tdWx0aWJvZHlfam9pbnRfc2V0LnJzAAAoFRAAigAAAGkAAAAbAAAAKBUQAIoAAABqAAAAQAAAACgVEACKAAAAlAAAAD4AAAAoFRAAigAAAJUAAAAfAAAAKBUQAIoAAACYAAAAQgAAAFBhcmVudCByaWdpZCBib2R5IG5vdCBmb3VuZC4vVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3JhcGllcjNkLTAuMTQuMC9zcmMvZ2VvbWV0cnkvY29sbGlkZXJfc2V0LnJzAAAAIBYQAG0A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AAAEAAAAAAAAAAEAAAAEAAAAAAAAAAEAAAAkIRAAZgAAAGcAAABoAAAADAAAAAQAAABpAAAAagAAAGsAAABsAAAAEAAAAAQAAABsAAAAEAAAAAQAAABgIRAAbQAAAG4AAAAEAAAABAAAAAQAAABvAAAAcAAAAHAAAABzdHJ1Y3QgRGVzZXJpYWxpemFibGVXb3JsZCB3aXRoIDkgZWxlbWVudHMAAJwhEAAqAAAAAgAAAAMAAAAAAAAAAQAAAEludmFsaWQgc2l6ZSA6IHNpemVzIG11c3QgZml0IGluIGEgdXNpemUgKDAgdG8gKeAhEAANAAAA7SEQACIAAAAPIhAAAQAAAP////9jbG9zdXJlIGludm9rZWQgcmVjdXJzaXZlbHkgb3IgZGVzdHJveWVkIGFscmVhZHl9AAAABAAAAAQAAAB+AAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9qcy1zeXMtMC4zLjU4L3NyYy9saWIucnMAAABsIhAAWQAAALAWAAABAAAAbnVsbCBwb2ludGVyIHBhc3NlZCB0byBydXN0cmVjdXJzaXZlIHVzZSBvZiBhbiBvYmplY3QgZGV0ZWN0ZWQgd2hpY2ggd291bGQgbGVhZCB0byB1bnNhZmUgYWxpYXNpbmcgaW4gcnVzdGNhcGFjaXR5IG92ZXJmbG93AFRoZSBsb29zZW5pbmcgbWFyZ2luIG11c3QgYmUgcG9zaXRpdmUuAABUIxAAJgAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvYm91bmRpbmdfdm9sdW1lL2FhYmIucnMAAIQjEABqAAAAGwIAAAkAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3F1ZXJ5L2RlZmF1bHRfcXVlcnlfZGlzcGF0Y2hlci5ycwAkEAB0AAAA9gEAAB4AAACDAAAAAAAAAAEAAACDAAAAAAAAAAEAAACEJBAAhAAAAIUAAACGAAAAhwAAAIgAAACJAAAAigAAAIsAAAAAJBAAdAAAAM8BAAAxAAAAACQQAHQAAAC8AQAAMQAAAAAkEAB0AAAAJgIAAC8AAAAAJBAAdAAAADUCAAAvAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9jcm9zc2JlYW0tY2hhbm5lbC0wLjUuNS9zcmMvd2FrZXIucnMAAAAAJRAAZQAAAGgAAAArAAAAACUQAGUAAABGAAAAKAAAAAAlEABlAAAA0QAAACsAAAAAJRAAZQAAAN4AAAAvAAAAACUQAGUAAADGAAAAKwAAAGludGVybmFsIGVycm9yOiBlbnRlcmVkIHVucmVhY2hhYmxlIGNvZGUvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL2Nyb3NzYmVhbS1jaGFubmVsLTAuNS41L3NyYy9jaGFubmVsLnJzAOAlEABnAAAAswEAAC0AAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL2Nyb3NzYmVhbS1jaGFubmVsLTAuNS41L3NyYy9jb250ZXh0LnJzAFgmEABnAAAAMwAAAB4AAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL2Nyb3NzYmVhbS1jaGFubmVsLTAuNS41L3NyYy9mbGF2b3JzL2xpc3QucnPQJhAAbAAAAAMBAABDAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9jcm9zc2JlYW0tY2hhbm5lbC0wLjUuNS9zcmMvZmxhdm9ycy96ZXJvLnJzTCcQAGwAAADhAAAAKwAAAEwnEABsAAAA6AAAAC0AAABMJxAAbAAAAAYBAAAnAAAATCcQAGwAAAAGAQAASQAAAEwnEABsAAAABwEAAEcAAABMJxAAbAAAAAEBAAAnAAAATCcQAGwAAAABAQAASQAAAEwnEABsAAAAAgEAAEcAAABMJxAAbAAAAP8AAAAmAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9jcm9zc2JlYW0tY2hhbm5lbC0wLjUuNS9zcmMvZmxhdm9ycy9hcnJheS5ycwAAAEgoEABtAAAAeAEAADcAAABIKBAAbQAAAHYBAAAqAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9uYWxnZWJyYS0wLjMxLjAvc3JjL2Jhc2UvdmVjX3N0b3JhZ2UucnMvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3NoYXBlL2hlaWdodGZpZWxkMy5yc0ApEABoAAAAPQAAAAkAAAAAY2Fubm90IHJlY3Vyc2l2ZWx5IGFjcXVpcmUgbXV0ZXgAAAC5KRAAIAAAAC9ydXN0Yy83NzY1MmI5ZWYzZmM5OGUyZGYwZTI2MGVmZWRiODBhYTY4YzA4YzA2L2xpYnJhcnkvc3RkL3NyYy9zeXMvd2FzbS8uLi91bnN1cHBvcnRlZC9sb2Nrcy9tdXRleC5ycwAA5CkQAGYAAAAXAAAACQAAAIMAAAAIAAAABAAAAIwAAACNAAAAgwAAACQAAAAEAAAAjgAAACgpYXNzZXJ0aW9uIGZhaWxlZDogbWluIDw9IG1heC9ydXN0Yy83NzY1MmI5ZWYzZmM5OGUyZGYwZTI2MGVmZWRiODBhYTY4YzA4YzA2L2xpYnJhcnkvY29yZS9zcmMvbnVtL2YzMi5ycwAAAJ4qEABLAAAA9QQAAAkAAACDAAAABAAAAAQAAACPAAAAAAAAAGF0dGVtcHQgdG8gY2FsY3VsYXRlIHRoZSByZW1haW5kZXIgd2l0aCBhIGRpdmlzb3Igb2YgemVyb2Fzc2VydGlvbiBmYWlsZWQ6IG1pZCA8PSBzZWxmLmxlbigpAAAAAGNhbGxlZCBgT3B0aW9uOjp1bndyYXAoKWAgb24gYSBgTm9uZWAgdmFsdWUAgwAAAAAAAAABAAAAkAAAAGNhbGxlZCBgUmVzdWx0Ojp1bndyYXAoKWAgb24gYW4gYEVycmAgdmFsdWUAkQAAAAgAAAAEAAAAkgAAAIMAAAAEAAAABAAAAJMAAACDAAAABAAAAAQAAACUAAAAgwAAAAQAAAAEAAAAlQAAAIMAAAAEAAAABAAAAJYAAACDAAAABAAAAAQAAACXAAAAgwAAAAQAAAAEAAAAmAAAAC9ydXN0Yy83NzY1MmI5ZWYzZmM5OGUyZGYwZTI2MGVmZWRiODBhYTY4YzA4YzA2L2xpYnJhcnkvYWxsb2Mvc3JjL2NvbGxlY3Rpb25zL3ZlY19kZXF1ZS9tb2QucnNhc3NlcnRpb24gZmFpbGVkOiBzZWxmLmNhcCgpID09IG9sZF9jYXAgKiAyAAAASCwQAF4AAADPCAAACQAAAC9ydXN0Yy83NzY1MmI5ZWYzZmM5OGUyZGYwZTI2MGVmZWRiODBhYTY4YzA4YzA2L2xpYnJhcnkvYWxsb2Mvc3JjL3NsaWNlLnJzAADkLBAASgAAAGcEAAAVAAAA5CwQAEoAAAB1BAAAHgAAAOQsEABKAAAAfgQAABgAAADkLBAASgAAAH8EAAAZAAAA5CwQAEoAAACCBAAAGgAAAP9Qb2lzb25FcnJvci9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvYml0LXZlYy0wLjYuMy9zcmMvbGliLnJzAAAAjC0QAFkAAADAAQAAGAAAAGluZGV4IG91dCBvZiBib3VuZHM6ICA+PSAAAAD4LRAAFQAAAA0uEAAEAAAAjC0QAFkAAAAbAgAACQAAAIwtEABZAAAAHwIAABoAAACMLRAAWQAAACACAAAaAAAAjC0QAFkAAAD5BAAAMwAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvcGFydGl0aW9uaW5nL3FidmgvYnVpbGQucnMAAABkLhAAbQAAAFcBAAAgAAAAZC4QAG0AAABaAQAAEQAAAGQuEABtAAAAdQEAABoAAABkLhAAbQAAAH0BAAAlAAAAZC4QAG0AAACwAQAACQAAAGQuEABtAAAAsgEAAAkAAABkLhAAbQAAALQBAAAJAAAAZC4QAG0AAAA/AQAACQAAAGQuEABtAAAAJgEAAA0AAABkLhAAbQAAACcBAAANAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy9wYXJ0aXRpb25pbmcvcWJ2aC91cGRhdGUucnMAAHQvEABuAAAApgAAABcAAAB0LxAAbgAAAKcAAAAZAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy9wYXJ0aXRpb25pbmcvcWJ2aC90cmF2ZXJzYWwucnMAAAAEMBAAcQAAAJwAAAAYAAAABDAQAHEAAABcAAAAGAAAAAQwEABxAAAAIgAAABgAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3F1ZXJ5L2NvbnRhY3RfbWFuaWZvbGRzL2NvbnRhY3RfbWFuaWZvbGRzX2hhbGZzcGFjZV9wZm0ucnMAAACoMBAAjQAAAEAAAAAUAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy9xdWVyeS9jb250YWN0X21hbmlmb2xkcy9jb250YWN0X21hbmlmb2xkc190cmltZXNoX3NoYXBlLnJzAAAASDEQAI0AAABaAAAAHAAAAEgxEACNAAAAWgAAADYAAABIMRAAjQAAAKkAAAApAAAASDEQAI0AAACvAAAAHQAAAIMAAAAkAAAABAAAAJkAAACaAAAAmwAAAJwAAACdAAAAngAAAJ8AAACgAAAAoQAAAKIAAACDAAAAJAAAAAQAAACOAAAAowAAAKQAAAClAAAApgAAAIMAAAAkAAAABAAAAIMAAAAkAAAABAAAAI4AAACjAAAApAAAAKUAAACmAAAAbDIQAGwyEACkAAAAgwAAACQAAAAEAAAApwAAAKgAAACpAAAAqgAAAKsAAACsAAAAmQAAAJoAAACbAAAAnAAAAJ0AAACeAAAAnwAAAKAAAAChAAAAogAAABgyEACOAAAAcCoQAKMAAACkAAAApQAAAKYAAABMMhAAbDIQAGwyEACkAAAAeDIQAC4AAAAvAAAAMAAAADEAAACtAAAAMwAAADQAAAA1AAAANgAAADcAAAA4AAAAOQAAAK4AAAA7AAAAPAAAAK8AAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3F1ZXJ5L2NvbnRhY3RfbWFuaWZvbGRzL2NvbnRhY3RfbWFuaWZvbGRzX2hlaWdodGZpZWxkX3NoYXBlLnJzAAAAYDMQAJEAAABrAAAAHAAAAGAzEACRAAAAawAAADYAAABgMxAAkQAAAH8AAAAgAAAAYDMQAJEAAACWAAAAHQAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvcXVlcnkvY29udGFjdF9tYW5pZm9sZHMvY29udGFjdF9tYW5pZm9sZHNfY29tcG9zaXRlX3NoYXBlX3NoYXBlLnJzAAAANDQQAJUAAABFAAAAHAAAADQ0EACVAAAARQAAADYAAACDAAAANAAAAAQAAACwAAAAsQAAADQ0EACVAAAAWQAAACQAAAA0NBAAlQAAAHYAAAAhAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy9xdWVyeS9jb250YWN0X21hbmlmb2xkcy9jb250YWN0X21hbmlmb2xkc19oZWlnaHRmaWVsZF9jb21wb3NpdGVfc2hhcGUucnMAIDUQAJsAAABIAAAAHAAAACA1EACbAAAASAAAADYAAACDAAAANAAAAAQAAACyAAAAswAAACA1EACbAAAAYAAAACgAAAAgNRAAmwAAAH0AAAAlAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy9xdWVyeS9jb250YWN0X21hbmlmb2xkcy9jb250YWN0X21hbmlmb2xkc19jb21wb3NpdGVfc2hhcGVfY29tcG9zaXRlX3NoYXBlLnJzABA2EACfAAAARAAAABwAAAAQNhAAnwAAAEQAAAA2AAAAgwAAADgAAAAEAAAAtAAAALUAAACDAAAAOAAAAAQAAAC2AAAAtwAAABA2EACfAAAAcgAAACwAAAAQNhAAnwAAAJEAAAApAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy9xdWVyeS9lcGEvZXBhMy5ycxg3EABkAAAAIQEAABsAAAAYNxAAZAAAAPAAAAAXAAAAGDcQAGQAAADxAAAAFwAAABg3EABkAAAA8gAAABcAAAAYNxAAZAAAAA0BAAAdAAAAGDcQAGQAAAANAQAANwAAABg3EABkAAAAEgEAAB0AAAAYNxAAZAAAABIBAAA3AAAAGDcQAGQAAAAXAQAAHQAAABg3EABkAAAAFwEAADcAAAAYNxAAZAAAABwBAAAdAAAAGDcQAGQAAAAcAQAANwAAABg3EABkAAAAPQEAADIAAAAYNxAAZAAAAKMBAAAaAAAAGDcQAGQAAABEAQAAGAAAABg3EABkAAAAWAEAACIAAAAYNxAAZAAAAF0BAAANAAAAGDcQAGQAAABfAQAAIgAAABg3EABkAAAAYAEAACIAAAAYNxAAZAAAAGEBAAAiAAAAGDcQAGQAAABvAQAAFQAAABg3EABkAAAAgwEAADAAAAAYNxAAZAAAAIMBAAAiAAAAGDcQAGQAAACXAQAADQAAABg3EABkAAAAmAEAACMAAABhc3NlcnRpb24gZmFpbGVkOiBtaW5fYm91bmQgPT0gbWluX2JvdW5kL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy9xdWVyeS9namsvZ2prLnJzADQ5EABjAAAAjAAAAAkAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3NoYXBlL3BvbHlnb25hbF9mZWF0dXJlM2QucnMAqDkQAG8AAAAaAQAAHgAAAKg5EABvAAAAHAEAADoAAACoORAAbwAAAB8BAAApAAAAqDkQAG8AAABGAQAAHgAAAKg5EABvAAAASAEAADoAAACoORAAbwAAAEsBAAApAAAAqDkQAG8AAABvAQAAEQAAAKg5EABvAAAAcAEAABEAAACoORAAbwAAAHUBAAAVAAAAqDkQAG8AAAB2AQAAJQAAAKg5EABvAAAAdgEAABUAAACoORAAbwAAAH0BAAAsAAAAqDkQAG8AAAB9AQAAHQAAAGluZGV4IG91dCBvZiBib3VuZHMvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL2luZGV4bWFwLTEuOS4xL3NyYy9tYXAvY29yZS5ycwAA+zoQAF8AAAAqAAAAIwAAAGluZGV4IG5vdCBmb3VuZAD7OhAAXwAAADcAAAAKAAAA+zoQAF8AAACrAgAADgAAAPs6EABfAAAAygEAACIAAAD7OhAAXwAAANABAAAeAAAAYXNzZXJ0aW9uIGZhaWxlZDogaW5kaWNlcy5jYXBhY2l0eSgpIC0gaW5kaWNlcy5sZW4oKSA+PSBlbnRyaWVzLmxlbigpL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9pbmRleG1hcC0xLjkuMS9zcmMvbWFwL2NvcmUvcmF3LnJzATwQAGMAAAAQAAAABQAAAAE8EABjAAAAgwAAAAoAAAD7OhAAXwAAACIAAAAPAAAAZ2VtbTogZGltZW5zaW9ucyBtaXNtYXRjaCBmb3IgYWRkaXRpb24uAJQ8EAAnAAAAR2VtdjogZGltZW5zaW9ucyBtaXNtYXRjaC5EYXRhIHN0b3JhZ2UgYnVmZmVyIGRpbWVuc2lvbiBtaXNtYXRjaC4AAADYKBAAaAAAAFQAAAAJAAAATWF0cml4IHNsaWNpbmcgb3V0IG9mIGJvdW5kcy4vVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL25hbGdlYnJhLTAuMzEuMC9zcmMvYmFzZS9tYXRyaXhfc2xpY2UucnMAADU9EABpAAAACQEAAAkAAAA1PRAAaQAAAA0BAAAJAAAAUm93cyByYW5nZSBwYWlyOiB0aGUgc2xpY2UgcmFuZ2VzIG11c3Qgbm90IG92ZXJsYXAuADU9EABpAAAAswIAAAUAAABSb3dzIHJhbmdlIHBhaXI6IGluZGV4IG91dCBvZiByYW5nZS5Db21wb25lbnR3aXNlIG11bC9kaXY6IG1pc21hdGNoZWQgbWF0cml4IGRpbWVuc2lvbnMuKD4QADQAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL25hbGdlYnJhLTAuMzEuMC9zcmMvYmFzZS9jb21wb25lbnR3aXNlLnJzAABkPhAAagAAAJYAAAAFAAAATWF0cml4IHNsaWNlOiBpbnB1dCBkYXRhIGJ1ZmZlciB0byBzbWFsbC4vVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL25hbGdlYnJhLTAuMzEuMC9zcmMvYmFzZS9jb25zdHJ1Y3Rpb25fc2xpY2UucnMJPxAAbwAAADAAAAAJAAAATWF0cml4IGluZGV4IG91dCBvZiBib3VuZHMuTWF0cml4IGFkZGl0aW9uL3N1YnRyYWN0aW9uIGRpbWVuc2lvbnMgbWlzbWF0Y2guAKM/EAAwAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9uYWxnZWJyYS0wLjMxLjAvc3JjL2Jhc2Uvb3BzLnJz3D8QAGAAAABoAQAAAQAAACBhbmQgOiBsZWZ0IHJvd3MgIT0gcmlnaHQgcm93cy5NYXRyaXggbXVsdGlwbGljYXRpb24gb3V0cHV0IGRpbWVuc2lvbnMgbWlzbWF0Y2ggOiBsZWZ0IGNvbHMgIT0gcmlnaHQgcm93cy4AAGtAEAAxAAAATEAQAAUAAACcQBAAGgAAANw/EABgAAAA1QIAAAkAAABBeHB5OiBtaXNtYXRjaGVkIHZlY3RvciBzaGFwZXMuAOBAEAAfAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9uYWxnZWJyYS0wLjMxLjAvc3JjL2Jhc2UvYmxhcy5ycwAAAAhBEABhAAAAQgEAAAkAAAAIQRAAYQAAAAgCAAAJAAAARG90IHByb2R1Y3QgZGltZW5zaW9ucyBtaXNtYXRjaCBmb3Igc2hhcGVzIACMQRAAKwAAAExAEAAFAAAAUUAQABoAAAAIQRAAYQAAACAAAAAJAAAACEEQAGEAAAAYAwAACQAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvbmFsZ2VicmEtMC4zMS4wL3NyYy9iYXNlL21hdHJpeC5yc01hdHJpeCBlbGVtZW50cyBzd2FwIGluZGV4IG91dCBvZiBib3VuZHMu8EEQAGMAAACZBAAACQAAAFVuYWJsZSB0byBjb3B5IGZyb20gYSBtYXRyaXggd2l0aCBhIGRpZmZlcmVudCBzaGFwZS7wQRAAYwAAAMIEAAAJAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9uYWxnZWJyYS0wLjMxLjAvc3JjL2Jhc2UvZWRpdGlvbi5yc2Fzc2VydGlvbiBmYWlsZWQ6IGlyb3cxIDwgc2VsZi5ucm93cygpICYmIGlyb3cyIDwgc2VsZi5ucm93cygpAADQQhAAZAAAADgBAAAJAAAAVGhlIGlucHV0IHZlY3RvciBtdXN0IG5vdCBiZSBlbXB0eS4vVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL25hbGdlYnJhLTAuMzEuMC9zcmMvYmFzZS9taW5fbWF4LnJzAKdDEABkAAAA4QAAAAkAAABJbmRleCBvdXQgb2YgYm91bmRzLi9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvbmFsZ2VicmEtMC4zMS4wL3NyYy9iYXNlL2luZGV4aW5nLnJzAAAAMEQQAGUAAABYAQAAGgAAAE1heGltdW0gbnVtYmVyIG9mIHBlcm11dGF0aW9ucyBleGNlZWRlZC4vVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL25hbGdlYnJhLTAuMzEuMC9zcmMvbGluYWxnL3Blcm11dGF0aW9uX3NlcXVlbmNlLnJzANBEEABzAAAAVQAAAA0AAADQRBAAcwAAAFkAAAANAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9uYWxnZWJyYS0wLjMxLjAvc3JjL2xpbmFsZy9sdS5ycwAAAGRFEABhAAAAgAEAACsAAABMVSBzb2x2ZSBtYXRyaXggZGltZW5zaW9uIG1pc21hdGNoLgDYRRAAIwAAAGRFEABhAAAA9gAAAAkAAABMVSBzb2x2ZTogdW5hYmxlIHRvIHNvbHZlIGEgbm9uLXNxdWFyZSBzeXN0ZW0uAABkRRAAYQAAAPsAAAAJAAAAZEUQAGEAAABoAAAAGAAAAIMAAAAIAAAABAAAALgAAAACAAAA//////////8vVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3JhcGllcjNkLTAuMTQuMC9zcmMvZGF0YS9hcmVuYS5ycwAAgEYQAGIAAAAKAQAAHgAAAGNvcnJ1cHQgZnJlZSBsaXN0AAAA9EYQABEAAACARhAAYgAAAAsBAAArAAAAaW5zZXJ0aW5nIHdpbGwgYWx3YXlzIHN1Y2NlZWQgYWZ0ZXIgcmVzZXJ2aW5nIGFkZGl0aW9uYWwgc3BhY2UAAIBGEABiAAAATAEAAA4AAABObyBlbGVtZW50IGF0IGluZGV4L1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9yYXBpZXIzZC0w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EACAAAAAFQMAACYAAABhc3NlcnRpb24gZmFpbGVkOiBzZWxmLnZlbG9jaXRpZXMubGVuKCkgPj0gU1BBVElBTF9ESU0AADhPEACAAAAAGQMAABUAAABhc3NlcnRpb24gZmFpbGVkOiBzZWxmLmRhbXBpbmcubGVuKCkgPj0gU1BBVElBTF9ESU0AOE8QAIAAAAAaAwAAFQAAAGFzc2VydGlvbiBmYWlsZWQ6IHNlbGYuYWNjZWxlcmF0aW9ucy5sZW4oKSA+PSBTUEFUSUFMX0RJTQAAADhPEACAAAAAGwMAABUAAAA4TxAAgAAAACADAAAVAAAAOE8QAIAAAAAxAwAAJgAAADhPEACAAAAAOgMAABAAAAA4TxAAgAAAAEYDAAAdAAAAOE8QAIAAAABaAwAAIgAAADhPEACAAAAAWwMAACAAAABBIHJpZ2lkLWJvZHkgdGhhdCBpcyBub3QgYXQgdGhlIHJvb3Qgb2YgYSBtdWx0aWJvZHkgbXVzdCBiZSBkeW5hbWljLqBTEABEAAAAOE8QAIAAAABoAwAADQAAADhPEACAAAAAlgMAABUAAAA4TxAAgAAAAJgDAAAJAAAAOE8QAIAAAACcAwAAJAAAADhPEACAAAAAnAMAAA0AAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3JhcGllcjNkLTAuMTQuMC9zcmMvZHluYW1pY3Mvam9pbnQvbXVsdGlib2R5X2pvaW50L211bHRpYm9keV9qb2ludF9zZXQucnMAADxUEACKAAAArQAAAEoAAAA8VBAAigAAALAAAABDAAAAPFQQAIoAAACxAAAAPQAAADxUEACKAAAAswAAADEAAAA8VBAAigAAAMoAAAAlAAAAPFQQAIoAAADLAAAATQAAADxUEACKAAAAxgAAADkAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3JhcGllcjNkLTAuMTQuMC9zcmMvZHluYW1pY3Mvam9pbnQvbXVsdGlib2R5X2pvaW50L211bHRpYm9keV9saW5rLnJzAAAAOFUQAIUAAABxAAAAGQAAAEludGVybmFsIGVycm9yOiBjaXJjdWxhciByaWdpZCBib2R5IGRlcGVuZGVuY3kuANBVEAAvAAAAOFUQAIUAAABzAAAACQAAAEludmFsaWQgcGFyZW50IGluZGV4LgAAABhWEAAVAAAAOFUQAIUAAAB3AAAACQAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcmFwaWVyM2QtMC4xNC4wL3NyYy9keW5hbWljcy9qb2ludC9tdWx0aWJvZHlfam9pbnQvbXVsdGlib2R5X2pvaW50LnJzAABIVhAAhgAAAFYAAAAjAAAASFYQAIYAAAB3AAAAEgAAAEhWEACGAAAAcwAAADcAAABub3QgeWV0IGltcGxlbWVudGVkAEhWEACGAAAAbwAAABEAAABIVhAAhgAAAGEAAAAuAAAASFYQAIYAAABhAAAAEQAAAEhWEACGAAAAqQAAABIAAABIVhAAhgAAAKEAAAARAAAASFYQAIYAAAC2AAAAMQAAAEhWEACGAAAA0gAAABIAAABIVhAAhgAAAM8AAAA3AAAASFYQAIYAAADLAAAAEQAAAEhWEACGAAAAxwAAAC4AAABIVhAAhgAAAMcAAAAVAAAASFYQAIYAAADgAAAAEQAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcmFwaWVyM2QtMC4xNC4wL3NyYy9keW5hbWljcy9qb2ludC9tdWx0aWJvZHlfam9pbnQvdW5pdF9tdWx0aWJvZHlfam9pbnQucnMA1FcQAIsAAAAhAAAAFwAAANRXEACLAAAAJQAAAAUAAADUVxAAiwAAACYAAAAFAAAA1FcQAIsAAABBAAAACQAAANRXEACLAAAAYgAAAAUAAADUVxAAiwAAAGMAAAAFAAAA1FcQAIsAAAB4AAAAEAAAANRXEACLAAAAiwAAAAkAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3JhcGllcjNkLTAuMTQuMC9zcmMvZHluYW1pY3MvcmlnaWRfYm9keV9jb21wb25lbnRzLnJzAADgWBAAdgAAAKIDAAA7AAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9yYXBpZXIzZC0wLjE0LjAvc3JjL2R5bmFtaWNzL3NvbHZlci9jYXRlZ29yaXphdGlvbi5ycwAAaFkQAHYAAAAPAAAAGQAAAGhZEAB2AAAANAAAABYAAABoWRAAdgAAADUAAAAUAAAAaFkQAHYAAAA2AAAAFAAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcmFwaWVyM2QtMC4xNC4wL3NyYy9keW5hbWljcy9zb2x2ZXIvZ2VuZXJpY192ZWxvY2l0eV9jb25zdHJhaW50LnJzACBaEACDAAAAKQAAADEAAAAgWhAAgwAAACoAAAAxAAAAIFoQAIMAAAAsAAAAFAAAACBaEACDAAAALQAAABQAAAAgWhAAgwAAADUAAAAYAAAAIFoQAIMAAAA4AAAAGAAAACBaEACDAAAASQEAACIAAAAgWhAAgwAAAE8BAAAiAAAAIFoQAIMAAABUAQAAHQAAACBaEACDAAAAawEAAA0AAAAgWhAAgwAAAG8BAAANAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9yYXBpZXIzZC0wLjE0LjAvc3JjL2R5bmFtaWNzL3NvbHZlci9nZW5lcmljX3ZlbG9jaXR5X2dyb3VuZF9jb25zdHJhaW50LnJzAABUWxAAigAAADMAAAAYAAAAVFsQAIoAAAA5AAAAIwAAAFRbEACKAAAAOQAAABQAAABUWxAAigAAAD8AAAAOAAAAVFsQAIoAAAA+AAAAGAAAAFRbEACKAAAA2QAAAB0AAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3JhcGllcjNkLTAuMTQuMC9zcmMvZHluYW1pY3Mvc29sdmVyL2pvaW50X2NvbnN0cmFpbnQvam9pbnRfY29uc3RyYWludC5ycwAAAEBcEACJAAAAQQAAABQAAABAXBAAiQAAAEIA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AAAJAQAADgAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcmFwaWVyM2QtMC4xNC4wL3NyYy9waXBlbGluZS9waHlzaWNzX3BpcGVsaW5lLnJzAAAAjHUQAHEAAADfAAAAEQAAAIx1EABxAAAA5gAAABYAAACMdRAAcQAAAOgAAAAWAAAAjHUQAHEAAAAjAQAAGAAAAIx1EABxAAAAJAEAABgAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3JhcGllcjNkLTAuMTQuMC9zcmMvcGlwZWxpbmUvcXVlcnlfcGlwZWxpbmUucnMAUHYQAG8AAACXAQAAFwAAAFB2EABvAAAAeQEAACsAAABQdhAAbwAAAG4BAAA0AAAAUHYQAG8AAAChAQAAIwAAAFB2EABvAAAAqgEAACMAAABQdhAAbwAAAKwBAAAwAAAAUHYQAG8AAAC5AQAAIwAAAFB2EABvAAAAuwEAACcAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3JhcGllcjNkLTAuMTQuMC9zcmMvcGlwZWxpbmUvdXNlcl9jaGFuZ2VzLnJzAAAAQHcQAG0AAAARAAAAJgAAAFVuYWJsZSB0byBpbmRleCB0aGUgc2FtZSBlbGVtZW50IHR3aWNlLgDAdxAAJwAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcmFwaWVyM2QtMC4xNC4wL3NyYy91dGlscy5ycwAAAPB3EABdAAAADwMAAAkAAAAcRBAAFAAAAPB3EABdAAAAEAMAAAkAAABLaW5lbWF0aWNWZWxvY2l0eUJhc2VkS2luZW1hdGljUG9zaXRpb25CYXNlZEZpeGVkRHluYW1pYwEAY2FwYWNpdHkgb3ZlcmZsb3cAsngQABEAAAC7AAAACAAAAAQAAAC8AAAAvQAAALsAAAAEAAAABAAAAL4AAAC7AAAACAAAAAQAAAC/AAAAwAAAACAAAAAEAAAAwQAAAMIAAABYAAAABAAAAMMAAADEAAAAcAAAAAQAAADFAAAAxgAAAMwAAAAEAAAAxwAAAMgAAAAgAAAABAAAAMkAAAC7AAAADAAAAAQAAADKAAAAuwAAABwAAAAEAAAAywAAAMAAAAAgAAAABAAAAMwAAAC7AAAAEAAAAAQAAADNAAAAzgAAAGAAAAAEAAAAzwAAANAAAAAwAAAABAAAANEAAAC7AAAADAAAAAQAAADSAAAAuwAAAAwAAAAEAAAA0wAAALsAAAAYAAAABAAAANQAAADIAAAAIAAAAAQAAADVAAAA1gAAAFAAAAAEAAAA1wAAALsAAAAIAAAABAAAANgAAAC7AAAAJAAAAAQAAADZAAAAuwAAAAwAAAAEAAAA2gAAANsAAABkAAAABAAAANwAAAC7AAAAKAAAAAQAAADdAAAAuwAAAAQAAAAEAAAA3gAAALsAAAAEAAAABAAAAN8AAABhc3NlcnRpb24gZmFpbGVkOiBtaWQgPD0gc2VsZi5sZW4oKWNhbGxlZCBgT3B0aW9uOjp1bndyYXAoKWAgb24gYSBgTm9uZWAgdmFsdWUAAMx4EAAAAAAAL3J1c3RjLzc3NjUyYjllZjNmYzk4ZTJkZjBlMjYwZWZlZGI4MGFhNjhjMDhjMDYvbGlicmFyeS9hbGxvYy9zcmMvY29sbGVjdGlvbnMvdmVjX2RlcXVlL21vZC5ycwAAyHoQAF4AAAAyAgAACQAAAMh6EABeAAAA0gIAAA4AAAAsIHsASnsQAAEAAABIexAAAgAAAH0AAABcexAAAQAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvaW5kZXhtYXAtMS45LjEvc3JjL21hcC9jb3JlLnJzAGh7EABfAAAAKgAAACMAAABoexAAXwAAAKsCAAAOAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9pbmRleG1hcC0xLjkuMS9zcmMvbWFwL2NvcmUvcmF3LnJzAOh7EABjAAAAoQAAAA4AAABoexAAXwAAACIAAAAPAAAATWF0cml4IGluZGV4IG91dCBvZiBib3VuZHMuL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9uYWxnZWJyYS0wLjMxLjAvc3JjL2Jhc2UvYmxhcy5yc0RvdCBwcm9kdWN0IGRpbWVuc2lvbnMgbWlzbWF0Y2ggZm9yIHNoYXBlcyAgYW5kIDogbGVmdCByb3dzICE9IHJpZ2h0IHJvd3MuAADofBAAKwAAABN9EAAFAAAAGH0QABoAAACHfBAAYQAAACAAAAAJAAAASW5kZXggb3V0IG9mIGJvdW5kcy4vVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL25hbGdlYnJhLTAuMzEuMC9zcmMvYmFzZS9pbmRleGluZy5ycwAAAHB9EABlAAAAWAEAABoAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL25hbGdlYnJhLTAuMzEuMC9zcmMvbGluYWxnL3N5bW1ldHJpY19laWdlbi5ycwAA6H0QAG4AAACOAAAAFQAAAOh9EABuAAAAkAAAAB0AAADofRAAbgAAAJEAAAAdAAAA6H0QAG4AAACUAAAAFQAAAOh9EABuAAAAoQAAACMAAADofRAAbgAAALAAAAAwAAAA6H0QAG4AAADEAAAAFQAAAOh9EABuAAAAxQAAABUAAADofRAAbgAAAMkAAAAvAAAA6H0QAG4AAAD+AAAAEAAAAOh9EABuAAAAQAAAAD4AAADofRAAbgAAAFQAAAAgAAAAuwAAAAgAAAAEAAAA4AAAALsAAAAEAAAABAAAAOEAAAAvcnVzdGMvNzc2NTJiOWVmM2ZjOThlMmRmMGUyNjBlZmVkYjgwYWE2OGMwOGMwNi9saWJyYXJ5L2FsbG9jL3NyYy9jb2xsZWN0aW9ucy92ZWNfZGVxdWUvcmluZ19zbGljZXMucnMAADh/EABmAAAAIAAAAA4AAAA4fxAAZgAAACMAAAARAAAA//////////8vVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL2JvdW5kaW5nX3ZvbHVtZS9hYWJiLnJzVGhlIGxvb3NlbmluZyBtYXJnaW4gbXVzdCBiZSBwb3NpdGl2ZS4ygBAAJgAAAMh/EABqAAAAGwIAAAkAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL2JvdW5kaW5nX3ZvbHVtZS9hYWJiX3V0aWxzLnJzUG9pbnQgY2xvdWQgQUFCQiBjb25zdHJ1Y3Rpb246IHRoZSBpbnB1dCBpdGVyYXRvciBzaG91bGQgeWllbGQgYXQgbGVhc3Qgb25lIHBvaW50LgAAcIAQAHAAAABAAAAAGAAAAHCAEABwAAAAVwAAABgAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL2JvdW5kaW5nX3ZvbHVtZS9ib3VuZGluZ19zcGhlcmUucnMAAABUgRAAdQAAAHMAAAAJAAAAdHdvIGFycmF5cyBjb250YWluaW5nIGF0IGxlYXN0ICBmbG9hdHMAANyBEAAfAAAA+4EQAAcAAAAYAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy9tYXNzX3Byb3BlcnRpZXMvbWFzc19wcm9wZXJ0aWVzX3RyaW1lc2gzZC5ycwAYghAAfwAAABYAAAAXAAAAGIIQAH8AAAAXAAAAFwAAABiCEAB/AAAAGAAAABcAAAAYghAAfwAAAKUAAAASAAAAGIIQAH8AAACmAAAAEgAAABiCEAB/AAAApwAAABIAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3BhcnRpdGlvbmluZy9xYnZoL2J1aWxkLnJzAAAA+IIQAG0AAAA/AQAACQAAAPiCEABtAAAAJgEAAA0AAAD4ghAAbQAAACcBAAANAAAA+IIQAG0AAABXAQAAIAAAAPiCEABtAAAAWgEAABEAAAD4ghAAbQAAAHUBAAAaAAAA+IIQAG0AAAB9AQAAJQAAAPiCEABtAAAAsAEAAAkAAAD4ghAAbQAAALIBAAAJAAAA+IIQAG0AAAC0AQAACQAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvcGFydGl0aW9uaW5nL3FidmgvdHJhdmVyc2FsLnJzAAAACIQQAHEAAAAiAAAAGAAAAAiEEABxAAAAXAAAABgAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3BhcnRpdGlvbmluZy9xYnZoL3V0aWxzLnJzAAAAnIQQAG0AAAASAAAAEQAAAJyEEABtAAAAEwAAABYAAACchBAAbQAAABUAAAAMAAAAnIQQAG0AAAAXAAAAFQAAAJyEEABtAAAAJQAAABEAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3F1ZXJ5L2NsaXAvY2xpcF9hYWJiX2xpbmUucnMAXIUQAG8AAACNAAAADQAAAFyFEABvAAAAmwAAAA0AAABUaGUgcHJveGltaXR5IG1hcmdpbiBtdXN0IGJlIHBvc2l0aXZlIG9yIG51bGwuAADshRAALgAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvcXVlcnkvY2xvc2VzdF9wb2ludHMvY2xvc2VzdF9wb2ludHNfYmFsbF9iYWxsLnJzACSGEACDAAAADwAAAAUAAABUaGUgY29tcG9zaXRlIHNoYXBlIG11c3Qgbm90IGJlIGVtcHR5Li9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvcXVlcnkvY2xvc2VzdF9wb2ludHMvY2xvc2VzdF9wb2ludHNfY29tcG9zaXRlX3NoYXBlX3NoYXBlLnJzAAAA3oYQAI8AAAAbAAAACgAAAN6GEACPAAAAgQAAACEAAADehhAAjwAAAIIAAAAhAAAA3oYQAI8AAACDAAAAIQAAAGludGVybmFsIGVycm9yOiBlbnRlcmVkIHVucmVhY2hhYmxlIGNvZGUvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3F1ZXJ5L2Nsb3Nlc3RfcG9pbnRzL2Nsb3Nlc3RfcG9pbnRzX2N1Ym9pZF9jdWJvaWQucnMA2IcQAIcAAABSAAAABQAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvcXVlcnkvY2xvc2VzdF9wb2ludHMvY2xvc2VzdF9wb2ludHNfY3Vib2lkX3RyaWFuZ2xlLnJzAAAAcIgQAIkAAABNAAAABQAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvcXVlcnkvY2xvc2VzdF9wb2ludHMvY2xvc2VzdF9wb2ludHNfaGFsZnNwYWNlX3N1cHBvcnRfbWFwLnJzAAyJEACPAAAADQAAAAUAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3F1ZXJ5L2Nsb3Nlc3RfcG9pbnRzL2Nsb3Nlc3RfcG9pbnRzX3N1cHBvcnRfbWFwX3N1cHBvcnRfbWFwLnJzAAAArIkQAJEAAAAgAAAAJAAAALsAAAAYAAAABAAAAOIAAADjAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYy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AAA8kxAAowAAAMMAAAAVAAAAPJMQAKMAAACbAAAAKgAAADyTEACjAAAAvAAAACEAAAA8kxAAowAAAL0AAAAhAAAAPJMQAKMAAAC+AAAAIQAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvcXVlcnkvbm9ubGluZWFyX3RpbWVfb2ZfaW1wYWN0L25vbmxpbmVhcl90aW1lX29mX2ltcGFjdF9zdXBwb3J0X21hcF9zdXBwb3J0X21hcC5ycwAAAHiVEAClAAAAyQAAACgAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3F1ZXJ5L3BvaW50L3BvaW50X2NvbXBvc2l0ZV9zaGFwZS5ycwAwlhAAdwAAAB8AAABTAAAAMJYQAHcAAABEAAAAVAAAADCWEAB3AAAAYAAAADcAAAAwlhAAdwAAAH4AAAA3AAAAMJYQAHcAAACPAAAAOwAAADCWEAB3AAAAmAAAAB8AAAAwlhAAdwAAAJsAAAAvAAAAMJYQAHcAAACfAAAAHwAAADCWEAB3AAAAogAAAB4AAABhc3NlcnRpb24gZmFpbGVkOiBzcW5hYiAhPSAwLjAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3F1ZXJ5L3BvaW50L3BvaW50X3NlZ21lbnQucnMAAABWlxAAbwAAAEgAAAANAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy9xdWVyeS9wb2ludC9wb2ludF90ZXRyYWhlZHJvbi5yc2Fzc2VydGlvbiBmYWlsZWQ6IGRlbm9tICE9IF8w2JcQAHMAAAAfAQAAFQAAALsAAAA4AAAABAAAACUBAAAmAQAAuwAAABQAAAAEAAAAJwEAACgBAAC7AAAAHAAAAAQA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AABhAQAAEAAAAHC8EAB9AAAAYQEAACoAAABwvBAAfQAAAHQBAAAUAAAAcLwQAH0AAACEAQAAIQAAAHC8EAB9AAAAkgEAAA0AAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3RyYW5zZm9ybWF0aW9uL2NvbnZleF9odWxsMy9pbml0aWFsX21lc2gucnMAAKC/EAB+AAAAlwAAAEoAAACgvxAAfgAAAJgAAABLAAAAoL8QAH4AAACfAAAAIwAAAKC/EAB+AAAAnwAAADoAAABJbnRlcm5hbCBjb252ZXggaHVsbCBlcnJvcjogbm8gdHJpYW5nbGUgZm91bmQuAABgwBAALgAAAKC/EAB+AAAApwAAAA0AAACgvxAAfgAAALwAAAA0AAAAoL8QAH4AAAB8AAAAGgAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvdHJhbnNmb3JtYXRpb24vY29udmV4X2h1bGwzL3RyaWFuZ2xlX2ZhY2V0LnJzyMAQAIAAAAAVAAAAFAAAAMjAEACAAAAAFQAAACEAAADIwBAAgAAAABYAAAAUAAAAYXNzZXJ0aW9uIGZhaWxlZDogZGlzdGFuY2UgPiBjcmF0ZTo6bWF0aDo6REVGQVVMVF9FUFNJTE9OAAAAyMAQAIAAAAAqAAAACQAAAMjAEACAAAAANQAAABsAAADIwBAAgAAAADUAAAArAAAAyMAQAIAAAABLAAAACQAAAMjAEACAAAAAWAAAABIAAADIwBAAgAAAAFkAAAASAAAAyMAQAIAAAABwAAAAFgAAAMjAEACAAAAAcQAAABYAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3RyYW5zZm9ybWF0aW9uL2NvbnZleF9odWxsMy92YWxpZGF0aW9uLnJzNMIQAHwAAAAGAAAAEgAAADTCEAB8AAAACQAAABEAAABhc3NlcnRpb24gZmFpbGVkOiBmYWNldHNbZmFjZXQuYWRqW2ldXS52YWxpZDTCEAB8AAAACQAAAAkAAAA0whAAfAAAAA8AAAAUAAAANMIQAHwAAAAPAAAACQAAADTCEAB8AAAAEAAAAAkAAAA0whAAfAAAABEAAAAJAAAANMIQAHwAAAAVAAAACQAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvdHJhbnNmb3JtYXRpb24vY29udmV4X2h1bGxfdXRpbHMucnMAAFzDEAB2AAAAKQAAACIAAABcwxAAdgAAAEIAAAAiAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy90cmFuc2Zvcm1hdGlvbi90b19vdXRsaW5lL2JhbGxfdG9fb3V0bGluZS5ycwD0wxAAfwAAAB4AAAAOAAAA9MMQAH8AAAAiAAAADgAAAPTDEAB/AAAAPAAAAA4AAAD0wxAAfwAAAEAAAAAOAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy90cmFuc2Zvcm1hdGlvbi90b19vdXRsaW5lL2NhcHN1bGVfdG9fb3V0bGluZS5ycwAAtMQQAIIAAAAcAAAABQAAAAAAAAABAAAAAAAAAAIAAAAvVXNlcnMvc2ViY3JvemV0Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3BhcnJ5M2QtMC45LjAvc3JjL3RyYW5zZm9ybWF0aW9uL3RvX291dGxpbmUvcm91bmRfY29udmV4X3BvbHloZWRyb25fdG9fb3V0bGluZS5ycwAAWMUQAJIAAAAPAAAAGgAAAFjFEACSAAAAEgAAAB4AAABYxRAAkgAAABUAAAAcAAAAWMUQAJIAAAAiAAAAGQAAAFjFEACSAAAAIwAAAB4AAABYxRAAkgAAADAAAAAaAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy90cmFuc2Zvcm1hdGlvbi90b190cmltZXNoL2NvbnZleF9wb2x5aGVkcm9uX3RvX3RyaW1lc2gucnNMxhAAjAAAAA0AAAAcAAAATMYQAIwAAAAPAAAAGAAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvdHJhbnNmb3JtYXRpb24vdXRpbHMucnMAAPjGEABqAAAAxAAAAAkAAAD4xhAAagAAAMUAAAAJAAAAYXNzZXJ0aW9uIGZhaWxlZDogbnN1YmRpdnMgPiAwAAD4xhAAagAAANYAAAAFAAAA+MYQAGoAAAAzAQAAIAAAAPjGEABqAAAARAEAABYAAABDYW5ub3QgY29tcHV0ZSB0aGUgY2VudGVyIG9mIGxlc3MgdGhhbiAxIHBvaW50LgDUxxAALwAAAC9Vc2Vycy9zZWJjcm96ZXQvLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvcGFycnkzZC0wLjkuMC9zcmMvdXRpbHMvY2VudGVyLnJzAAAMyBAAYgAAAAcAAAAFAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy91dGlscy9jbGVhbnVwLnJzAIDIEABjAAAADAAAAAkAAACAyBAAYwAAAA0AAAAJAAAAgMgQAGMAAAAOAAAACQAAAIDIEABjAAAAEwAAAA0AAACAyBAAYwAAABUAAAANAAAAgMgQAGMAAAAdAAAAEQAAAIDIEABjAAAAHgAAABEAAACAyBAAYwAAAB8AAAARAAAAL1VzZXJzL3NlYmNyb3pldC8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9wYXJyeTNkLTAuOS4wL3NyYy91dGlscy9wb2ludF9jbG91ZF9zdXBwb3J0X3BvaW50LnJzAAAAZMkQAHUA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AABGAgAAHwAAAMjQEAAcAAAARwIAAB4AAACiAwAADAAAAAQAAACjAwAAmQMAAAgAAAAEAAAApAMAAKUDAAAQAAAABAAAAKYDAACnAwAAmQMAAAgAAAAEAAAAqAMAAKkDAAB0aW1lIG5vdCBpbXBsZW1lbnRlZCBvbiB0aGlzIHBsYXRmb3JtAAAATNEQACUAAABsaWJyYXJ5L3N0ZC9zcmMvc3lzL3dhc20vLi4vdW5zdXBwb3J0ZWQvdGltZS5ycwB80RAALwAAAA0AAAAJAAAAY29uZHZhciB3YWl0IG5vdCBzdXBwb3J0ZWQAALzREAAaAAAAbGlicmFyeS9zdGQvc3JjL3N5cy93YXNtLy4uL3Vuc3VwcG9ydGVkL2xvY2tzL2NvbmR2YXIucnPg0RAAOAAAABcAAAAJAAAA4NEQADgAAAAbAAAACQAAAGNhbm5vdCByZWN1cnNpdmVseSBhY3F1aXJlIG11dGV4ONIQACAAAABsaWJyYXJ5L3N0ZC9zcmMvc3lzL3dhc20vLi4vdW5zdXBwb3J0ZWQvbG9ja3MvbXV0ZXgucnMAAGDSEAA2AAAAFwAAAAkAAABsaWJyYXJ5L3N0ZC9zcmMvc3lzX2NvbW1vbi90aHJlYWRfcGFya2VyL2dlbmVyaWMucnMAqNIQADMAAAAnAAAAJgAAAGluY29uc2lzdGVudCBwYXJrIHN0YXRlAOzSEAAXAAAAqNIQADMAAAA1AAAAFwAAAHBhcmsgc3RhdGUgY2hhbmdlZCB1bmV4cGVjdGVkbHkAHNMQAB8AAACo0hAAMwAAADIAAAARAAAAqNIQADMAAABIAAAAIgAAAGluY29uc2lzdGVudCBwYXJrX3RpbWVvdXQgc3RhdGUAZNMQAB8AAACo0hAAMwAAAFEAAAAXAAAAqNIQADMAAABOAAAAEQAAAGluY29uc2lzdGVudCBzdGF0ZSBpbiB1bnBhcmus0xAAHAAAAKjSEAAzAAAAbAAAABIAAACo0hAAMwAAAHoAAAAfAAAASGFzaCB0YWJsZSBjYXBhY2l0eSBvdmVyZmxvd/DTEAAcAAAAL2NhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvaGFzaGJyb3duLTAuMTIuMC9zcmMvcmF3L21vZC5ycwAU1BAATwAAAGAA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\").buffer);\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\nfunction xI() {\n  return function () {\n    try {\n      var _C4 = A.__wbindgen_add_to_stack_pointer(-16);\n      A.version(_C4);\n      var I = G()[_C4 / 4 + 0],\n        g = G()[_C4 / 4 + 1];\n      return k(I, g);\n    } finally {\n      A.__wbindgen_add_to_stack_pointer(16), A.__wbindgen_free(I, g);\n    }\n  }();\n}\npI[\"-\".charCodeAt(0)] = 62, pI[\"_\".charCodeAt(0)] = 63;\nvar WI = Object.freeze({\n  __proto__: null,\n  version: xI,\n  Vector3: BA,\n  VectorOps: QA,\n  Quaternion: EA,\n  RotationOps: iA,\n  get RigidBodyType() {\n    return DA;\n  },\n  RigidBody: hA,\n  RigidBodyDesc: NA,\n  RigidBodySet: RA,\n  IntegrationParameters: qA,\n  get JointType() {\n    return oA;\n  },\n  get MotorModel() {\n    return GA;\n  },\n  ImpulseJoint: sA,\n  UnitImpulseJoint: cA,\n  FixedImpulseJoint: YA,\n  PrismaticImpulseJoint: LA,\n  RevoluteImpulseJoint: HA,\n  SphericalImpulseJoint: lA,\n  JointData: tA,\n  ImpulseJointSet: pA,\n  MultibodyJoint: eA,\n  UnitMultibodyJoint: rA,\n  FixedMultibodyJoint: TA,\n  PrismaticMultibodyJoint: dA,\n  RevoluteMultibodyJoint: OA,\n  SphericalMultibodyJoint: nA,\n  MultibodyJointSet: ZA,\n  get CoefficientCombineRule() {\n    return SA;\n  },\n  CCDSolver: xA,\n  IslandManager: WA,\n  BroadPhase: bA,\n  NarrowPhase: jA,\n  TempContactManifold: VA,\n  Shape: AI,\n  get ShapeType() {\n    return kA;\n  },\n  Ball: II,\n  Cuboid: gI,\n  RoundCuboid: CI,\n  Capsule: BI,\n  Segment: QI,\n  Triangle: EI,\n  RoundTriangle: iI,\n  Polyline: DI,\n  TriMesh: oI,\n  ConvexPolyhedron: GI,\n  RoundConvexPolyhedron: SI,\n  Heightfield: wI,\n  Cylinder: kI,\n  RoundCylinder: UI,\n  Cone: KI,\n  RoundCone: aI,\n  get ActiveCollisionTypes() {\n    return UA;\n  },\n  Collider: JI,\n  get MassPropsMode() {\n    return KA;\n  },\n  ColliderDesc: yI,\n  ColliderSet: MI,\n  get FeatureType() {\n    return wA;\n  },\n  Ray: XA,\n  RayIntersection: zA,\n  RayColliderIntersection: uA,\n  RayColliderToi: vA,\n  PointProjection: PA,\n  PointColliderProjection: mA,\n  ShapeTOI: _A,\n  ShapeColliderTOI: $A,\n  ShapeContact: fA,\n  World: sI,\n  PhysicsPipeline: hI,\n  SerializationPipeline: FI,\n  get ActiveEvents() {\n    return JA;\n  },\n  TempContactForceEvent: YI,\n  EventQueue: LI,\n  get ActiveHooks() {\n    return yA;\n  },\n  get SolverFlags() {\n    return MA;\n  },\n  DebugRenderBuffers: RI,\n  DebugRenderPipeline: qI,\n  get QueryFilterFlags() {\n    return aA;\n  },\n  QueryPipeline: NI,\n  init: ZI\n});\nexport { UA as ActiveCollisionTypes, JA as ActiveEvents, yA as ActiveHooks, II as Ball, bA as BroadPhase, xA as CCDSolver, BI as Capsule, SA as CoefficientCombineRule, JI as Collider, yI as ColliderDesc, MI as ColliderSet, KI as Cone, GI as ConvexPolyhedron, gI as Cuboid, kI as Cylinder, RI as DebugRenderBuffers, qI as DebugRenderPipeline, LI as EventQueue, wA as FeatureType, YA as FixedImpulseJoint, TA as FixedMultibodyJoint, wI as Heightfield, sA as ImpulseJoint, pA as ImpulseJointSet, qA as IntegrationParameters, WA as IslandManager, tA as JointData, oA as JointType, KA as MassPropsMode, GA as MotorModel, eA as MultibodyJoint, ZA as MultibodyJointSet, jA as NarrowPhase, hI as PhysicsPipeline, mA as PointColliderProjection, PA as PointProjection, DI as Polyline, LA as PrismaticImpulseJoint, dA as PrismaticMultibodyJoint, EA as Quaternion, aA as QueryFilterFlags, NI as QueryPipeline, XA as Ray, uA as RayColliderIntersection, vA as RayColliderToi, zA as RayIntersection, HA as RevoluteImpulseJoint, OA as RevoluteMultibodyJoint, hA as RigidBody, NA as RigidBodyDesc, RA as RigidBodySet, DA as RigidBodyType, iA as RotationOps, aI as RoundCone, SI as RoundConvexPolyhedron, CI as RoundCuboid, UI as RoundCylinder, iI as RoundTriangle, QI as Segment, FI as SerializationPipeline, AI as Shape, $A as ShapeColliderTOI, fA as ShapeContact, _A as ShapeTOI, kA as ShapeType, MA as SolverFlags, lA as SphericalImpulseJoint, nA as SphericalMultibodyJoint, YI as TempContactForceEvent, VA as TempContactManifold, oI as TriMesh, EI as Triangle, cA as UnitImpulseJoint, rA as UnitMultibodyJoint, BA as Vector3, QA as VectorOps, sI as World, WI as default, ZI as init, xI as version };","map":{"version":3,"sources":["rapier_wasm3d.js","../gen3d/gen3d/math.ts","../gen3d/gen3d/dynamics/rigid_body.ts","../gen3d/gen3d/dynamics/impulse_joint.ts","../gen3d/gen3d/dynamics/coefficient_combine_rule.ts","../gen3d/gen3d/geometry/feature.ts","../gen3d/gen3d/geometry/shape.ts","../gen3d/gen3d/geometry/collider.ts","../gen3d/gen3d/pipeline/query_pipeline.ts","../gen3d/gen3d/pipeline/event_queue.ts","../gen3d/gen3d/pipeline/physics_hooks.ts","../gen3d/gen3d/coarena.ts","../gen3d/gen3d/dynamics/rigid_body_set.ts","../gen3d/gen3d/dynamics/integration_parameters.ts","../gen3d/gen3d/dynamics/impulse_joint_set.ts","../gen3d/gen3d/dynamics/multibody_joint.ts","../gen3d/gen3d/dynamics/multibody_joint_set.ts","../gen3d/gen3d/dynamics/ccd_solver.ts","../gen3d/gen3d/dynamics/island_manager.ts","../gen3d/gen3d/geometry/broad_phase.ts","../gen3d/gen3d/geometry/narrow_phase.ts","../gen3d/gen3d/geometry/contact.ts","../gen3d/gen3d/geometry/point.ts","../gen3d/gen3d/geometry/ray.ts","../gen3d/gen3d/geometry/toi.ts","../gen3d/gen3d/geometry/collider_set.ts","../gen3d/gen3d/pipeline/physics_pipeline.ts","../gen3d/gen3d/pipeline/serialization_pipeline.ts","../gen3d/gen3d/pipeline/debug_render_pipeline.ts","../gen3d/gen3d/pipeline/world.ts","../node_modules/tslib/tslib.es6.js","../node_modules/base64-js/index.js","../gen3d/gen3d/init.ts","../gen3d/gen3d/exports.ts"],"names":["wasm","heap","Array","fill","undefined","push","getObject","idx","heap_next","length","takeObject","ret","dropObject","addHeapObject","obj","isLikeNone","x","cachedFloat64Memory0","getFloat64Memory0","byteLength","Float64Array","memory","buffer","cachedInt32Memory0","getInt32Memory0","Int32Array","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachedUint8Memory0","Uint8Array","getStringFromWasm0","ptr","len","subarray","retptr","__wbindgen_add_to_stack_pointer","version","r0","r1","__wbindgen_free","_assertClass","instance","klass","Error","name","stack_pointer","addBorrowedObject","cachedFloat32Memory0","getFloat32Memory0","Float32Array","getArrayF32FromWasm0","cachedUint32Memory0","getUint32Memory0","Uint32Array","WASM_VECTOR_LEN","passArrayF32ToWasm0","arg","malloc","set","passArray32ToWasm0","handleError","f","args","apply","this","e","__wbindgen_exn_store","Object","freeze","Revolute","Fixed","Prismatic","Spherical","Generic","AccelerationBased","ForceBased","RawJointAxis","X","Y","Z","AngX","AngY","AngZ","Dynamic","KinematicPositionBased","KinematicVelocityBased","Vertex","Edge","Face","Unknown","Ball","Cuboid","Capsule","Segment","Polyline","Triangle","TriMesh","HeightField","Compound","ConvexPolyhedron","Cylinder","Cone","RoundCuboid","RoundTriangle","RoundCylinder","RoundCone","RoundConvexPolyhedron","RawBroadPhase","static","create","prototype","__destroy_into_raw","free","__wbg_rawbroadphase_free","constructor","rawbroadphase_new","__wrap","RawCCDSolver","__wbg_rawccdsolver_free","rawccdsolver_new","RawColliderSet","__wbg_rawcolliderset_free","coTranslation","handle","rawcolliderset_coTranslation","RawVector","coRotation","rawcolliderset_coRotation","RawRotation","coSetTranslation","y","z","rawcolliderset_coSetTranslation","coSetTranslationWrtParent","rawcolliderset_coSetTranslationWrtParent","coSetRotation","w","rawcolliderset_coSetRotation","coSetRotationWrtParent","rawcolliderset_coSetRotationWrtParent","coIsSensor","rawcolliderset_coIsSensor","coShapeType","rawcolliderset_coShapeType","coHalfExtents","rawcolliderset_coHalfExtents","coRadius","rawcolliderset_coRadius","coHalfHeight","rawcolliderset_coHalfHeight","coRoundRadius","rawcolliderset_coRoundRadius","coVertices","rawcolliderset_coVertices","v0","slice","coIndices","rawcolliderset_coIndices","getArrayU32FromWasm0","coHeightfieldHeights","rawcolliderset_coHeightfieldHeights","coHeightfieldScale","rawcolliderset_coHeightfieldScale","coHeightfieldNRows","rawcolliderset_coHeightfieldNRows","coHeightfieldNCols","rawcolliderset_coHeightfieldNCols","coParent","rawcolliderset_coParent","r2","coFriction","rawcolliderset_coFriction","coRestitution","rawcolliderset_coRestitution","coDensity","rawcolliderset_coDensity","coMass","rawcolliderset_coMass","coVolume","rawcolliderset_coVolume","coCollisionGroups","rawcolliderset_coCollisionGroups","coSolverGroups","rawcolliderset_coSolverGroups","coActiveHooks","rawcolliderset_coActiveHooks","coActiveCollisionTypes","rawcolliderset_coActiveCollisionTypes","coActiveEvents","rawcolliderset_coActiveEvents","coContactForceEventThreshold","rawcolliderset_coContactForceEventThreshold","coContainsPoint","point","rawcolliderset_coContainsPoint","coCastShape","colliderVel","shape2","shape2Pos","shape2Rot","shape2Vel","maxToi","RawShape","rawcolliderset_coCastShape","RawShapeTOI","coCastCollider","collider1Vel","collider2handle","collider2Vel","max_toi","rawcolliderset_coCastCollider","RawShapeColliderTOI","coIntersectsShape","shapePos2","shapeRot2","rawcolliderset_coIntersectsShape","coContactShape","prediction","rawcolliderset_coContactShape","RawShapeContact","coContactCollider","rawcolliderset_coContactCollider","coProjectPoint","solid","rawcolliderset_coProjectPoint","RawPointProjection","coIntersectsRay","rayOrig","rayDir","rawcolliderset_coIntersectsRay","coCastRay","rawcolliderset_coCastRay","coCastRayAndGetNormal","rawcolliderset_coCastRayAndGetNormal","RawRayIntersection","coSetSensor","is_sensor","rawcolliderset_coSetSensor","coSetRestitution","restitution","rawcolliderset_coSetRestitution","coSetFriction","friction","rawcolliderset_coSetFriction","coFrictionCombineRule","rawcolliderset_coFrictionCombineRule","coSetFrictionCombineRule","rule","rawcolliderset_coSetFrictionCombineRule","coRestitutionCombineRule","rawcolliderset_coRestitutionCombineRule","coSetRestitutionCombineRule","rawcolliderset_coSetRestitutionCombineRule","coSetCollisionGroups","groups","rawcolliderset_coSetCollisionGroups","coSetSolverGroups","rawcolliderset_coSetSolverGroups","coSetActiveHooks","hooks","rawcolliderset_coSetActiveHooks","coSetActiveEvents","events","rawcolliderset_coSetActiveEvents","coSetActiveCollisionTypes","types","rawcolliderset_coSetActiveCollisionTypes","coSetShape","shape","rawcolliderset_coSetShape","coSetContactForceEventThreshold","threshold","rawcolliderset_coSetContactForceEventThreshold","coSetDensity","density","rawcolliderset_coSetDensity","coSetMass","mass","rawcolliderset_coSetMass","coSetMassProperties","centerOfMass","principalAngularInertia","angularInertiaFrame","rawcolliderset_coSetMassProperties","rawcolliderset_new","rawcolliderset_len","contains","rawcolliderset_contains","createCollider","translation","rotation","massPropsMode","frictionCombineRule","restitutionCombineRule","isSensor","collisionGroups","solverGroups","activeCollisionTypes","activeHooks","activeEvents","contactForceEventThreshold","hasParent","parent","bodies","RawRigidBodySet","rawcolliderset_createCollider","remove","islands","wakeUp","RawIslandManager","rawcolliderset_remove","isHandleValid","forEachColliderHandle","rawcolliderset_forEachColliderHandle","RawContactForceEvent","__wbg_rawcontactforceevent_free","collider1","rawcontactforceevent_collider1","collider2","rawcontactforceevent_collider2","total_force","rawcontactforceevent_total_force","total_force_magnitude","rawcontactforceevent_total_force_magnitude","max_force_direction","rawcontactforceevent_max_force_direction","max_force_magnitude","rawcontactforceevent_max_force_magnitude","RawContactManifold","__wbg_rawcontactmanifold_free","normal","rawcontactmanifold_normal","local_n1","rawcontactmanifold_local_n1","local_n2","rawcontactmanifold_local_n2","subshape1","rawcontactmanifold_subshape1","subshape2","rawcontactmanifold_subshape2","num_contacts","rawcontactmanifold_num_contacts","contact_local_p1","i","rawcontactmanifold_contact_local_p1","contact_local_p2","rawcontactmanifold_contact_local_p2","contact_dist","rawcontactmanifold_contact_dist","contact_fid1","rawcontactmanifold_contact_fid1","contact_fid2","rawcontactmanifold_contact_fid2","contact_impulse","rawcontactmanifold_contact_impulse","contact_tangent_impulse_x","rawcontactmanifold_contact_tangent_impulse_x","contact_tangent_impulse_y","rawcontactmanifold_contact_tangent_impulse_y","num_solver_contacts","rawcontactmanifold_num_solver_contacts","solver_contact_point","rawcontactmanifold_solver_contact_point","solver_contact_dist","rawcontactmanifold_solver_contact_dist","solver_contact_friction","rawcontactmanifold_solver_contact_friction","solver_contact_restitution","rawcontactmanifold_solver_contact_restitution","solver_contact_tangent_velocity","rawcontactmanifold_solver_contact_tangent_velocity","RawContactPair","__wbg_rawcontactpair_free","rawcontactpair_collider1","rawcontactpair_collider2","numContactManifolds","rawcontactpair_numContactManifolds","contactManifold","rawcontactpair_contactManifold","RawDebugRenderPipeline","__wbg_rawdebugrenderpipeline_free","rawdebugrenderpipeline_new","vertices","rawdebugrenderpipeline_vertices","colors","rawdebugrenderpipeline_colors","render","colliders","impulse_joints","multibody_joints","narrow_phase","RawImpulseJointSet","RawMultibodyJointSet","RawNarrowPhase","rawdebugrenderpipeline_render","RawDeserializedWorld","__wbg_rawdeserializedworld_free","takeGravity","rawdeserializedworld_takeGravity","takeIntegrationParameters","rawdeserializedworld_takeIntegrationParameters","RawIntegrationParameters","takeIslandManager","rawdeserializedworld_takeIslandManager","takeBroadPhase","rawdeserializedworld_takeBroadPhase","takeNarrowPhase","rawdeserializedworld_takeNarrowPhase","takeBodies","rawdeserializedworld_takeBodies","takeColliders","rawdeserializedworld_takeColliders","takeImpulseJoints","rawdeserializedworld_takeImpulseJoints","takeMultibodyJoints","rawdeserializedworld_takeMultibodyJoints","RawEventQueue","__wbg_raweventqueue_free","autoDrain","raweventqueue_new","drainCollisionEvents","raweventqueue_drainCollisionEvents","drainContactForceEvents","raweventqueue_drainContactForceEvents","clear","raweventqueue_clear","RawGenericJoint","__wbg_rawgenericjoint_free","anchor1","anchor2","rawgenericjoint_spherical","axis","limitsEnabled","limitsMin","limitsMax","rawgenericjoint_prismatic","axes1","axes2","rawgenericjoint_fixed","rawgenericjoint_revolute","__wbg_rawimpulsejointset_free","jointType","rawimpulsejointset_jointType","jointBodyHandle1","rawimpulsejointset_jointBodyHandle1","jointBodyHandle2","rawimpulsejointset_jointBodyHandle2","jointFrameX1","rawimpulsejointset_jointFrameX1","jointFrameX2","rawimpulsejointset_jointFrameX2","jointAnchor1","rawimpulsejointset_jointAnchor1","jointAnchor2","rawimpulsejointset_jointAnchor2","jointSetAnchor1","newPos","rawimpulsejointset_jointSetAnchor1","jointSetAnchor2","rawimpulsejointset_jointSetAnchor2","jointContactsEnabled","rawimpulsejointset_jointContactsEnabled","jointSetContactsEnabled","enabled","rawimpulsejointset_jointSetContactsEnabled","jointLimitsEnabled","rawimpulsejointset_jointLimitsEnabled","jointLimitsMin","rawimpulsejointset_jointLimitsMin","jointLimitsMax","rawimpulsejointset_jointLimitsMax","jointSetLimits","min","max","rawimpulsejointset_jointSetLimits","jointConfigureMotorModel","model","rawimpulsejointset_jointConfigureMotorModel","jointConfigureMotorVelocity","targetVel","factor","rawimpulsejointset_jointConfigureMotorVelocity","jointConfigureMotorPosition","targetPos","stiffness","damping","rawimpulsejointset_jointConfigureMotorPosition","jointConfigureMotor","rawimpulsejointset_jointConfigureMotor","rawimpulsejointset_new","createJoint","params","parent1","parent2","wake_up","rawimpulsejointset_createJoint","rawimpulsejointset_remove","rawimpulsejointset_len","rawimpulsejointset_contains","forEachJointHandle","rawimpulsejointset_forEachJointHandle","forEachJointAttachedToRigidBody","body","rawimpulsejointset_forEachJointAttachedToRigidBody","__wbg_rawintegrationparameters_free","rawintegrationparameters_new","dt","rawintegrationparameters_dt","erp","rawintegrationparameters_erp","allowedLinearError","rawintegrationparameters_allowedLinearError","predictionDistance","rawintegrationparameters_predictionDistance","maxVelocityIterations","rawintegrationparameters_maxVelocityIterations","maxVelocityFrictionIterations","rawintegrationparameters_maxVelocityFrictionIterations","maxStabilizationIterations","rawintegrationparameters_maxStabilizationIterations","minIslandSize","rawintegrationparameters_minIslandSize","maxCcdSubsteps","rawintegrationparameters_maxCcdSubsteps","value","rawintegrationparameters_set_dt","rawintegrationparameters_set_erp","rawintegrationparameters_set_allowedLinearError","rawintegrationparameters_set_predictionDistance","rawintegrationparameters_set_maxVelocityIterations","rawintegrationparameters_set_maxVelocityFrictionIterations","rawintegrationparameters_set_maxStabilizationIterations","rawintegrationparameters_set_minIslandSize","rawintegrationparameters_set_maxCcdSubsteps","__wbg_rawislandmanager_free","rawislandmanager_new","forEachActiveRigidBodyHandle","rawislandmanager_forEachActiveRigidBodyHandle","__wbg_rawmultibodyjointset_free","rawmultibodyjointset_jointType","rawmultibodyjointset_jointFrameX1","rawmultibodyjointset_jointFrameX2","rawmultibodyjointset_jointAnchor1","rawmultibodyjointset_jointAnchor2","rawmultibodyjointset_jointContactsEnabled","rawmultibodyjointset_jointSetContactsEnabled","rawmultibodyjointset_jointLimitsEnabled","rawmultibodyjointset_jointLimitsMin","rawmultibodyjointset_jointLimitsMax","rawmultibodyjointset_new","rawmultibodyjointset_createJoint","rawmultibodyjointset_remove","rawmultibodyjointset_contains","rawmultibodyjointset_forEachJointHandle","rawmultibodyjointset_forEachJointAttachedToRigidBody","__wbg_rawnarrowphase_free","rawnarrowphase_new","contacts_with","handle1","rawnarrowphase_contacts_with","contact_pair","handle2","rawnarrowphase_contact_pair","intersections_with","rawnarrowphase_intersections_with","intersection_pair","rawnarrowphase_intersection_pair","RawPhysicsPipeline","__wbg_rawphysicspipeline_free","rawphysicspipeline_new","step","gravity","integrationParameters","broadPhase","narrowPhase","joints","articulations","ccd_solver","rawphysicspipeline_step","stepWithEvents","eventQueue","hookObject","hookFilterContactPair","hookFilterIntersectionPair","rawphysicspipeline_stepWithEvents","RawPointColliderProjection","__wbg_rawpointcolliderprojection_free","colliderHandle","rawpointcolliderprojection_point","isInside","rawpointcolliderprojection_isInside","featureType","rawpointcolliderprojection_featureType","featureId","rawpointcolliderprojection_featureId","__wbg_rawpointprojection_free","rawpointprojection_point","rawpointprojection_isInside","RawQueryPipeline","__wbg_rawquerypipeline_free","rawquerypipeline_new","update","rawquerypipeline_update","castRay","filter_flags","filter_groups","filter_exclude_collider","filter_exclude_rigid_body","filter_predicate","rawquerypipeline_castRay","RawRayColliderToi","castRayAndGetNormal","rawquerypipeline_castRayAndGetNormal","RawRayColliderIntersection","intersectionsWithRay","callback","rawquerypipeline_intersectionsWithRay","intersectionWithShape","shapePos","shapeRot","rawquerypipeline_intersectionWithShape","projectPoint","rawquerypipeline_projectPoint","projectPointAndGetFeature","rawquerypipeline_projectPointAndGetFeature","intersectionsWithPoint","rawquerypipeline_intersectionsWithPoint","castShape","shapeVel","rawquerypipeline_castShape","intersectionsWithShape","rawquerypipeline_intersectionsWithShape","collidersWithAabbIntersectingAabb","aabbCenter","aabbHalfExtents","rawquerypipeline_collidersWithAabbIntersectingAabb","__wbg_rawraycolliderintersection_free","rawraycolliderintersection_normal","toi","rawraycolliderintersection_toi","__wbg_rawraycollidertoi_free","__wbg_rawrayintersection_free","rawrayintersection_normal","rawrayintersection_featureType","rawrayintersection_featureId","__wbg_rawrigidbodyset_free","rbTranslation","rawrigidbodyset_rbTranslation","rbRotation","rawrigidbodyset_rbRotation","rbSleep","rawrigidbodyset_rbSleep","rbIsSleeping","rawrigidbodyset_rbIsSleeping","rbIsMoving","rawrigidbodyset_rbIsMoving","rbNextTranslation","rawrigidbodyset_rbNextTranslation","rbNextRotation","rawrigidbodyset_rbNextRotation","rbSetTranslation","rawrigidbodyset_rbSetTranslation","rbSetRotation","rawrigidbodyset_rbSetRotation","rbSetLinvel","linvel","rawrigidbodyset_rbSetLinvel","rbSetAngvel","angvel","rawrigidbodyset_rbSetAngvel","rbSetNextKinematicTranslation","rawrigidbodyset_rbSetNextKinematicTranslation","rbSetNextKinematicRotation","rawrigidbodyset_rbSetNextKinematicRotation","rbRecomputeMassPropertiesFromColliders","rawrigidbodyset_rbRecomputeMassPropertiesFromColliders","rbSetAdditionalMass","rawrigidbodyset_rbSetAdditionalMass","rbSetAdditionalMassProperties","rawrigidbodyset_rbSetAdditionalMassProperties","rbLinvel","rawrigidbodyset_rbLinvel","rbAngvel","rawrigidbodyset_rbAngvel","rbLockTranslations","locked","rawrigidbodyset_rbLockTranslations","rbSetEnabledTranslations","allow_x","allow_y","allow_z","rawrigidbodyset_rbSetEnabledTranslations","rbLockRotations","rawrigidbodyset_rbLockRotations","rbSetEnabledRotations","rawrigidbodyset_rbSetEnabledRotations","rbDominanceGroup","rawrigidbodyset_rbDominanceGroup","rbSetDominanceGroup","group","rawrigidbodyset_rbSetDominanceGroup","rbEnableCcd","rawrigidbodyset_rbEnableCcd","rbMass","rawrigidbodyset_rbMass","rbWakeUp","rawrigidbodyset_rbWakeUp","rbIsCcdEnabled","rawrigidbodyset_rbIsCcdEnabled","rbNumColliders","rawrigidbodyset_rbNumColliders","rbCollider","at","rawrigidbodyset_rbCollider","rbBodyType","rawrigidbodyset_rbBodyType","rbSetBodyType","status","rawrigidbodyset_rbSetBodyType","rbIsFixed","rawrigidbodyset_rbIsFixed","rbIsKinematic","rawrigidbodyset_rbIsKinematic","rbIsDynamic","rawrigidbodyset_rbIsDynamic","rbLinearDamping","rawrigidbodyset_rbLinearDamping","rbAngularDamping","rawrigidbodyset_rbAngularDamping","rbSetLinearDamping","rawrigidbodyset_rbSetLinearDamping","rbSetAngularDamping","rawrigidbodyset_rbSetAngularDamping","rbGravityScale","rawrigidbodyset_rbGravityScale","rbSetGravityScale","rawrigidbodyset_rbSetGravityScale","rbResetForces","rawrigidbodyset_rbResetForces","rbResetTorques","rawrigidbodyset_rbResetTorques","rbAddForce","force","rawrigidbodyset_rbAddForce","rbApplyImpulse","impulse","rawrigidbodyset_rbApplyImpulse","rbAddTorque","torque","rawrigidbodyset_rbAddTorque","rbApplyTorqueImpulse","torque_impulse","rawrigidbodyset_rbApplyTorqueImpulse","rbAddForceAtPoint","rawrigidbodyset_rbAddForceAtPoint","rbApplyImpulseAtPoint","rawrigidbodyset_rbApplyImpulseAtPoint","rbUserData","rawrigidbodyset_rbUserData","rbSetUserData","data","rawrigidbodyset_rbSetUserData","rawrigidbodyset_new","createRigidBody","gravityScale","massOnly","translationEnabledX","translationEnabledY","translationEnabledZ","rotationEnabledX","rotationEnabledY","rotationEnabledZ","linearDamping","angularDamping","rb_type","canSleep","sleeping","ccdEnabled","dominanceGroup","rawrigidbodyset_createRigidBody","rawrigidbodyset_remove","rawrigidbodyset_len","rawrigidbodyset_contains","forEachRigidBodyHandle","rawrigidbodyset_forEachRigidBodyHandle","__wbg_rawrotation_free","rawrotation_new","rawrotation_identity","rawrotation_y","rawrotation_w","RawSerializationPipeline","__wbg_rawserializationpipeline_free","rawserializationpipeline_new","serializeAll","rawserializationpipeline_serializeAll","deserializeAll","rawserializationpipeline_deserializeAll","__wbg_rawshape_free","hx","hy","hz","rawshape_cuboid","borderRadius","rawshape_roundCuboid","radius","rawshape_ball","halfHeight","rawshape_capsule","rawshape_cylinder","rawshape_roundCylinder","rawshape_cone","rawshape_roundCone","indices","ptr0","__wbindgen_malloc","len0","ptr1","len1","rawshape_polyline","rawshape_trimesh","nrows","ncols","heights","scale","rawshape_heightfield","p1","p2","rawshape_segment","p3","rawshape_triangle","rawshape_roundTriangle","points","rawshape_convexHull","rawshape_roundConvexHull","rawshape_convexMesh","rawshape_roundConvexMesh","shapePos1","shapeRot1","shapeVel1","shapeVel2","rawshape_castShape","intersectsShape","rawshape_intersectsShape","contactShape","rawshape_contactShape","containsPoint","rawshape_containsPoint","rawshape_projectPoint","intersectsRay","rawshape_intersectsRay","rawshape_castRay","rawshape_castRayAndGetNormal","__wbg_rawshapecollidertoi_free","witness1","witness2","rawshapecollidertoi_witness2","normal1","rawshapecollidertoi_normal1","normal2","rawshapecollidertoi_normal2","__wbg_rawshapecontact_free","distance","rawshapecontact_distance","point1","point2","rawshapecontact_point2","rawshapecontact_normal1","rawshapecontact_normal2","__wbg_rawshapetoi_free","rawshapetoi_witness2","rawshapetoi_normal1","rawshapetoi_normal2","__wbg_rawvector_free","rawvector_zero","rawvector_new","rawvector_set_y","xyz","rawvector_xyz","yxz","rawvector_yxz","zxy","rawvector_zxy","xzy","rawvector_xzy","yzx","rawvector_yzx","zyx","rawvector_zyx","async","module","imports","Response","WebAssembly","instantiateStreaming","headers","get","console","warn","bytes","arrayBuffer","instantiate","Instance","wbg","__wbindgen_object_drop_ref","arg0","__wbindgen_number_new","__wbindgen_number_get","arg1","__wbindgen_boolean_get","v","__wbg_rawraycolliderintersection_new","__wbg_rawcontactforceevent_new","__wbindgen_is_function","__wbg_call_9855a4612eb496cb","arg2","call","arguments","__wbg_call_8e1338b908441bd2","arg3","__wbg_call_0a54fa4fb42023f0","arg4","__wbg_bind_2ae44992222e2f45","bind","__wbg_buffer_de1150f91b23aa89","__wbg_newwithbyteoffsetandlength_9ca61320599a2c84","__wbg_new_97cf52648830a70d","__wbg_set_a0172b213e2469e9","__wbg_length_e09c0b925ab8de5d","__wbg_newwithbyteoffsetandlength_b0ff18b468a0d3f8","__wbg_set_66067e08ab6cefb5","__wbg_length_211080f5c116c01f","__wbg_newwithlength_f28ac7a9191c7e26","__wbindgen_throw","__wbindgen_memory","exports","init","__wbindgen_wasm_module","input","URL","getImports","Request","fetch","load","finalizeInit","Vector3","VectorOps","new","raw","res","out","Quaternion","RotationOps","rot","RigidBodyType","RigidBody","rawSet","colliderSet","finalizeDeserialization","isValid","lockTranslations","lockRotations","setEnabledTranslations","enableX","enableY","enableZ","restrictTranslations","setEnabledRotations","restrictRotations","setDominanceGroup","enableCcd","fromRaw","nextTranslation","nextRotation","setTranslation","tra","setLinvel","vel","rawVel","intoRaw","setGravityScale","setRotation","setAngvel","setNextKinematicTranslation","t","setNextKinematicRotation","sleep","isCcdEnabled","numColliders","collider","bodyType","setBodyType","type","isSleeping","isMoving","isFixed","isKinematic","isDynamic","setLinearDamping","recomputeMassPropertiesFromColliders","setAdditionalMass","setAdditionalMassProperties","angularInertiaLocalFrame","rawCom","rawPrincipalInertia","rawInertiaFrame","setAngularDamping","resetForces","resetTorques","addForce","rawForce","applyImpulse","rawImpulse","addTorque","rawTorque","applyTorqueImpulse","torqueImpulse","rawTorqueImpulse","addForceAtPoint","rawPoint","applyImpulseAtPoint","RigidBodyDesc","zeros","identity","translationsEnabledX","translationsEnabledY","translationsEnabledZ","rotationsEnabledX","rotationsEnabledY","rotationsEnabledZ","TypeError","copy","enabledTranslations","enabledRotations","setCanSleep","can","setSleeping","setCcdEnabled","setUserData","userData","JointType","MotorModel","ImpulseJoint","bodySet","RevoluteImpulseJoint","PrismaticImpulseJoint","FixedImpulseJoint","SphericalImpulseJoint","body1","body2","frameX1","frameX2","setAnchor1","setAnchor2","setContactsEnabled","contactsEnabled","UnitImpulseJoint","rawAxis","setLimits","configureMotorModel","configureMotorVelocity","configureMotorPosition","configureMotor","JointData","frame1","frame2","rawA1","rawA2","rawAx","result","rawFra1","rawFra2","fixed","limits","prismatic","spherical","revolute","CoefficientCombineRule","FeatureType","Shape","rawType","extents","vs","ShapeType","Heightfield","rawPos1","rawRot1","rawVel1","rawPos2","rawRot2","rawVel2","rawShape1","rawShape2","ShapeTOI","ShapeContact","rawPos","rawRot","rawShape","PointProjection","ray","rawRayOrig","origin","rawRayDir","dir","RayIntersection","super","ball","halfExtents","cuboid","roundCuboid","capsule","a","b","ra","rb","segment","c","rc","triangle","roundTriangle","polyline","trimesh","convexMesh","convexHull","roundConvexMesh","roundConvexHull","rawScale","heightfield","cylinder","roundCylinder","cone","roundCone","ActiveCollisionTypes","Collider","_parent","_shape","ensureShapeIsCached","setSensor","setShape","setRestitution","setFriction","setFrictionCombineRule","setRestitutionCombineRule","setCollisionGroups","setSolverGroups","setActiveHooks","setActiveEvents","setContactForceEventThreshold","setActiveCollisionTypes","setDensity","setMass","setMassProperties","setTranslationWrtParent","setRotationWrtParent","shapeType","roundRadius","heightfieldHeights","heightfieldScale","heightfieldNRows","heightfieldNCols","volume","rawOrig","rawDir","rawCollider1Vel","rawShape2Pos","rawShape2Rot","rawShape2Vel","castCollider","rawCollider2Vel","ShapeColliderTOI","contactCollider","MassPropsMode","ColliderDesc","Density","Average","DEFAULT","sensor","Mass","MassProps","QueryFilterFlags","QueryPipeline","filterFlags","filterGroups","filterExcludeCollider","filterExcludeRigidBody","filterPredicate","RayColliderToi","RayColliderIntersection","rawInter","PointColliderProjection","rawCenter","rawHalfExtents","ActiveEvents","TempContactForceEvent","totalForce","totalForceMagnitude","maxForceDirection","maxForceMagnitude","EventQueue","event","ActiveHooks","SolverFlags","Coarena","fconv","uconv","size","index","delete","forEach","elt","getAll","filter","RigidBodySet","map","desc","rawTra","rawLv","rawAv","impulseJoints","multibodyJoints","unmap","forEachJointHandleAttachedToRigidBody","forEachActiveRigidBody","IntegrationParameters","ImpulseJointSet","newTyped","joint","rawParams","MultibodyJoint","RevoluteMultibodyJoint","PrismaticMultibodyJoint","FixedMultibodyJoint","SphericalMultibodyJoint","UnitMultibodyJoint","MultibodyJointSet","CCDSolver","IslandManager","BroadPhase","NarrowPhase","tempManifold","TempContactManifold","contactsWith","intersectionsWith","contactPair","rawPair","flipped","intersectionPair","localNormal1","localNormal2","numContacts","localContactPoint1","localContactPoint2","contactDist","contactFid1","contactFid2","contactImpulse","contactTangentImpulseX","contactTangentImpulseY","numSolverContacts","solverContactPoint","solverContactDist","solverContactFriction","solverContactRestitution","solverContactTangentVelocity","dist","Ray","pointAt","ColliderSet","parentHandle","isNaN","PhysicsPipeline","ccdSolver","rawG","filterContactPair","filterIntersectionPair","SerializationPipeline","rawGra","World","DebugRenderBuffers","DebugRenderPipeline","queryPipeline","physicsPipeline","serializationPipeline","debugRenderPipeline","rawIntegrationParameters","rawIslands","rawBroadPhase","rawNarrowPhase","rawBodies","rawColliders","rawImpulseJoints","rawMultibodyJoints","rawCCDSolver","rawQueryPipeline","rawPhysicsPipeline","rawSerializationPipeline","rawDebugRenderPipeline","takeSnapshot","debugRender","timestep","niter","createImpulseJoint","createMultibodyJoint","getRigidBody","getCollider","getImpulseJoint","getMultibodyJoint","removeRigidBody","removeCollider","removeImpulseJoint","removeMultibodyJoint","forEachCollider","forEachRigidBody","castClosure","__awaiter","thisArg","_arguments","P","generator","resolve","Promise","reject","fulfilled","next","rejected","done","then","lookup","revLookup","Arr","code","charCodeAt","getLens","b64","validLen","indexOf","lens","placeHoldersLen","tmp","arr","_byteLength","curByte","num","encodeChunk","uint8","start","end","output","join","extraBytes","parts","maxChunkLength","len2","wasmInit","base64","toByteArray","vers"],"mappings":"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","sourcesContent":["\nlet wasm;\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedFloat64Memory0;\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nlet cachedInt32Memory0;\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0;\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n* @returns {string}\n*/\nexport function version() {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        wasm.version(retptr);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nlet cachedFloat32Memory0;\nfunction getFloat32Memory0() {\n    if (cachedFloat32Memory0.byteLength === 0) {\n        cachedFloat32Memory0 = new Float32Array(wasm.memory.buffer);\n    }\n    return cachedFloat32Memory0;\n}\n\nfunction getArrayF32FromWasm0(ptr, len) {\n    return getFloat32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nlet cachedUint32Memory0;\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0.byteLength === 0) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction getArrayU32FromWasm0(ptr, len) {\n    return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArrayF32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getFloat32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n*/\nexport const RawJointType = Object.freeze({ Revolute:0,\"0\":\"Revolute\",Fixed:1,\"1\":\"Fixed\",Prismatic:2,\"2\":\"Prismatic\",Spherical:3,\"3\":\"Spherical\",Generic:4,\"4\":\"Generic\", });\n/**\n*/\nexport const RawMotorModel = Object.freeze({ AccelerationBased:0,\"0\":\"AccelerationBased\",ForceBased:1,\"1\":\"ForceBased\", });\n/**\n*/\nexport const RawJointAxis = Object.freeze({ X:0,\"0\":\"X\",Y:1,\"1\":\"Y\",Z:2,\"2\":\"Z\",AngX:3,\"3\":\"AngX\",AngY:4,\"4\":\"AngY\",AngZ:5,\"5\":\"AngZ\", });\n/**\n*/\nexport const RawRigidBodyType = Object.freeze({ Dynamic:0,\"0\":\"Dynamic\",Fixed:1,\"1\":\"Fixed\",KinematicPositionBased:2,\"2\":\"KinematicPositionBased\",KinematicVelocityBased:3,\"3\":\"KinematicVelocityBased\", });\n/**\n*/\nexport const RawFeatureType = Object.freeze({ Vertex:0,\"0\":\"Vertex\",Edge:1,\"1\":\"Edge\",Face:2,\"2\":\"Face\",Unknown:3,\"3\":\"Unknown\", });\n/**\n*/\nexport const RawShapeType = Object.freeze({ Ball:0,\"0\":\"Ball\",Cuboid:1,\"1\":\"Cuboid\",Capsule:2,\"2\":\"Capsule\",Segment:3,\"3\":\"Segment\",Polyline:4,\"4\":\"Polyline\",Triangle:5,\"5\":\"Triangle\",TriMesh:6,\"6\":\"TriMesh\",HeightField:7,\"7\":\"HeightField\",Compound:8,\"8\":\"Compound\",ConvexPolyhedron:9,\"9\":\"ConvexPolyhedron\",Cylinder:10,\"10\":\"Cylinder\",Cone:11,\"11\":\"Cone\",RoundCuboid:12,\"12\":\"RoundCuboid\",RoundTriangle:13,\"13\":\"RoundTriangle\",RoundCylinder:14,\"14\":\"RoundCylinder\",RoundCone:15,\"15\":\"RoundCone\",RoundConvexPolyhedron:16,\"16\":\"RoundConvexPolyhedron\", });\n/**\n*/\nexport class RawBroadPhase {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawBroadPhase.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawbroadphase_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawbroadphase_new();\n        return RawBroadPhase.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawCCDSolver {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawCCDSolver.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawccdsolver_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawccdsolver_new();\n        return RawCCDSolver.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawColliderSet {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawColliderSet.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawcolliderset_free(ptr);\n    }\n    /**\n    * The world-space translation of this collider.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    coTranslation(handle) {\n        const ret = wasm.rawcolliderset_coTranslation(this.ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The world-space orientation of this collider.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    coRotation(handle) {\n        const ret = wasm.rawcolliderset_coRotation(this.ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * Sets the translation of this collider.\n    *\n    * # Parameters\n    * - `x`: the world-space position of the collider along the `x` axis.\n    * - `y`: the world-space position of the collider along the `y` axis.\n    * - `z`: the world-space position of the collider along the `z` axis.\n    * - `wakeUp`: forces the collider to wake-up so it is properly affected by forces if it\n    * wasn't moving before modifying its position.\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    */\n    coSetTranslation(handle, x, y, z) {\n        wasm.rawcolliderset_coSetTranslation(this.ptr, handle, x, y, z);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    */\n    coSetTranslationWrtParent(handle, x, y, z) {\n        wasm.rawcolliderset_coSetTranslationWrtParent(this.ptr, handle, x, y, z);\n    }\n    /**\n    * Sets the rotation quaternion of this collider.\n    *\n    * This does nothing if a zero quaternion is provided.\n    *\n    * # Parameters\n    * - `x`: the first vector component of the quaternion.\n    * - `y`: the second vector component of the quaternion.\n    * - `z`: the third vector component of the quaternion.\n    * - `w`: the scalar component of the quaternion.\n    * - `wakeUp`: forces the collider to wake-up so it is properly affected by forces if it\n    * wasn't moving before modifying its position.\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @param {number} w\n    */\n    coSetRotation(handle, x, y, z, w) {\n        wasm.rawcolliderset_coSetRotation(this.ptr, handle, x, y, z, w);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @param {number} w\n    */\n    coSetRotationWrtParent(handle, x, y, z, w) {\n        wasm.rawcolliderset_coSetRotationWrtParent(this.ptr, handle, x, y, z, w);\n    }\n    /**\n    * Is this collider a sensor?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    coIsSensor(handle) {\n        const ret = wasm.rawcolliderset_coIsSensor(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * The type of the shape of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coShapeType(handle) {\n        const ret = wasm.rawcolliderset_coShapeType(this.ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * The half-extents of this collider if it is has a cuboid shape.\n    * @param {number} handle\n    * @returns {RawVector | undefined}\n    */\n    coHalfExtents(handle) {\n        const ret = wasm.rawcolliderset_coHalfExtents(this.ptr, handle);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * The radius of this collider if it is a ball, capsule, cylinder, or cone shape.\n    * @param {number} handle\n    * @returns {number | undefined}\n    */\n    coRadius(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coRadius(retptr, this.ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The radius of this collider if it is a capsule, cylinder, or cone shape.\n    * @param {number} handle\n    * @returns {number | undefined}\n    */\n    coHalfHeight(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coHalfHeight(retptr, this.ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The radius of the round edges of this collider.\n    * @param {number} handle\n    * @returns {number | undefined}\n    */\n    coRoundRadius(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coRoundRadius(retptr, this.ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getFloat32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The vertices of this triangle mesh, polyline, convex polyhedron, segment, triangle or convex polyhedron, if it is one.\n    * @param {number} handle\n    * @returns {Float32Array | undefined}\n    */\n    coVertices(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coVertices(retptr, this.ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayF32FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 4);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The indices of this triangle mesh, polyline, or convex polyhedron, if it is one.\n    * @param {number} handle\n    * @returns {Uint32Array | undefined}\n    */\n    coIndices(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coIndices(retptr, this.ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayU32FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 4);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The height of this heightfield if it is one.\n    * @param {number} handle\n    * @returns {Float32Array | undefined}\n    */\n    coHeightfieldHeights(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coHeightfieldHeights(retptr, this.ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayF32FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 4);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The scaling factor applied of this heightfield if it is one.\n    * @param {number} handle\n    * @returns {RawVector | undefined}\n    */\n    coHeightfieldScale(handle) {\n        const ret = wasm.rawcolliderset_coHeightfieldScale(this.ptr, handle);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * The number of rows on this heightfield's height matrix, if it is one.\n    * @param {number} handle\n    * @returns {number | undefined}\n    */\n    coHeightfieldNRows(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coHeightfieldNRows(retptr, this.ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The number of columns on this heightfield's height matrix, if it is one.\n    * @param {number} handle\n    * @returns {number | undefined}\n    */\n    coHeightfieldNCols(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coHeightfieldNCols(retptr, this.ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The unique integer identifier of the collider this collider is attached to.\n    * @param {number} handle\n    * @returns {number | undefined}\n    */\n    coParent(handle) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawcolliderset_coParent(retptr, this.ptr, handle);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r2 = getFloat64Memory0()[retptr / 8 + 1];\n            return r0 === 0 ? undefined : r2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * The friction coefficient of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coFriction(handle) {\n        const ret = wasm.rawcolliderset_coFriction(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * The restitution coefficient of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coRestitution(handle) {\n        const ret = wasm.rawcolliderset_coRestitution(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * The density of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coDensity(handle) {\n        const ret = wasm.rawcolliderset_coDensity(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * The mass of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coMass(handle) {\n        const ret = wasm.rawcolliderset_coMass(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * The volume of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coVolume(handle) {\n        const ret = wasm.rawcolliderset_coVolume(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * The collision groups of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coCollisionGroups(handle) {\n        const ret = wasm.rawcolliderset_coCollisionGroups(this.ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * The solver groups of this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coSolverGroups(handle) {\n        const ret = wasm.rawcolliderset_coSolverGroups(this.ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * The physics hooks enabled for this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coActiveHooks(handle) {\n        const ret = wasm.rawcolliderset_coActiveHooks(this.ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * The collision types enabled for this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coActiveCollisionTypes(handle) {\n        const ret = wasm.rawcolliderset_coActiveCollisionTypes(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * The events enabled for this collider.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coActiveEvents(handle) {\n        const ret = wasm.rawcolliderset_coActiveEvents(this.ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * The total force magnitude beyond which a contact force event can be emitted.\n    * @param {number} handle\n    * @returns {number}\n    */\n    coContactForceEventThreshold(handle) {\n        const ret = wasm.rawcolliderset_coContactForceEventThreshold(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} point\n    * @returns {boolean}\n    */\n    coContainsPoint(handle, point) {\n        _assertClass(point, RawVector);\n        const ret = wasm.rawcolliderset_coContainsPoint(this.ptr, handle, point.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} colliderVel\n    * @param {RawShape} shape2\n    * @param {RawVector} shape2Pos\n    * @param {RawRotation} shape2Rot\n    * @param {RawVector} shape2Vel\n    * @param {number} maxToi\n    * @returns {RawShapeTOI | undefined}\n    */\n    coCastShape(handle, colliderVel, shape2, shape2Pos, shape2Rot, shape2Vel, maxToi) {\n        _assertClass(colliderVel, RawVector);\n        _assertClass(shape2, RawShape);\n        _assertClass(shape2Pos, RawVector);\n        _assertClass(shape2Rot, RawRotation);\n        _assertClass(shape2Vel, RawVector);\n        const ret = wasm.rawcolliderset_coCastShape(this.ptr, handle, colliderVel.ptr, shape2.ptr, shape2Pos.ptr, shape2Rot.ptr, shape2Vel.ptr, maxToi);\n        return ret === 0 ? undefined : RawShapeTOI.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} collider1Vel\n    * @param {number} collider2handle\n    * @param {RawVector} collider2Vel\n    * @param {number} max_toi\n    * @returns {RawShapeColliderTOI | undefined}\n    */\n    coCastCollider(handle, collider1Vel, collider2handle, collider2Vel, max_toi) {\n        _assertClass(collider1Vel, RawVector);\n        _assertClass(collider2Vel, RawVector);\n        const ret = wasm.rawcolliderset_coCastCollider(this.ptr, handle, collider1Vel.ptr, collider2handle, collider2Vel.ptr, max_toi);\n        return ret === 0 ? undefined : RawShapeColliderTOI.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawShape} shape2\n    * @param {RawVector} shapePos2\n    * @param {RawRotation} shapeRot2\n    * @returns {boolean}\n    */\n    coIntersectsShape(handle, shape2, shapePos2, shapeRot2) {\n        _assertClass(shape2, RawShape);\n        _assertClass(shapePos2, RawVector);\n        _assertClass(shapeRot2, RawRotation);\n        const ret = wasm.rawcolliderset_coIntersectsShape(this.ptr, handle, shape2.ptr, shapePos2.ptr, shapeRot2.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} handle\n    * @param {RawShape} shape2\n    * @param {RawVector} shapePos2\n    * @param {RawRotation} shapeRot2\n    * @param {number} prediction\n    * @returns {RawShapeContact | undefined}\n    */\n    coContactShape(handle, shape2, shapePos2, shapeRot2, prediction) {\n        _assertClass(shape2, RawShape);\n        _assertClass(shapePos2, RawVector);\n        _assertClass(shapeRot2, RawRotation);\n        const ret = wasm.rawcolliderset_coContactShape(this.ptr, handle, shape2.ptr, shapePos2.ptr, shapeRot2.ptr, prediction);\n        return ret === 0 ? undefined : RawShapeContact.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} collider2handle\n    * @param {number} prediction\n    * @returns {RawShapeContact | undefined}\n    */\n    coContactCollider(handle, collider2handle, prediction) {\n        const ret = wasm.rawcolliderset_coContactCollider(this.ptr, handle, collider2handle, prediction);\n        return ret === 0 ? undefined : RawShapeContact.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} point\n    * @param {boolean} solid\n    * @returns {RawPointProjection}\n    */\n    coProjectPoint(handle, point, solid) {\n        _assertClass(point, RawVector);\n        const ret = wasm.rawcolliderset_coProjectPoint(this.ptr, handle, point.ptr, solid);\n        return RawPointProjection.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @returns {boolean}\n    */\n    coIntersectsRay(handle, rayOrig, rayDir, maxToi) {\n        _assertClass(rayOrig, RawVector);\n        _assertClass(rayDir, RawVector);\n        const ret = wasm.rawcolliderset_coIntersectsRay(this.ptr, handle, rayOrig.ptr, rayDir.ptr, maxToi);\n        return ret !== 0;\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @returns {number}\n    */\n    coCastRay(handle, rayOrig, rayDir, maxToi, solid) {\n        _assertClass(rayOrig, RawVector);\n        _assertClass(rayDir, RawVector);\n        const ret = wasm.rawcolliderset_coCastRay(this.ptr, handle, rayOrig.ptr, rayDir.ptr, maxToi, solid);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @returns {RawRayIntersection | undefined}\n    */\n    coCastRayAndGetNormal(handle, rayOrig, rayDir, maxToi, solid) {\n        _assertClass(rayOrig, RawVector);\n        _assertClass(rayDir, RawVector);\n        const ret = wasm.rawcolliderset_coCastRayAndGetNormal(this.ptr, handle, rayOrig.ptr, rayDir.ptr, maxToi, solid);\n        return ret === 0 ? undefined : RawRayIntersection.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} is_sensor\n    */\n    coSetSensor(handle, is_sensor) {\n        wasm.rawcolliderset_coSetSensor(this.ptr, handle, is_sensor);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} restitution\n    */\n    coSetRestitution(handle, restitution) {\n        wasm.rawcolliderset_coSetRestitution(this.ptr, handle, restitution);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} friction\n    */\n    coSetFriction(handle, friction) {\n        wasm.rawcolliderset_coSetFriction(this.ptr, handle, friction);\n    }\n    /**\n    * @param {number} handle\n    * @returns {number}\n    */\n    coFrictionCombineRule(handle) {\n        const ret = wasm.rawcolliderset_coFrictionCombineRule(this.ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} handle\n    * @param {number} rule\n    */\n    coSetFrictionCombineRule(handle, rule) {\n        wasm.rawcolliderset_coSetFrictionCombineRule(this.ptr, handle, rule);\n    }\n    /**\n    * @param {number} handle\n    * @returns {number}\n    */\n    coRestitutionCombineRule(handle) {\n        const ret = wasm.rawcolliderset_coRestitutionCombineRule(this.ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} handle\n    * @param {number} rule\n    */\n    coSetRestitutionCombineRule(handle, rule) {\n        wasm.rawcolliderset_coSetRestitutionCombineRule(this.ptr, handle, rule);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} groups\n    */\n    coSetCollisionGroups(handle, groups) {\n        wasm.rawcolliderset_coSetCollisionGroups(this.ptr, handle, groups);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} groups\n    */\n    coSetSolverGroups(handle, groups) {\n        wasm.rawcolliderset_coSetSolverGroups(this.ptr, handle, groups);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} hooks\n    */\n    coSetActiveHooks(handle, hooks) {\n        wasm.rawcolliderset_coSetActiveHooks(this.ptr, handle, hooks);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} events\n    */\n    coSetActiveEvents(handle, events) {\n        wasm.rawcolliderset_coSetActiveEvents(this.ptr, handle, events);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} types\n    */\n    coSetActiveCollisionTypes(handle, types) {\n        wasm.rawcolliderset_coSetActiveCollisionTypes(this.ptr, handle, types);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawShape} shape\n    */\n    coSetShape(handle, shape) {\n        _assertClass(shape, RawShape);\n        wasm.rawcolliderset_coSetShape(this.ptr, handle, shape.ptr);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} threshold\n    */\n    coSetContactForceEventThreshold(handle, threshold) {\n        wasm.rawcolliderset_coSetContactForceEventThreshold(this.ptr, handle, threshold);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} density\n    */\n    coSetDensity(handle, density) {\n        wasm.rawcolliderset_coSetDensity(this.ptr, handle, density);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} mass\n    */\n    coSetMass(handle, mass) {\n        wasm.rawcolliderset_coSetMass(this.ptr, handle, mass);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} mass\n    * @param {RawVector} centerOfMass\n    * @param {RawVector} principalAngularInertia\n    * @param {RawRotation} angularInertiaFrame\n    */\n    coSetMassProperties(handle, mass, centerOfMass, principalAngularInertia, angularInertiaFrame) {\n        _assertClass(centerOfMass, RawVector);\n        _assertClass(principalAngularInertia, RawVector);\n        _assertClass(angularInertiaFrame, RawRotation);\n        wasm.rawcolliderset_coSetMassProperties(this.ptr, handle, mass, centerOfMass.ptr, principalAngularInertia.ptr, angularInertiaFrame.ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawcolliderset_new();\n        return RawColliderSet.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    len() {\n        const ret = wasm.rawcolliderset_len(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    contains(handle) {\n        const ret = wasm.rawcolliderset_contains(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * @param {RawShape} shape\n    * @param {RawVector} translation\n    * @param {RawRotation} rotation\n    * @param {number} massPropsMode\n    * @param {number} mass\n    * @param {RawVector} centerOfMass\n    * @param {RawVector} principalAngularInertia\n    * @param {RawRotation} angularInertiaFrame\n    * @param {number} density\n    * @param {number} friction\n    * @param {number} restitution\n    * @param {number} frictionCombineRule\n    * @param {number} restitutionCombineRule\n    * @param {boolean} isSensor\n    * @param {number} collisionGroups\n    * @param {number} solverGroups\n    * @param {number} activeCollisionTypes\n    * @param {number} activeHooks\n    * @param {number} activeEvents\n    * @param {number} contactForceEventThreshold\n    * @param {boolean} hasParent\n    * @param {number} parent\n    * @param {RawRigidBodySet} bodies\n    * @returns {number | undefined}\n    */\n    createCollider(shape, translation, rotation, massPropsMode, mass, centerOfMass, principalAngularInertia, angularInertiaFrame, density, friction, restitution, frictionCombineRule, restitutionCombineRule, isSensor, collisionGroups, solverGroups, activeCollisionTypes, activeHooks, activeEvents, contactForceEventThreshold, hasParent, parent, bodies) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(shape, RawShape);\n            _assertClass(translation, RawVector);\n            _assertClass(rotation, RawRotation);\n            _assertClass(centerOfMass, RawVector);\n            _assertClass(principalAngularInertia, RawVector);\n            _assertClass(angularInertiaFrame, RawRotation);\n            _assertClass(bodies, RawRigidBodySet);\n            wasm.rawcolliderset_createCollider(retptr, this.ptr, shape.ptr, translation.ptr, rotation.ptr, massPropsMode, mass, centerOfMass.ptr, principalAngularInertia.ptr, angularInertiaFrame.ptr, density, friction, restitution, frictionCombineRule, restitutionCombineRule, isSensor, collisionGroups, solverGroups, activeCollisionTypes, activeHooks, activeEvents, contactForceEventThreshold, hasParent, parent, bodies.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r2 = getFloat64Memory0()[retptr / 8 + 1];\n            return r0 === 0 ? undefined : r2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Removes a collider from this set and wake-up the rigid-body it is attached to.\n    * @param {number} handle\n    * @param {RawIslandManager} islands\n    * @param {RawRigidBodySet} bodies\n    * @param {boolean} wakeUp\n    */\n    remove(handle, islands, bodies, wakeUp) {\n        _assertClass(islands, RawIslandManager);\n        _assertClass(bodies, RawRigidBodySet);\n        wasm.rawcolliderset_remove(this.ptr, handle, islands.ptr, bodies.ptr, wakeUp);\n    }\n    /**\n    * Checks if a collider with the given integer handle exists.\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    isHandleValid(handle) {\n        const ret = wasm.rawcolliderset_contains(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each collider managed by this collider set.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each collider managed by this collider set. Called as `f(handle)`.\n    * @param {Function} f\n    */\n    forEachColliderHandle(f) {\n        try {\n            wasm.rawcolliderset_forEachColliderHandle(this.ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n*/\nexport class RawContactForceEvent {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawContactForceEvent.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawcontactforceevent_free(ptr);\n    }\n    /**\n    * The first collider involved in the contact.\n    * @returns {number}\n    */\n    collider1() {\n        const ret = wasm.rawcontactforceevent_collider1(this.ptr);\n        return ret;\n    }\n    /**\n    * The second collider involved in the contact.\n    * @returns {number}\n    */\n    collider2() {\n        const ret = wasm.rawcontactforceevent_collider2(this.ptr);\n        return ret;\n    }\n    /**\n    * The sum of all the forces between the two colliders.\n    * @returns {RawVector}\n    */\n    total_force() {\n        const ret = wasm.rawcontactforceevent_total_force(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The sum of the magnitudes of each force between the two colliders.\n    *\n    * Note that this is **not** the same as the magnitude of `self.total_force`.\n    * Here we are summing the magnitude of all the forces, instead of taking\n    * the magnitude of their sum.\n    * @returns {number}\n    */\n    total_force_magnitude() {\n        const ret = wasm.rawcontactforceevent_total_force_magnitude(this.ptr);\n        return ret;\n    }\n    /**\n    * The world-space (unit) direction of the force with strongest magnitude.\n    * @returns {RawVector}\n    */\n    max_force_direction() {\n        const ret = wasm.rawcontactforceevent_max_force_direction(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The magnitude of the largest force at a contact point of this contact pair.\n    * @returns {number}\n    */\n    max_force_magnitude() {\n        const ret = wasm.rawcontactforceevent_max_force_magnitude(this.ptr);\n        return ret;\n    }\n}\n/**\n*/\nexport class RawContactManifold {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawContactManifold.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawcontactmanifold_free(ptr);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal() {\n        const ret = wasm.rawcontactmanifold_normal(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    local_n1() {\n        const ret = wasm.rawcontactmanifold_local_n1(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    local_n2() {\n        const ret = wasm.rawcontactmanifold_local_n2(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    subshape1() {\n        const ret = wasm.rawcontactmanifold_subshape1(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    subshape2() {\n        const ret = wasm.rawcontactmanifold_subshape2(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    num_contacts() {\n        const ret = wasm.rawcontactmanifold_num_contacts(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector | undefined}\n    */\n    contact_local_p1(i) {\n        const ret = wasm.rawcontactmanifold_contact_local_p1(this.ptr, i);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector | undefined}\n    */\n    contact_local_p2(i) {\n        const ret = wasm.rawcontactmanifold_contact_local_p2(this.ptr, i);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    contact_dist(i) {\n        const ret = wasm.rawcontactmanifold_contact_dist(this.ptr, i);\n        return ret;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    contact_fid1(i) {\n        const ret = wasm.rawcontactmanifold_contact_fid1(this.ptr, i);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    contact_fid2(i) {\n        const ret = wasm.rawcontactmanifold_contact_fid2(this.ptr, i);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    contact_impulse(i) {\n        const ret = wasm.rawcontactmanifold_contact_impulse(this.ptr, i);\n        return ret;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    contact_tangent_impulse_x(i) {\n        const ret = wasm.rawcontactmanifold_contact_tangent_impulse_x(this.ptr, i);\n        return ret;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    contact_tangent_impulse_y(i) {\n        const ret = wasm.rawcontactmanifold_contact_tangent_impulse_y(this.ptr, i);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    num_solver_contacts() {\n        const ret = wasm.rawcontactmanifold_num_solver_contacts(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector | undefined}\n    */\n    solver_contact_point(i) {\n        const ret = wasm.rawcontactmanifold_solver_contact_point(this.ptr, i);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    solver_contact_dist(i) {\n        const ret = wasm.rawcontactmanifold_solver_contact_dist(this.ptr, i);\n        return ret;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    solver_contact_friction(i) {\n        const ret = wasm.rawcontactmanifold_solver_contact_friction(this.ptr, i);\n        return ret;\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n    solver_contact_restitution(i) {\n        const ret = wasm.rawcontactmanifold_solver_contact_restitution(this.ptr, i);\n        return ret;\n    }\n    /**\n    * @param {number} i\n    * @returns {RawVector}\n    */\n    solver_contact_tangent_velocity(i) {\n        const ret = wasm.rawcontactmanifold_solver_contact_tangent_velocity(this.ptr, i);\n        return RawVector.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawContactPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawContactPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawcontactpair_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    collider1() {\n        const ret = wasm.rawcontactpair_collider1(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    collider2() {\n        const ret = wasm.rawcontactpair_collider2(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    numContactManifolds() {\n        const ret = wasm.rawcontactpair_numContactManifolds(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @returns {RawContactManifold | undefined}\n    */\n    contactManifold(i) {\n        const ret = wasm.rawcontactpair_contactManifold(this.ptr, i);\n        return ret === 0 ? undefined : RawContactManifold.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawDebugRenderPipeline {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawDebugRenderPipeline.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawdebugrenderpipeline_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawdebugrenderpipeline_new();\n        return RawDebugRenderPipeline.__wrap(ret);\n    }\n    /**\n    * @returns {Float32Array}\n    */\n    vertices() {\n        const ret = wasm.rawdebugrenderpipeline_vertices(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @returns {Float32Array}\n    */\n    colors() {\n        const ret = wasm.rawdebugrenderpipeline_colors(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawImpulseJointSet} impulse_joints\n    * @param {RawMultibodyJointSet} multibody_joints\n    * @param {RawNarrowPhase} narrow_phase\n    */\n    render(bodies, colliders, impulse_joints, multibody_joints, narrow_phase) {\n        _assertClass(bodies, RawRigidBodySet);\n        _assertClass(colliders, RawColliderSet);\n        _assertClass(impulse_joints, RawImpulseJointSet);\n        _assertClass(multibody_joints, RawMultibodyJointSet);\n        _assertClass(narrow_phase, RawNarrowPhase);\n        wasm.rawdebugrenderpipeline_render(this.ptr, bodies.ptr, colliders.ptr, impulse_joints.ptr, multibody_joints.ptr, narrow_phase.ptr);\n    }\n}\n/**\n*/\nexport class RawDeserializedWorld {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawDeserializedWorld.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawdeserializedworld_free(ptr);\n    }\n    /**\n    * @returns {RawVector | undefined}\n    */\n    takeGravity() {\n        const ret = wasm.rawdeserializedworld_takeGravity(this.ptr);\n        return ret === 0 ? undefined : RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawIntegrationParameters | undefined}\n    */\n    takeIntegrationParameters() {\n        const ret = wasm.rawdeserializedworld_takeIntegrationParameters(this.ptr);\n        return ret === 0 ? undefined : RawIntegrationParameters.__wrap(ret);\n    }\n    /**\n    * @returns {RawIslandManager | undefined}\n    */\n    takeIslandManager() {\n        const ret = wasm.rawdeserializedworld_takeIslandManager(this.ptr);\n        return ret === 0 ? undefined : RawIslandManager.__wrap(ret);\n    }\n    /**\n    * @returns {RawBroadPhase | undefined}\n    */\n    takeBroadPhase() {\n        const ret = wasm.rawdeserializedworld_takeBroadPhase(this.ptr);\n        return ret === 0 ? undefined : RawBroadPhase.__wrap(ret);\n    }\n    /**\n    * @returns {RawNarrowPhase | undefined}\n    */\n    takeNarrowPhase() {\n        const ret = wasm.rawdeserializedworld_takeNarrowPhase(this.ptr);\n        return ret === 0 ? undefined : RawNarrowPhase.__wrap(ret);\n    }\n    /**\n    * @returns {RawRigidBodySet | undefined}\n    */\n    takeBodies() {\n        const ret = wasm.rawdeserializedworld_takeBodies(this.ptr);\n        return ret === 0 ? undefined : RawRigidBodySet.__wrap(ret);\n    }\n    /**\n    * @returns {RawColliderSet | undefined}\n    */\n    takeColliders() {\n        const ret = wasm.rawdeserializedworld_takeColliders(this.ptr);\n        return ret === 0 ? undefined : RawColliderSet.__wrap(ret);\n    }\n    /**\n    * @returns {RawImpulseJointSet | undefined}\n    */\n    takeImpulseJoints() {\n        const ret = wasm.rawdeserializedworld_takeImpulseJoints(this.ptr);\n        return ret === 0 ? undefined : RawImpulseJointSet.__wrap(ret);\n    }\n    /**\n    * @returns {RawMultibodyJointSet | undefined}\n    */\n    takeMultibodyJoints() {\n        const ret = wasm.rawdeserializedworld_takeMultibodyJoints(this.ptr);\n        return ret === 0 ? undefined : RawMultibodyJointSet.__wrap(ret);\n    }\n}\n/**\n* A structure responsible for collecting events generated\n* by the physics engine.\n*/\nexport class RawEventQueue {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawEventQueue.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_raweventqueue_free(ptr);\n    }\n    /**\n    * Creates a new event collector.\n    *\n    * # Parameters\n    * - `autoDrain`: setting this to `true` is strongly recommended. If true, the collector will\n    * be automatically drained before each `world.step(collector)`. If false, the collector will\n    * keep all events in memory unless it is manually drained/cleared; this may lead to unbounded use of\n    * RAM if no drain is performed.\n    * @param {boolean} autoDrain\n    */\n    constructor(autoDrain) {\n        const ret = wasm.raweventqueue_new(autoDrain);\n        return RawEventQueue.__wrap(ret);\n    }\n    /**\n    * Applies the given javascript closure on each collision event of this collector, then clear\n    * the internal collision event buffer.\n    *\n    * # Parameters\n    * - `f(handle1, handle2, started)`:  JavaScript closure applied to each collision event. The\n    * closure should take three arguments: two integers representing the handles of the colliders\n    * involved in the collision, and a boolean indicating if the collision started (true) or stopped\n    * (false).\n    * @param {Function} f\n    */\n    drainCollisionEvents(f) {\n        try {\n            wasm.raweventqueue_drainCollisionEvents(this.ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {Function} f\n    */\n    drainContactForceEvents(f) {\n        try {\n            wasm.raweventqueue_drainContactForceEvents(this.ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Removes all events contained by this collector.\n    */\n    clear() {\n        wasm.raweventqueue_clear(this.ptr);\n    }\n}\n/**\n*/\nexport class RawGenericJoint {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawGenericJoint.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawgenericjoint_free(ptr);\n    }\n    /**\n    * Create a new joint descriptor that builds spehrical joints.\n    *\n    * A spherical joints allows three relative rotational degrees of freedom\n    * by preventing any relative translation between the anchors of the\n    * two attached rigid-bodies.\n    * @param {RawVector} anchor1\n    * @param {RawVector} anchor2\n    * @returns {RawGenericJoint}\n    */\n    static spherical(anchor1, anchor2) {\n        _assertClass(anchor1, RawVector);\n        _assertClass(anchor2, RawVector);\n        const ret = wasm.rawgenericjoint_spherical(anchor1.ptr, anchor2.ptr);\n        return RawGenericJoint.__wrap(ret);\n    }\n    /**\n    * Creates a new joint descriptor that builds a Prismatic joint.\n    *\n    * A prismatic joint removes all the degrees of freedom between the\n    * affected bodies, except for the translation along one axis.\n    *\n    * Returns `None` if any of the provided axes cannot be normalized.\n    * @param {RawVector} anchor1\n    * @param {RawVector} anchor2\n    * @param {RawVector} axis\n    * @param {boolean} limitsEnabled\n    * @param {number} limitsMin\n    * @param {number} limitsMax\n    * @returns {RawGenericJoint | undefined}\n    */\n    static prismatic(anchor1, anchor2, axis, limitsEnabled, limitsMin, limitsMax) {\n        _assertClass(anchor1, RawVector);\n        _assertClass(anchor2, RawVector);\n        _assertClass(axis, RawVector);\n        const ret = wasm.rawgenericjoint_prismatic(anchor1.ptr, anchor2.ptr, axis.ptr, limitsEnabled, limitsMin, limitsMax);\n        return ret === 0 ? undefined : RawGenericJoint.__wrap(ret);\n    }\n    /**\n    * Creates a new joint descriptor that builds a Fixed joint.\n    *\n    * A fixed joint removes all the degrees of freedom between the affected bodies.\n    * @param {RawVector} anchor1\n    * @param {RawRotation} axes1\n    * @param {RawVector} anchor2\n    * @param {RawRotation} axes2\n    * @returns {RawGenericJoint}\n    */\n    static fixed(anchor1, axes1, anchor2, axes2) {\n        _assertClass(anchor1, RawVector);\n        _assertClass(axes1, RawRotation);\n        _assertClass(anchor2, RawVector);\n        _assertClass(axes2, RawRotation);\n        const ret = wasm.rawgenericjoint_fixed(anchor1.ptr, axes1.ptr, anchor2.ptr, axes2.ptr);\n        return RawGenericJoint.__wrap(ret);\n    }\n    /**\n    * Create a new joint descriptor that builds Revolute joints.\n    *\n    * A revolute joint removes all degrees of freedom between the affected\n    * bodies except for the rotation along one axis.\n    * @param {RawVector} anchor1\n    * @param {RawVector} anchor2\n    * @param {RawVector} axis\n    * @returns {RawGenericJoint | undefined}\n    */\n    static revolute(anchor1, anchor2, axis) {\n        _assertClass(anchor1, RawVector);\n        _assertClass(anchor2, RawVector);\n        _assertClass(axis, RawVector);\n        const ret = wasm.rawgenericjoint_revolute(anchor1.ptr, anchor2.ptr, axis.ptr);\n        return ret === 0 ? undefined : RawGenericJoint.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawImpulseJointSet {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawImpulseJointSet.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawimpulsejointset_free(ptr);\n    }\n    /**\n    * The type of this joint.\n    * @param {number} handle\n    * @returns {number}\n    */\n    jointType(handle) {\n        const ret = wasm.rawimpulsejointset_jointType(this.ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * The unique integer identifier of the first rigid-body this joint it attached to.\n    * @param {number} handle\n    * @returns {number}\n    */\n    jointBodyHandle1(handle) {\n        const ret = wasm.rawimpulsejointset_jointBodyHandle1(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * The unique integer identifier of the second rigid-body this joint is attached to.\n    * @param {number} handle\n    * @returns {number}\n    */\n    jointBodyHandle2(handle) {\n        const ret = wasm.rawimpulsejointset_jointBodyHandle2(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * The angular part of the joint’s local frame relative to the first rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    jointFrameX1(handle) {\n        const ret = wasm.rawimpulsejointset_jointFrameX1(this.ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * The angular part of the joint’s local frame relative to the second rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    jointFrameX2(handle) {\n        const ret = wasm.rawimpulsejointset_jointFrameX2(this.ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * The position of the first anchor of this joint.\n    *\n    * The first anchor gives the position of the points application point on the\n    * local frame of the first rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    jointAnchor1(handle) {\n        const ret = wasm.rawimpulsejointset_jointAnchor1(this.ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The position of the second anchor of this joint.\n    *\n    * The second anchor gives the position of the points application point on the\n    * local frame of the second rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    jointAnchor2(handle) {\n        const ret = wasm.rawimpulsejointset_jointAnchor2(this.ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Sets the position of the first local anchor\n    * @param {number} handle\n    * @param {RawVector} newPos\n    */\n    jointSetAnchor1(handle, newPos) {\n        _assertClass(newPos, RawVector);\n        wasm.rawimpulsejointset_jointSetAnchor1(this.ptr, handle, newPos.ptr);\n    }\n    /**\n    * Sets the position of the second local anchor\n    * @param {number} handle\n    * @param {RawVector} newPos\n    */\n    jointSetAnchor2(handle, newPos) {\n        _assertClass(newPos, RawVector);\n        wasm.rawimpulsejointset_jointSetAnchor2(this.ptr, handle, newPos.ptr);\n    }\n    /**\n    * Are contacts between the rigid-bodies attached by this joint enabled?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    jointContactsEnabled(handle) {\n        const ret = wasm.rawimpulsejointset_jointContactsEnabled(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Sets whether contacts are enabled between the rigid-bodies attached by this joint.\n    * @param {number} handle\n    * @param {boolean} enabled\n    */\n    jointSetContactsEnabled(handle, enabled) {\n        wasm.rawimpulsejointset_jointSetContactsEnabled(this.ptr, handle, enabled);\n    }\n    /**\n    * Are the limits for this joint enabled?\n    * @param {number} handle\n    * @param {number} axis\n    * @returns {boolean}\n    */\n    jointLimitsEnabled(handle, axis) {\n        const ret = wasm.rawimpulsejointset_jointLimitsEnabled(this.ptr, handle, axis);\n        return ret !== 0;\n    }\n    /**\n    * Return the lower limit along the given joint axis.\n    * @param {number} handle\n    * @param {number} axis\n    * @returns {number}\n    */\n    jointLimitsMin(handle, axis) {\n        const ret = wasm.rawimpulsejointset_jointLimitsMin(this.ptr, handle, axis);\n        return ret;\n    }\n    /**\n    * If this is a prismatic joint, returns its upper limit.\n    * @param {number} handle\n    * @param {number} axis\n    * @returns {number}\n    */\n    jointLimitsMax(handle, axis) {\n        const ret = wasm.rawimpulsejointset_jointLimitsMax(this.ptr, handle, axis);\n        return ret;\n    }\n    /**\n    * Enables and sets the joint limits\n    * @param {number} handle\n    * @param {number} axis\n    * @param {number} min\n    * @param {number} max\n    */\n    jointSetLimits(handle, axis, min, max) {\n        wasm.rawimpulsejointset_jointSetLimits(this.ptr, handle, axis, min, max);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} axis\n    * @param {number} model\n    */\n    jointConfigureMotorModel(handle, axis, model) {\n        wasm.rawimpulsejointset_jointConfigureMotorModel(this.ptr, handle, axis, model);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} axis\n    * @param {number} targetVel\n    * @param {number} factor\n    */\n    jointConfigureMotorVelocity(handle, axis, targetVel, factor) {\n        wasm.rawimpulsejointset_jointConfigureMotorVelocity(this.ptr, handle, axis, targetVel, factor);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} axis\n    * @param {number} targetPos\n    * @param {number} stiffness\n    * @param {number} damping\n    */\n    jointConfigureMotorPosition(handle, axis, targetPos, stiffness, damping) {\n        wasm.rawimpulsejointset_jointConfigureMotorPosition(this.ptr, handle, axis, targetPos, stiffness, damping);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} axis\n    * @param {number} targetPos\n    * @param {number} targetVel\n    * @param {number} stiffness\n    * @param {number} damping\n    */\n    jointConfigureMotor(handle, axis, targetPos, targetVel, stiffness, damping) {\n        wasm.rawimpulsejointset_jointConfigureMotor(this.ptr, handle, axis, targetPos, targetVel, stiffness, damping);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawimpulsejointset_new();\n        return RawImpulseJointSet.__wrap(ret);\n    }\n    /**\n    * @param {RawGenericJoint} params\n    * @param {number} parent1\n    * @param {number} parent2\n    * @param {boolean} wake_up\n    * @returns {number}\n    */\n    createJoint(params, parent1, parent2, wake_up) {\n        _assertClass(params, RawGenericJoint);\n        const ret = wasm.rawimpulsejointset_createJoint(this.ptr, params.ptr, parent1, parent2, wake_up);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} wakeUp\n    */\n    remove(handle, wakeUp) {\n        wasm.rawimpulsejointset_remove(this.ptr, handle, wakeUp);\n    }\n    /**\n    * @returns {number}\n    */\n    len() {\n        const ret = wasm.rawimpulsejointset_len(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    contains(handle) {\n        const ret = wasm.rawimpulsejointset_contains(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each joint managed by this physics world.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each joint managed by this set. Called as `f(collider)`.\n    * @param {Function} f\n    */\n    forEachJointHandle(f) {\n        try {\n            wasm.rawimpulsejointset_forEachJointHandle(this.ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each joint attached to the given rigid-body.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each joint attached to the rigid-body. Called as `f(collider)`.\n    * @param {number} body\n    * @param {Function} f\n    */\n    forEachJointAttachedToRigidBody(body, f) {\n        try {\n            wasm.rawimpulsejointset_forEachJointAttachedToRigidBody(this.ptr, body, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n*/\nexport class RawIntegrationParameters {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawIntegrationParameters.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawintegrationparameters_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawintegrationparameters_new();\n        return RawIntegrationParameters.__wrap(ret);\n    }\n    /**\n    */\n    get dt() {\n        const ret = wasm.rawintegrationparameters_dt(this.ptr);\n        return ret;\n    }\n    /**\n    */\n    get erp() {\n        const ret = wasm.rawintegrationparameters_erp(this.ptr);\n        return ret;\n    }\n    /**\n    */\n    get allowedLinearError() {\n        const ret = wasm.rawintegrationparameters_allowedLinearError(this.ptr);\n        return ret;\n    }\n    /**\n    */\n    get predictionDistance() {\n        const ret = wasm.rawintegrationparameters_predictionDistance(this.ptr);\n        return ret;\n    }\n    /**\n    */\n    get maxVelocityIterations() {\n        const ret = wasm.rawintegrationparameters_maxVelocityIterations(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    get maxVelocityFrictionIterations() {\n        const ret = wasm.rawintegrationparameters_maxVelocityFrictionIterations(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    get maxStabilizationIterations() {\n        const ret = wasm.rawintegrationparameters_maxStabilizationIterations(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    get minIslandSize() {\n        const ret = wasm.rawintegrationparameters_minIslandSize(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    get maxCcdSubsteps() {\n        const ret = wasm.rawintegrationparameters_maxCcdSubsteps(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    set dt(value) {\n        wasm.rawintegrationparameters_set_dt(this.ptr, value);\n    }\n    /**\n    */\n    set erp(value) {\n        wasm.rawintegrationparameters_set_erp(this.ptr, value);\n    }\n    /**\n    */\n    set allowedLinearError(value) {\n        wasm.rawintegrationparameters_set_allowedLinearError(this.ptr, value);\n    }\n    /**\n    */\n    set predictionDistance(value) {\n        wasm.rawintegrationparameters_set_predictionDistance(this.ptr, value);\n    }\n    /**\n    */\n    set maxVelocityIterations(value) {\n        wasm.rawintegrationparameters_set_maxVelocityIterations(this.ptr, value);\n    }\n    /**\n    */\n    set maxVelocityFrictionIterations(value) {\n        wasm.rawintegrationparameters_set_maxVelocityFrictionIterations(this.ptr, value);\n    }\n    /**\n    */\n    set maxStabilizationIterations(value) {\n        wasm.rawintegrationparameters_set_maxStabilizationIterations(this.ptr, value);\n    }\n    /**\n    */\n    set minIslandSize(value) {\n        wasm.rawintegrationparameters_set_minIslandSize(this.ptr, value);\n    }\n    /**\n    */\n    set maxCcdSubsteps(value) {\n        wasm.rawintegrationparameters_set_maxCcdSubsteps(this.ptr, value);\n    }\n}\n/**\n*/\nexport class RawIslandManager {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawIslandManager.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawislandmanager_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawislandmanager_new();\n        return RawIslandManager.__wrap(ret);\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each active rigid-body\n    * managed by this island manager.\n    *\n    * After a short time of inactivity, a rigid-body is automatically deactivated (\"asleep\") by\n    * the physics engine in order to save computational power. A sleeping rigid-body never moves\n    * unless it is moved manually by the user.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each active rigid-body managed by this\n    *   set. Called as `f(collider)`.\n    * @param {Function} f\n    */\n    forEachActiveRigidBodyHandle(f) {\n        try {\n            wasm.rawislandmanager_forEachActiveRigidBodyHandle(this.ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n*/\nexport class RawMultibodyJointSet {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawMultibodyJointSet.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawmultibodyjointset_free(ptr);\n    }\n    /**\n    * The type of this joint.\n    * @param {number} handle\n    * @returns {number}\n    */\n    jointType(handle) {\n        const ret = wasm.rawmultibodyjointset_jointType(this.ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * The angular part of the joint’s local frame relative to the first rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    jointFrameX1(handle) {\n        const ret = wasm.rawmultibodyjointset_jointFrameX1(this.ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * The angular part of the joint’s local frame relative to the second rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    jointFrameX2(handle) {\n        const ret = wasm.rawmultibodyjointset_jointFrameX2(this.ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * The position of the first anchor of this joint.\n    *\n    * The first anchor gives the position of the points application point on the\n    * local frame of the first rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    jointAnchor1(handle) {\n        const ret = wasm.rawmultibodyjointset_jointAnchor1(this.ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The position of the second anchor of this joint.\n    *\n    * The second anchor gives the position of the points application point on the\n    * local frame of the second rigid-body it is attached to.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    jointAnchor2(handle) {\n        const ret = wasm.rawmultibodyjointset_jointAnchor2(this.ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Are contacts between the rigid-bodies attached by this joint enabled?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    jointContactsEnabled(handle) {\n        const ret = wasm.rawmultibodyjointset_jointContactsEnabled(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Sets whether contacts are enabled between the rigid-bodies attached by this joint.\n    * @param {number} handle\n    * @param {boolean} enabled\n    */\n    jointSetContactsEnabled(handle, enabled) {\n        wasm.rawmultibodyjointset_jointSetContactsEnabled(this.ptr, handle, enabled);\n    }\n    /**\n    * Are the limits for this joint enabled?\n    * @param {number} handle\n    * @param {number} axis\n    * @returns {boolean}\n    */\n    jointLimitsEnabled(handle, axis) {\n        const ret = wasm.rawmultibodyjointset_jointLimitsEnabled(this.ptr, handle, axis);\n        return ret !== 0;\n    }\n    /**\n    * Return the lower limit along the given joint axis.\n    * @param {number} handle\n    * @param {number} axis\n    * @returns {number}\n    */\n    jointLimitsMin(handle, axis) {\n        const ret = wasm.rawmultibodyjointset_jointLimitsMin(this.ptr, handle, axis);\n        return ret;\n    }\n    /**\n    * If this is a prismatic joint, returns its upper limit.\n    * @param {number} handle\n    * @param {number} axis\n    * @returns {number}\n    */\n    jointLimitsMax(handle, axis) {\n        const ret = wasm.rawmultibodyjointset_jointLimitsMax(this.ptr, handle, axis);\n        return ret;\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawmultibodyjointset_new();\n        return RawMultibodyJointSet.__wrap(ret);\n    }\n    /**\n    * @param {RawGenericJoint} params\n    * @param {number} parent1\n    * @param {number} parent2\n    * @param {boolean} wakeUp\n    * @returns {number}\n    */\n    createJoint(params, parent1, parent2, wakeUp) {\n        _assertClass(params, RawGenericJoint);\n        const ret = wasm.rawmultibodyjointset_createJoint(this.ptr, params.ptr, parent1, parent2, wakeUp);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} wakeUp\n    */\n    remove(handle, wakeUp) {\n        wasm.rawmultibodyjointset_remove(this.ptr, handle, wakeUp);\n    }\n    /**\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    contains(handle) {\n        const ret = wasm.rawmultibodyjointset_contains(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each joint managed by this physics world.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each joint managed by this set. Called as `f(collider)`.\n    * @param {Function} f\n    */\n    forEachJointHandle(f) {\n        try {\n            wasm.rawmultibodyjointset_forEachJointHandle(this.ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each joint attached to the given rigid-body.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each joint attached to the rigid-body. Called as `f(collider)`.\n    * @param {number} body\n    * @param {Function} f\n    */\n    forEachJointAttachedToRigidBody(body, f) {\n        try {\n            wasm.rawmultibodyjointset_forEachJointAttachedToRigidBody(this.ptr, body, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n*/\nexport class RawNarrowPhase {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawNarrowPhase.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawnarrowphase_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawnarrowphase_new();\n        return RawNarrowPhase.__wrap(ret);\n    }\n    /**\n    * @param {number} handle1\n    * @param {Function} f\n    */\n    contacts_with(handle1, f) {\n        wasm.rawnarrowphase_contacts_with(this.ptr, handle1, addHeapObject(f));\n    }\n    /**\n    * @param {number} handle1\n    * @param {number} handle2\n    * @returns {RawContactPair | undefined}\n    */\n    contact_pair(handle1, handle2) {\n        const ret = wasm.rawnarrowphase_contact_pair(this.ptr, handle1, handle2);\n        return ret === 0 ? undefined : RawContactPair.__wrap(ret);\n    }\n    /**\n    * @param {number} handle1\n    * @param {Function} f\n    */\n    intersections_with(handle1, f) {\n        wasm.rawnarrowphase_intersections_with(this.ptr, handle1, addHeapObject(f));\n    }\n    /**\n    * @param {number} handle1\n    * @param {number} handle2\n    * @returns {boolean}\n    */\n    intersection_pair(handle1, handle2) {\n        const ret = wasm.rawnarrowphase_intersection_pair(this.ptr, handle1, handle2);\n        return ret !== 0;\n    }\n}\n/**\n*/\nexport class RawPhysicsPipeline {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawPhysicsPipeline.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawphysicspipeline_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawphysicspipeline_new();\n        return RawPhysicsPipeline.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} gravity\n    * @param {RawIntegrationParameters} integrationParameters\n    * @param {RawIslandManager} islands\n    * @param {RawBroadPhase} broadPhase\n    * @param {RawNarrowPhase} narrowPhase\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawImpulseJointSet} joints\n    * @param {RawMultibodyJointSet} articulations\n    * @param {RawCCDSolver} ccd_solver\n    */\n    step(gravity, integrationParameters, islands, broadPhase, narrowPhase, bodies, colliders, joints, articulations, ccd_solver) {\n        _assertClass(gravity, RawVector);\n        _assertClass(integrationParameters, RawIntegrationParameters);\n        _assertClass(islands, RawIslandManager);\n        _assertClass(broadPhase, RawBroadPhase);\n        _assertClass(narrowPhase, RawNarrowPhase);\n        _assertClass(bodies, RawRigidBodySet);\n        _assertClass(colliders, RawColliderSet);\n        _assertClass(joints, RawImpulseJointSet);\n        _assertClass(articulations, RawMultibodyJointSet);\n        _assertClass(ccd_solver, RawCCDSolver);\n        wasm.rawphysicspipeline_step(this.ptr, gravity.ptr, integrationParameters.ptr, islands.ptr, broadPhase.ptr, narrowPhase.ptr, bodies.ptr, colliders.ptr, joints.ptr, articulations.ptr, ccd_solver.ptr);\n    }\n    /**\n    * @param {RawVector} gravity\n    * @param {RawIntegrationParameters} integrationParameters\n    * @param {RawIslandManager} islands\n    * @param {RawBroadPhase} broadPhase\n    * @param {RawNarrowPhase} narrowPhase\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawImpulseJointSet} joints\n    * @param {RawMultibodyJointSet} articulations\n    * @param {RawCCDSolver} ccd_solver\n    * @param {RawEventQueue} eventQueue\n    * @param {object} hookObject\n    * @param {Function} hookFilterContactPair\n    * @param {Function} hookFilterIntersectionPair\n    */\n    stepWithEvents(gravity, integrationParameters, islands, broadPhase, narrowPhase, bodies, colliders, joints, articulations, ccd_solver, eventQueue, hookObject, hookFilterContactPair, hookFilterIntersectionPair) {\n        _assertClass(gravity, RawVector);\n        _assertClass(integrationParameters, RawIntegrationParameters);\n        _assertClass(islands, RawIslandManager);\n        _assertClass(broadPhase, RawBroadPhase);\n        _assertClass(narrowPhase, RawNarrowPhase);\n        _assertClass(bodies, RawRigidBodySet);\n        _assertClass(colliders, RawColliderSet);\n        _assertClass(joints, RawImpulseJointSet);\n        _assertClass(articulations, RawMultibodyJointSet);\n        _assertClass(ccd_solver, RawCCDSolver);\n        _assertClass(eventQueue, RawEventQueue);\n        wasm.rawphysicspipeline_stepWithEvents(this.ptr, gravity.ptr, integrationParameters.ptr, islands.ptr, broadPhase.ptr, narrowPhase.ptr, bodies.ptr, colliders.ptr, joints.ptr, articulations.ptr, ccd_solver.ptr, eventQueue.ptr, addHeapObject(hookObject), addHeapObject(hookFilterContactPair), addHeapObject(hookFilterIntersectionPair));\n    }\n}\n/**\n*/\nexport class RawPointColliderProjection {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawPointColliderProjection.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawpointcolliderprojection_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    colliderHandle() {\n        const ret = wasm.rawcontactforceevent_collider1(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    point() {\n        const ret = wasm.rawpointcolliderprojection_point(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {boolean}\n    */\n    isInside() {\n        const ret = wasm.rawpointcolliderprojection_isInside(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @returns {number}\n    */\n    featureType() {\n        const ret = wasm.rawpointcolliderprojection_featureType(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    featureId() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawpointcolliderprojection_featureId(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class RawPointProjection {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawPointProjection.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawpointprojection_free(ptr);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    point() {\n        const ret = wasm.rawpointprojection_point(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {boolean}\n    */\n    isInside() {\n        const ret = wasm.rawpointprojection_isInside(this.ptr);\n        return ret !== 0;\n    }\n}\n/**\n*/\nexport class RawQueryPipeline {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawQueryPipeline.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawquerypipeline_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawquerypipeline_new();\n        return RawQueryPipeline.__wrap(ret);\n    }\n    /**\n    * @param {RawIslandManager} islands\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    */\n    update(islands, bodies, colliders) {\n        _assertClass(islands, RawIslandManager);\n        _assertClass(bodies, RawRigidBodySet);\n        _assertClass(colliders, RawColliderSet);\n        wasm.rawquerypipeline_update(this.ptr, islands.ptr, bodies.ptr, colliders.ptr);\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    * @returns {RawRayColliderToi | undefined}\n    */\n    castRay(bodies, colliders, rayOrig, rayDir, maxToi, solid, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(rayOrig, RawVector);\n            _assertClass(rayDir, RawVector);\n            const ret = wasm.rawquerypipeline_castRay(this.ptr, bodies.ptr, colliders.ptr, rayOrig.ptr, rayDir.ptr, maxToi, solid, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n            return ret === 0 ? undefined : RawRayColliderToi.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    * @returns {RawRayColliderIntersection | undefined}\n    */\n    castRayAndGetNormal(bodies, colliders, rayOrig, rayDir, maxToi, solid, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(rayOrig, RawVector);\n            _assertClass(rayDir, RawVector);\n            const ret = wasm.rawquerypipeline_castRayAndGetNormal(this.ptr, bodies.ptr, colliders.ptr, rayOrig.ptr, rayDir.ptr, maxToi, solid, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n            return ret === 0 ? undefined : RawRayColliderIntersection.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @param {Function} callback\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    */\n    intersectionsWithRay(bodies, colliders, rayOrig, rayDir, maxToi, solid, callback, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(rayOrig, RawVector);\n            _assertClass(rayDir, RawVector);\n            wasm.rawquerypipeline_intersectionsWithRay(this.ptr, bodies.ptr, colliders.ptr, rayOrig.ptr, rayDir.ptr, maxToi, solid, addBorrowedObject(callback), filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n        } finally {\n            heap[stack_pointer++] = undefined;\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawShape} shape\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    * @returns {number | undefined}\n    */\n    intersectionWithShape(bodies, colliders, shapePos, shapeRot, shape, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(shapePos, RawVector);\n            _assertClass(shapeRot, RawRotation);\n            _assertClass(shape, RawShape);\n            wasm.rawquerypipeline_intersectionWithShape(retptr, this.ptr, bodies.ptr, colliders.ptr, shapePos.ptr, shapeRot.ptr, shape.ptr, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r2 = getFloat64Memory0()[retptr / 8 + 1];\n            return r0 === 0 ? undefined : r2;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} point\n    * @param {boolean} solid\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    * @returns {RawPointColliderProjection | undefined}\n    */\n    projectPoint(bodies, colliders, point, solid, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(point, RawVector);\n            const ret = wasm.rawquerypipeline_projectPoint(this.ptr, bodies.ptr, colliders.ptr, point.ptr, solid, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n            return ret === 0 ? undefined : RawPointColliderProjection.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} point\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    * @returns {RawPointColliderProjection | undefined}\n    */\n    projectPointAndGetFeature(bodies, colliders, point, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(point, RawVector);\n            const ret = wasm.rawquerypipeline_projectPointAndGetFeature(this.ptr, bodies.ptr, colliders.ptr, point.ptr, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n            return ret === 0 ? undefined : RawPointColliderProjection.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} point\n    * @param {Function} callback\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    */\n    intersectionsWithPoint(bodies, colliders, point, callback, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(point, RawVector);\n            wasm.rawquerypipeline_intersectionsWithPoint(this.ptr, bodies.ptr, colliders.ptr, point.ptr, addBorrowedObject(callback), filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n        } finally {\n            heap[stack_pointer++] = undefined;\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawVector} shapeVel\n    * @param {RawShape} shape\n    * @param {number} maxToi\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    * @returns {RawShapeColliderTOI | undefined}\n    */\n    castShape(bodies, colliders, shapePos, shapeRot, shapeVel, shape, maxToi, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(shapePos, RawVector);\n            _assertClass(shapeRot, RawRotation);\n            _assertClass(shapeVel, RawVector);\n            _assertClass(shape, RawShape);\n            const ret = wasm.rawquerypipeline_castShape(this.ptr, bodies.ptr, colliders.ptr, shapePos.ptr, shapeRot.ptr, shapeVel.ptr, shape.ptr, maxToi, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n            return ret === 0 ? undefined : RawShapeColliderTOI.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawShape} shape\n    * @param {Function} callback\n    * @param {number} filter_flags\n    * @param {number | undefined} filter_groups\n    * @param {number | undefined} filter_exclude_collider\n    * @param {number | undefined} filter_exclude_rigid_body\n    * @param {Function} filter_predicate\n    */\n    intersectionsWithShape(bodies, colliders, shapePos, shapeRot, shape, callback, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n        try {\n            _assertClass(bodies, RawRigidBodySet);\n            _assertClass(colliders, RawColliderSet);\n            _assertClass(shapePos, RawVector);\n            _assertClass(shapeRot, RawRotation);\n            _assertClass(shape, RawShape);\n            wasm.rawquerypipeline_intersectionsWithShape(this.ptr, bodies.ptr, colliders.ptr, shapePos.ptr, shapeRot.ptr, shape.ptr, addBorrowedObject(callback), filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n        } finally {\n            heap[stack_pointer++] = undefined;\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * @param {RawVector} aabbCenter\n    * @param {RawVector} aabbHalfExtents\n    * @param {Function} callback\n    */\n    collidersWithAabbIntersectingAabb(aabbCenter, aabbHalfExtents, callback) {\n        try {\n            _assertClass(aabbCenter, RawVector);\n            _assertClass(aabbHalfExtents, RawVector);\n            wasm.rawquerypipeline_collidersWithAabbIntersectingAabb(this.ptr, aabbCenter.ptr, aabbHalfExtents.ptr, addBorrowedObject(callback));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n*/\nexport class RawRayColliderIntersection {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawRayColliderIntersection.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawraycolliderintersection_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    colliderHandle() {\n        const ret = wasm.rawcontactforceevent_collider1(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal() {\n        const ret = wasm.rawraycolliderintersection_normal(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    toi() {\n        const ret = wasm.rawraycolliderintersection_toi(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    featureType() {\n        const ret = wasm.rawpointcolliderprojection_featureType(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    featureId() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawpointcolliderprojection_featureId(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class RawRayColliderToi {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawRayColliderToi.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawraycollidertoi_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    colliderHandle() {\n        const ret = wasm.rawcontactforceevent_collider1(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    toi() {\n        const ret = wasm.rawraycolliderintersection_toi(this.ptr);\n        return ret;\n    }\n}\n/**\n*/\nexport class RawRayIntersection {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawRayIntersection.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawrayintersection_free(ptr);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal() {\n        const ret = wasm.rawrayintersection_normal(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    toi() {\n        const ret = wasm.rawintegrationparameters_dt(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    featureType() {\n        const ret = wasm.rawrayintersection_featureType(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    featureId() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.rawrayintersection_featureId(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return r0 === 0 ? undefined : r1 >>> 0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class RawRigidBodySet {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawRigidBodySet.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawrigidbodyset_free(ptr);\n    }\n    /**\n    * The world-space translation of this rigid-body.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbTranslation(handle) {\n        const ret = wasm.rawrigidbodyset_rbTranslation(this.ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The world-space orientation of this rigid-body.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    rbRotation(handle) {\n        const ret = wasm.rawrigidbodyset_rbRotation(this.ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * Put the given rigid-body to sleep.\n    * @param {number} handle\n    */\n    rbSleep(handle) {\n        wasm.rawrigidbodyset_rbSleep(this.ptr, handle);\n    }\n    /**\n    * Is this rigid-body sleeping?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsSleeping(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsSleeping(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Is the velocity of this rigid-body not zero?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsMoving(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsMoving(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * The world-space predicted translation of this rigid-body.\n    *\n    * If this rigid-body is kinematic this value is set by the `setNextKinematicTranslation`\n    * method and is used for estimating the kinematic body velocity at the next timestep.\n    * For non-kinematic bodies, this value is currently unspecified.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbNextTranslation(handle) {\n        const ret = wasm.rawrigidbodyset_rbNextTranslation(this.ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The world-space predicted orientation of this rigid-body.\n    *\n    * If this rigid-body is kinematic this value is set by the `setNextKinematicRotation`\n    * method and is used for estimating the kinematic body velocity at the next timestep.\n    * For non-kinematic bodies, this value is currently unspecified.\n    * @param {number} handle\n    * @returns {RawRotation}\n    */\n    rbNextRotation(handle) {\n        const ret = wasm.rawrigidbodyset_rbNextRotation(this.ptr, handle);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * Sets the translation of this rigid-body.\n    *\n    * # Parameters\n    * - `x`: the world-space position of the rigid-body along the `x` axis.\n    * - `y`: the world-space position of the rigid-body along the `y` axis.\n    * - `z`: the world-space position of the rigid-body along the `z` axis.\n    * - `wakeUp`: forces the rigid-body to wake-up so it is properly affected by forces if it\n    * wasn't moving before modifying its position.\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @param {boolean} wakeUp\n    */\n    rbSetTranslation(handle, x, y, z, wakeUp) {\n        wasm.rawrigidbodyset_rbSetTranslation(this.ptr, handle, x, y, z, wakeUp);\n    }\n    /**\n    * Sets the rotation quaternion of this rigid-body.\n    *\n    * This does nothing if a zero quaternion is provided.\n    *\n    * # Parameters\n    * - `x`: the first vector component of the quaternion.\n    * - `y`: the second vector component of the quaternion.\n    * - `z`: the third vector component of the quaternion.\n    * - `w`: the scalar component of the quaternion.\n    * - `wakeUp`: forces the rigid-body to wake-up so it is properly affected by forces if it\n    * wasn't moving before modifying its position.\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @param {number} w\n    * @param {boolean} wakeUp\n    */\n    rbSetRotation(handle, x, y, z, w, wakeUp) {\n        wasm.rawrigidbodyset_rbSetRotation(this.ptr, handle, x, y, z, w, wakeUp);\n    }\n    /**\n    * Sets the linear velocity of this rigid-body.\n    * @param {number} handle\n    * @param {RawVector} linvel\n    * @param {boolean} wakeUp\n    */\n    rbSetLinvel(handle, linvel, wakeUp) {\n        _assertClass(linvel, RawVector);\n        wasm.rawrigidbodyset_rbSetLinvel(this.ptr, handle, linvel.ptr, wakeUp);\n    }\n    /**\n    * Sets the angular velocity of this rigid-body.\n    * @param {number} handle\n    * @param {RawVector} angvel\n    * @param {boolean} wakeUp\n    */\n    rbSetAngvel(handle, angvel, wakeUp) {\n        _assertClass(angvel, RawVector);\n        wasm.rawrigidbodyset_rbSetAngvel(this.ptr, handle, angvel.ptr, wakeUp);\n    }\n    /**\n    * If this rigid body is kinematic, sets its future translation after the next timestep integration.\n    *\n    * This should be used instead of `rigidBody.setTranslation` to make the dynamic object\n    * interacting with this kinematic body behave as expected. Internally, Rapier will compute\n    * an artificial velocity for this rigid-body from its current position and its next kinematic\n    * position. This velocity will be used to compute forces on dynamic bodies interacting with\n    * this body.\n    *\n    * # Parameters\n    * - `x`: the world-space position of the rigid-body along the `x` axis.\n    * - `y`: the world-space position of the rigid-body along the `y` axis.\n    * - `z`: the world-space position of the rigid-body along the `z` axis.\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    */\n    rbSetNextKinematicTranslation(handle, x, y, z) {\n        wasm.rawrigidbodyset_rbSetNextKinematicTranslation(this.ptr, handle, x, y, z);\n    }\n    /**\n    * If this rigid body is kinematic, sets its future rotation after the next timestep integration.\n    *\n    * This should be used instead of `rigidBody.setRotation` to make the dynamic object\n    * interacting with this kinematic body behave as expected. Internally, Rapier will compute\n    * an artificial velocity for this rigid-body from its current position and its next kinematic\n    * position. This velocity will be used to compute forces on dynamic bodies interacting with\n    * this body.\n    *\n    * # Parameters\n    * - `x`: the first vector component of the quaternion.\n    * - `y`: the second vector component of the quaternion.\n    * - `z`: the third vector component of the quaternion.\n    * - `w`: the scalar component of the quaternion.\n    * @param {number} handle\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @param {number} w\n    */\n    rbSetNextKinematicRotation(handle, x, y, z, w) {\n        wasm.rawrigidbodyset_rbSetNextKinematicRotation(this.ptr, handle, x, y, z, w);\n    }\n    /**\n    * @param {number} handle\n    * @param {RawColliderSet} colliders\n    */\n    rbRecomputeMassPropertiesFromColliders(handle, colliders) {\n        _assertClass(colliders, RawColliderSet);\n        wasm.rawrigidbodyset_rbRecomputeMassPropertiesFromColliders(this.ptr, handle, colliders.ptr);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} mass\n    * @param {boolean} wake_up\n    */\n    rbSetAdditionalMass(handle, mass, wake_up) {\n        wasm.rawrigidbodyset_rbSetAdditionalMass(this.ptr, handle, mass, wake_up);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} mass\n    * @param {RawVector} centerOfMass\n    * @param {RawVector} principalAngularInertia\n    * @param {RawRotation} angularInertiaFrame\n    * @param {boolean} wake_up\n    */\n    rbSetAdditionalMassProperties(handle, mass, centerOfMass, principalAngularInertia, angularInertiaFrame, wake_up) {\n        _assertClass(centerOfMass, RawVector);\n        _assertClass(principalAngularInertia, RawVector);\n        _assertClass(angularInertiaFrame, RawRotation);\n        wasm.rawrigidbodyset_rbSetAdditionalMassProperties(this.ptr, handle, mass, centerOfMass.ptr, principalAngularInertia.ptr, angularInertiaFrame.ptr, wake_up);\n    }\n    /**\n    * The linear velocity of this rigid-body.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbLinvel(handle) {\n        const ret = wasm.rawrigidbodyset_rbLinvel(this.ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The angular velocity of this rigid-body.\n    * @param {number} handle\n    * @returns {RawVector}\n    */\n    rbAngvel(handle) {\n        const ret = wasm.rawrigidbodyset_rbAngvel(this.ptr, handle);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} locked\n    * @param {boolean} wake_up\n    */\n    rbLockTranslations(handle, locked, wake_up) {\n        wasm.rawrigidbodyset_rbLockTranslations(this.ptr, handle, locked, wake_up);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} allow_x\n    * @param {boolean} allow_y\n    * @param {boolean} allow_z\n    * @param {boolean} wake_up\n    */\n    rbSetEnabledTranslations(handle, allow_x, allow_y, allow_z, wake_up) {\n        wasm.rawrigidbodyset_rbSetEnabledTranslations(this.ptr, handle, allow_x, allow_y, allow_z, wake_up);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} locked\n    * @param {boolean} wake_up\n    */\n    rbLockRotations(handle, locked, wake_up) {\n        wasm.rawrigidbodyset_rbLockRotations(this.ptr, handle, locked, wake_up);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} allow_x\n    * @param {boolean} allow_y\n    * @param {boolean} allow_z\n    * @param {boolean} wake_up\n    */\n    rbSetEnabledRotations(handle, allow_x, allow_y, allow_z, wake_up) {\n        wasm.rawrigidbodyset_rbSetEnabledRotations(this.ptr, handle, allow_x, allow_y, allow_z, wake_up);\n    }\n    /**\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbDominanceGroup(handle) {\n        const ret = wasm.rawrigidbodyset_rbDominanceGroup(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {number} group\n    */\n    rbSetDominanceGroup(handle, group) {\n        wasm.rawrigidbodyset_rbSetDominanceGroup(this.ptr, handle, group);\n    }\n    /**\n    * @param {number} handle\n    * @param {boolean} enabled\n    */\n    rbEnableCcd(handle, enabled) {\n        wasm.rawrigidbodyset_rbEnableCcd(this.ptr, handle, enabled);\n    }\n    /**\n    * The mass of this rigid-body.\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbMass(handle) {\n        const ret = wasm.rawrigidbodyset_rbMass(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * Wakes this rigid-body up.\n    *\n    * A dynamic rigid-body that does not move during several consecutive frames will\n    * be put to sleep by the physics engine, i.e., it will stop being simulated in order\n    * to avoid useless computations.\n    * This methods forces a sleeping rigid-body to wake-up. This is useful, e.g., before modifying\n    * the position of a dynamic body so that it is properly simulated afterwards.\n    * @param {number} handle\n    */\n    rbWakeUp(handle) {\n        wasm.rawrigidbodyset_rbWakeUp(this.ptr, handle);\n    }\n    /**\n    * Is Continuous Collision Detection enabled for this rigid-body?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsCcdEnabled(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsCcdEnabled(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * The number of colliders attached to this rigid-body.\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbNumColliders(handle) {\n        const ret = wasm.rawrigidbodyset_rbNumColliders(this.ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * Retrieves the `i-th` collider attached to this rigid-body.\n    *\n    * # Parameters\n    * - `at`: The index of the collider to retrieve. Must be a number in `[0, this.numColliders()[`.\n    *         This index is **not** the same as the unique identifier of the collider.\n    * @param {number} handle\n    * @param {number} at\n    * @returns {number}\n    */\n    rbCollider(handle, at) {\n        const ret = wasm.rawrigidbodyset_rbCollider(this.ptr, handle, at);\n        return ret;\n    }\n    /**\n    * The status of this rigid-body: fixed, dynamic, or kinematic.\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbBodyType(handle) {\n        const ret = wasm.rawrigidbodyset_rbBodyType(this.ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * Set a new status for this rigid-body: fixed, dynamic, or kinematic.\n    * @param {number} handle\n    * @param {number} status\n    */\n    rbSetBodyType(handle, status) {\n        wasm.rawrigidbodyset_rbSetBodyType(this.ptr, handle, status);\n    }\n    /**\n    * Is this rigid-body fixed?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsFixed(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsFixed(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Is this rigid-body kinematic?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsKinematic(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsKinematic(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Is this rigid-body dynamic?\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    rbIsDynamic(handle) {\n        const ret = wasm.rawrigidbodyset_rbIsDynamic(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * The linear damping coefficient of this rigid-body.\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbLinearDamping(handle) {\n        const ret = wasm.rawrigidbodyset_rbLinearDamping(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * The angular damping coefficient of this rigid-body.\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbAngularDamping(handle) {\n        const ret = wasm.rawrigidbodyset_rbAngularDamping(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {number} factor\n    */\n    rbSetLinearDamping(handle, factor) {\n        wasm.rawrigidbodyset_rbSetLinearDamping(this.ptr, handle, factor);\n    }\n    /**\n    * @param {number} handle\n    * @param {number} factor\n    */\n    rbSetAngularDamping(handle, factor) {\n        wasm.rawrigidbodyset_rbSetAngularDamping(this.ptr, handle, factor);\n    }\n    /**\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbGravityScale(handle) {\n        const ret = wasm.rawrigidbodyset_rbGravityScale(this.ptr, handle);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {number} factor\n    * @param {boolean} wakeUp\n    */\n    rbSetGravityScale(handle, factor, wakeUp) {\n        wasm.rawrigidbodyset_rbSetGravityScale(this.ptr, handle, factor, wakeUp);\n    }\n    /**\n    * Resets to zero all user-added forces added to this rigid-body.\n    * @param {number} handle\n    * @param {boolean} wakeUp\n    */\n    rbResetForces(handle, wakeUp) {\n        wasm.rawrigidbodyset_rbResetForces(this.ptr, handle, wakeUp);\n    }\n    /**\n    * Resets to zero all user-added torques added to this rigid-body.\n    * @param {number} handle\n    * @param {boolean} wakeUp\n    */\n    rbResetTorques(handle, wakeUp) {\n        wasm.rawrigidbodyset_rbResetTorques(this.ptr, handle, wakeUp);\n    }\n    /**\n    * Adds a force at the center-of-mass of this rigid-body.\n    *\n    * # Parameters\n    * - `force`: the world-space force to apply on the rigid-body.\n    * - `wakeUp`: should the rigid-body be automatically woken-up?\n    * @param {number} handle\n    * @param {RawVector} force\n    * @param {boolean} wakeUp\n    */\n    rbAddForce(handle, force, wakeUp) {\n        _assertClass(force, RawVector);\n        wasm.rawrigidbodyset_rbAddForce(this.ptr, handle, force.ptr, wakeUp);\n    }\n    /**\n    * Applies an impulse at the center-of-mass of this rigid-body.\n    *\n    * # Parameters\n    * - `impulse`: the world-space impulse to apply on the rigid-body.\n    * - `wakeUp`: should the rigid-body be automatically woken-up?\n    * @param {number} handle\n    * @param {RawVector} impulse\n    * @param {boolean} wakeUp\n    */\n    rbApplyImpulse(handle, impulse, wakeUp) {\n        _assertClass(impulse, RawVector);\n        wasm.rawrigidbodyset_rbApplyImpulse(this.ptr, handle, impulse.ptr, wakeUp);\n    }\n    /**\n    * Adds a torque at the center-of-mass of this rigid-body.\n    *\n    * # Parameters\n    * - `torque`: the world-space torque to apply on the rigid-body.\n    * - `wakeUp`: should the rigid-body be automatically woken-up?\n    * @param {number} handle\n    * @param {RawVector} torque\n    * @param {boolean} wakeUp\n    */\n    rbAddTorque(handle, torque, wakeUp) {\n        _assertClass(torque, RawVector);\n        wasm.rawrigidbodyset_rbAddTorque(this.ptr, handle, torque.ptr, wakeUp);\n    }\n    /**\n    * Applies an impulsive torque at the center-of-mass of this rigid-body.\n    *\n    * # Parameters\n    * - `torque impulse`: the world-space torque impulse to apply on the rigid-body.\n    * - `wakeUp`: should the rigid-body be automatically woken-up?\n    * @param {number} handle\n    * @param {RawVector} torque_impulse\n    * @param {boolean} wakeUp\n    */\n    rbApplyTorqueImpulse(handle, torque_impulse, wakeUp) {\n        _assertClass(torque_impulse, RawVector);\n        wasm.rawrigidbodyset_rbApplyTorqueImpulse(this.ptr, handle, torque_impulse.ptr, wakeUp);\n    }\n    /**\n    * Adds a force at the given world-space point of this rigid-body.\n    *\n    * # Parameters\n    * - `force`: the world-space force to apply on the rigid-body.\n    * - `point`: the world-space point where the impulse is to be applied on the rigid-body.\n    * - `wakeUp`: should the rigid-body be automatically woken-up?\n    * @param {number} handle\n    * @param {RawVector} force\n    * @param {RawVector} point\n    * @param {boolean} wakeUp\n    */\n    rbAddForceAtPoint(handle, force, point, wakeUp) {\n        _assertClass(force, RawVector);\n        _assertClass(point, RawVector);\n        wasm.rawrigidbodyset_rbAddForceAtPoint(this.ptr, handle, force.ptr, point.ptr, wakeUp);\n    }\n    /**\n    * Applies an impulse at the given world-space point of this rigid-body.\n    *\n    * # Parameters\n    * - `impulse`: the world-space impulse to apply on the rigid-body.\n    * - `point`: the world-space point where the impulse is to be applied on the rigid-body.\n    * - `wakeUp`: should the rigid-body be automatically woken-up?\n    * @param {number} handle\n    * @param {RawVector} impulse\n    * @param {RawVector} point\n    * @param {boolean} wakeUp\n    */\n    rbApplyImpulseAtPoint(handle, impulse, point, wakeUp) {\n        _assertClass(impulse, RawVector);\n        _assertClass(point, RawVector);\n        wasm.rawrigidbodyset_rbApplyImpulseAtPoint(this.ptr, handle, impulse.ptr, point.ptr, wakeUp);\n    }\n    /**\n    * An arbitrary user-defined 32-bit integer\n    * @param {number} handle\n    * @returns {number}\n    */\n    rbUserData(handle) {\n        const ret = wasm.rawrigidbodyset_rbUserData(this.ptr, handle);\n        return ret >>> 0;\n    }\n    /**\n    * Sets the user-defined 32-bit integer of this rigid-body.\n    *\n    * # Parameters\n    * - `data`: an arbitrary user-defined 32-bit integer.\n    * @param {number} handle\n    * @param {number} data\n    */\n    rbSetUserData(handle, data) {\n        wasm.rawrigidbodyset_rbSetUserData(this.ptr, handle, data);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawrigidbodyset_new();\n        return RawRigidBodySet.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} translation\n    * @param {RawRotation} rotation\n    * @param {number} gravityScale\n    * @param {number} mass\n    * @param {boolean} massOnly\n    * @param {RawVector} centerOfMass\n    * @param {RawVector} linvel\n    * @param {RawVector} angvel\n    * @param {RawVector} principalAngularInertia\n    * @param {RawRotation} angularInertiaFrame\n    * @param {boolean} translationEnabledX\n    * @param {boolean} translationEnabledY\n    * @param {boolean} translationEnabledZ\n    * @param {boolean} rotationEnabledX\n    * @param {boolean} rotationEnabledY\n    * @param {boolean} rotationEnabledZ\n    * @param {number} linearDamping\n    * @param {number} angularDamping\n    * @param {number} rb_type\n    * @param {boolean} canSleep\n    * @param {boolean} sleeping\n    * @param {boolean} ccdEnabled\n    * @param {number} dominanceGroup\n    * @returns {number}\n    */\n    createRigidBody(translation, rotation, gravityScale, mass, massOnly, centerOfMass, linvel, angvel, principalAngularInertia, angularInertiaFrame, translationEnabledX, translationEnabledY, translationEnabledZ, rotationEnabledX, rotationEnabledY, rotationEnabledZ, linearDamping, angularDamping, rb_type, canSleep, sleeping, ccdEnabled, dominanceGroup) {\n        _assertClass(translation, RawVector);\n        _assertClass(rotation, RawRotation);\n        _assertClass(centerOfMass, RawVector);\n        _assertClass(linvel, RawVector);\n        _assertClass(angvel, RawVector);\n        _assertClass(principalAngularInertia, RawVector);\n        _assertClass(angularInertiaFrame, RawRotation);\n        const ret = wasm.rawrigidbodyset_createRigidBody(this.ptr, translation.ptr, rotation.ptr, gravityScale, mass, massOnly, centerOfMass.ptr, linvel.ptr, angvel.ptr, principalAngularInertia.ptr, angularInertiaFrame.ptr, translationEnabledX, translationEnabledY, translationEnabledZ, rotationEnabledX, rotationEnabledY, rotationEnabledZ, linearDamping, angularDamping, rb_type, canSleep, sleeping, ccdEnabled, dominanceGroup);\n        return ret;\n    }\n    /**\n    * @param {number} handle\n    * @param {RawIslandManager} islands\n    * @param {RawColliderSet} colliders\n    * @param {RawImpulseJointSet} joints\n    * @param {RawMultibodyJointSet} articulations\n    */\n    remove(handle, islands, colliders, joints, articulations) {\n        _assertClass(islands, RawIslandManager);\n        _assertClass(colliders, RawColliderSet);\n        _assertClass(joints, RawImpulseJointSet);\n        _assertClass(articulations, RawMultibodyJointSet);\n        wasm.rawrigidbodyset_remove(this.ptr, handle, islands.ptr, colliders.ptr, joints.ptr, articulations.ptr);\n    }\n    /**\n    * The number of rigid-bodies on this set.\n    * @returns {number}\n    */\n    len() {\n        const ret = wasm.rawrigidbodyset_len(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * Checks if a rigid-body with the given integer handle exists.\n    * @param {number} handle\n    * @returns {boolean}\n    */\n    contains(handle) {\n        const ret = wasm.rawrigidbodyset_contains(this.ptr, handle);\n        return ret !== 0;\n    }\n    /**\n    * Applies the given JavaScript function to the integer handle of each rigid-body managed by this set.\n    *\n    * # Parameters\n    * - `f(handle)`: the function to apply to the integer handle of each rigid-body managed by this set. Called as `f(collider)`.\n    * @param {Function} f\n    */\n    forEachRigidBodyHandle(f) {\n        try {\n            wasm.rawrigidbodyset_forEachRigidBodyHandle(this.ptr, addBorrowedObject(f));\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n* A rotation quaternion.\n*/\nexport class RawRotation {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawRotation.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawrotation_free(ptr);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    * @param {number} w\n    */\n    constructor(x, y, z, w) {\n        const ret = wasm.rawrotation_new(x, y, z, w);\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * The identity quaternion.\n    * @returns {RawRotation}\n    */\n    static identity() {\n        const ret = wasm.rawrotation_identity();\n        return RawRotation.__wrap(ret);\n    }\n    /**\n    * The `x` component of this quaternion.\n    */\n    get x() {\n        const ret = wasm.rawintegrationparameters_dt(this.ptr);\n        return ret;\n    }\n    /**\n    * The `y` component of this quaternion.\n    */\n    get y() {\n        const ret = wasm.rawrotation_y(this.ptr);\n        return ret;\n    }\n    /**\n    * The `z` component of this quaternion.\n    */\n    get z() {\n        const ret = wasm.rawintegrationparameters_erp(this.ptr);\n        return ret;\n    }\n    /**\n    * The `w` component of this quaternion.\n    */\n    get w() {\n        const ret = wasm.rawrotation_w(this.ptr);\n        return ret;\n    }\n}\n/**\n*/\nexport class RawSerializationPipeline {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawSerializationPipeline.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawserializationpipeline_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.rawserializationpipeline_new();\n        return RawSerializationPipeline.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} gravity\n    * @param {RawIntegrationParameters} integrationParameters\n    * @param {RawIslandManager} islands\n    * @param {RawBroadPhase} broadPhase\n    * @param {RawNarrowPhase} narrowPhase\n    * @param {RawRigidBodySet} bodies\n    * @param {RawColliderSet} colliders\n    * @param {RawImpulseJointSet} impulse_joints\n    * @param {RawMultibodyJointSet} multibody_joints\n    * @returns {Uint8Array | undefined}\n    */\n    serializeAll(gravity, integrationParameters, islands, broadPhase, narrowPhase, bodies, colliders, impulse_joints, multibody_joints) {\n        _assertClass(gravity, RawVector);\n        _assertClass(integrationParameters, RawIntegrationParameters);\n        _assertClass(islands, RawIslandManager);\n        _assertClass(broadPhase, RawBroadPhase);\n        _assertClass(narrowPhase, RawNarrowPhase);\n        _assertClass(bodies, RawRigidBodySet);\n        _assertClass(colliders, RawColliderSet);\n        _assertClass(impulse_joints, RawImpulseJointSet);\n        _assertClass(multibody_joints, RawMultibodyJointSet);\n        const ret = wasm.rawserializationpipeline_serializeAll(this.ptr, gravity.ptr, integrationParameters.ptr, islands.ptr, broadPhase.ptr, narrowPhase.ptr, bodies.ptr, colliders.ptr, impulse_joints.ptr, multibody_joints.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * @param {Uint8Array} data\n    * @returns {RawDeserializedWorld | undefined}\n    */\n    deserializeAll(data) {\n        const ret = wasm.rawserializationpipeline_deserializeAll(this.ptr, addHeapObject(data));\n        return ret === 0 ? undefined : RawDeserializedWorld.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawShape {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawShape.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawshape_free(ptr);\n    }\n    /**\n    * @param {number} hx\n    * @param {number} hy\n    * @param {number} hz\n    * @returns {RawShape}\n    */\n    static cuboid(hx, hy, hz) {\n        const ret = wasm.rawshape_cuboid(hx, hy, hz);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} hx\n    * @param {number} hy\n    * @param {number} hz\n    * @param {number} borderRadius\n    * @returns {RawShape}\n    */\n    static roundCuboid(hx, hy, hz, borderRadius) {\n        const ret = wasm.rawshape_roundCuboid(hx, hy, hz, borderRadius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} radius\n    * @returns {RawShape}\n    */\n    static ball(radius) {\n        const ret = wasm.rawshape_ball(radius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} halfHeight\n    * @param {number} radius\n    * @returns {RawShape}\n    */\n    static capsule(halfHeight, radius) {\n        const ret = wasm.rawshape_capsule(halfHeight, radius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} halfHeight\n    * @param {number} radius\n    * @returns {RawShape}\n    */\n    static cylinder(halfHeight, radius) {\n        const ret = wasm.rawshape_cylinder(halfHeight, radius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} halfHeight\n    * @param {number} radius\n    * @param {number} borderRadius\n    * @returns {RawShape}\n    */\n    static roundCylinder(halfHeight, radius, borderRadius) {\n        const ret = wasm.rawshape_roundCylinder(halfHeight, radius, borderRadius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} halfHeight\n    * @param {number} radius\n    * @returns {RawShape}\n    */\n    static cone(halfHeight, radius) {\n        const ret = wasm.rawshape_cone(halfHeight, radius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} halfHeight\n    * @param {number} radius\n    * @param {number} borderRadius\n    * @returns {RawShape}\n    */\n    static roundCone(halfHeight, radius, borderRadius) {\n        const ret = wasm.rawshape_roundCone(halfHeight, radius, borderRadius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} vertices\n    * @param {Uint32Array} indices\n    * @returns {RawShape}\n    */\n    static polyline(vertices, indices) {\n        const ptr0 = passArrayF32ToWasm0(vertices, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray32ToWasm0(indices, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.rawshape_polyline(ptr0, len0, ptr1, len1);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} vertices\n    * @param {Uint32Array} indices\n    * @returns {RawShape}\n    */\n    static trimesh(vertices, indices) {\n        const ptr0 = passArrayF32ToWasm0(vertices, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray32ToWasm0(indices, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.rawshape_trimesh(ptr0, len0, ptr1, len1);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {number} nrows\n    * @param {number} ncols\n    * @param {Float32Array} heights\n    * @param {RawVector} scale\n    * @returns {RawShape}\n    */\n    static heightfield(nrows, ncols, heights, scale) {\n        const ptr0 = passArrayF32ToWasm0(heights, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        _assertClass(scale, RawVector);\n        const ret = wasm.rawshape_heightfield(nrows, ncols, ptr0, len0, scale.ptr);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} p1\n    * @param {RawVector} p2\n    * @returns {RawShape}\n    */\n    static segment(p1, p2) {\n        _assertClass(p1, RawVector);\n        _assertClass(p2, RawVector);\n        const ret = wasm.rawshape_segment(p1.ptr, p2.ptr);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} p1\n    * @param {RawVector} p2\n    * @param {RawVector} p3\n    * @returns {RawShape}\n    */\n    static triangle(p1, p2, p3) {\n        _assertClass(p1, RawVector);\n        _assertClass(p2, RawVector);\n        _assertClass(p3, RawVector);\n        const ret = wasm.rawshape_triangle(p1.ptr, p2.ptr, p3.ptr);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} p1\n    * @param {RawVector} p2\n    * @param {RawVector} p3\n    * @param {number} borderRadius\n    * @returns {RawShape}\n    */\n    static roundTriangle(p1, p2, p3, borderRadius) {\n        _assertClass(p1, RawVector);\n        _assertClass(p2, RawVector);\n        _assertClass(p3, RawVector);\n        const ret = wasm.rawshape_roundTriangle(p1.ptr, p2.ptr, p3.ptr, borderRadius);\n        return RawShape.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} points\n    * @returns {RawShape | undefined}\n    */\n    static convexHull(points) {\n        const ptr0 = passArrayF32ToWasm0(points, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.rawshape_convexHull(ptr0, len0);\n        return ret === 0 ? undefined : RawShape.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} points\n    * @param {number} borderRadius\n    * @returns {RawShape | undefined}\n    */\n    static roundConvexHull(points, borderRadius) {\n        const ptr0 = passArrayF32ToWasm0(points, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.rawshape_roundConvexHull(ptr0, len0, borderRadius);\n        return ret === 0 ? undefined : RawShape.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} vertices\n    * @param {Uint32Array} indices\n    * @returns {RawShape | undefined}\n    */\n    static convexMesh(vertices, indices) {\n        const ptr0 = passArrayF32ToWasm0(vertices, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray32ToWasm0(indices, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.rawshape_convexMesh(ptr0, len0, ptr1, len1);\n        return ret === 0 ? undefined : RawShape.__wrap(ret);\n    }\n    /**\n    * @param {Float32Array} vertices\n    * @param {Uint32Array} indices\n    * @param {number} borderRadius\n    * @returns {RawShape | undefined}\n    */\n    static roundConvexMesh(vertices, indices, borderRadius) {\n        const ptr0 = passArrayF32ToWasm0(vertices, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArray32ToWasm0(indices, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.rawshape_roundConvexMesh(ptr0, len0, ptr1, len1, borderRadius);\n        return ret === 0 ? undefined : RawShape.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} shapePos1\n    * @param {RawRotation} shapeRot1\n    * @param {RawVector} shapeVel1\n    * @param {RawShape} shape2\n    * @param {RawVector} shapePos2\n    * @param {RawRotation} shapeRot2\n    * @param {RawVector} shapeVel2\n    * @param {number} maxToi\n    * @returns {RawShapeTOI | undefined}\n    */\n    castShape(shapePos1, shapeRot1, shapeVel1, shape2, shapePos2, shapeRot2, shapeVel2, maxToi) {\n        _assertClass(shapePos1, RawVector);\n        _assertClass(shapeRot1, RawRotation);\n        _assertClass(shapeVel1, RawVector);\n        _assertClass(shape2, RawShape);\n        _assertClass(shapePos2, RawVector);\n        _assertClass(shapeRot2, RawRotation);\n        _assertClass(shapeVel2, RawVector);\n        const ret = wasm.rawshape_castShape(this.ptr, shapePos1.ptr, shapeRot1.ptr, shapeVel1.ptr, shape2.ptr, shapePos2.ptr, shapeRot2.ptr, shapeVel2.ptr, maxToi);\n        return ret === 0 ? undefined : RawShapeTOI.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} shapePos1\n    * @param {RawRotation} shapeRot1\n    * @param {RawShape} shape2\n    * @param {RawVector} shapePos2\n    * @param {RawRotation} shapeRot2\n    * @returns {boolean}\n    */\n    intersectsShape(shapePos1, shapeRot1, shape2, shapePos2, shapeRot2) {\n        _assertClass(shapePos1, RawVector);\n        _assertClass(shapeRot1, RawRotation);\n        _assertClass(shape2, RawShape);\n        _assertClass(shapePos2, RawVector);\n        _assertClass(shapeRot2, RawRotation);\n        const ret = wasm.rawshape_intersectsShape(this.ptr, shapePos1.ptr, shapeRot1.ptr, shape2.ptr, shapePos2.ptr, shapeRot2.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {RawVector} shapePos1\n    * @param {RawRotation} shapeRot1\n    * @param {RawShape} shape2\n    * @param {RawVector} shapePos2\n    * @param {RawRotation} shapeRot2\n    * @param {number} prediction\n    * @returns {RawShapeContact | undefined}\n    */\n    contactShape(shapePos1, shapeRot1, shape2, shapePos2, shapeRot2, prediction) {\n        _assertClass(shapePos1, RawVector);\n        _assertClass(shapeRot1, RawRotation);\n        _assertClass(shape2, RawShape);\n        _assertClass(shapePos2, RawVector);\n        _assertClass(shapeRot2, RawRotation);\n        const ret = wasm.rawshape_contactShape(this.ptr, shapePos1.ptr, shapeRot1.ptr, shape2.ptr, shapePos2.ptr, shapeRot2.ptr, prediction);\n        return ret === 0 ? undefined : RawShapeContact.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawVector} point\n    * @returns {boolean}\n    */\n    containsPoint(shapePos, shapeRot, point) {\n        _assertClass(shapePos, RawVector);\n        _assertClass(shapeRot, RawRotation);\n        _assertClass(point, RawVector);\n        const ret = wasm.rawshape_containsPoint(this.ptr, shapePos.ptr, shapeRot.ptr, point.ptr);\n        return ret !== 0;\n    }\n    /**\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawVector} point\n    * @param {boolean} solid\n    * @returns {RawPointProjection}\n    */\n    projectPoint(shapePos, shapeRot, point, solid) {\n        _assertClass(shapePos, RawVector);\n        _assertClass(shapeRot, RawRotation);\n        _assertClass(point, RawVector);\n        const ret = wasm.rawshape_projectPoint(this.ptr, shapePos.ptr, shapeRot.ptr, point.ptr, solid);\n        return RawPointProjection.__wrap(ret);\n    }\n    /**\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @returns {boolean}\n    */\n    intersectsRay(shapePos, shapeRot, rayOrig, rayDir, maxToi) {\n        _assertClass(shapePos, RawVector);\n        _assertClass(shapeRot, RawRotation);\n        _assertClass(rayOrig, RawVector);\n        _assertClass(rayDir, RawVector);\n        const ret = wasm.rawshape_intersectsRay(this.ptr, shapePos.ptr, shapeRot.ptr, rayOrig.ptr, rayDir.ptr, maxToi);\n        return ret !== 0;\n    }\n    /**\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @returns {number}\n    */\n    castRay(shapePos, shapeRot, rayOrig, rayDir, maxToi, solid) {\n        _assertClass(shapePos, RawVector);\n        _assertClass(shapeRot, RawRotation);\n        _assertClass(rayOrig, RawVector);\n        _assertClass(rayDir, RawVector);\n        const ret = wasm.rawshape_castRay(this.ptr, shapePos.ptr, shapeRot.ptr, rayOrig.ptr, rayDir.ptr, maxToi, solid);\n        return ret;\n    }\n    /**\n    * @param {RawVector} shapePos\n    * @param {RawRotation} shapeRot\n    * @param {RawVector} rayOrig\n    * @param {RawVector} rayDir\n    * @param {number} maxToi\n    * @param {boolean} solid\n    * @returns {RawRayIntersection | undefined}\n    */\n    castRayAndGetNormal(shapePos, shapeRot, rayOrig, rayDir, maxToi, solid) {\n        _assertClass(shapePos, RawVector);\n        _assertClass(shapeRot, RawRotation);\n        _assertClass(rayOrig, RawVector);\n        _assertClass(rayDir, RawVector);\n        const ret = wasm.rawshape_castRayAndGetNormal(this.ptr, shapePos.ptr, shapeRot.ptr, rayOrig.ptr, rayDir.ptr, maxToi, solid);\n        return ret === 0 ? undefined : RawRayIntersection.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawShapeColliderTOI {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawShapeColliderTOI.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawshapecollidertoi_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    colliderHandle() {\n        const ret = wasm.rawcontactforceevent_collider1(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {number}\n    */\n    toi() {\n        const ret = wasm.rawraycolliderintersection_toi(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    witness1() {\n        const ret = wasm.rawraycolliderintersection_normal(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    witness2() {\n        const ret = wasm.rawshapecollidertoi_witness2(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal1() {\n        const ret = wasm.rawshapecollidertoi_normal1(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal2() {\n        const ret = wasm.rawshapecollidertoi_normal2(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawShapeContact {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawShapeContact.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawshapecontact_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    distance() {\n        const ret = wasm.rawshapecontact_distance(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    point1() {\n        const ret = wasm.rawpointprojection_point(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    point2() {\n        const ret = wasm.rawshapecontact_point2(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal1() {\n        const ret = wasm.rawshapecontact_normal1(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal2() {\n        const ret = wasm.rawshapecontact_normal2(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n}\n/**\n*/\nexport class RawShapeTOI {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawShapeTOI.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawshapetoi_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    toi() {\n        const ret = wasm.rawintegrationparameters_dt(this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {RawVector}\n    */\n    witness1() {\n        const ret = wasm.rawrayintersection_normal(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    witness2() {\n        const ret = wasm.rawshapetoi_witness2(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal1() {\n        const ret = wasm.rawshapetoi_normal1(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * @returns {RawVector}\n    */\n    normal2() {\n        const ret = wasm.rawshapetoi_normal2(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n}\n/**\n* A vector.\n*/\nexport class RawVector {\n\n    static __wrap(ptr) {\n        const obj = Object.create(RawVector.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_rawvector_free(ptr);\n    }\n    /**\n    * Creates a new vector filled with zeros.\n    * @returns {RawVector}\n    */\n    static zero() {\n        const ret = wasm.rawvector_zero();\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Creates a new 3D vector from its two components.\n    *\n    * # Parameters\n    * - `x`: the `x` component of this 3D vector.\n    * - `y`: the `y` component of this 3D vector.\n    * - `z`: the `z` component of this 3D vector.\n    * @param {number} x\n    * @param {number} y\n    * @param {number} z\n    */\n    constructor(x, y, z) {\n        const ret = wasm.rawvector_new(x, y, z);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * The `x` component of this vector.\n    */\n    get x() {\n        const ret = wasm.rawintegrationparameters_dt(this.ptr);\n        return ret;\n    }\n    /**\n    * Sets the `x` component of this vector.\n    */\n    set x(x) {\n        wasm.rawintegrationparameters_set_dt(this.ptr, x);\n    }\n    /**\n    * The `y` component of this vector.\n    */\n    get y() {\n        const ret = wasm.rawrotation_y(this.ptr);\n        return ret;\n    }\n    /**\n    * Sets the `y` component of this vector.\n    */\n    set y(y) {\n        wasm.rawvector_set_y(this.ptr, y);\n    }\n    /**\n    * The `z` component of this vector.\n    */\n    get z() {\n        const ret = wasm.rawintegrationparameters_erp(this.ptr);\n        return ret;\n    }\n    /**\n    * Sets the `z` component of this vector.\n    */\n    set z(z) {\n        wasm.rawintegrationparameters_set_erp(this.ptr, z);\n    }\n    /**\n    * Create a new 3D vector from this vector with its components rearranged as `{x, y, z}`.\n    *\n    * This will effectively return a copy of `this`. This method exist for completeness with the\n    * other swizzling functions.\n    * @returns {RawVector}\n    */\n    xyz() {\n        const ret = wasm.rawvector_xyz(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Create a new 3D vector from this vector with its components rearranged as `{y, x, z}`.\n    * @returns {RawVector}\n    */\n    yxz() {\n        const ret = wasm.rawvector_yxz(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Create a new 3D vector from this vector with its components rearranged as `{z, x, y}`.\n    * @returns {RawVector}\n    */\n    zxy() {\n        const ret = wasm.rawvector_zxy(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Create a new 3D vector from this vector with its components rearranged as `{x, z, y}`.\n    * @returns {RawVector}\n    */\n    xzy() {\n        const ret = wasm.rawvector_xzy(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Create a new 3D vector from this vector with its components rearranged as `{y, z, x}`.\n    * @returns {RawVector}\n    */\n    yzx() {\n        const ret = wasm.rawvector_yzx(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n    /**\n    * Create a new 3D vector from this vector with its components rearranged as `{z, y, x}`.\n    * @returns {RawVector}\n    */\n    zyx() {\n        const ret = wasm.rawvector_zyx(this.ptr);\n        return RawVector.__wrap(ret);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction getImports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbg_rawraycolliderintersection_new = function(arg0) {\n        const ret = RawRayColliderIntersection.__wrap(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_rawcontactforceevent_new = function(arg0) {\n        const ret = RawContactForceEvent.__wrap(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_call_9855a4612eb496cb = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_8e1338b908441bd2 = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2), getObject(arg3));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_0a54fa4fb42023f0 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2), getObject(arg3), getObject(arg4));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_bind_2ae44992222e2f45 = function(arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).bind(getObject(arg1), getObject(arg2), getObject(arg3));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_de1150f91b23aa89 = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_9ca61320599a2c84 = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_97cf52648830a70d = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_a0172b213e2469e9 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_e09c0b925ab8de5d = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_b0ff18b468a0d3f8 = function(arg0, arg1, arg2) {\n        const ret = new Float32Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_66067e08ab6cefb5 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_211080f5c116c01f = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_f28ac7a9191c7e26 = function(arg0) {\n        const ret = new Float32Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction initMemory(imports, maybe_memory) {\n\n}\n\nfunction finalizeInit(instance, module) {\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    cachedFloat32Memory0 = new Float32Array(wasm.memory.buffer);\n    cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n\n\n    return wasm;\n}\n\nfunction initSync(bytes) {\n    const imports = getImports();\n\n    initMemory(imports);\n\n    const module = new WebAssembly.Module(bytes);\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return finalizeInit(instance, module);\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('rapier_wasm3d_bg.wasm', \"<deleted>\");\n    }\n    const imports = getImports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    initMemory(imports);\n\n    const { instance, module } = await load(await input, imports);\n\n    return finalizeInit(instance, module);\n}\n\nexport { initSync }\nexport default init;\n","import {RawVector, RawRotation} from \"./raw\";\n\n\n// #if DIM3\nexport interface Vector {\n    x: number;\n    y: number;\n    z: number;\n}\n\n/**\n * A 3D vector.\n */\nexport class Vector3 implements Vector {\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(x: number, y: number, z: number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n}\n\nexport class VectorOps {\n    public static new(x: number, y: number, z: number): Vector {\n        return new Vector3(x, y, z);\n    }\n\n    public static intoRaw(v: Vector): RawVector {\n        return new RawVector(v.x, v.y, v.z);\n    }\n\n    public static zeros(): Vector {\n        return VectorOps.new(0.0, 0.0, 0.0);\n    }\n\n    // FIXME: type ram: RawVector?\n    public static fromRaw(raw: RawVector): Vector {\n        if (!raw) return null;\n\n        let res = VectorOps.new(raw.x, raw.y, raw.z);\n        raw.free();\n        return res;\n    }\n\n    public static copy(out: Vector, input: Vector) {\n        out.x = input.x;\n        out.y = input.y;\n        out.z = input.z;\n    }\n}\n\nexport interface Rotation {\n    x: number;\n    y: number;\n    z: number;\n    w: number;\n}\n\n/**\n * A quaternion.\n */\nexport class Quaternion implements Rotation {\n    x: number;\n    y: number;\n    z: number;\n    w: number;\n\n    constructor(x: number, y: number, z: number, w: number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n}\n\nexport class RotationOps {\n    public static identity(): Rotation {\n        return new Quaternion(0.0, 0.0, 0.0, 1.0);\n    }\n\n    public static fromRaw(raw: RawRotation): Rotation {\n        if (!raw) return null;\n\n        let res = new Quaternion(raw.x, raw.y, raw.z, raw.w);\n        raw.free();\n        return res;\n    }\n\n    public static intoRaw(rot: Rotation): RawRotation {\n        return new RawRotation(rot.x, rot.y, rot.z, rot.w);\n    }\n\n    public static copy(out: Rotation, input: Rotation) {\n        out.x = input.x;\n        out.y = input.y;\n        out.z = input.z;\n        out.w = input.w;\n    }\n}\n\n// #endif\n","import {RawRigidBodySet} from \"../raw\";\nimport {Rotation, RotationOps, Vector, VectorOps} from \"../math\";\nimport {Collider, ColliderHandle, ColliderSet} from \"../geometry\";\n\n/**\n * The integer identifier of a collider added to a `ColliderSet`.\n */\nexport type RigidBodyHandle = number;\n\n/**\n * The simulation status of a rigid-body.\n */\n// TODO: rename this to RigidBodyType\nexport enum RigidBodyType {\n    /**\n     * A `RigidBodyType::Dynamic` body can be affected by all external forces.\n     */\n    Dynamic = 0,\n    /**\n     * A `RigidBodyType::Fixed` body cannot be affected by external forces.\n     */\n    Fixed,\n    /**\n     * A `RigidBodyType::KinematicPositionBased` body cannot be affected by any external forces but can be controlled\n     * by the user at the position level while keeping realistic one-way interaction with dynamic bodies.\n     *\n     * One-way interaction means that a kinematic body can push a dynamic body, but a kinematic body\n     * cannot be pushed by anything. In other words, the trajectory of a kinematic body can only be\n     * modified by the user and is independent from any contact or joint it is involved in.\n     */\n    KinematicPositionBased,\n    /**\n     * A `RigidBodyType::KinematicVelocityBased` body cannot be affected by any external forces but can be controlled\n     * by the user at the velocity level while keeping realistic one-way interaction with dynamic bodies.\n     *\n     * One-way interaction means that a kinematic body can push a dynamic body, but a kinematic body\n     * cannot be pushed by anything. In other words, the trajectory of a kinematic body can only be\n     * modified by the user and is independent from any contact or joint it is involved in.\n     */\n    KinematicVelocityBased,\n}\n\n/**\n * A rigid-body.\n */\nexport class RigidBody {\n    private rawSet: RawRigidBodySet; // The RigidBody won't need to free this.\n    private colliderSet: ColliderSet;\n    readonly handle: RigidBodyHandle;\n\n    /**\n     * An arbitrary user-defined object associated with this rigid-body.\n     */\n    public userData?: unknown;\n\n    constructor(\n        rawSet: RawRigidBodySet,\n        colliderSet: ColliderSet,\n        handle: RigidBodyHandle,\n    ) {\n        this.rawSet = rawSet;\n        this.colliderSet = colliderSet;\n        this.handle = handle;\n    }\n\n    /** @internal */\n    public finalizeDeserialization(colliderSet: ColliderSet) {\n        this.colliderSet = colliderSet;\n    }\n\n    /**\n     * Checks if this rigid-body is still valid (i.e. that it has\n     * not been deleted from the rigid-body set yet.\n     */\n    public isValid(): boolean {\n        return this.rawSet.contains(this.handle);\n    }\n\n    /**\n     * Locks or unlocks the ability of this rigid-body to translate.\n     *\n     * @param locked - If `true`, this rigid-body will no longer translate due to forces and impulses.\n     * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n     */\n    public lockTranslations(locked: boolean, wakeUp: boolean) {\n        return this.rawSet.rbLockTranslations(this.handle, locked, wakeUp);\n    }\n\n    /**\n     * Locks or unlocks the ability of this rigid-body to rotate.\n     *\n     * @param locked - If `true`, this rigid-body will no longer rotate due to torques and impulses.\n     * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n     */\n    public lockRotations(locked: boolean, wakeUp: boolean) {\n        return this.rawSet.rbLockRotations(this.handle, locked, wakeUp);\n    }\n\n    // #if DIM3\n    /**\n     * Locks or unlocks the ability of this rigid-body to translate along individual coordinate axes.\n     *\n     * @param enableX - If `false`, this rigid-body will no longer translate due to torques and impulses, along the X coordinate axis.\n     * @param enableY - If `false`, this rigid-body will no longer translate due to torques and impulses, along the Y coordinate axis.\n     * @param enableZ - If `false`, this rigid-body will no longer translate due to torques and impulses, along the Z coordinate axis.\n     * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n     */\n    public setEnabledTranslations(\n        enableX: boolean,\n        enableY: boolean,\n        enableZ: boolean,\n        wakeUp: boolean,\n    ) {\n        return this.rawSet.rbSetEnabledTranslations(\n            this.handle,\n            enableX,\n            enableY,\n            enableZ,\n            wakeUp,\n        );\n    }\n\n    /**\n     * Locks or unlocks the ability of this rigid-body to translate along individual coordinate axes.\n     *\n     * @param enableX - If `false`, this rigid-body will no longer translate due to torques and impulses, along the X coordinate axis.\n     * @param enableY - If `false`, this rigid-body will no longer translate due to torques and impulses, along the Y coordinate axis.\n     * @param enableZ - If `false`, this rigid-body will no longer translate due to torques and impulses, along the Z coordinate axis.\n     * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n     * @deprecated use `this.setEnabledTranslations` with the same arguments instead.\n     */\n    public restrictTranslations(\n        enableX: boolean,\n        enableY: boolean,\n        enableZ: boolean,\n        wakeUp: boolean,\n    ) {\n        this.setEnabledTranslations(enableX, enableY, enableZ, wakeUp);\n    }\n\n    /**\n     * Locks or unlocks the ability of this rigid-body to rotate along individual coordinate axes.\n     *\n     * @param enableX - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the X coordinate axis.\n     * @param enableY - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the Y coordinate axis.\n     * @param enableZ - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the Z coordinate axis.\n     * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n     */\n    public setEnabledRotations(\n        enableX: boolean,\n        enableY: boolean,\n        enableZ: boolean,\n        wakeUp: boolean,\n    ) {\n        return this.rawSet.rbSetEnabledRotations(\n            this.handle,\n            enableX,\n            enableY,\n            enableZ,\n            wakeUp,\n        );\n    }\n\n    /**\n     * Locks or unlocks the ability of this rigid-body to rotate along individual coordinate axes.\n     *\n     * @param enableX - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the X coordinate axis.\n     * @param enableY - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the Y coordinate axis.\n     * @param enableZ - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the Z coordinate axis.\n     * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n     * @deprecated use `this.setEnabledRotations` with the same arguments instead.\n     */\n    public restrictRotations(\n        enableX: boolean,\n        enableY: boolean,\n        enableZ: boolean,\n        wakeUp: boolean,\n    ) {\n        this.setEnabledRotations(enableX, enableY, enableZ, wakeUp);\n    }\n    // #endif\n\n    /**\n     * The dominance group, in [-127, +127] this rigid-body is part of.\n     */\n    public dominanceGroup(): number {\n        return this.rawSet.rbDominanceGroup(this.handle);\n    }\n\n    /**\n     * Sets the dominance group of this rigid-body.\n     *\n     * @param group - The dominance group of this rigid-body. Must be a signed integer in the range [-127, +127].\n     */\n    public setDominanceGroup(group: number) {\n        this.rawSet.rbSetDominanceGroup(this.handle, group);\n    }\n\n    /**\n     * Enable or disable CCD (Continuous Collision Detection) for this rigid-body.\n     *\n     * @param enabled - If `true`, CCD will be enabled for this rigid-body.\n     */\n    public enableCcd(enabled: boolean) {\n        this.rawSet.rbEnableCcd(this.handle, enabled);\n    }\n\n    /**\n     * The world-space translation of this rigid-body.\n     */\n    public translation(): Vector {\n        let res = this.rawSet.rbTranslation(this.handle);\n        return VectorOps.fromRaw(res);\n    }\n\n    /**\n     * The world-space orientation of this rigid-body.\n     */\n    public rotation(): Rotation {\n        let res = this.rawSet.rbRotation(this.handle);\n        return RotationOps.fromRaw(res);\n    }\n\n    /**\n     * The world-space next translation of this rigid-body.\n     *\n     * If this rigid-body is kinematic this value is set by the `setNextKinematicTranslation`\n     * method and is used for estimating the kinematic body velocity at the next timestep.\n     * For non-kinematic bodies, this value is currently unspecified.\n     */\n    public nextTranslation(): Vector {\n        let res = this.rawSet.rbNextTranslation(this.handle);\n        return VectorOps.fromRaw(res);\n    }\n\n    /**\n     * The world-space next orientation of this rigid-body.\n     *\n     * If this rigid-body is kinematic this value is set by the `setNextKinematicRotation`\n     * method and is used for estimating the kinematic body velocity at the next timestep.\n     * For non-kinematic bodies, this value is currently unspecified.\n     */\n    public nextRotation(): Rotation {\n        let res = this.rawSet.rbNextRotation(this.handle);\n        return RotationOps.fromRaw(res);\n    }\n\n    /**\n     * Sets the translation of this rigid-body.\n     *\n     * @param tra - The world-space position of the rigid-body.\n     * @param wakeUp - Forces the rigid-body to wake-up so it is properly affected by forces if it\n     *                 wasn't moving before modifying its position.\n     */\n    public setTranslation(tra: Vector, wakeUp: boolean) {\n        // #if DIM3\n        this.rawSet.rbSetTranslation(this.handle, tra.x, tra.y, tra.z, wakeUp);\n        // #endif\n    }\n\n    /**\n     * Sets the linear velocity fo this rigid-body.\n     *\n     * @param vel - The linear velocity to set.\n     * @param wakeUp - Forces the rigid-body to wake-up if it was asleep.\n     */\n    public setLinvel(vel: Vector, wakeUp: boolean) {\n        let rawVel = VectorOps.intoRaw(vel);\n        this.rawSet.rbSetLinvel(this.handle, rawVel, wakeUp);\n        rawVel.free();\n    }\n\n    /**\n     * The scale factor applied to the gravity affecting\n     * this rigid-body.\n     */\n    public gravityScale(): number {\n        return this.rawSet.rbGravityScale(this.handle);\n    }\n\n    /**\n     * Sets the scale factor applied to the gravity affecting\n     * this rigid-body.\n     *\n     * @param factor - The scale factor to set. A value of 0.0 means\n     *   that this rigid-body will on longer be affected by gravity.\n     * @param wakeUp - Forces the rigid-body to wake-up if it was asleep.\n     */\n    public setGravityScale(factor: number, wakeUp: boolean) {\n        this.rawSet.rbSetGravityScale(this.handle, factor, wakeUp);\n    }\n\n    // #if DIM3\n    /**\n     * Sets the rotation quaternion of this rigid-body.\n     *\n     * This does nothing if a zero quaternion is provided.\n     *\n     * @param rotation - The rotation to set.\n     * @param wakeUp - Forces the rigid-body to wake-up so it is properly affected by forces if it\n     * wasn't moving before modifying its position.\n     */\n    public setRotation(rot: Rotation, wakeUp: boolean) {\n        this.rawSet.rbSetRotation(\n            this.handle,\n            rot.x,\n            rot.y,\n            rot.z,\n            rot.w,\n            wakeUp,\n        );\n    }\n\n    /**\n     * Sets the angular velocity fo this rigid-body.\n     *\n     * @param vel - The angular velocity to set.\n     * @param wakeUp - Forces the rigid-body to wake-up if it was asleep.\n     */\n    public setAngvel(vel: Vector, wakeUp: boolean) {\n        let rawVel = VectorOps.intoRaw(vel);\n        this.rawSet.rbSetAngvel(this.handle, rawVel, wakeUp);\n        rawVel.free();\n    }\n\n    // #endif\n\n\n    /**\n     * If this rigid body is kinematic, sets its future translation after the next timestep integration.\n     *\n     * This should be used instead of `rigidBody.setTranslation` to make the dynamic object\n     * interacting with this kinematic body behave as expected. Internally, Rapier will compute\n     * an artificial velocity for this rigid-body from its current position and its next kinematic\n     * position. This velocity will be used to compute forces on dynamic bodies interacting with\n     * this body.\n     *\n     * @param t - The kinematic translation to set.\n     */\n    public setNextKinematicTranslation(t: Vector) {\n        // #if DIM3\n        this.rawSet.rbSetNextKinematicTranslation(this.handle, t.x, t.y, t.z);\n        // #endif\n    }\n\n    // #if DIM3\n    /**\n     * If this rigid body is kinematic, sets its future rotation after the next timestep integration.\n     *\n     * This should be used instead of `rigidBody.setRotation` to make the dynamic object\n     * interacting with this kinematic body behave as expected. Internally, Rapier will compute\n     * an artificial velocity for this rigid-body from its current position and its next kinematic\n     * position. This velocity will be used to compute forces on dynamic bodies interacting with\n     * this body.\n     *\n     * @param rot - The kinematic rotation to set.\n     */\n    public setNextKinematicRotation(rot: Rotation) {\n        this.rawSet.rbSetNextKinematicRotation(\n            this.handle,\n            rot.x,\n            rot.y,\n            rot.z,\n            rot.w,\n        );\n    }\n\n    // #endif\n\n\n    /**\n     * The linear velocity of this rigid-body.\n     */\n    public linvel(): Vector {\n        return VectorOps.fromRaw(this.rawSet.rbLinvel(this.handle));\n    }\n\n    // #if DIM3\n    /**\n     * The angular velocity of this rigid-body.\n     */\n    public angvel(): Vector {\n        return VectorOps.fromRaw(this.rawSet.rbAngvel(this.handle));\n    }\n\n    // #endif\n\n\n    /**\n     * The mass of this rigid-body.\n     */\n    public mass(): number {\n        return this.rawSet.rbMass(this.handle);\n    }\n\n    /**\n     * Put this rigid body to sleep.\n     *\n     * A sleeping body no longer moves and is no longer simulated by the physics engine unless\n     * it is waken up. It can be woken manually with `this.wakeUp()` or automatically due to\n     * external forces like contacts.\n     */\n    public sleep() {\n        this.rawSet.rbSleep(this.handle);\n    }\n\n    /**\n     * Wakes this rigid-body up.\n     *\n     * A dynamic rigid-body that does not move during several consecutive frames will\n     * be put to sleep by the physics engine, i.e., it will stop being simulated in order\n     * to avoid useless computations.\n     * This methods forces a sleeping rigid-body to wake-up. This is useful, e.g., before modifying\n     * the position of a dynamic body so that it is properly simulated afterwards.\n     */\n    public wakeUp() {\n        this.rawSet.rbWakeUp(this.handle);\n    }\n\n    /**\n     * Is CCD enabled for this rigid-body?\n     */\n    public isCcdEnabled() {\n        this.rawSet.rbIsCcdEnabled(this.handle);\n    }\n\n    /**\n     * The number of colliders attached to this rigid-body.\n     */\n    public numColliders(): number {\n        return this.rawSet.rbNumColliders(this.handle);\n    }\n\n    /**\n     * Retrieves the `i-th` collider attached to this rigid-body.\n     *\n     * @param i - The index of the collider to retrieve. Must be a number in `[0, this.numColliders()[`.\n     *         This index is **not** the same as the unique identifier of the collider.\n     */\n    public collider(i: number): Collider {\n        return this.colliderSet.get(this.rawSet.rbCollider(this.handle, i));\n    }\n\n    /**\n     * The status of this rigid-body: static, dynamic, or kinematic.\n     */\n    public bodyType(): RigidBodyType {\n        return this.rawSet.rbBodyType(this.handle);\n    }\n\n    /**\n     * Set a new status for this rigid-body: static, dynamic, or kinematic.\n     */\n    public setBodyType(type: RigidBodyType) {\n        return this.rawSet.rbSetBodyType(this.handle, type);\n    }\n\n    /**\n     * Is this rigid-body sleeping?\n     */\n    public isSleeping(): boolean {\n        return this.rawSet.rbIsSleeping(this.handle);\n    }\n\n    /**\n     * Is the velocity of this rigid-body not zero?\n     */\n    public isMoving(): boolean {\n        return this.rawSet.rbIsMoving(this.handle);\n    }\n\n    /**\n     * Is this rigid-body static?\n     */\n    public isFixed(): boolean {\n        return this.rawSet.rbIsFixed(this.handle);\n    }\n\n    /**\n     * Is this rigid-body kinematic?\n     */\n    public isKinematic(): boolean {\n        return this.rawSet.rbIsKinematic(this.handle);\n    }\n\n    /**\n     * Is this rigid-body dynamic?\n     */\n    public isDynamic(): boolean {\n        return this.rawSet.rbIsDynamic(this.handle);\n    }\n\n    /**\n     * The linear damping coefficient of this rigid-body.\n     */\n    public linearDamping(): number {\n        return this.rawSet.rbLinearDamping(this.handle);\n    }\n\n    /**\n     * The angular damping coefficient of this rigid-body.\n     */\n    public angularDamping(): number {\n        return this.rawSet.rbAngularDamping(this.handle);\n    }\n\n    /**\n     * Sets the linear damping factor applied to this rigid-body.\n     *\n     * @param factor - The damping factor to set.\n     */\n    public setLinearDamping(factor: number) {\n        this.rawSet.rbSetLinearDamping(this.handle, factor);\n    }\n\n    /**\n     * Recompute the mass-properties of this rigid-bodies based on its currently attached colliders.\n     */\n    public recomputeMassPropertiesFromColliders() {\n        this.rawSet.rbRecomputeMassPropertiesFromColliders(\n            this.handle,\n            this.colliderSet.raw,\n        );\n    }\n\n    /**\n     * Sets the rigid-body's additional mass.\n     *\n     * The total angular inertia of the rigid-body will be scaled automatically based on this additional mass. If this\n     * scaling effect isn’t desired, use Self::additional_mass_properties instead of this method.\n     *\n     * This is only the \"additional\" mass because the total mass of the rigid-body is equal to the sum of this\n     * additional mass and the mass computed from the colliders (with non-zero densities) attached to this rigid-body.\n     *\n     * That total mass (which includes the attached colliders’ contributions) will be updated at the name physics step,\n     * or can be updated manually with `this.recomputeMassPropertiesFromColliders`.\n     *\n     * This will override any previous additional mass-properties set by `this.setAdditionalMass`,\n     * `this.setAdditionalMassProperties`, `RigidBodyDesc::setAdditionalMass`, or\n     * `RigidBodyDesc.setAdditionalMassfProperties` for this rigid-body.\n     *\n     * @param mass - The additional mass to set.\n     * @param wakeUp - If `true` then the rigid-body will be woken up if it was put to sleep because it did not move for a while.\n     */\n    public setAdditionalMass(mass: number, wakeUp: boolean) {\n        this.rawSet.rbSetAdditionalMass(this.handle, mass, wakeUp);\n    }\n\n    // #if DIM3\n    /**\n     * Sets the rigid-body's additional mass-properties.\n     *\n     * This is only the \"additional\" mass-properties because the total mass-properties of the rigid-body is equal to the\n     * sum of this additional mass-properties and the mass computed from the colliders (with non-zero densities) attached\n     * to this rigid-body.\n     *\n     * That total mass-properties (which include the attached colliders’ contributions) will be updated at the name\n     * physics step, or can be updated manually with `this.recomputeMassPropertiesFromColliders`.\n     *\n     * This will override any previous mass-properties set by `this.setAdditionalMass`,\n     * `this.setAdditionalMassProperties`, `RigidBodyDesc.setAdditionalMass`, or `RigidBodyDesc.setAdditionalMassProperties`\n     * for this rigid-body.\n     *\n     * If `wake_up` is true then the rigid-body will be woken up if it was put to sleep because it did not move for a while.\n     */\n    public setAdditionalMassProperties(\n        mass: number,\n        centerOfMass: Vector,\n        principalAngularInertia: Vector,\n        angularInertiaLocalFrame: Rotation,\n        wakeUp: boolean,\n    ) {\n        let rawCom = VectorOps.intoRaw(centerOfMass);\n        let rawPrincipalInertia = VectorOps.intoRaw(principalAngularInertia);\n        let rawInertiaFrame = RotationOps.intoRaw(angularInertiaLocalFrame);\n\n        this.rawSet.rbSetAdditionalMassProperties(\n            this.handle,\n            mass,\n            rawCom,\n            rawPrincipalInertia,\n            rawInertiaFrame,\n            wakeUp,\n        );\n\n        rawCom.free();\n        rawPrincipalInertia.free();\n        rawInertiaFrame.free();\n    }\n    // #endif\n\n\n    /**\n     * Sets the linear damping factor applied to this rigid-body.\n     *\n     * @param factor - The damping factor to set.\n     */\n    public setAngularDamping(factor: number) {\n        this.rawSet.rbSetAngularDamping(this.handle, factor);\n    }\n\n    /**\n     * Resets to zero the user forces (but not torques) applied to this rigid-body.\n     *\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public resetForces(wakeUp: boolean) {\n        this.rawSet.rbResetForces(this.handle, wakeUp);\n    }\n\n    /**\n     * Resets to zero the user torques applied to this rigid-body.\n     *\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public resetTorques(wakeUp: boolean) {\n        this.rawSet.rbResetTorques(this.handle, wakeUp);\n    }\n\n    /**\n     * Adds a force at the center-of-mass of this rigid-body.\n     *\n     * @param force - the world-space force to add to the rigid-body.\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public addForce(force: Vector, wakeUp: boolean) {\n        const rawForce = VectorOps.intoRaw(force);\n        this.rawSet.rbAddForce(this.handle, rawForce, wakeUp);\n        rawForce.free();\n    }\n\n    /**\n     * Applies an impulse at the center-of-mass of this rigid-body.\n     *\n     * @param impulse - the world-space impulse to apply on the rigid-body.\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public applyImpulse(impulse: Vector, wakeUp: boolean) {\n        const rawImpulse = VectorOps.intoRaw(impulse);\n        this.rawSet.rbApplyImpulse(this.handle, rawImpulse, wakeUp);\n        rawImpulse.free();\n    }\n\n\n    // #if DIM3\n    /**\n     * Adds a torque at the center-of-mass of this rigid-body.\n     *\n     * @param torque - the world-space torque to add to the rigid-body.\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public addTorque(torque: Vector, wakeUp: boolean) {\n        const rawTorque = VectorOps.intoRaw(torque);\n        this.rawSet.rbAddTorque(this.handle, rawTorque, wakeUp);\n        rawTorque.free();\n    }\n\n    // #endif\n\n\n    // #if DIM3\n    /**\n     * Applies an impulsive torque at the center-of-mass of this rigid-body.\n     *\n     * @param torqueImpulse - the world-space torque impulse to apply on the rigid-body.\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public applyTorqueImpulse(torqueImpulse: Vector, wakeUp: boolean) {\n        const rawTorqueImpulse = VectorOps.intoRaw(torqueImpulse);\n        this.rawSet.rbApplyTorqueImpulse(this.handle, rawTorqueImpulse, wakeUp);\n        rawTorqueImpulse.free();\n    }\n\n    // #endif\n\n    /**\n     * Adds a force at the given world-space point of this rigid-body.\n     *\n     * @param force - the world-space force to add to the rigid-body.\n     * @param point - the world-space point where the impulse is to be applied on the rigid-body.\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public addForceAtPoint(force: Vector, point: Vector, wakeUp: boolean) {\n        const rawForce = VectorOps.intoRaw(force);\n        const rawPoint = VectorOps.intoRaw(point);\n        this.rawSet.rbAddForceAtPoint(this.handle, rawForce, rawPoint, wakeUp);\n        rawForce.free();\n        rawPoint.free();\n    }\n\n    /**\n     * Applies an impulse at the given world-space point of this rigid-body.\n     *\n     * @param impulse - the world-space impulse to apply on the rigid-body.\n     * @param point - the world-space point where the impulse is to be applied on the rigid-body.\n     * @param wakeUp - should the rigid-body be automatically woken-up?\n     */\n    public applyImpulseAtPoint(\n        impulse: Vector,\n        point: Vector,\n        wakeUp: boolean,\n    ) {\n        const rawImpulse = VectorOps.intoRaw(impulse);\n        const rawPoint = VectorOps.intoRaw(point);\n        this.rawSet.rbApplyImpulseAtPoint(\n            this.handle,\n            rawImpulse,\n            rawPoint,\n            wakeUp,\n        );\n        rawImpulse.free();\n        rawPoint.free();\n    }\n}\n\nexport class RigidBodyDesc {\n    translation: Vector;\n    rotation: Rotation;\n    gravityScale: number;\n    mass: number;\n    massOnly: boolean;\n    centerOfMass: Vector;\n    translationsEnabledX: boolean;\n    translationsEnabledY: boolean;\n    linvel: Vector;\n    // #if DIM3\n    angvel: Vector;\n    principalAngularInertia: Vector;\n    angularInertiaLocalFrame: Rotation;\n    translationsEnabledZ: boolean;\n    rotationsEnabledX: boolean;\n    rotationsEnabledY: boolean;\n    rotationsEnabledZ: boolean;\n    // #endif\n    linearDamping: number;\n    angularDamping: number;\n    status: RigidBodyType;\n    canSleep: boolean;\n    sleeping: boolean;\n    ccdEnabled: boolean;\n    dominanceGroup: number;\n    userData?: unknown;\n\n    constructor(status: RigidBodyType) {\n        this.status = status;\n        this.translation = VectorOps.zeros();\n        this.rotation = RotationOps.identity();\n        this.gravityScale = 1.0;\n        this.linvel = VectorOps.zeros();\n        this.mass = 0.0;\n        this.massOnly = false;\n        this.centerOfMass = VectorOps.zeros();\n        this.translationsEnabledX = true;\n        this.translationsEnabledY = true;\n        // #if DIM3\n        this.angvel = VectorOps.zeros();\n        this.principalAngularInertia = VectorOps.zeros();\n        this.angularInertiaLocalFrame = RotationOps.identity();\n        this.translationsEnabledZ = true;\n        this.rotationsEnabledX = true;\n        this.rotationsEnabledY = true;\n        this.rotationsEnabledZ = true;\n        // #endif\n        this.linearDamping = 0.0;\n        this.angularDamping = 0.0;\n        this.canSleep = true;\n        this.sleeping = false;\n        this.ccdEnabled = false;\n        this.dominanceGroup = 0;\n    }\n\n    /**\n     * A rigid-body descriptor used to build a dynamic rigid-body.\n     */\n    public static dynamic(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.Dynamic);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a position-based kinematic rigid-body.\n     */\n    public static kinematicPositionBased(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.KinematicPositionBased);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a velocity-based kinematic rigid-body.\n     */\n    public static kinematicVelocityBased(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.KinematicVelocityBased);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a fixed rigid-body.\n     */\n    public static fixed(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.Fixed);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a dynamic rigid-body.\n     *\n     * @deprecated The method has been renamed to `.dynamic()`.\n     */\n    public static newDynamic(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.Dynamic);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a position-based kinematic rigid-body.\n     *\n     * @deprecated The method has been renamed to `.kinematicPositionBased()`.\n     */\n    public static newKinematicPositionBased(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.KinematicPositionBased);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a velocity-based kinematic rigid-body.\n     *\n     * @deprecated The method has been renamed to `.kinematicVelocityBased()`.\n     */\n    public static newKinematicVelocityBased(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.KinematicVelocityBased);\n    }\n\n    /**\n     * A rigid-body descriptor used to build a fixed rigid-body.\n     *\n     * @deprecated The method has been renamed to `.fixed()`.\n     */\n    public static newStatic(): RigidBodyDesc {\n        return new RigidBodyDesc(RigidBodyType.Fixed);\n    }\n\n    public setDominanceGroup(group: number): RigidBodyDesc {\n        this.dominanceGroup = group;\n        return this;\n    }\n\n\n    // #if DIM3\n    /**\n     * Sets the initial translation of the rigid-body to create.\n     *\n     * @param tra - The translation to set.\n     */\n    public setTranslation(x: number, y: number, z: number): RigidBodyDesc {\n        if (\n            typeof x != \"number\" ||\n            typeof y != \"number\" ||\n            typeof z != \"number\"\n        )\n            throw TypeError(\"The translation components must be numbers.\");\n\n        this.translation = {x: x, y: y, z: z};\n        return this;\n    }\n\n    // #endif\n\n    /**\n     * Sets the initial rotation of the rigid-body to create.\n     *\n     * @param rot - The rotation to set.\n     */\n    public setRotation(rot: Rotation): RigidBodyDesc {\n        // #if DIM3\n        RotationOps.copy(this.rotation, rot);\n        // #endif\n        return this;\n    }\n\n    /**\n     * Sets the scale factor applied to the gravity affecting\n     * the rigid-body being built.\n     *\n     * @param scale - The scale factor. Set this to `0.0` if the rigid-body\n     *   needs to ignore gravity.\n     */\n    public setGravityScale(scale: number): RigidBodyDesc {\n        this.gravityScale = scale;\n        return this;\n    }\n\n    /**\n     * Sets the initial mass of the rigid-body being built, before adding colliders' contributions.\n     *\n     * @param mass − The initial mass of the rigid-body to create.\n     */\n    public setAdditionalMass(mass: number): RigidBodyDesc {\n        this.mass = mass;\n        this.massOnly = true;\n        return this;\n    }\n\n\n    // #if DIM3\n    /**\n     * Sets the initial linear velocity of the rigid-body to create.\n     *\n     * @param x - The linear velocity to set along the `x` axis.\n     * @param y - The linear velocity to set along the `y` axis.\n     * @param z - The linear velocity to set along the `z` axis.\n     */\n    public setLinvel(x: number, y: number, z: number): RigidBodyDesc {\n        if (\n            typeof x != \"number\" ||\n            typeof y != \"number\" ||\n            typeof z != \"number\"\n        )\n            throw TypeError(\"The linvel components must be numbers.\");\n\n        this.linvel = {x: x, y: y, z: z};\n        return this;\n    }\n\n    /**\n     * Sets the initial angular velocity of the rigid-body to create.\n     *\n     * @param vel - The angular velocity to set.\n     */\n    public setAngvel(vel: Vector): RigidBodyDesc {\n        VectorOps.copy(this.angvel, vel);\n        return this;\n    }\n\n    /**\n     * Sets the mass properties of the rigid-body being built.\n     *\n     * Note that the final mass properties of the rigid-bodies depends\n     * on the initial mass-properties of the rigid-body (set by this method)\n     * to which is added the contributions of all the colliders with non-zero density\n     * attached to this rigid-body.\n     *\n     * Therefore, if you want your provided mass properties to be the final\n     * mass properties of your rigid-body, don't attach colliders to it, or\n     * only attach colliders with densities equal to zero.\n     *\n     * @param mass − The initial mass of the rigid-body to create.\n     * @param centerOfMass − The initial center-of-mass of the rigid-body to create.\n     * @param principalAngularInertia − The initial principal angular inertia of the rigid-body to create.\n     *                                  These are the eigenvalues of the angular inertia matrix.\n     * @param angularInertiaLocalFrame − The initial local angular inertia frame of the rigid-body to create.\n     *                                   These are the eigenvectors of the angular inertia matrix.\n     */\n    public setAdditionalMassProperties(\n        mass: number,\n        centerOfMass: Vector,\n        principalAngularInertia: Vector,\n        angularInertiaLocalFrame: Rotation,\n    ): RigidBodyDesc {\n        this.mass = mass;\n        VectorOps.copy(this.centerOfMass, centerOfMass);\n        VectorOps.copy(this.principalAngularInertia, principalAngularInertia);\n        RotationOps.copy(\n            this.angularInertiaLocalFrame,\n            angularInertiaLocalFrame,\n        );\n        this.massOnly = false;\n        return this;\n    }\n\n    /**\n     * Allow translation of this rigid-body only along specific axes.\n     * @param translationsEnabledX - Are translations along the X axis enabled?\n     * @param translationsEnabledY - Are translations along the y axis enabled?\n     * @param translationsEnabledZ - Are translations along the Z axis enabled?\n     */\n    public enabledTranslations(\n        translationsEnabledX: boolean,\n        translationsEnabledY: boolean,\n        translationsEnabledZ: boolean,\n    ): RigidBodyDesc {\n        this.translationsEnabledX = translationsEnabledX;\n        this.translationsEnabledY = translationsEnabledY;\n        this.translationsEnabledZ = translationsEnabledZ;\n        return this;\n    }\n    /**\n     * Allow translation of this rigid-body only along specific axes.\n     * @param translationsEnabledX - Are translations along the X axis enabled?\n     * @param translationsEnabledY - Are translations along the y axis enabled?\n     * @param translationsEnabledZ - Are translations along the Z axis enabled?\n     * @deprecated use `this.enabledTranslations` with the same arguments instead.\n     */\n    public restrictTranslations(\n        translationsEnabledX: boolean,\n        translationsEnabledY: boolean,\n        translationsEnabledZ: boolean,\n    ): RigidBodyDesc {\n        return this.enabledTranslations(\n            translationsEnabledX,\n            translationsEnabledY,\n            translationsEnabledZ,\n        );\n    }\n\n    /**\n     * Locks all translations that would have resulted from forces on\n     * the created rigid-body.\n     */\n    public lockTranslations(): RigidBodyDesc {\n        return this.enabledTranslations(false, false, false);\n    }\n\n    /**\n     * Allow rotation of this rigid-body only along specific axes.\n     * @param rotationsEnabledX - Are rotations along the X axis enabled?\n     * @param rotationsEnabledY - Are rotations along the y axis enabled?\n     * @param rotationsEnabledZ - Are rotations along the Z axis enabled?\n     */\n    public enabledRotations(\n        rotationsEnabledX: boolean,\n        rotationsEnabledY: boolean,\n        rotationsEnabledZ: boolean,\n    ): RigidBodyDesc {\n        this.rotationsEnabledX = rotationsEnabledX;\n        this.rotationsEnabledY = rotationsEnabledY;\n        this.rotationsEnabledZ = rotationsEnabledZ;\n        return this;\n    }\n\n    /**\n     * Allow rotation of this rigid-body only along specific axes.\n     * @param rotationsEnabledX - Are rotations along the X axis enabled?\n     * @param rotationsEnabledY - Are rotations along the y axis enabled?\n     * @param rotationsEnabledZ - Are rotations along the Z axis enabled?\n     * @deprecated use `this.enabledRotations` with the same arguments instead.\n     */\n    public restrictRotations(\n        rotationsEnabledX: boolean,\n        rotationsEnabledY: boolean,\n        rotationsEnabledZ: boolean,\n    ): RigidBodyDesc {\n        return this.enabledRotations(\n            rotationsEnabledX,\n            rotationsEnabledY,\n            rotationsEnabledZ,\n        );\n    }\n\n    /**\n     * Locks all rotations that would have resulted from forces on\n     * the created rigid-body.\n     */\n    public lockRotations(): RigidBodyDesc {\n        return this.restrictRotations(false, false, false);\n    }\n\n    // #endif\n\n    /**\n     * Sets the linear damping of the rigid-body to create.\n     *\n     * This will progressively slowdown the translational movement of the rigid-body.\n     *\n     * @param damping - The angular damping coefficient. Should be >= 0. The higher this\n     *                  value is, the stronger the translational slowdown will be.\n     */\n    public setLinearDamping(damping: number): RigidBodyDesc {\n        this.linearDamping = damping;\n        return this;\n    }\n\n    /**\n     * Sets the angular damping of the rigid-body to create.\n     *\n     * This will progressively slowdown the rotational movement of the rigid-body.\n     *\n     * @param damping - The angular damping coefficient. Should be >= 0. The higher this\n     *                  value is, the stronger the rotational slowdown will be.\n     */\n    public setAngularDamping(damping: number): RigidBodyDesc {\n        this.angularDamping = damping;\n        return this;\n    }\n\n    /**\n     * Sets whether or not the rigid-body to create can sleep.\n     *\n     * @param can - true if the rigid-body can sleep, false if it can't.\n     */\n    public setCanSleep(can: boolean): RigidBodyDesc {\n        this.canSleep = can;\n        return this;\n    }\n\n    /**\n     * Sets whether or not the rigid-body is to be created asleep.\n     *\n     * @param can - true if the rigid-body should be in sleep, default false.\n     */\n    setSleeping(sleeping: boolean): RigidBodyDesc {\n        this.sleeping = sleeping;\n        return this;\n    }\n\n    /**\n     * Sets whether Continuous Collision Detection (CCD) is enabled for this rigid-body.\n     *\n     * @param enabled - true if the rigid-body has CCD enabled.\n     */\n    public setCcdEnabled(enabled: boolean): RigidBodyDesc {\n        this.ccdEnabled = enabled;\n        return this;\n    }\n\n    /**\n     * Sets the user-defined object of this rigid-body.\n     *\n     * @param userData - The user-defined object to set.\n     */\n    public setUserData(data?: unknown): RigidBodyDesc {\n        this.userData = data;\n        return this;\n    }\n}\n","import {Rotation, Vector, VectorOps, RotationOps} from \"../math\";\nimport {\n    RawGenericJoint,\n    RawImpulseJointSet,\n    RawRigidBodySet,\n    RawJointAxis,\n} from \"../raw\";\nimport {RigidBody, RigidBodyHandle} from \"./rigid_body\";\nimport {RigidBodySet} from \"./rigid_body_set\";\n// #if DIM3\nimport {Quaternion} from \"../math\";\n// #endif\n\n/**\n * The integer identifier of a collider added to a `ColliderSet`.\n */\nexport type ImpulseJointHandle = number;\n\n/**\n * An enum grouping all possible types of joints:\n *\n * - `Revolute`: A revolute joint that removes all degrees of freedom between the affected\n *               bodies except for the rotation along one axis.\n * - `Fixed`: A fixed joint that removes all relative degrees of freedom between the affected bodies.\n * - `Prismatic`: A prismatic joint that removes all degrees of freedom between the affected\n *                bodies except for the translation along one axis.\n * - `Spherical`: (3D only) A spherical joint that removes all relative linear degrees of freedom between the affected bodies.\n */\nexport enum JointType {\n    Revolute,\n    Fixed,\n    Prismatic,\n    // #if DIM3\n    Spherical,\n    // #endif\n}\n\nexport enum MotorModel {\n    AccelerationBased,\n    ForceBased,\n}\n\nexport class ImpulseJoint {\n    protected rawSet: RawImpulseJointSet; // The ImpulseJoint won't need to free this.\n    protected bodySet: RigidBodySet; // The ImpulseJoint won’t need to free this.\n    handle: ImpulseJointHandle;\n\n    constructor(\n        rawSet: RawImpulseJointSet,\n        bodySet: RigidBodySet,\n        handle: ImpulseJointHandle,\n    ) {\n        this.rawSet = rawSet;\n        this.bodySet = bodySet;\n        this.handle = handle;\n    }\n\n    public static newTyped(\n        rawSet: RawImpulseJointSet,\n        bodySet: RigidBodySet,\n        handle: ImpulseJointHandle,\n    ): ImpulseJoint {\n        switch (rawSet.jointType(handle)) {\n            case JointType.Revolute:\n                return new RevoluteImpulseJoint(rawSet, bodySet, handle);\n            case JointType.Prismatic:\n                return new PrismaticImpulseJoint(rawSet, bodySet, handle);\n            case JointType.Fixed:\n                return new FixedImpulseJoint(rawSet, bodySet, handle);\n            // #if DIM3\n            case JointType.Spherical:\n                return new SphericalImpulseJoint(rawSet, bodySet, handle);\n            // #endif\n            default:\n                return new ImpulseJoint(rawSet, bodySet, handle);\n        }\n    }\n\n    /** @internal */\n    public finalizeDeserialization(bodySet: RigidBodySet) {\n        this.bodySet = bodySet;\n    }\n\n    /**\n     * Checks if this joint is still valid (i.e. that it has\n     * not been deleted from the joint set yet).\n     */\n    public isValid(): boolean {\n        return this.rawSet.contains(this.handle);\n    }\n\n    /**\n     * The first rigid-body this joint it attached to.\n     */\n    public body1(): RigidBody {\n        return this.bodySet.get(this.rawSet.jointBodyHandle1(this.handle));\n    }\n\n    /**\n     * The second rigid-body this joint is attached to.\n     */\n    public body2(): RigidBody {\n        return this.bodySet.get(this.rawSet.jointBodyHandle2(this.handle));\n    }\n\n    /**\n     * The type of this joint given as a string.\n     */\n    public type(): JointType {\n        return this.rawSet.jointType(this.handle);\n    }\n\n    // #if DIM3\n    /**\n     * The rotation quaternion that aligns this joint's first local axis to the `x` axis.\n     */\n    public frameX1(): Rotation {\n        return RotationOps.fromRaw(this.rawSet.jointFrameX1(this.handle));\n    }\n\n    // #endif\n\n    // #if DIM3\n    /**\n     * The rotation matrix that aligns this joint's second local axis to the `x` axis.\n     */\n    public frameX2(): Rotation {\n        return RotationOps.fromRaw(this.rawSet.jointFrameX2(this.handle));\n    }\n\n    // #endif\n\n    /**\n     * The position of the first anchor of this joint.\n     *\n     * The first anchor gives the position of the application point on the\n     * local frame of the first rigid-body it is attached to.\n     */\n    public anchor1(): Vector {\n        return VectorOps.fromRaw(this.rawSet.jointAnchor1(this.handle));\n    }\n\n    /**\n     * The position of the second anchor of this joint.\n     *\n     * The second anchor gives the position of the application point on the\n     * local frame of the second rigid-body it is attached to.\n     */\n    public anchor2(): Vector {\n        return VectorOps.fromRaw(this.rawSet.jointAnchor2(this.handle));\n    }\n\n    /**\n     * Sets the position of the first anchor of this joint.\n     *\n     * The first anchor gives the position of the application point on the\n     * local frame of the first rigid-body it is attached to.\n     */\n    public setAnchor1(newPos: Vector) {\n        const rawPoint = VectorOps.intoRaw(newPos);\n        this.rawSet.jointSetAnchor1(this.handle, rawPoint);\n        rawPoint.free();\n    }\n\n    /**\n     * Sets the position of the second anchor of this joint.\n     *\n     * The second anchor gives the position of the application point on the\n     * local frame of the second rigid-body it is attached to.\n     */\n    public setAnchor2(newPos: Vector) {\n        const rawPoint = VectorOps.intoRaw(newPos);\n        this.rawSet.jointSetAnchor2(this.handle, rawPoint);\n        rawPoint.free();\n    }\n\n    /**\n     * Controls whether contacts are computed between colliders attached\n     * to the rigid-bodies linked by this joint.\n     */\n    public setContactsEnabled(enabled: boolean) {\n        this.rawSet.jointSetContactsEnabled(this.handle, enabled);\n    }\n\n    /**\n     * Indicates if contacts are enabled between colliders attached\n     * to the rigid-bodies linked by this joint.\n     */\n    public contactsEnabled(): boolean {\n        return this.rawSet.jointContactsEnabled(this.handle);\n    }\n}\n\nexport class UnitImpulseJoint extends ImpulseJoint {\n    /**\n     * The axis left free by this joint.\n     */\n    protected rawAxis?(): RawJointAxis;\n\n    /**\n     * Are the limits enabled for this joint?\n     */\n    public limitsEnabled(): boolean {\n        return this.rawSet.jointLimitsEnabled(this.handle, this.rawAxis());\n    }\n\n    /**\n     * The min limit of this joint.\n     */\n    public limitsMin(): number {\n        return this.rawSet.jointLimitsMin(this.handle, this.rawAxis());\n    }\n\n    /**\n     * The max limit of this joint.\n     */\n    public limitsMax(): number {\n        return this.rawSet.jointLimitsMax(this.handle, this.rawAxis());\n    }\n\n    /**\n     * Sets the limits of this joint.\n     *\n     * @param min - The minimum bound of this joint’s free coordinate.\n     * @param max - The maximum bound of this joint’s free coordinate.\n     */\n    public setLimits(min: number, max: number) {\n        this.rawSet.jointSetLimits(this.handle, this.rawAxis(), min, max);\n    }\n\n    public configureMotorModel(model: MotorModel) {\n        this.rawSet.jointConfigureMotorModel(\n            this.handle,\n            this.rawAxis(),\n            model,\n        );\n    }\n\n    public configureMotorVelocity(targetVel: number, factor: number) {\n        this.rawSet.jointConfigureMotorVelocity(\n            this.handle,\n            this.rawAxis(),\n            targetVel,\n            factor,\n        );\n    }\n\n    public configureMotorPosition(\n        targetPos: number,\n        stiffness: number,\n        damping: number,\n    ) {\n        this.rawSet.jointConfigureMotorPosition(\n            this.handle,\n            this.rawAxis(),\n            targetPos,\n            stiffness,\n            damping,\n        );\n    }\n\n    public configureMotor(\n        targetPos: number,\n        targetVel: number,\n        stiffness: number,\n        damping: number,\n    ) {\n        this.rawSet.jointConfigureMotor(\n            this.handle,\n            this.rawAxis(),\n            targetPos,\n            targetVel,\n            stiffness,\n            damping,\n        );\n    }\n}\n\nexport class FixedImpulseJoint extends ImpulseJoint {}\n\nexport class PrismaticImpulseJoint extends UnitImpulseJoint {\n    public rawAxis(): RawJointAxis {\n        return RawJointAxis.X;\n    }\n}\n\nexport class RevoluteImpulseJoint extends UnitImpulseJoint {\n    public rawAxis(): RawJointAxis {\n        return RawJointAxis.AngX;\n    }\n}\n\n// #if DIM3\nexport class SphericalImpulseJoint extends ImpulseJoint {\n    /* Unsupported by this alpha release.\n    public configureMotorModel(model: MotorModel) {\n        this.rawSet.jointConfigureMotorModel(this.handle, model);\n    }\n\n    public configureMotorVelocity(targetVel: Vector, factor: number) {\n        this.rawSet.jointConfigureBallMotorVelocity(this.handle, targetVel.x, targetVel.y, targetVel.z, factor);\n    }\n\n    public configureMotorPosition(targetPos: Quaternion, stiffness: number, damping: number) {\n        this.rawSet.jointConfigureBallMotorPosition(this.handle, targetPos.w, targetPos.x, targetPos.y, targetPos.z, stiffness, damping);\n    }\n\n    public configureMotor(targetPos: Quaternion, targetVel: Vector, stiffness: number, damping: number) {\n        this.rawSet.jointConfigureBallMotor(this.handle,\n            targetPos.w, targetPos.x, targetPos.y, targetPos.z,\n            targetVel.x, targetVel.y, targetVel.z,\n            stiffness, damping);\n    }\n     */\n}\n// #endif\n\nexport class JointData {\n    anchor1: Vector;\n    anchor2: Vector;\n    axis: Vector;\n    frame1: Rotation;\n    frame2: Rotation;\n    jointType: JointType;\n    limitsEnabled: boolean;\n    limits: Array<number>;\n\n    private constructor() {}\n\n    /**\n     * Creates a new joint descriptor that builds a Fixed joint.\n     *\n     * A fixed joint removes all the degrees of freedom between the affected bodies, ensuring their\n     * anchor and local frames coincide in world-space.\n     *\n     * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param frame1 - The reference orientation of the joint wrt. the first rigid-body.\n     * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param frame2 - The reference orientation of the joint wrt. the second rigid-body.\n     */\n    public static fixed(\n        anchor1: Vector,\n        frame1: Rotation,\n        anchor2: Vector,\n        frame2: Rotation,\n    ): JointData {\n        let res = new JointData();\n        res.anchor1 = anchor1;\n        res.anchor2 = anchor2;\n        res.frame1 = frame1;\n        res.frame2 = frame2;\n        res.jointType = JointType.Fixed;\n        return res;\n    }\n\n\n    // #if DIM3\n    /**\n     * Create a new joint descriptor that builds spherical joints.\n     *\n     * A spherical joint allows three relative rotational degrees of freedom\n     * by preventing any relative translation between the anchors of the\n     * two attached rigid-bodies.\n     *\n     * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     */\n    public static spherical(anchor1: Vector, anchor2: Vector): JointData {\n        let res = new JointData();\n        res.anchor1 = anchor1;\n        res.anchor2 = anchor2;\n        res.jointType = JointType.Spherical;\n        return res;\n    }\n\n    /**\n     * Creates a new joint descriptor that builds a Prismatic joint.\n     *\n     * A prismatic joint removes all the degrees of freedom between the\n     * affected bodies, except for the translation along one axis.\n     *\n     * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param axis - Axis of the joint, expressed in the local-space of the rigid-bodies it is attached to.\n     */\n    public static prismatic(\n        anchor1: Vector,\n        anchor2: Vector,\n        axis: Vector,\n    ): JointData {\n        let res = new JointData();\n        res.anchor1 = anchor1;\n        res.anchor2 = anchor2;\n        res.axis = axis;\n        res.jointType = JointType.Prismatic;\n        return res;\n    }\n\n    /**\n     * Create a new joint descriptor that builds Revolute joints.\n     *\n     * A revolute joint removes all degrees of freedom between the affected\n     * bodies except for the rotation along one axis.\n     *\n     * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n     *                  local-space of the rigid-body.\n     * @param axis - Axis of the joint, expressed in the local-space of the rigid-bodies it is attached to.\n     */\n    public static revolute(\n        anchor1: Vector,\n        anchor2: Vector,\n        axis: Vector,\n    ): JointData {\n        let res = new JointData();\n        res.anchor1 = anchor1;\n        res.anchor2 = anchor2;\n        res.axis = axis;\n        res.jointType = JointType.Revolute;\n        return res;\n    }\n\n    // #endif\n\n    public intoRaw(): RawGenericJoint {\n        let rawA1 = VectorOps.intoRaw(this.anchor1);\n        let rawA2 = VectorOps.intoRaw(this.anchor2);\n        let rawAx;\n        let result;\n        let limitsEnabled = false;\n        let limitsMin = 0.0;\n        let limitsMax = 0.0;\n\n        switch (this.jointType) {\n            case JointType.Fixed:\n                let rawFra1 = RotationOps.intoRaw(this.frame1);\n                let rawFra2 = RotationOps.intoRaw(this.frame2);\n                result = RawGenericJoint.fixed(rawA1, rawFra1, rawA2, rawFra2);\n                rawFra1.free();\n                rawFra2.free();\n                break;\n            case JointType.Prismatic:\n                rawAx = VectorOps.intoRaw(this.axis);\n\n                if (!!this.limitsEnabled) {\n                    limitsEnabled = true;\n                    limitsMin = this.limits[0];\n                    limitsMax = this.limits[1];\n                }\n\n\n                // #if DIM3\n                result = RawGenericJoint.prismatic(\n                    rawA1,\n                    rawA2,\n                    rawAx,\n                    limitsEnabled,\n                    limitsMin,\n                    limitsMax,\n                );\n                // #endif\n\n                rawAx.free();\n                break;\n            // #if DIM3\n            case JointType.Spherical:\n                result = RawGenericJoint.spherical(rawA1, rawA2);\n                break;\n            case JointType.Revolute:\n                rawAx = VectorOps.intoRaw(this.axis);\n                result = RawGenericJoint.revolute(rawA1, rawA2, rawAx);\n                rawAx.free();\n                break;\n            // #endif\n        }\n\n        rawA1.free();\n        rawA2.free();\n\n        return result;\n    }\n}\n","/**\n * A rule applied to combine coefficients.\n *\n * Use this when configuring the `ColliderDesc` to specify\n * how friction and restitution coefficient should be combined\n * in a contact.\n */\nexport enum CoefficientCombineRule {\n    Average = 0,\n    Min = 1,\n    Multiply = 2,\n    Max = 3,\n}\n","\n// #if DIM3\nexport enum FeatureType {\n    Vertex,\n    Edge,\n    Face,\n    Unknown,\n}\n// #endif\n","import {Vector, VectorOps, Rotation, RotationOps} from \"../math\";\nimport {RawColliderSet, RawShape} from \"../raw\";\nimport {ShapeContact} from \"./contact\";\nimport {PointProjection} from \"./point\";\nimport {Ray, RayIntersection} from \"./ray\";\nimport {ShapeTOI} from \"./toi\";\nimport {ColliderHandle} from \"./collider\";\n\nexport abstract class Shape {\n    public abstract intoRaw(): RawShape;\n\n    /**\n     * The concrete type of this shape.\n     */\n    public abstract get type(): ShapeType;\n\n    /**\n     * instant mode without cache\n     */\n    public static fromRaw(\n        rawSet: RawColliderSet,\n        handle: ColliderHandle,\n    ): Shape {\n        const rawType = rawSet.coShapeType(handle);\n\n        let extents: Vector;\n        let borderRadius: number;\n        let vs: Float32Array;\n        let indices: Uint32Array;\n        let halfHeight: number;\n        let radius: number;\n\n        switch (rawType) {\n            case ShapeType.Ball:\n                return new Ball(rawSet.coRadius(handle));\n            case ShapeType.Cuboid:\n                extents = rawSet.coHalfExtents(handle);\n\n                // #if DIM3\n                return new Cuboid(extents.x, extents.y, extents.z);\n            // #endif\n\n            case ShapeType.RoundCuboid:\n                extents = rawSet.coHalfExtents(handle);\n                borderRadius = rawSet.coRoundRadius(handle);\n\n\n                // #if DIM3\n                return new RoundCuboid(\n                    extents.x,\n                    extents.y,\n                    extents.z,\n                    borderRadius,\n                );\n            // #endif\n\n            case ShapeType.Capsule:\n                halfHeight = rawSet.coHalfHeight(handle);\n                radius = rawSet.coRadius(handle);\n                return new Capsule(halfHeight, radius);\n            case ShapeType.Segment:\n                vs = rawSet.coVertices(handle);\n\n\n                // #if DIM3\n                return new Segment(\n                    VectorOps.new(vs[0], vs[1], vs[2]),\n                    VectorOps.new(vs[3], vs[4], vs[5]),\n                );\n            // #endif\n\n            case ShapeType.Polyline:\n                vs = rawSet.coVertices(handle);\n                indices = rawSet.coIndices(handle);\n                return new Polyline(vs, indices);\n            case ShapeType.Triangle:\n                vs = rawSet.coVertices(handle);\n\n\n                // #if DIM3\n                return new Triangle(\n                    VectorOps.new(vs[0], vs[1], vs[2]),\n                    VectorOps.new(vs[3], vs[4], vs[5]),\n                    VectorOps.new(vs[6], vs[7], vs[8]),\n                );\n            // #endif\n\n            case ShapeType.RoundTriangle:\n                vs = rawSet.coVertices(handle);\n                borderRadius = rawSet.coRoundRadius(handle);\n\n\n                // #if DIM3\n                return new RoundTriangle(\n                    VectorOps.new(vs[0], vs[1], vs[2]),\n                    VectorOps.new(vs[3], vs[4], vs[5]),\n                    VectorOps.new(vs[6], vs[7], vs[8]),\n                    borderRadius,\n                );\n            // #endif\n\n            case ShapeType.TriMesh:\n                vs = rawSet.coVertices(handle);\n                indices = rawSet.coIndices(handle);\n                return new TriMesh(vs, indices);\n\n            case ShapeType.HeightField:\n                const scale = rawSet.coHeightfieldScale(handle);\n                const heights = rawSet.coHeightfieldHeights(handle);\n\n\n                // #if DIM3\n                const nrows = rawSet.coHeightfieldNRows(handle);\n                const ncols = rawSet.coHeightfieldNCols(handle);\n                return new Heightfield(nrows, ncols, heights, scale);\n            // #endif\n\n\n            // #if DIM3\n            case ShapeType.ConvexPolyhedron:\n                vs = rawSet.coVertices(handle);\n                indices = rawSet.coIndices(handle);\n                return new ConvexPolyhedron(vs, indices);\n            case ShapeType.RoundConvexPolyhedron:\n                vs = rawSet.coVertices(handle);\n                indices = rawSet.coIndices(handle);\n                borderRadius = rawSet.coRoundRadius(handle);\n                return new RoundConvexPolyhedron(vs, indices, borderRadius);\n            case ShapeType.Cylinder:\n                halfHeight = rawSet.coHalfHeight(handle);\n                radius = rawSet.coRadius(handle);\n                return new Cylinder(halfHeight, radius);\n            case ShapeType.RoundCylinder:\n                halfHeight = rawSet.coHalfHeight(handle);\n                radius = rawSet.coRadius(handle);\n                borderRadius = rawSet.coRoundRadius(handle);\n                return new RoundCylinder(halfHeight, radius, borderRadius);\n            case ShapeType.Cone:\n                halfHeight = rawSet.coHalfHeight(handle);\n                radius = rawSet.coRadius(handle);\n                return new Cone(halfHeight, radius);\n            case ShapeType.RoundCone:\n                halfHeight = rawSet.coHalfHeight(handle);\n                radius = rawSet.coRadius(handle);\n                borderRadius = rawSet.coRoundRadius(handle);\n                return new RoundCone(halfHeight, radius, borderRadius);\n            // #endif\n\n            default:\n                throw new Error(\"unknown shape type: \" + rawType);\n        }\n    }\n\n    /**\n     * Computes the time of impact between two moving shapes.\n     * @param shapePos1 - The initial position of this sahpe.\n     * @param shapeRot1 - The rotation of this shape.\n     * @param shapeVel1 - The velocity of this shape.\n     * @param shape2 - The second moving shape.\n     * @param shapePos2 - The initial position of the second shape.\n     * @param shapeRot2 - The rotation of the second shape.\n     * @param shapeVel2 - The velocity of the second shape.\n     * @param maxToi - The maximum time when the inpact can happen.\n     * @returns If the two moving shapes collider at some point along their trajectories, this retruns the\n     *  time at which the two shape collider as well as the contact information durning the impact. Returns\n     *  `null`if the two shapes never collide along their paths.\n     */\n    public castShape(\n        shapePos1: Vector,\n        shapeRot1: Rotation,\n        shapeVel1: Vector,\n        shape2: Shape,\n        shapePos2: Vector,\n        shapeRot2: Rotation,\n        shapeVel2: Vector,\n        maxToi: number,\n    ): ShapeTOI | null {\n        let rawPos1 = VectorOps.intoRaw(shapePos1);\n        let rawRot1 = RotationOps.intoRaw(shapeRot1);\n        let rawVel1 = VectorOps.intoRaw(shapeVel1);\n        let rawPos2 = VectorOps.intoRaw(shapePos2);\n        let rawRot2 = RotationOps.intoRaw(shapeRot2);\n        let rawVel2 = VectorOps.intoRaw(shapeVel2);\n\n        let rawShape1 = this.intoRaw();\n        let rawShape2 = shape2.intoRaw();\n\n        let result = ShapeTOI.fromRaw(\n            null,\n            rawShape1.castShape(\n                rawPos1,\n                rawRot1,\n                rawVel1,\n                rawShape2,\n                rawPos2,\n                rawRot2,\n                rawVel2,\n                maxToi,\n            ),\n        );\n\n        rawPos1.free();\n        rawRot1.free();\n        rawVel1.free();\n        rawPos2.free();\n        rawRot2.free();\n        rawVel2.free();\n\n        rawShape1.free();\n        rawShape2.free();\n\n        return result;\n    }\n\n    /**\n     * Tests if this shape intersects another shape.\n     *\n     * @param shapePos1 - The position of this shape.\n     * @param shapeRot1 - The rotation of this shape.\n     * @param shape2  - The second shape to test.\n     * @param shapePos2 - The position of the second shape.\n     * @param shapeRot2 - The rotation of the second shape.\n     * @returns `true` if the two shapes intersect, `false` if they don’t.\n     */\n    public intersectsShape(\n        shapePos1: Vector,\n        shapeRot1: Rotation,\n        shape2: Shape,\n        shapePos2: Vector,\n        shapeRot2: Rotation,\n    ): boolean {\n        let rawPos1 = VectorOps.intoRaw(shapePos1);\n        let rawRot1 = RotationOps.intoRaw(shapeRot1);\n        let rawPos2 = VectorOps.intoRaw(shapePos2);\n        let rawRot2 = RotationOps.intoRaw(shapeRot2);\n\n        let rawShape1 = this.intoRaw();\n        let rawShape2 = shape2.intoRaw();\n\n        let result = rawShape1.intersectsShape(\n            rawPos1,\n            rawRot1,\n            rawShape2,\n            rawPos2,\n            rawRot2,\n        );\n\n        rawPos1.free();\n        rawRot1.free();\n        rawPos2.free();\n        rawRot2.free();\n\n        rawShape1.free();\n        rawShape2.free();\n\n        return result;\n    }\n\n    /**\n     * Computes one pair of contact points between two shapes.\n     *\n     * @param shapePos1 - The initial position of this sahpe.\n     * @param shapeRot1 - The rotation of this shape.\n     * @param shape2 - The second shape.\n     * @param shapePos2 - The initial position of the second shape.\n     * @param shapeRot2 - The rotation of the second shape.\n     * @param prediction - The prediction value, if the shapes are separated by a distance greater than this value, test will fail.\n     * @returns `null` if the shapes are separated by a distance greater than prediction, otherwise contact details. The result is given in world-space.\n     */\n    contactShape(\n        shapePos1: Vector,\n        shapeRot1: Rotation,\n        shape2: Shape,\n        shapePos2: Vector,\n        shapeRot2: Rotation,\n        prediction: number,\n    ): ShapeContact | null {\n        let rawPos1 = VectorOps.intoRaw(shapePos1);\n        let rawRot1 = RotationOps.intoRaw(shapeRot1);\n        let rawPos2 = VectorOps.intoRaw(shapePos2);\n        let rawRot2 = RotationOps.intoRaw(shapeRot2);\n\n        let rawShape1 = this.intoRaw();\n        let rawShape2 = shape2.intoRaw();\n\n        let result = ShapeContact.fromRaw(\n            rawShape1.contactShape(\n                rawPos1,\n                rawRot1,\n                rawShape2,\n                rawPos2,\n                rawRot2,\n                prediction,\n            ),\n        );\n\n        rawPos1.free();\n        rawRot1.free();\n        rawPos2.free();\n        rawRot2.free();\n\n        rawShape1.free();\n        rawShape2.free();\n\n        return result;\n    }\n\n    containsPoint(\n        shapePos: Vector,\n        shapeRot: Rotation,\n        point: Vector,\n    ): boolean {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawPoint = VectorOps.intoRaw(point);\n        let rawShape = this.intoRaw();\n\n        let result = rawShape.containsPoint(rawPos, rawRot, rawPoint);\n\n        rawPos.free();\n        rawRot.free();\n        rawPoint.free();\n        rawShape.free();\n\n        return result;\n    }\n\n    projectPoint(\n        shapePos: Vector,\n        shapeRot: Rotation,\n        point: Vector,\n        solid: boolean,\n    ): PointProjection {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawPoint = VectorOps.intoRaw(point);\n        let rawShape = this.intoRaw();\n\n        let result = PointProjection.fromRaw(\n            rawShape.projectPoint(rawPos, rawRot, rawPoint, solid),\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawPoint.free();\n        rawShape.free();\n\n        return result;\n    }\n\n    intersectsRay(\n        ray: Ray,\n        shapePos: Vector,\n        shapeRot: Rotation,\n        maxToi: number,\n    ): boolean {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawRayOrig = VectorOps.intoRaw(ray.origin);\n        let rawRayDir = VectorOps.intoRaw(ray.dir);\n        let rawShape = this.intoRaw();\n\n        let result = rawShape.intersectsRay(\n            rawPos,\n            rawRot,\n            rawRayOrig,\n            rawRayDir,\n            maxToi,\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawRayOrig.free();\n        rawRayDir.free();\n        rawShape.free();\n\n        return result;\n    }\n\n    castRay(\n        ray: Ray,\n        shapePos: Vector,\n        shapeRot: Rotation,\n        maxToi: number,\n        solid: boolean,\n    ): number {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawRayOrig = VectorOps.intoRaw(ray.origin);\n        let rawRayDir = VectorOps.intoRaw(ray.dir);\n        let rawShape = this.intoRaw();\n\n        let result = rawShape.castRay(\n            rawPos,\n            rawRot,\n            rawRayOrig,\n            rawRayDir,\n            maxToi,\n            solid,\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawRayOrig.free();\n        rawRayDir.free();\n        rawShape.free();\n\n        return result;\n    }\n\n    castRayAndGetNormal(\n        ray: Ray,\n        shapePos: Vector,\n        shapeRot: Rotation,\n        maxToi: number,\n        solid: boolean,\n    ): RayIntersection {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawRayOrig = VectorOps.intoRaw(ray.origin);\n        let rawRayDir = VectorOps.intoRaw(ray.dir);\n        let rawShape = this.intoRaw();\n\n        let result = RayIntersection.fromRaw(\n            rawShape.castRayAndGetNormal(\n                rawPos,\n                rawRot,\n                rawRayOrig,\n                rawRayDir,\n                maxToi,\n                solid,\n            ),\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawRayOrig.free();\n        rawRayDir.free();\n        rawShape.free();\n\n        return result;\n    }\n}\n\n\n// #if DIM3\n/**\n * An enumeration representing the type of a shape.\n */\nexport enum ShapeType {\n    Ball = 0,\n    Cuboid = 1,\n    Capsule = 2,\n    Segment = 3,\n    Polyline = 4,\n    Triangle = 5,\n    TriMesh = 6,\n    HeightField = 7,\n    // Compound = 8,\n    ConvexPolyhedron = 9,\n    Cylinder = 10,\n    Cone = 11,\n    RoundCuboid = 12,\n    RoundTriangle = 13,\n    RoundCylinder = 14,\n    RoundCone = 15,\n    RoundConvexPolyhedron = 16,\n}\n\n// #endif\n\n/**\n * A shape that is a sphere in 3D and a circle in 2D.\n */\nexport class Ball extends Shape {\n    readonly type = ShapeType.Ball;\n\n    /**\n     * The balls radius.\n     */\n    radius: number;\n\n    /**\n     * Creates a new ball with the given radius.\n     * @param radius - The balls radius.\n     */\n    constructor(radius: number) {\n        super();\n        this.radius = radius;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.ball(this.radius);\n    }\n}\n\n/**\n * A shape that is a box in 3D and a rectangle in 2D.\n */\nexport class Cuboid extends Shape {\n    readonly type = ShapeType.Cuboid;\n\n    /**\n     * The half extent of the cuboid along each coordinate axis.\n     */\n    halfExtents: Vector;\n\n\n    // #if DIM3\n    /**\n     * Creates a new 3D cuboid.\n     * @param hx - The half width of the cuboid.\n     * @param hy - The half height of the cuboid.\n     * @param hz - The half depth of the cuboid.\n     */\n    constructor(hx: number, hy: number, hz: number) {\n        super();\n        this.halfExtents = VectorOps.new(hx, hy, hz);\n    }\n\n    // #endif\n\n    public intoRaw(): RawShape {\n\n        // #if DIM3\n        return RawShape.cuboid(\n            this.halfExtents.x,\n            this.halfExtents.y,\n            this.halfExtents.z,\n        );\n        // #endif\n    }\n}\n\n/**\n * A shape that is a box in 3D and a rectangle in 2D, with round corners.\n */\nexport class RoundCuboid extends Shape {\n    readonly type = ShapeType.RoundCuboid;\n\n    /**\n     * The half extent of the cuboid along each coordinate axis.\n     */\n    halfExtents: Vector;\n\n    /**\n     * The radius of the cuboid's round border.\n     */\n    borderRadius: number;\n\n\n    // #if DIM3\n    /**\n     * Creates a new 3D cuboid.\n     * @param hx - The half width of the cuboid.\n     * @param hy - The half height of the cuboid.\n     * @param hz - The half depth of the cuboid.\n     * @param borderRadius - The radius of the borders of this cuboid. This will\n     *   effectively increase the half-extents of the cuboid by this radius.\n     */\n    constructor(hx: number, hy: number, hz: number, borderRadius: number) {\n        super();\n        this.halfExtents = VectorOps.new(hx, hy, hz);\n        this.borderRadius = borderRadius;\n    }\n\n    // #endif\n\n    public intoRaw(): RawShape {\n\n        // #if DIM3\n        return RawShape.roundCuboid(\n            this.halfExtents.x,\n            this.halfExtents.y,\n            this.halfExtents.z,\n            this.borderRadius,\n        );\n        // #endif\n    }\n}\n\n/**\n * A shape that is a capsule.\n */\nexport class Capsule extends Shape {\n    readonly type = ShapeType.Capsule;\n\n    /**\n     * The radius of the capsule's basis.\n     */\n    radius: number;\n\n    /**\n     * The capsule's half height, along the `y` axis.\n     */\n    halfHeight: number;\n\n    /**\n     * Creates a new capsule with the given radius and half-height.\n     * @param halfHeight - The balls half-height along the `y` axis.\n     * @param radius - The balls radius.\n     */\n    constructor(halfHeight: number, radius: number) {\n        super();\n        this.halfHeight = halfHeight;\n        this.radius = radius;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.capsule(this.halfHeight, this.radius);\n    }\n}\n\n/**\n * A shape that is a segment.\n */\nexport class Segment extends Shape {\n    readonly type = ShapeType.Segment;\n\n    /**\n     * The first point of the segment.\n     */\n    a: Vector;\n\n    /**\n     * The second point of the segment.\n     */\n    b: Vector;\n\n    /**\n     * Creates a new segment shape.\n     * @param a - The first point of the segment.\n     * @param b - The second point of the segment.\n     */\n    constructor(a: Vector, b: Vector) {\n        super();\n        this.a = a;\n        this.b = b;\n    }\n\n    public intoRaw(): RawShape {\n        let ra = VectorOps.intoRaw(this.a);\n        let rb = VectorOps.intoRaw(this.b);\n        let result = RawShape.segment(ra, rb);\n        ra.free();\n        rb.free();\n        return result;\n    }\n}\n\n/**\n * A shape that is a segment.\n */\nexport class Triangle extends Shape {\n    readonly type = ShapeType.Triangle;\n\n    /**\n     * The first point of the triangle.\n     */\n    a: Vector;\n\n    /**\n     * The second point of the triangle.\n     */\n    b: Vector;\n\n    /**\n     * The second point of the triangle.\n     */\n    c: Vector;\n\n    /**\n     * Creates a new triangle shape.\n     *\n     * @param a - The first point of the triangle.\n     * @param b - The second point of the triangle.\n     * @param c - The third point of the triangle.\n     */\n    constructor(a: Vector, b: Vector, c: Vector) {\n        super();\n        this.a = a;\n        this.b = b;\n        this.c = c;\n    }\n\n    public intoRaw(): RawShape {\n        let ra = VectorOps.intoRaw(this.a);\n        let rb = VectorOps.intoRaw(this.b);\n        let rc = VectorOps.intoRaw(this.c);\n        let result = RawShape.triangle(ra, rb, rc);\n        ra.free();\n        rb.free();\n        rc.free();\n        return result;\n    }\n}\n\n/**\n * A shape that is a triangle with round borders and a non-zero thickness.\n */\nexport class RoundTriangle extends Shape {\n    readonly type = ShapeType.RoundTriangle;\n\n    /**\n     * The first point of the triangle.\n     */\n    a: Vector;\n\n    /**\n     * The second point of the triangle.\n     */\n    b: Vector;\n\n    /**\n     * The second point of the triangle.\n     */\n    c: Vector;\n\n    /**\n     * The radius of the triangles's rounded edges and vertices.\n     * In 3D, this is also equal to half the thickness of the round triangle.\n     */\n    borderRadius: number;\n\n    /**\n     * Creates a new triangle shape with round corners.\n     *\n     * @param a - The first point of the triangle.\n     * @param b - The second point of the triangle.\n     * @param c - The third point of the triangle.\n     * @param borderRadius - The radius of the borders of this triangle. In 3D,\n     *   this is also equal to half the thickness of the triangle.\n     */\n    constructor(a: Vector, b: Vector, c: Vector, borderRadius: number) {\n        super();\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.borderRadius = borderRadius;\n    }\n\n    public intoRaw(): RawShape {\n        let ra = VectorOps.intoRaw(this.a);\n        let rb = VectorOps.intoRaw(this.b);\n        let rc = VectorOps.intoRaw(this.c);\n        let result = RawShape.roundTriangle(ra, rb, rc, this.borderRadius);\n        ra.free();\n        rb.free();\n        rc.free();\n        return result;\n    }\n}\n\n/**\n * A shape that is a triangle mesh.\n */\nexport class Polyline extends Shape {\n    readonly type = ShapeType.Polyline;\n\n    /**\n     * The vertices of the polyline.\n     */\n    vertices: Float32Array;\n\n    /**\n     * The indices of the segments.\n     */\n    indices: Uint32Array;\n\n    /**\n     * Creates a new polyline shape.\n     *\n     * @param vertices - The coordinates of the polyline's vertices.\n     * @param indices - The indices of the polyline's segments. If this is `null` or not provided, then\n     *    the vertices are assumed to form a line strip.\n     */\n    constructor(vertices: Float32Array, indices?: Uint32Array) {\n        super();\n        this.vertices = vertices;\n        this.indices = indices ?? new Uint32Array(0);\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.polyline(this.vertices, this.indices);\n    }\n}\n\n/**\n * A shape that is a triangle mesh.\n */\nexport class TriMesh extends Shape {\n    readonly type = ShapeType.TriMesh;\n\n    /**\n     * The vertices of the triangle mesh.\n     */\n    vertices: Float32Array;\n\n    /**\n     * The indices of the triangles.\n     */\n    indices: Uint32Array;\n\n    /**\n     * Creates a new triangle mesh shape.\n     *\n     * @param vertices - The coordinates of the triangle mesh's vertices.\n     * @param indices - The indices of the triangle mesh's triangles.\n     */\n    constructor(vertices: Float32Array, indices: Uint32Array) {\n        super();\n        this.vertices = vertices;\n        this.indices = indices;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.trimesh(this.vertices, this.indices);\n    }\n}\n\n\n// #if DIM3\n/**\n * A shape that is a convex polygon.\n */\nexport class ConvexPolyhedron extends Shape {\n    readonly type = ShapeType.ConvexPolyhedron;\n\n    /**\n     * The vertices of the convex polygon.\n     */\n    vertices: Float32Array;\n\n    /**\n     * The indices of the convex polygon.\n     */\n    indices?: Uint32Array | null;\n\n    /**\n     * Creates a new convex polygon shape.\n     *\n     * @param vertices - The coordinates of the convex polygon's vertices.\n     * @param indices - The index buffer of this convex mesh. If this is `null`\n     *   or `undefined`, the convex-hull of the input vertices will be computed\n     *   automatically. Otherwise, it will be assumed that the mesh you provide\n     *   is already convex.\n     */\n    constructor(vertices: Float32Array, indices?: Uint32Array | null) {\n        super();\n        this.vertices = vertices;\n        this.indices = indices;\n    }\n\n    public intoRaw(): RawShape {\n        if (!!this.indices) {\n            return RawShape.convexMesh(this.vertices, this.indices);\n        } else {\n            return RawShape.convexHull(this.vertices);\n        }\n    }\n}\n\n/**\n * A shape that is a convex polygon.\n */\nexport class RoundConvexPolyhedron extends Shape {\n    readonly type = ShapeType.RoundConvexPolyhedron;\n\n    /**\n     * The vertices of the convex polygon.\n     */\n    vertices: Float32Array;\n\n    /**\n     * The indices of the convex polygon.\n     */\n    indices?: Uint32Array;\n\n    /**\n     * The radius of the convex polyhedron's rounded edges and vertices.\n     */\n    borderRadius: number;\n\n    /**\n     * Creates a new convex polygon shape.\n     *\n     * @param vertices - The coordinates of the convex polygon's vertices.\n     * @param indices - The index buffer of this convex mesh. If this is `null`\n     *   or `undefined`, the convex-hull of the input vertices will be computed\n     *   automatically. Otherwise, it will be assumed that the mesh you provide\n     *   is already convex.\n     * @param borderRadius - The radius of the borders of this convex polyhedron.\n     */\n    constructor(\n        vertices: Float32Array,\n        indices: Uint32Array | null | undefined,\n        borderRadius: number,\n    ) {\n        super();\n        this.vertices = vertices;\n        this.indices = indices;\n        this.borderRadius = borderRadius;\n    }\n\n    public intoRaw(): RawShape {\n        if (!!this.indices) {\n            return RawShape.roundConvexMesh(\n                this.vertices,\n                this.indices,\n                this.borderRadius,\n            );\n        } else {\n            return RawShape.roundConvexHull(this.vertices, this.borderRadius);\n        }\n    }\n}\n\n/**\n * A shape that is a heightfield.\n */\nexport class Heightfield extends Shape {\n    readonly type = ShapeType.HeightField;\n\n    /**\n     * The number of rows in the heights matrix.\n     */\n    nrows: number;\n\n    /**\n     * The number of columns in the heights matrix.\n     */\n    ncols: number;\n\n    /**\n     * The heights of the heightfield along its local `y` axis,\n     * provided as a matrix stored in column-major order.\n     */\n    heights: Float32Array;\n\n    /**\n     * The dimensions of the heightfield's local `x,z` plane.\n     */\n    scale: Vector;\n\n    /**\n     * Creates a new heightfield shape.\n     *\n     * @param nrows − The number of rows in the heights matrix.\n     * @param ncols - The number of columns in the heights matrix.\n     * @param heights - The heights of the heightfield along its local `y` axis,\n     *                  provided as a matrix stored in column-major order.\n     * @param scale - The dimensions of the heightfield's local `x,z` plane.\n     */\n    constructor(\n        nrows: number,\n        ncols: number,\n        heights: Float32Array,\n        scale: Vector,\n    ) {\n        super();\n        this.nrows = nrows;\n        this.ncols = ncols;\n        this.heights = heights;\n        this.scale = scale;\n    }\n\n    public intoRaw(): RawShape {\n        let rawScale = VectorOps.intoRaw(this.scale);\n        let rawShape = RawShape.heightfield(\n            this.nrows,\n            this.ncols,\n            this.heights,\n            rawScale,\n        );\n        rawScale.free();\n        return rawShape;\n    }\n}\n\n/**\n * A shape that is a 3D cylinder.\n */\nexport class Cylinder extends Shape {\n    readonly type = ShapeType.Cylinder;\n\n    /**\n     * The radius of the cylinder's basis.\n     */\n    radius: number;\n\n    /**\n     * The cylinder's half height, along the `y` axis.\n     */\n    halfHeight: number;\n\n    /**\n     * Creates a new cylinder with the given radius and half-height.\n     * @param halfHeight - The balls half-height along the `y` axis.\n     * @param radius - The balls radius.\n     */\n    constructor(halfHeight: number, radius: number) {\n        super();\n        this.halfHeight = halfHeight;\n        this.radius = radius;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.cylinder(this.halfHeight, this.radius);\n    }\n}\n\n/**\n * A shape that is a 3D cylinder with round corners.\n */\nexport class RoundCylinder extends Shape {\n    readonly type = ShapeType.RoundCylinder;\n\n    /**\n     * The radius of the cylinder's basis.\n     */\n    radius: number;\n\n    /**\n     * The cylinder's half height, along the `y` axis.\n     */\n    halfHeight: number;\n\n    /**\n     * The radius of the cylinder's rounded edges and vertices.\n     */\n    borderRadius: number;\n\n    /**\n     * Creates a new cylinder with the given radius and half-height.\n     * @param halfHeight - The balls half-height along the `y` axis.\n     * @param radius - The balls radius.\n     * @param borderRadius - The radius of the borders of this cylinder.\n     */\n    constructor(halfHeight: number, radius: number, borderRadius: number) {\n        super();\n        this.borderRadius = borderRadius;\n        this.halfHeight = halfHeight;\n        this.radius = radius;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.roundCylinder(\n            this.halfHeight,\n            this.radius,\n            this.borderRadius,\n        );\n    }\n}\n\n/**\n * A shape that is a 3D cone.\n */\nexport class Cone extends Shape {\n    readonly type = ShapeType.Cone;\n\n    /**\n     * The radius of the cone's basis.\n     */\n    radius: number;\n\n    /**\n     * The cone's half height, along the `y` axis.\n     */\n    halfHeight: number;\n\n    /**\n     * Creates a new cone with the given radius and half-height.\n     * @param halfHeight - The balls half-height along the `y` axis.\n     * @param radius - The balls radius.\n     */\n    constructor(halfHeight: number, radius: number) {\n        super();\n        this.halfHeight = halfHeight;\n        this.radius = radius;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.cone(this.halfHeight, this.radius);\n    }\n}\n\n/**\n * A shape that is a 3D cone with round corners.\n */\nexport class RoundCone extends Shape {\n    readonly type = ShapeType.RoundCone;\n\n    /**\n     * The radius of the cone's basis.\n     */\n    radius: number;\n\n    /**\n     * The cone's half height, along the `y` axis.\n     */\n    halfHeight: number;\n\n    /**\n     * The radius of the cylinder's rounded edges and vertices.\n     */\n    borderRadius: number;\n\n    /**\n     * Creates a new cone with the given radius and half-height.\n     * @param halfHeight - The balls half-height along the `y` axis.\n     * @param radius - The balls radius.\n     * @param borderRadius - The radius of the borders of this cone.\n     */\n    constructor(halfHeight: number, radius: number, borderRadius: number) {\n        super();\n        this.halfHeight = halfHeight;\n        this.radius = radius;\n        this.borderRadius = borderRadius;\n    }\n\n    public intoRaw(): RawShape {\n        return RawShape.roundCone(\n            this.halfHeight,\n            this.radius,\n            this.borderRadius,\n        );\n    }\n}\n\n// #endif\n","import {RawColliderSet} from \"../raw\";\nimport {Rotation, RotationOps, Vector, VectorOps} from \"../math\";\nimport {\n    CoefficientCombineRule,\n    RigidBody,\n    RigidBodyHandle,\n    RigidBodySet,\n} from \"../dynamics\";\nimport {ActiveHooks, ActiveEvents} from \"../pipeline\";\nimport {InteractionGroups} from \"./interaction_groups\";\nimport {\n    Shape,\n    Cuboid,\n    Ball,\n    ShapeType,\n    Capsule,\n    TriMesh,\n    Polyline,\n    Heightfield,\n    Segment,\n    Triangle,\n    RoundTriangle,\n    RoundCuboid,\n    // #if DIM3\n    Cylinder,\n    RoundCylinder,\n    Cone,\n    RoundCone,\n    ConvexPolyhedron,\n    RoundConvexPolyhedron,\n    // #endif\n} from \"./shape\";\nimport {Ray, RayIntersection} from \"./ray\";\nimport {PointProjection} from \"./point\";\nimport {ShapeColliderTOI, ShapeTOI} from \"./toi\";\nimport {ShapeContact} from \"./contact\";\nimport {ColliderSet} from \"./collider_set\";\n\n/**\n * Flags affecting whether collision-detection happens between two colliders\n * depending on the type of rigid-bodies they are attached to.\n */\nexport enum ActiveCollisionTypes {\n    /**\n     * Enable collision-detection between a collider attached to a dynamic body\n     * and another collider attached to a dynamic body.\n     */\n    DYNAMIC_DYNAMIC = 0b0000_0000_0000_0001,\n    /**\n     * Enable collision-detection between a collider attached to a dynamic body\n     * and another collider attached to a kinematic body.\n     */\n    DYNAMIC_KINEMATIC = 0b0000_0000_0000_1100,\n    /**\n     * Enable collision-detection between a collider attached to a dynamic body\n     * and another collider attached to a fixed body (or not attached to any body).\n     */\n    DYNAMIC_FIXED = 0b0000_0000_0000_0010,\n    /**\n     * Enable collision-detection between a collider attached to a kinematic body\n     * and another collider attached to a kinematic body.\n     */\n    KINEMATIC_KINEMATIC = 0b1100_1100_0000_0000,\n\n    /**\n     * Enable collision-detection between a collider attached to a kinematic body\n     * and another collider attached to a fixed body (or not attached to any body).\n     */\n    KINEMATIC_FIXED = 0b0010_0010_0000_0000,\n\n    /**\n     * Enable collision-detection between a collider attached to a fixed body (or\n     * not attached to any body) and another collider attached to a fixed body (or\n     * not attached to any body).\n     */\n    FIXED_FIXED = 0b0000_0000_0010_0000,\n    /**\n     * The default active collision types, enabling collisions between a dynamic body\n     * and another body of any type, but not enabling collisions between two non-dynamic bodies.\n     */\n    DEFAULT = DYNAMIC_KINEMATIC | DYNAMIC_DYNAMIC | DYNAMIC_FIXED,\n    /**\n     * Enable collisions between any kind of rigid-bodies (including between two non-dynamic bodies).\n     */\n    ALL = DYNAMIC_KINEMATIC |\n        DYNAMIC_DYNAMIC |\n        DYNAMIC_FIXED |\n        KINEMATIC_KINEMATIC |\n        KINEMATIC_FIXED |\n        KINEMATIC_KINEMATIC,\n}\n\n/**\n * The integer identifier of a collider added to a `ColliderSet`.\n */\nexport type ColliderHandle = number;\n\n/**\n * A geometric entity that can be attached to a body so it can be affected\n * by contacts and proximity queries.\n */\nexport class Collider {\n    private colliderSet: ColliderSet; // The Collider won't need to free this.\n    readonly handle: ColliderHandle;\n    private _shape: Shape;\n    private _parent: RigidBody | null;\n\n    constructor(\n        colliderSet: ColliderSet,\n        handle: ColliderHandle,\n        parent: RigidBody | null,\n        shape?: Shape,\n    ) {\n        this.colliderSet = colliderSet;\n        this.handle = handle;\n        this._parent = parent;\n        this._shape = shape;\n    }\n\n    /** @internal */\n    public finalizeDeserialization(bodies: RigidBodySet) {\n        if (this.handle != null) {\n            this._parent = bodies.get(\n                this.colliderSet.raw.coParent(this.handle),\n            );\n        }\n    }\n\n    private ensureShapeIsCached() {\n        if (!this._shape)\n            this._shape = Shape.fromRaw(this.colliderSet.raw, this.handle);\n    }\n\n    /**\n     * The shape of this collider.\n     */\n    public get shape(): Shape {\n        this.ensureShapeIsCached();\n        return this._shape;\n    }\n\n    /**\n     * Checks if this collider is still valid (i.e. that it has\n     * not been deleted from the collider set yet).\n     */\n    public isValid(): boolean {\n        return this.colliderSet.raw.contains(this.handle);\n    }\n\n    /**\n     * The world-space translation of this rigid-body.\n     */\n    public translation(): Vector {\n        return VectorOps.fromRaw(\n            this.colliderSet.raw.coTranslation(this.handle),\n        );\n    }\n\n    /**\n     * The world-space orientation of this rigid-body.\n     */\n    public rotation(): Rotation {\n        return RotationOps.fromRaw(\n            this.colliderSet.raw.coRotation(this.handle),\n        );\n    }\n\n    /**\n     * Is this collider a sensor?\n     */\n    public isSensor(): boolean {\n        return this.colliderSet.raw.coIsSensor(this.handle);\n    }\n\n    /**\n     * Sets whether or not this collider is a sensor.\n     * @param isSensor - If `true`, the collider will be a sensor.\n     */\n    public setSensor(isSensor: boolean) {\n        this.colliderSet.raw.coSetSensor(this.handle, isSensor);\n    }\n\n    /**\n     * Sets the new shape of the collider.\n     * @param shape - The collider’s new shape.\n     */\n    public setShape(shape: Shape) {\n        let rawShape = shape.intoRaw();\n        this.colliderSet.raw.coSetShape(this.handle, rawShape);\n        rawShape.free();\n        this._shape = shape;\n    }\n\n    /**\n     * Sets the restitution coefficient of the collider to be created.\n     *\n     * @param restitution - The restitution coefficient in `[0, 1]`. A value of 0 (the default) means no bouncing behavior\n     *                   while 1 means perfect bouncing (though energy may still be lost due to numerical errors of the\n     *                   constraints solver).\n     */\n    public setRestitution(restitution: number) {\n        this.colliderSet.raw.coSetRestitution(this.handle, restitution);\n    }\n\n    /**\n     * Sets the friction coefficient of the collider to be created.\n     *\n     * @param friction - The friction coefficient. Must be greater or equal to 0. This is generally smaller than 1. The\n     *                   higher the coefficient, the stronger friction forces will be for contacts with the collider\n     *                   being built.\n     */\n    public setFriction(friction: number) {\n        this.colliderSet.raw.coSetFriction(this.handle, friction);\n    }\n\n    /**\n     * Gets the rule used to combine the friction coefficients of two colliders\n     * colliders involved in a contact.\n     */\n    public frictionCombineRule(): CoefficientCombineRule {\n        return this.colliderSet.raw.coFrictionCombineRule(this.handle);\n    }\n\n    /**\n     * Sets the rule used to combine the friction coefficients of two colliders\n     * colliders involved in a contact.\n     *\n     * @param rule − The combine rule to apply.\n     */\n    public setFrictionCombineRule(rule: CoefficientCombineRule) {\n        this.colliderSet.raw.coSetFrictionCombineRule(this.handle, rule);\n    }\n\n    /**\n     * Gets the rule used to combine the restitution coefficients of two colliders\n     * colliders involved in a contact.\n     */\n    public restitutionCombineRule(): CoefficientCombineRule {\n        return this.colliderSet.raw.coRestitutionCombineRule(this.handle);\n    }\n\n    /**\n     * Sets the rule used to combine the restitution coefficients of two colliders\n     * colliders involved in a contact.\n     *\n     * @param rule − The combine rule to apply.\n     */\n    public setRestitutionCombineRule(rule: CoefficientCombineRule) {\n        this.colliderSet.raw.coSetRestitutionCombineRule(this.handle, rule);\n    }\n\n    /**\n     * Sets the collision groups used by this collider.\n     *\n     * Two colliders will interact iff. their collision groups are compatible.\n     * See the documentation of `InteractionGroups` for details on teh used bit pattern.\n     *\n     * @param groups - The collision groups used for the collider being built.\n     */\n    public setCollisionGroups(groups: InteractionGroups) {\n        this.colliderSet.raw.coSetCollisionGroups(this.handle, groups);\n    }\n\n    /**\n     * Sets the solver groups used by this collider.\n     *\n     * Forces between two colliders in contact will be computed iff their solver\n     * groups are compatible.\n     * See the documentation of `InteractionGroups` for details on the used bit pattern.\n     *\n     * @param groups - The solver groups used for the collider being built.\n     */\n    public setSolverGroups(groups: InteractionGroups) {\n        this.colliderSet.raw.coSetSolverGroups(this.handle, groups);\n    }\n\n    /**\n     * Get the physics hooks active for this collider.\n     */\n    public activeHooks() {\n        return this.colliderSet.raw.coActiveHooks(this.handle);\n    }\n\n    /**\n     * Set the physics hooks active for this collider.\n     *\n     * Use this to enable custom filtering rules for contact/intersecstion pairs involving this collider.\n     *\n     * @param activeHooks - The hooks active for contact/intersection pairs involving this collider.\n     */\n    public setActiveHooks(activeHooks: ActiveHooks) {\n        this.colliderSet.raw.coSetActiveHooks(this.handle, activeHooks);\n    }\n\n    /**\n     * The events active for this collider.\n     */\n    public activeEvents(): ActiveEvents {\n        return this.colliderSet.raw.coActiveEvents(this.handle);\n    }\n\n    /**\n     * Set the events active for this collider.\n     *\n     * Use this to enable contact and/or intersection event reporting for this collider.\n     *\n     * @param activeEvents - The events active for contact/intersection pairs involving this collider.\n     */\n    public setActiveEvents(activeEvents: ActiveEvents) {\n        this.colliderSet.raw.coSetActiveEvents(this.handle, activeEvents);\n    }\n\n    /**\n     * Gets the collision types active for this collider.\n     */\n    public activeCollisionTypes(): ActiveCollisionTypes {\n        return this.colliderSet.raw.coActiveCollisionTypes(this.handle);\n    }\n\n    /**\n     * Sets the total force magnitude beyond which a contact force event can be emitted.\n     *\n     * @param threshold - The new force threshold.\n     */\n    public setContactForceEventThreshold(threshold: number) {\n        return this.colliderSet.raw.coSetContactForceEventThreshold(\n            this.handle,\n            threshold,\n        );\n    }\n\n    /**\n     * The total force magnitude beyond which a contact force event can be emitted.\n     */\n    public contactForceEventThreshold(): number {\n        return this.colliderSet.raw.coContactForceEventThreshold(this.handle);\n    }\n\n    /**\n     * Set the collision types active for this collider.\n     *\n     * @param activeCollisionTypes - The hooks active for contact/intersection pairs involving this collider.\n     */\n    public setActiveCollisionTypes(activeCollisionTypes: ActiveCollisionTypes) {\n        this.colliderSet.raw.coSetActiveCollisionTypes(\n            this.handle,\n            activeCollisionTypes,\n        );\n    }\n\n    /**\n     * Sets the uniform density of this collider.\n     *\n     * This will override any previous mass-properties set by `this.setDensity`,\n     * `this.setMass`, `this.setMassProperties`, `ColliderDesc.density`,\n     * `ColliderDesc.mass`, or `ColliderDesc.massProperties` for this collider.\n     *\n     * The mass and angular inertia of this collider will be computed automatically based on its\n     * shape.\n     */\n    public setDensity(density: number) {\n        this.colliderSet.raw.coSetDensity(this.handle, density);\n    }\n\n    /**\n     * Sets the mass of this collider.\n     *\n     * This will override any previous mass-properties set by `this.setDensity`,\n     * `this.setMass`, `this.setMassProperties`, `ColliderDesc.density`,\n     * `ColliderDesc.mass`, or `ColliderDesc.massProperties` for this collider.\n     *\n     * The angular inertia of this collider will be computed automatically based on its shape\n     * and this mass value.\n     */\n    public setMass(mass: number) {\n        this.colliderSet.raw.coSetMass(this.handle, mass);\n    }\n\n    // #if DIM3\n    /**\n     * Sets the mass of this collider.\n     *\n     * This will override any previous mass-properties set by `this.setDensity`,\n     * `this.setMass`, `this.setMassProperties`, `ColliderDesc.density`,\n     * `ColliderDesc.mass`, or `ColliderDesc.massProperties` for this collider.\n     */\n    public setMassProperties(\n        mass: number,\n        centerOfMass: Vector,\n        principalAngularInertia: Vector,\n        angularInertiaLocalFrame: Rotation,\n    ) {\n        let rawCom = VectorOps.intoRaw(centerOfMass);\n        let rawPrincipalInertia = VectorOps.intoRaw(principalAngularInertia);\n        let rawInertiaFrame = RotationOps.intoRaw(angularInertiaLocalFrame);\n\n        this.colliderSet.raw.coSetMassProperties(\n            this.handle,\n            mass,\n            rawCom,\n            rawPrincipalInertia,\n            rawInertiaFrame,\n        );\n\n        rawCom.free();\n        rawPrincipalInertia.free();\n        rawInertiaFrame.free();\n    }\n    // #endif\n\n\n    /**\n     * Sets the translation of this collider.\n     *\n     * @param tra - The world-space position of the collider.\n     */\n    public setTranslation(tra: Vector) {\n        // #if DIM3\n        this.colliderSet.raw.coSetTranslation(this.handle, tra.x, tra.y, tra.z);\n        // #endif\n    }\n\n    /**\n     * Sets the translation of this collider relative to its parent rigid-body.\n     *\n     * Does nothing if this collider isn't attached to a rigid-body.\n     *\n     * @param tra - The new translation of the collider relative to its parent.\n     */\n    public setTranslationWrtParent(tra: Vector) {\n        // #if DIM3\n        this.colliderSet.raw.coSetTranslationWrtParent(\n            this.handle,\n            tra.x,\n            tra.y,\n            tra.z,\n        );\n        // #endif\n    }\n\n    // #if DIM3\n    /**\n     * Sets the rotation quaternion of this collider.\n     *\n     * This does nothing if a zero quaternion is provided.\n     *\n     * @param rotation - The rotation to set.\n     */\n    public setRotation(rot: Rotation) {\n        this.colliderSet.raw.coSetRotation(\n            this.handle,\n            rot.x,\n            rot.y,\n            rot.z,\n            rot.w,\n        );\n    }\n\n    /**\n     * Sets the rotation quaternion of this collider relative to its parent rigid-body.\n     *\n     * This does nothing if a zero quaternion is provided or if this collider isn't\n     * attached to a rigid-body.\n     *\n     * @param rotation - The rotation to set.\n     */\n    public setRotationWrtParent(rot: Rotation) {\n        this.colliderSet.raw.coSetRotationWrtParent(\n            this.handle,\n            rot.x,\n            rot.y,\n            rot.z,\n            rot.w,\n        );\n    }\n    // #endif\n\n    /**\n     * The type of the shape of this collider.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public shapeType(): ShapeType {\n        return this.colliderSet.raw.coShapeType(this.handle);\n    }\n\n    /**\n     * The half-extents of this collider if it is a cuboid shape.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public halfExtents(): Vector {\n        return VectorOps.fromRaw(\n            this.colliderSet.raw.coHalfExtents(this.handle),\n        );\n    }\n\n    /**\n     * The radius of this collider if it is a ball, cylinder, capsule, or cone shape.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public radius(): number {\n        return this.colliderSet.raw.coRadius(this.handle);\n    }\n\n    /**\n     * The radius of the round edges of this collider if it is a round cylinder.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public roundRadius(): number {\n        return this.colliderSet.raw.coRoundRadius(this.handle);\n    }\n\n    /**\n     * The half height of this collider if it is a cylinder, capsule, or cone shape.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public halfHeight(): number {\n        return this.colliderSet.raw.coHalfHeight(this.handle);\n    }\n\n    /**\n     * If this collider has a triangle mesh, polyline, convex polygon, or convex polyhedron shape,\n     * this returns the vertex buffer of said shape.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public vertices(): Float32Array {\n        return this.colliderSet.raw.coVertices(this.handle);\n    }\n\n    /**\n     * If this collider has a triangle mesh, polyline, or convex polyhedron shape,\n     * this returns the index buffer of said shape.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public indices(): Uint32Array | undefined {\n        return this.colliderSet.raw.coIndices(this.handle);\n    }\n\n    /**\n     * If this collider has a heightfield shape, this returns the heights buffer of\n     * the heightfield.\n     * In 3D, the returned height matrix is provided in column-major order.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public heightfieldHeights(): Float32Array {\n        return this.colliderSet.raw.coHeightfieldHeights(this.handle);\n    }\n\n    /**\n     * If this collider has a heightfield shape, this returns the scale\n     * applied to it.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public heightfieldScale(): Vector {\n        let scale = this.colliderSet.raw.coHeightfieldScale(this.handle);\n        return VectorOps.fromRaw(scale);\n    }\n\n    // #if DIM3\n    /**\n     * If this collider has a heightfield shape, this returns the number of\n     * rows of its height matrix.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public heightfieldNRows(): number {\n        return this.colliderSet.raw.coHeightfieldNRows(this.handle);\n    }\n\n    /**\n     * If this collider has a heightfield shape, this returns the number of\n     * columns of its height matrix.\n     * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n     */\n    public heightfieldNCols(): number {\n        return this.colliderSet.raw.coHeightfieldNCols(this.handle);\n    }\n\n    // #endif\n\n    /**\n     * The rigid-body this collider is attached to.\n     */\n    public parent(): RigidBody | null {\n        return this._parent;\n    }\n\n    /**\n     * The friction coefficient of this collider.\n     */\n    public friction(): number {\n        return this.colliderSet.raw.coFriction(this.handle);\n    }\n\n    /**\n     * The restitution coefficient of this collider.\n     */\n    public restitution(): number {\n        return this.colliderSet.raw.coRestitution(this.handle);\n    }\n\n    /**\n     * The density of this collider.\n     */\n    public density(): number {\n        return this.colliderSet.raw.coDensity(this.handle);\n    }\n\n    /**\n     * The mass of this collider.\n     */\n    public mass(): number {\n        return this.colliderSet.raw.coMass(this.handle);\n    }\n\n    /**\n     * The volume of this collider.\n     */\n    public volume(): number {\n        return this.colliderSet.raw.coVolume(this.handle);\n    }\n\n    /**\n     * The collision groups of this collider.\n     */\n    public collisionGroups(): InteractionGroups {\n        return this.colliderSet.raw.coCollisionGroups(this.handle);\n    }\n\n    /**\n     * The solver groups of this collider.\n     */\n    public solverGroups(): InteractionGroups {\n        return this.colliderSet.raw.coSolverGroups(this.handle);\n    }\n\n    /**\n     * Tests if this collider contains a point.\n     *\n     * @param point - The point to test.\n     */\n    public containsPoint(point: Vector): boolean {\n        let rawPoint = VectorOps.intoRaw(point);\n        let result = this.colliderSet.raw.coContainsPoint(\n            this.handle,\n            rawPoint,\n        );\n\n        rawPoint.free();\n\n        return result;\n    }\n\n    /**\n     * Find the projection of a point on this collider.\n     *\n     * @param point - The point to project.\n     * @param solid - If this is set to `true` then the collider shapes are considered to\n     *   be plain (if the point is located inside of a plain shape, its projection is the point\n     *   itself). If it is set to `false` the collider shapes are considered to be hollow\n     *   (if the point is located inside of an hollow shape, it is projected on the shape's\n     *   boundary).\n     */\n    public projectPoint(point: Vector, solid: boolean): PointProjection | null {\n        let rawPoint = VectorOps.intoRaw(point);\n        let result = PointProjection.fromRaw(\n            this.colliderSet.raw.coProjectPoint(this.handle, rawPoint, solid),\n        );\n\n        rawPoint.free();\n\n        return result;\n    }\n\n    /**\n     * Tests if this collider intersects the given ray.\n     *\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     */\n    public intersectsRay(ray: Ray, maxToi: number): boolean {\n        let rawOrig = VectorOps.intoRaw(ray.origin);\n        let rawDir = VectorOps.intoRaw(ray.dir);\n        let result = this.colliderSet.raw.coIntersectsRay(\n            this.handle,\n            rawOrig,\n            rawDir,\n            maxToi,\n        );\n\n        rawOrig.free();\n        rawDir.free();\n\n        return result;\n    }\n\n    /*\n     * Computes the smallest time between this and the given shape under translational movement are separated by a distance smaller or equal to distance.\n     *\n     * @param collider1Vel - The constant velocity of the current shape to cast (i.e. the cast direction).\n     * @param shape2 - The shape to cast against.\n     * @param shape2Pos - The position of the second shape.\n     * @param shape2Rot - The rotation of the second shape.\n     * @param shape2Vel - The constant velocity of the second shape.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the distance traveled by the shape to `collider1Vel.norm() * maxToi`.\n     */\n    public castShape(\n        collider1Vel: Vector,\n        shape2: Shape,\n        shape2Pos: Vector,\n        shape2Rot: Rotation,\n        shape2Vel: Vector,\n        maxToi: number,\n    ): ShapeTOI | null {\n        let rawCollider1Vel = VectorOps.intoRaw(collider1Vel);\n        let rawShape2Pos = VectorOps.intoRaw(shape2Pos);\n        let rawShape2Rot = RotationOps.intoRaw(shape2Rot);\n        let rawShape2Vel = VectorOps.intoRaw(shape2Vel);\n        let rawShape2 = shape2.intoRaw();\n\n        let result = ShapeTOI.fromRaw(\n            this.colliderSet,\n            this.colliderSet.raw.coCastShape(\n                this.handle,\n                rawCollider1Vel,\n                rawShape2,\n                rawShape2Pos,\n                rawShape2Rot,\n                rawShape2Vel,\n                maxToi,\n            ),\n        );\n\n        rawCollider1Vel.free();\n        rawShape2Pos.free();\n        rawShape2Rot.free();\n        rawShape2Vel.free();\n        rawShape2.free();\n\n        return result;\n    }\n\n    /*\n     * Computes the smallest time between this and the given collider under translational movement are separated by a distance smaller or equal to distance.\n     *\n     * @param collider1Vel - The constant velocity of the current collider to cast (i.e. the cast direction).\n     * @param collider2 - The collider to cast against.\n     * @param collider2Vel - The constant velocity of the second collider.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the distance traveled by the shape to `shapeVel.norm() * maxToi`.\n     */\n    public castCollider(\n        collider1Vel: Vector,\n        collider2: Collider,\n        collider2Vel: Vector,\n        maxToi: number,\n    ): ShapeColliderTOI | null {\n        let rawCollider1Vel = VectorOps.intoRaw(collider1Vel);\n        let rawCollider2Vel = VectorOps.intoRaw(collider2Vel);\n\n        let result = ShapeColliderTOI.fromRaw(\n            this.colliderSet,\n            this.colliderSet.raw.coCastCollider(\n                this.handle,\n                rawCollider1Vel,\n                collider2.handle,\n                rawCollider2Vel,\n                maxToi,\n            ),\n        );\n\n        rawCollider1Vel.free();\n        rawCollider2Vel.free();\n\n        return result;\n    }\n\n    public intersectsShape(\n        shape2: Shape,\n        shapePos2: Vector,\n        shapeRot2: Rotation,\n    ): boolean {\n        let rawPos2 = VectorOps.intoRaw(shapePos2);\n        let rawRot2 = RotationOps.intoRaw(shapeRot2);\n        let rawShape2 = shape2.intoRaw();\n\n        let result = this.colliderSet.raw.coIntersectsShape(\n            this.handle,\n            rawShape2,\n            rawPos2,\n            rawRot2,\n        );\n\n        rawPos2.free();\n        rawRot2.free();\n        rawShape2.free();\n\n        return result;\n    }\n\n    /**\n     * Computes one pair of contact points between the shape owned by this collider and the given shape.\n     *\n     * @param shape2 - The second shape.\n     * @param shape2Pos - The initial position of the second shape.\n     * @param shape2Rot - The rotation of the second shape.\n     * @param prediction - The prediction value, if the shapes are separated by a distance greater than this value, test will fail.\n     * @returns `null` if the shapes are separated by a distance greater than prediction, otherwise contact details. The result is given in world-space.\n     */\n    contactShape(\n        shape2: Shape,\n        shape2Pos: Vector,\n        shape2Rot: Rotation,\n        prediction: number,\n    ): ShapeContact | null {\n        let rawPos2 = VectorOps.intoRaw(shape2Pos);\n        let rawRot2 = RotationOps.intoRaw(shape2Rot);\n        let rawShape2 = shape2.intoRaw();\n\n        let result = ShapeContact.fromRaw(\n            this.colliderSet.raw.coContactShape(\n                this.handle,\n                rawShape2,\n                rawPos2,\n                rawRot2,\n                prediction,\n            ),\n        );\n\n        rawPos2.free();\n        rawRot2.free();\n        rawShape2.free();\n\n        return result;\n    }\n\n    /**\n     * Computes one pair of contact points between the collider and the given collider.\n     *\n     * @param collider2 - The second collider.\n     * @param prediction - The prediction value, if the shapes are separated by a distance greater than this value, test will fail.\n     * @returns `null` if the shapes are separated by a distance greater than prediction, otherwise contact details. The result is given in world-space.\n     */\n    contactCollider(\n        collider2: Collider,\n        prediction: number,\n    ): ShapeContact | null {\n        let result = ShapeContact.fromRaw(\n            this.colliderSet.raw.coContactCollider(\n                this.handle,\n                collider2.handle,\n                prediction,\n            ),\n        );\n\n        return result;\n    }\n\n    /*\n     * Find the closest intersection between a ray and this collider.\n     *\n     * This also computes the normal at the hit point.\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @returns The time-of-impact between this collider and the ray, or `-1` if there is no intersection.\n     */\n    public castRay(ray: Ray, maxToi: number, solid: boolean): number {\n        let rawOrig = VectorOps.intoRaw(ray.origin);\n        let rawDir = VectorOps.intoRaw(ray.dir);\n        let result = this.colliderSet.raw.coCastRay(\n            this.handle,\n            rawOrig,\n            rawDir,\n            maxToi,\n            solid,\n        );\n\n        rawOrig.free();\n        rawDir.free();\n\n        return result;\n    }\n\n    /**\n     * Find the closest intersection between a ray and this collider.\n     *\n     * This also computes the normal at the hit point.\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     */\n    public castRayAndGetNormal(\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n    ): RayIntersection | null {\n        let rawOrig = VectorOps.intoRaw(ray.origin);\n        let rawDir = VectorOps.intoRaw(ray.dir);\n        let result = RayIntersection.fromRaw(\n            this.colliderSet.raw.coCastRayAndGetNormal(\n                this.handle,\n                rawOrig,\n                rawDir,\n                maxToi,\n                solid,\n            ),\n        );\n\n        rawOrig.free();\n        rawDir.free();\n\n        return result;\n    }\n}\n\nexport enum MassPropsMode {\n    Density,\n    Mass,\n    MassProps,\n}\n\nexport class ColliderDesc {\n    shape: Shape;\n    massPropsMode: MassPropsMode;\n    mass: number;\n    centerOfMass: Vector;\n    // #if DIM3\n    principalAngularInertia: Vector;\n    angularInertiaLocalFrame: Rotation;\n    // #endif\n    density: number;\n    friction: number;\n    restitution: number;\n    rotation: Rotation;\n    translation: Vector;\n    isSensor: boolean;\n    collisionGroups: InteractionGroups;\n    solverGroups: InteractionGroups;\n    frictionCombineRule: CoefficientCombineRule;\n    restitutionCombineRule: CoefficientCombineRule;\n    activeEvents: ActiveEvents;\n    activeHooks: ActiveHooks;\n    activeCollisionTypes: ActiveCollisionTypes;\n    contactForceEventThreshold: number;\n\n    /**\n     * Initializes a collider descriptor from the collision shape.\n     *\n     * @param shape - The shape of the collider being built.\n     */\n    constructor(shape: Shape) {\n        this.shape = shape;\n        this.massPropsMode = MassPropsMode.Density;\n        this.density = 1.0;\n        this.friction = 0.5;\n        this.restitution = 0.0;\n        this.rotation = RotationOps.identity();\n        this.translation = VectorOps.zeros();\n        this.isSensor = false;\n        this.collisionGroups = 0xffff_ffff;\n        this.solverGroups = 0xffff_ffff;\n        this.frictionCombineRule = CoefficientCombineRule.Average;\n        this.restitutionCombineRule = CoefficientCombineRule.Average;\n        this.activeCollisionTypes = ActiveCollisionTypes.DEFAULT;\n        this.activeEvents = 0;\n        this.activeHooks = 0;\n        this.mass = 0.0;\n        this.centerOfMass = VectorOps.zeros();\n        this.contactForceEventThreshold = 0.0;\n\n        // #if DIM3\n        this.principalAngularInertia = VectorOps.zeros();\n        this.angularInertiaLocalFrame = RotationOps.identity();\n        // #endif\n    }\n\n    /**\n     * Create a new collider descriptor with a ball shape.\n     *\n     * @param radius - The radius of the ball.\n     */\n    public static ball(radius: number): ColliderDesc {\n        const shape = new Ball(radius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Create a new collider descriptor with a capsule shape.\n     *\n     * @param halfHeight - The half-height of the capsule, along the `y` axis.\n     * @param radius - The radius of the capsule basis.\n     */\n    public static capsule(halfHeight: number, radius: number): ColliderDesc {\n        const shape = new Capsule(halfHeight, radius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new segment shape.\n     *\n     * @param a - The first point of the segment.\n     * @param b - The second point of the segment.\n     */\n    public static segment(a: Vector, b: Vector): ColliderDesc {\n        const shape = new Segment(a, b);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new triangle shape.\n     *\n     * @param a - The first point of the triangle.\n     * @param b - The second point of the triangle.\n     * @param c - The third point of the triangle.\n     */\n    public static triangle(a: Vector, b: Vector, c: Vector): ColliderDesc {\n        const shape = new Triangle(a, b, c);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new triangle shape with round corners.\n     *\n     * @param a - The first point of the triangle.\n     * @param b - The second point of the triangle.\n     * @param c - The third point of the triangle.\n     * @param borderRadius - The radius of the borders of this triangle. In 3D,\n     *   this is also equal to half the thickness of the triangle.\n     */\n    public static roundTriangle(\n        a: Vector,\n        b: Vector,\n        c: Vector,\n        borderRadius: number,\n    ): ColliderDesc {\n        const shape = new RoundTriangle(a, b, c, borderRadius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new collider descriptor with a polyline shape.\n     *\n     * @param vertices - The coordinates of the polyline's vertices.\n     * @param indices - The indices of the polyline's segments. If this is `undefined` or `null`,\n     *    the vertices are assumed to describe a line strip.\n     */\n    public static polyline(\n        vertices: Float32Array,\n        indices?: Uint32Array | null,\n    ): ColliderDesc {\n        const shape = new Polyline(vertices, indices);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new collider descriptor with a triangle mesh shape.\n     *\n     * @param vertices - The coordinates of the triangle mesh's vertices.\n     * @param indices - The indices of the triangle mesh's triangles.\n     */\n    public static trimesh(\n        vertices: Float32Array,\n        indices: Uint32Array,\n    ): ColliderDesc {\n        const shape = new TriMesh(vertices, indices);\n        return new ColliderDesc(shape);\n    }\n\n\n    // #if DIM3\n    /**\n     * Creates a new collider descriptor with a cuboid shape.\n     *\n     * @param hx - The half-width of the rectangle along its local `x` axis.\n     * @param hy - The half-width of the rectangle along its local `y` axis.\n     * @param hz - The half-width of the rectangle along its local `z` axis.\n     */\n    public static cuboid(hx: number, hy: number, hz: number): ColliderDesc {\n        const shape = new Cuboid(hx, hy, hz);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new collider descriptor with a rectangular shape with round borders.\n     *\n     * @param hx - The half-width of the rectangle along its local `x` axis.\n     * @param hy - The half-width of the rectangle along its local `y` axis.\n     * @param hz - The half-width of the rectangle along its local `z` axis.\n     * @param borderRadius - The radius of the cuboid's borders.\n     */\n    public static roundCuboid(\n        hx: number,\n        hy: number,\n        hz: number,\n        borderRadius: number,\n    ): ColliderDesc {\n        const shape = new RoundCuboid(hx, hy, hz, borderRadius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new collider descriptor with a heightfield shape.\n     *\n     * @param nrows − The number of rows in the heights matrix.\n     * @param ncols - The number of columns in the heights matrix.\n     * @param heights - The heights of the heightfield along its local `y` axis,\n     *                  provided as a matrix stored in column-major order.\n     * @param scale - The scale factor applied to the heightfield.\n     */\n    public static heightfield(\n        nrows: number,\n        ncols: number,\n        heights: Float32Array,\n        scale: Vector,\n    ): ColliderDesc {\n        const shape = new Heightfield(nrows, ncols, heights, scale);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Create a new collider descriptor with a cylinder shape.\n     *\n     * @param halfHeight - The half-height of the cylinder, along the `y` axis.\n     * @param radius - The radius of the cylinder basis.\n     */\n    public static cylinder(halfHeight: number, radius: number): ColliderDesc {\n        const shape = new Cylinder(halfHeight, radius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Create a new collider descriptor with a cylinder shape with rounded corners.\n     *\n     * @param halfHeight - The half-height of the cylinder, along the `y` axis.\n     * @param radius - The radius of the cylinder basis.\n     * @param borderRadius - The radius of the cylinder's rounded edges and vertices.\n     */\n    public static roundCylinder(\n        halfHeight: number,\n        radius: number,\n        borderRadius: number,\n    ): ColliderDesc {\n        const shape = new RoundCylinder(halfHeight, radius, borderRadius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Create a new collider descriptor with a cone shape.\n     *\n     * @param halfHeight - The half-height of the cone, along the `y` axis.\n     * @param radius - The radius of the cone basis.\n     */\n    public static cone(halfHeight: number, radius: number): ColliderDesc {\n        const shape = new Cone(halfHeight, radius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Create a new collider descriptor with a cone shape with rounded corners.\n     *\n     * @param halfHeight - The half-height of the cone, along the `y` axis.\n     * @param radius - The radius of the cone basis.\n     * @param borderRadius - The radius of the cone's rounded edges and vertices.\n     */\n    public static roundCone(\n        halfHeight: number,\n        radius: number,\n        borderRadius: number,\n    ): ColliderDesc {\n        const shape = new RoundCone(halfHeight, radius, borderRadius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Computes the convex-hull of the given points and use the resulting\n     * convex polyhedron as the shape for this new collider descriptor.\n     *\n     * @param points - The point that will be used to compute the convex-hull.\n     */\n    public static convexHull(points: Float32Array): ColliderDesc | null {\n        const shape = new ConvexPolyhedron(points, null);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new collider descriptor that uses the given set of points assumed\n     * to form a convex polyline (no convex-hull computation will be done).\n     *\n     * @param vertices - The vertices of the convex polyline.\n     */\n    public static convexMesh(\n        vertices: Float32Array,\n        indices?: Uint32Array | null,\n    ): ColliderDesc | null {\n        const shape = new ConvexPolyhedron(vertices, indices);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Computes the convex-hull of the given points and use the resulting\n     * convex polyhedron as the shape for this new collider descriptor. A\n     * border is added to that convex polyhedron to give it round corners.\n     *\n     * @param points - The point that will be used to compute the convex-hull.\n     * @param borderRadius - The radius of the round border added to the convex polyhedron.\n     */\n    public static roundConvexHull(\n        points: Float32Array,\n        borderRadius: number,\n    ): ColliderDesc | null {\n        const shape = new RoundConvexPolyhedron(points, null, borderRadius);\n        return new ColliderDesc(shape);\n    }\n\n    /**\n     * Creates a new collider descriptor that uses the given set of points assumed\n     * to form a round convex polyline (no convex-hull computation will be done).\n     *\n     * @param vertices - The vertices of the convex polyline.\n     * @param borderRadius - The radius of the round border added to the convex polyline.\n     */\n    public static roundConvexMesh(\n        vertices: Float32Array,\n        indices: Uint32Array | null,\n        borderRadius: number,\n    ): ColliderDesc | null {\n        const shape = new RoundConvexPolyhedron(\n            vertices,\n            indices,\n            borderRadius,\n        );\n        return new ColliderDesc(shape);\n    }\n\n    // #endif\n\n\n    // #if DIM3\n    /**\n     * Sets the position of the collider to be created relative to the rigid-body it is attached to.\n     */\n    public setTranslation(x: number, y: number, z: number): ColliderDesc {\n        if (\n            typeof x != \"number\" ||\n            typeof y != \"number\" ||\n            typeof z != \"number\"\n        )\n            throw TypeError(\"The translation components must be numbers.\");\n\n        this.translation = {x: x, y: y, z: z};\n        return this;\n    }\n\n    // #endif\n\n    /**\n     * Sets the rotation of the collider to be created relative to the rigid-body it is attached to.\n     *\n     * @param rot - The rotation of the collider to be created relative to the rigid-body it is attached to.\n     */\n    public setRotation(rot: Rotation): ColliderDesc {\n        // #if DIM3\n        RotationOps.copy(this.rotation, rot);\n        // #endif\n        return this;\n    }\n\n    /**\n     * Sets whether or not the collider being created is a sensor.\n     *\n     * A sensor collider does not take part of the physics simulation, but generates\n     * proximity events.\n     *\n     * @param sensor - Set to `true` of the collider built is to be a sensor.\n     */\n    public setSensor(sensor: boolean): ColliderDesc {\n        this.isSensor = sensor;\n        return this;\n    }\n\n    /**\n     * Sets the density of the collider being built.\n     *\n     * The mass and angular inertia tensor will be computed automatically based on this density and the collider’s shape.\n     *\n     * @param density - The density to set, must be greater or equal to 0. A density of 0 means that this collider\n     *                  will not affect the mass or angular inertia of the rigid-body it is attached to.\n     */\n    public setDensity(density: number): ColliderDesc {\n        this.massPropsMode = MassPropsMode.Density;\n        this.density = density;\n        return this;\n    }\n\n    /**\n     * Sets the mass of the collider being built.\n     *\n     * The angular inertia tensor will be computed automatically based on this mass and the collider’s shape.\n     *\n     * @param mass - The mass to set, must be greater or equal to 0.\n     */\n    public setMass(mass: number): ColliderDesc {\n        this.massPropsMode = MassPropsMode.Mass;\n        this.mass = mass;\n        return this;\n    }\n\n\n    // #if DIM3\n    /**\n     * Sets the mass properties of the collider being built.\n     *\n     * This replaces the mass-properties automatically computed from the collider's density and shape.\n     * These mass-properties will be added to the mass-properties of the rigid-body this collider will be attached to.\n     *\n     * @param mass − The mass of the collider to create.\n     * @param centerOfMass − The center-of-mass of the collider to create.\n     * @param principalAngularInertia − The initial principal angular inertia of the collider to create.\n     *                                  These are the eigenvalues of the angular inertia matrix.\n     * @param angularInertiaLocalFrame − The initial local angular inertia frame of the collider to create.\n     *                                   These are the eigenvectors of the angular inertia matrix.\n     */\n    public setMassProperties(\n        mass: number,\n        centerOfMass: Vector,\n        principalAngularInertia: Vector,\n        angularInertiaLocalFrame: Rotation,\n    ): ColliderDesc {\n        this.massPropsMode = MassPropsMode.MassProps;\n        this.mass = mass;\n        VectorOps.copy(this.centerOfMass, centerOfMass);\n        VectorOps.copy(this.principalAngularInertia, principalAngularInertia);\n        RotationOps.copy(\n            this.angularInertiaLocalFrame,\n            angularInertiaLocalFrame,\n        );\n        return this;\n    }\n    // #endif\n\n    /**\n     * Sets the restitution coefficient of the collider to be created.\n     *\n     * @param restitution - The restitution coefficient in `[0, 1]`. A value of 0 (the default) means no bouncing behavior\n     *                   while 1 means perfect bouncing (though energy may still be lost due to numerical errors of the\n     *                   constraints solver).\n     */\n    public setRestitution(restitution: number): ColliderDesc {\n        this.restitution = restitution;\n        return this;\n    }\n\n    /**\n     * Sets the friction coefficient of the collider to be created.\n     *\n     * @param friction - The friction coefficient. Must be greater or equal to 0. This is generally smaller than 1. The\n     *                   higher the coefficient, the stronger friction forces will be for contacts with the collider\n     *                   being built.\n     */\n    public setFriction(friction: number): ColliderDesc {\n        this.friction = friction;\n        return this;\n    }\n\n    /**\n     * Sets the rule used to combine the friction coefficients of two colliders\n     * colliders involved in a contact.\n     *\n     * @param rule − The combine rule to apply.\n     */\n    public setFrictionCombineRule(rule: CoefficientCombineRule): ColliderDesc {\n        this.frictionCombineRule = rule;\n        return this;\n    }\n\n    /**\n     * Sets the rule used to combine the restitution coefficients of two colliders\n     * colliders involved in a contact.\n     *\n     * @param rule − The combine rule to apply.\n     */\n    public setRestitutionCombineRule(\n        rule: CoefficientCombineRule,\n    ): ColliderDesc {\n        this.restitutionCombineRule = rule;\n        return this;\n    }\n\n    /**\n     * Sets the collision groups used by this collider.\n     *\n     * Two colliders will interact iff. their collision groups are compatible.\n     * See the documentation of `InteractionGroups` for details on teh used bit pattern.\n     *\n     * @param groups - The collision groups used for the collider being built.\n     */\n    public setCollisionGroups(groups: InteractionGroups): ColliderDesc {\n        this.collisionGroups = groups;\n        return this;\n    }\n\n    /**\n     * Sets the solver groups used by this collider.\n     *\n     * Forces between two colliders in contact will be computed iff their solver\n     * groups are compatible.\n     * See the documentation of `InteractionGroups` for details on the used bit pattern.\n     *\n     * @param groups - The solver groups used for the collider being built.\n     */\n    public setSolverGroups(groups: InteractionGroups): ColliderDesc {\n        this.solverGroups = groups;\n        return this;\n    }\n\n    /**\n     * Set the physics hooks active for this collider.\n     *\n     * Use this to enable custom filtering rules for contact/intersecstion pairs involving this collider.\n     *\n     * @param activeHooks - The hooks active for contact/intersection pairs involving this collider.\n     */\n    public setActiveHooks(activeHooks: ActiveHooks): ColliderDesc {\n        this.activeHooks = activeHooks;\n        return this;\n    }\n\n    /**\n     * Set the events active for this collider.\n     *\n     * Use this to enable contact and/or intersection event reporting for this collider.\n     *\n     * @param activeEvents - The events active for contact/intersection pairs involving this collider.\n     */\n    public setActiveEvents(activeEvents: ActiveEvents): ColliderDesc {\n        this.activeEvents = activeEvents;\n        return this;\n    }\n\n    /**\n     * Set the collision types active for this collider.\n     *\n     * @param activeCollisionTypes - The hooks active for contact/intersection pairs involving this collider.\n     */\n    public setActiveCollisionTypes(\n        activeCollisionTypes: ActiveCollisionTypes,\n    ): ColliderDesc {\n        this.activeCollisionTypes = activeCollisionTypes;\n        return this;\n    }\n\n    /**\n     * Sets the total force magnitude beyond which a contact force event can be emitted.\n     *\n     * @param threshold - The force threshold to set.\n     */\n    public setContactForceEventThreshold(threshold: number): ColliderDesc {\n        this.contactForceEventThreshold = threshold;\n        return this;\n    }\n}\n","import {RawQueryPipeline, RawRayColliderIntersection} from \"../raw\";\nimport {\n    ColliderHandle,\n    ColliderSet,\n    InteractionGroups,\n    PointColliderProjection,\n    Ray,\n    RayColliderIntersection,\n    RayColliderToi,\n    Shape,\n    ShapeColliderTOI,\n} from \"../geometry\";\nimport {IslandManager, RigidBodyHandle, RigidBodySet} from \"../dynamics\";\nimport {Rotation, RotationOps, Vector, VectorOps} from \"../math\";\n\n// NOTE: must match the bits in the QueryFilterFlags on the Rust side.\n/**\n * Flags for excluding whole sets of colliders from a scene query.\n */\nexport enum QueryFilterFlags {\n    /**\n     * Exclude from the query any collider attached to a fixed rigid-body and colliders with no rigid-body attached.\n     */\n    EXCLUDE_FIXED = 0b0000_0001,\n    /**\n     * Exclude from the query any collider attached to a dynamic rigid-body.\n     */\n    EXCLUDE_KINEMATIC = 0b0000_0010,\n    /**\n     * Exclude from the query any collider attached to a kinematic rigid-body.\n     */\n    EXCLUDE_DYNAMIC = 0b0000_0100,\n    /**\n     * Exclude from the query any collider that is a sensor.\n     */\n    EXCLUDE_SENSORS = 0b0000_1000,\n    /**\n     * Exclude from the query any collider that is not a sensor.\n     */\n    EXCLUDE_SOLIDS = 0b0001_0000,\n    /**\n     * Excludes all colliders not attached to a dynamic rigid-body.\n     */\n    ONLY_DYNAMIC = QueryFilterFlags.EXCLUDE_FIXED |\n        QueryFilterFlags.EXCLUDE_KINEMATIC,\n    /**\n     * Excludes all colliders not attached to a kinematic rigid-body.\n     */\n    ONLY_KINEMATIC = QueryFilterFlags.EXCLUDE_DYNAMIC |\n        QueryFilterFlags.EXCLUDE_FIXED,\n    /**\n     * Exclude all colliders attached to a non-fixed rigid-body\n     * (this will not exclude colliders not attached to any rigid-body).\n     */\n    ONLY_FIXED = QueryFilterFlags.EXCLUDE_DYNAMIC |\n        QueryFilterFlags.EXCLUDE_KINEMATIC,\n}\n\n/**\n * A pipeline for performing queries on all the colliders of a scene.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `queryPipeline.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nexport class QueryPipeline {\n    raw: RawQueryPipeline;\n\n    /**\n     * Release the WASM memory occupied by this query pipeline.\n     */\n    free() {\n        this.raw.free();\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawQueryPipeline) {\n        this.raw = raw || new RawQueryPipeline();\n    }\n\n    /**\n     * Updates the acceleration structure of the query pipeline.\n     * @param bodies - The set of rigid-bodies taking part in this pipeline.\n     * @param colliders - The set of colliders taking part in this pipeline.\n     */\n    public update(\n        islands: IslandManager,\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n    ) {\n        this.raw.update(islands.raw, bodies.raw, colliders.raw);\n    }\n\n    /**\n     * Find the closest intersection between a ray and a set of collider.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n     * @param filter - The callback to filter out which collider will be hit.\n     */\n    public castRay(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ): RayColliderToi | null {\n        let rawOrig = VectorOps.intoRaw(ray.origin);\n        let rawDir = VectorOps.intoRaw(ray.dir);\n        let result = RayColliderToi.fromRaw(\n            colliders,\n            this.raw.castRay(\n                bodies.raw,\n                colliders.raw,\n                rawOrig,\n                rawDir,\n                maxToi,\n                solid,\n                filterFlags,\n                filterGroups,\n                filterExcludeCollider,\n                filterExcludeRigidBody,\n                filterPredicate,\n            ),\n        );\n\n        rawOrig.free();\n        rawDir.free();\n\n        return result;\n    }\n\n    /**\n     * Find the closest intersection between a ray and a set of collider.\n     *\n     * This also computes the normal at the hit point.\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n     */\n    public castRayAndGetNormal(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ): RayColliderIntersection | null {\n        let rawOrig = VectorOps.intoRaw(ray.origin);\n        let rawDir = VectorOps.intoRaw(ray.dir);\n        let result = RayColliderIntersection.fromRaw(\n            colliders,\n            this.raw.castRayAndGetNormal(\n                bodies.raw,\n                colliders.raw,\n                rawOrig,\n                rawDir,\n                maxToi,\n                solid,\n                filterFlags,\n                filterGroups,\n                filterExcludeCollider,\n                filterExcludeRigidBody,\n                filterPredicate,\n            ),\n        );\n\n        rawOrig.free();\n        rawDir.free();\n\n        return result;\n    }\n\n    /**\n     * Cast a ray and collects all the intersections between a ray and the scene.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n     * @param callback - The callback called once per hit (in no particular order) between a ray and a collider.\n     *   If this callback returns `false`, then the cast will stop and no further hits will be detected/reported.\n     */\n    public intersectionsWithRay(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n        callback: (intersect: RayColliderIntersection) => boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ) {\n        let rawOrig = VectorOps.intoRaw(ray.origin);\n        let rawDir = VectorOps.intoRaw(ray.dir);\n        let rawCallback = (rawInter: RawRayColliderIntersection) => {\n            return callback(\n                RayColliderIntersection.fromRaw(colliders, rawInter),\n            );\n        };\n\n        this.raw.intersectionsWithRay(\n            bodies.raw,\n            colliders.raw,\n            rawOrig,\n            rawDir,\n            maxToi,\n            solid,\n            rawCallback,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider,\n            filterExcludeRigidBody,\n            filterPredicate,\n        );\n\n        rawOrig.free();\n        rawDir.free();\n    }\n\n    /**\n     * Gets the handle of up to one collider intersecting the given shape.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param shapePos - The position of the shape used for the intersection test.\n     * @param shapeRot - The orientation of the shape used for the intersection test.\n     * @param shape - The shape used for the intersection test.\n     * @param groups - The bit groups and filter associated to the ray, in order to only\n     *   hit the colliders with collision groups compatible with the ray's group.\n     */\n    public intersectionWithShape(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        shapePos: Vector,\n        shapeRot: Rotation,\n        shape: Shape,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ): ColliderHandle | null {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawShape = shape.intoRaw();\n        let result = this.raw.intersectionWithShape(\n            bodies.raw,\n            colliders.raw,\n            rawPos,\n            rawRot,\n            rawShape,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider,\n            filterExcludeRigidBody,\n            filterPredicate,\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawShape.free();\n\n        return result;\n    }\n\n    /**\n     * Find the projection of a point on the closest collider.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param point - The point to project.\n     * @param solid - If this is set to `true` then the collider shapes are considered to\n     *   be plain (if the point is located inside of a plain shape, its projection is the point\n     *   itself). If it is set to `false` the collider shapes are considered to be hollow\n     *   (if the point is located inside of an hollow shape, it is projected on the shape's\n     *   boundary).\n     * @param groups - The bit groups and filter associated to the point to project, in order to only\n     *   project on colliders with collision groups compatible with the ray's group.\n     */\n    public projectPoint(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        point: Vector,\n        solid: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ): PointColliderProjection | null {\n        let rawPoint = VectorOps.intoRaw(point);\n        let result = PointColliderProjection.fromRaw(\n            colliders,\n            this.raw.projectPoint(\n                bodies.raw,\n                colliders.raw,\n                rawPoint,\n                solid,\n                filterFlags,\n                filterGroups,\n                filterExcludeCollider,\n                filterExcludeRigidBody,\n                filterPredicate,\n            ),\n        );\n\n        rawPoint.free();\n\n        return result;\n    }\n\n    /**\n     * Find the projection of a point on the closest collider.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param point - The point to project.\n     * @param groups - The bit groups and filter associated to the point to project, in order to only\n     *   project on colliders with collision groups compatible with the ray's group.\n     */\n    public projectPointAndGetFeature(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        point: Vector,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ): PointColliderProjection | null {\n        let rawPoint = VectorOps.intoRaw(point);\n        let result = PointColliderProjection.fromRaw(\n            colliders,\n            this.raw.projectPointAndGetFeature(\n                bodies.raw,\n                colliders.raw,\n                rawPoint,\n                filterFlags,\n                filterGroups,\n                filterExcludeCollider,\n                filterExcludeRigidBody,\n                filterPredicate,\n            ),\n        );\n\n        rawPoint.free();\n\n        return result;\n    }\n\n    /**\n     * Find all the colliders containing the given point.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param point - The point used for the containment test.\n     * @param groups - The bit groups and filter associated to the point to test, in order to only\n     *   test on colliders with collision groups compatible with the ray's group.\n     * @param callback - A function called with the handles of each collider with a shape\n     *   containing the `point`.\n     */\n    public intersectionsWithPoint(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        point: Vector,\n        callback: (handle: ColliderHandle) => boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ) {\n        let rawPoint = VectorOps.intoRaw(point);\n\n        this.raw.intersectionsWithPoint(\n            bodies.raw,\n            colliders.raw,\n            rawPoint,\n            callback,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider,\n            filterExcludeRigidBody,\n            filterPredicate,\n        );\n\n        rawPoint.free();\n    }\n\n    /**\n     * Casts a shape at a constant linear velocity and retrieve the first collider it hits.\n     * This is similar to ray-casting except that we are casting a whole shape instead of\n     * just a point (the ray origin).\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param shapePos - The initial position of the shape to cast.\n     * @param shapeRot - The initial rotation of the shape to cast.\n     * @param shapeVel - The constant velocity of the shape to cast (i.e. the cast direction).\n     * @param shape - The shape to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the distance traveled by the shape to `shapeVel.norm() * maxToi`.\n     * @param groups - The bit groups and filter associated to the shape to cast, in order to only\n     *   test on colliders with collision groups compatible with this group.\n     */\n    public castShape(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        shapePos: Vector,\n        shapeRot: Rotation,\n        shapeVel: Vector,\n        shape: Shape,\n        maxToi: number,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ): ShapeColliderTOI | null {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawVel = VectorOps.intoRaw(shapeVel);\n        let rawShape = shape.intoRaw();\n\n        let result = ShapeColliderTOI.fromRaw(\n            colliders,\n            this.raw.castShape(\n                bodies.raw,\n                colliders.raw,\n                rawPos,\n                rawRot,\n                rawVel,\n                rawShape,\n                maxToi,\n                filterFlags,\n                filterGroups,\n                filterExcludeCollider,\n                filterExcludeRigidBody,\n                filterPredicate,\n            ),\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawVel.free();\n        rawShape.free();\n\n        return result;\n    }\n\n    /**\n     * Retrieve all the colliders intersecting the given shape.\n     *\n     * @param colliders - The set of colliders taking part in this pipeline.\n     * @param shapePos - The position of the shape to test.\n     * @param shapeRot - The orientation of the shape to test.\n     * @param shape - The shape to test.\n     * @param groups - The bit groups and filter associated to the shape to test, in order to only\n     *   test on colliders with collision groups compatible with this group.\n     * @param callback - A function called with the handles of each collider intersecting the `shape`.\n     */\n    public intersectionsWithShape(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        shapePos: Vector,\n        shapeRot: Rotation,\n        shape: Shape,\n        callback: (handle: ColliderHandle) => boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: ColliderHandle,\n        filterExcludeRigidBody?: RigidBodyHandle,\n        filterPredicate?: (collider: ColliderHandle) => boolean,\n    ) {\n        let rawPos = VectorOps.intoRaw(shapePos);\n        let rawRot = RotationOps.intoRaw(shapeRot);\n        let rawShape = shape.intoRaw();\n\n        this.raw.intersectionsWithShape(\n            bodies.raw,\n            colliders.raw,\n            rawPos,\n            rawRot,\n            rawShape,\n            callback,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider,\n            filterExcludeRigidBody,\n            filterPredicate,\n        );\n\n        rawPos.free();\n        rawRot.free();\n        rawShape.free();\n    }\n\n    /**\n     * Finds the handles of all the colliders with an AABB intersecting the given AABB.\n     *\n     * @param aabbCenter - The center of the AABB to test.\n     * @param aabbHalfExtents - The half-extents of the AABB to test.\n     * @param callback - The callback that will be called with the handles of all the colliders\n     *                   currently intersecting the given AABB.\n     */\n    public collidersWithAabbIntersectingAabb(\n        aabbCenter: Vector,\n        aabbHalfExtents: Vector,\n        callback: (handle: ColliderHandle) => boolean,\n    ) {\n        let rawCenter = VectorOps.intoRaw(aabbCenter);\n        let rawHalfExtents = VectorOps.intoRaw(aabbHalfExtents);\n        this.raw.collidersWithAabbIntersectingAabb(\n            rawCenter,\n            rawHalfExtents,\n            callback,\n        );\n        rawCenter.free();\n        rawHalfExtents.free();\n    }\n}\n","import {RawContactForceEvent, RawEventQueue} from \"../raw\";\nimport {RigidBodyHandle} from \"../dynamics\";\nimport {Collider, ColliderHandle} from \"../geometry\";\nimport {Vector, VectorOps} from \"../math\";\n\n/**\n * Flags indicating what events are enabled for colliders.\n */\nexport enum ActiveEvents {\n    /**\n     * Enable collision events.\n     */\n    COLLISION_EVENTS = 0b0001,\n    /**\n     * Enable contact force events.\n     */\n    CONTACT_FORCE_EVENTS = 0b0010,\n}\n\n/**\n * Event occurring when the sum of the magnitudes of the\n * contact forces between two colliders exceed a threshold.\n *\n * This object should **not** be stored anywhere. Its properties can only be\n * read from within the closure given to `EventHandler.drainContactForceEvents`.\n */\nexport class TempContactForceEvent {\n    raw: RawContactForceEvent;\n\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n    }\n\n    /**\n     * The first collider involved in the contact.\n     */\n    public collider1(): ColliderHandle {\n        return this.raw.collider1();\n    }\n\n    /**\n     * The second collider involved in the contact.\n     */\n    public collider2(): ColliderHandle {\n        return this.raw.collider2();\n    }\n\n    /**\n     * The sum of all the forces between the two colliders.\n     */\n    public totalForce(): Vector {\n        return VectorOps.fromRaw(this.raw.total_force());\n    }\n\n    /**\n     * The sum of the magnitudes of each force between the two colliders.\n     *\n     * Note that this is **not** the same as the magnitude of `self.total_force`.\n     * Here we are summing the magnitude of all the forces, instead of taking\n     * the magnitude of their sum.\n     */\n    public totalForceMagnitude(): number {\n        return this.raw.total_force_magnitude();\n    }\n\n    /**\n     * The world-space (unit) direction of the force with strongest magnitude.\n     */\n    public maxForceDirection(): Vector {\n        return VectorOps.fromRaw(this.raw.max_force_direction());\n    }\n\n    /**\n     * The magnitude of the largest force at a contact point of this contact pair.\n     */\n    public maxForceMagnitude(): number {\n        return this.raw.max_force_magnitude();\n    }\n}\n\n/**\n * A structure responsible for collecting events generated\n * by the physics engine.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `eventQueue.free()`\n * once you are done using it.\n */\nexport class EventQueue {\n    raw: RawEventQueue;\n\n    /**\n     * Creates a new event collector.\n     *\n     * @param autoDrain -setting this to `true` is strongly recommended. If true, the collector will\n     * be automatically drained before each `world.step(collector)`. If false, the collector will\n     * keep all events in memory unless it is manually drained/cleared; this may lead to unbounded use of\n     * RAM if no drain is performed.\n     */\n    constructor(autoDrain: boolean, raw?: RawEventQueue) {\n        this.raw = raw || new RawEventQueue(autoDrain);\n    }\n\n    /**\n     * Release the WASM memory occupied by this event-queue.\n     */\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n    }\n\n    /**\n     * Applies the given javascript closure on each collision event of this collector, then clear\n     * the internal collision event buffer.\n     *\n     * @param f - JavaScript closure applied to each collision event. The\n     * closure must take three arguments: two integers representing the handles of the colliders\n     * involved in the collision, and a boolean indicating if the collision started (true) or stopped\n     * (false).\n     */\n    public drainCollisionEvents(\n        f: (\n            handle1: ColliderHandle,\n            handle2: ColliderHandle,\n            started: boolean,\n        ) => void,\n    ) {\n        this.raw.drainCollisionEvents(f);\n    }\n\n    /**\n     * Applies the given javascript closure on each contact force event of this collector, then clear\n     * the internal collision event buffer.\n     *\n     * @param f - JavaScript closure applied to each collision event. The\n     *            closure must take one `TempContactForceEvent` argument.\n     */\n    public drainContactForceEvents(f: (event: TempContactForceEvent) => void) {\n        let event = new TempContactForceEvent();\n        this.raw.drainContactForceEvents((raw: RawContactForceEvent) => {\n            event.raw = raw;\n            f(event);\n            event.free();\n        });\n    }\n\n    /**\n     * Removes all events contained by this collector\n     */\n    public clear() {\n        this.raw.clear();\n    }\n}\n","import {RigidBodyHandle} from \"../dynamics\";\nimport {ColliderHandle} from \"../geometry\";\n\nexport enum ActiveHooks {\n    FILTER_CONTACT_PAIRS = 0b0001,\n    FILTER_INTERSECTION_PAIRS = 0b0010,\n    // MODIFY_SOLVER_CONTACTS = 0b0100, /* Not supported yet in JS. */\n}\n\nexport enum SolverFlags {\n    EMPTY = 0b000,\n    COMPUTE_IMPULSE = 0b001,\n}\n\nexport interface PhysicsHooks {\n    /**\n     * Function that determines if contacts computation should happen between two colliders, and how the\n     * constraints solver should behave for these contacts.\n     *\n     * This will only be executed and taken into account if at least one of the involved colliders contains the\n     * `ActiveHooks.FILTER_CONTACT_PAIR` flag in its active hooks.\n     *\n     * @param collider1 − Handle of the first collider involved in the potential contact.\n     * @param collider2 − Handle of the second collider involved in the potential contact.\n     * @param body1 − Handle of the first body involved in the potential contact.\n     * @param body2 − Handle of the second body involved in the potential contact.\n     */\n    filterContactPair(\n        collider1: ColliderHandle,\n        collider2: ColliderHandle,\n        body1: RigidBodyHandle,\n        body2: RigidBodyHandle,\n    ): SolverFlags | null;\n\n    /**\n     * Function that determines if intersection computation should happen between two colliders (where at least\n     * one is a sensor).\n     *\n     * This will only be executed and taken into account if `one of the involved colliders contains the\n     * `ActiveHooks.FILTER_INTERSECTION_PAIR` flag in its active hooks.\n     *\n     * @param collider1 − Handle of the first collider involved in the potential contact.\n     * @param collider2 − Handle of the second collider involved in the potential contact.\n     * @param body1 − Handle of the first body involved in the potential contact.\n     * @param body2 − Handle of the second body involved in the potential contact.\n     */\n    filterIntersectionPair(\n        collider1: ColliderHandle,\n        collider2: ColliderHandle,\n        body1: RigidBodyHandle,\n        body2: RigidBodyHandle,\n    ): boolean;\n}\n","export class Coarena<T> {\n    fconv: Float64Array;\n    uconv: Uint32Array;\n    data: Array<T>;\n    size: number;\n\n    public constructor() {\n        this.fconv = new Float64Array(1);\n        this.uconv = new Uint32Array(this.fconv.buffer);\n        this.data = new Array<T>();\n        this.size = 0;\n    }\n\n    public set(handle: number, data: T) {\n        let i = this.index(handle);\n        while (this.data.length <= i) {\n            this.data.push(null);\n        }\n\n        if (this.data[i] == null) this.size += 1;\n        this.data[i] = data;\n    }\n\n    public len(): number {\n        return this.size;\n    }\n\n    public delete(handle: number) {\n        let i = this.index(handle);\n        if (i < this.data.length) {\n            if (this.data[i] != null) this.size -= 1;\n            this.data[i] = null;\n        }\n    }\n\n    public clear() {\n        this.data = new Array<T>();\n    }\n\n    public get(handle: number): T | null {\n        let i = this.index(handle);\n        if (i < this.data.length) {\n            return this.data[i];\n        } else {\n            return null;\n        }\n    }\n\n    public forEach(f: (elt: T) => void) {\n        for (const elt of this.data) {\n            if (elt != null) f(elt);\n        }\n    }\n\n    public getAll(): Array<T> {\n        return this.data.filter((elt) => elt != null);\n    }\n\n    private index(handle: number): number {\n        /// Extracts the index part of a handle (the lower 32 bits).\n        /// This is done by first injecting the handle into an Float64Array\n        /// which is itself injected into an Uint32Array (at construction time).\n        /// The 0-th value of the Uint32Array will become the `number` integer\n        /// representation of the lower 32 bits.\n        /// Also `this.uconv[1]` then contains the generation number as a `number`,\n        /// which we don’t really need.\n        this.fconv[0] = handle;\n        return this.uconv[0];\n    }\n}\n","import {RawRigidBodySet} from \"../raw\";\nimport {Coarena} from \"../coarena\";\nimport {VectorOps, RotationOps} from \"../math\";\nimport {RigidBody, RigidBodyDesc, RigidBodyHandle} from \"./rigid_body\";\nimport {ColliderSet} from \"../geometry\";\nimport {ImpulseJointSet} from \"./impulse_joint_set\";\nimport {MultibodyJointSet} from \"./multibody_joint_set\";\nimport {IslandManager} from \"./island_manager\";\n\n/**\n * A set of rigid bodies that can be handled by a physics pipeline.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `rigidBodySet.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nexport class RigidBodySet {\n    raw: RawRigidBodySet;\n    private map: Coarena<RigidBody>;\n\n    /**\n     * Release the WASM memory occupied by this rigid-body set.\n     */\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n        this.map.clear();\n        this.map = undefined;\n    }\n\n    constructor(raw?: RawRigidBodySet) {\n        this.raw = raw || new RawRigidBodySet();\n        this.map = new Coarena<RigidBody>();\n        // deserialize\n        if (raw) {\n            raw.forEachRigidBodyHandle((handle: RigidBodyHandle) => {\n                this.map.set(handle, new RigidBody(raw, null, handle));\n            });\n        }\n    }\n\n    /**\n     * Internal method, do not call this explicitly.\n     */\n    public finalizeDeserialization(colliderSet: ColliderSet) {\n        this.map.forEach((rb) => rb.finalizeDeserialization(colliderSet));\n    }\n\n    /**\n     * Creates a new rigid-body and return its integer handle.\n     *\n     * @param desc - The description of the rigid-body to create.\n     */\n    public createRigidBody(\n        colliderSet: ColliderSet,\n        desc: RigidBodyDesc,\n    ): RigidBody {\n        let rawTra = VectorOps.intoRaw(desc.translation);\n        let rawRot = RotationOps.intoRaw(desc.rotation);\n        let rawLv = VectorOps.intoRaw(desc.linvel);\n        let rawCom = VectorOps.intoRaw(desc.centerOfMass);\n\n        // #if DIM3\n        let rawAv = VectorOps.intoRaw(desc.angvel);\n        let rawPrincipalInertia = VectorOps.intoRaw(\n            desc.principalAngularInertia,\n        );\n        let rawInertiaFrame = RotationOps.intoRaw(\n            desc.angularInertiaLocalFrame,\n        );\n        // #endif\n\n        let handle = this.raw.createRigidBody(\n            rawTra,\n            rawRot,\n            desc.gravityScale,\n            desc.mass,\n            desc.massOnly,\n            rawCom,\n            rawLv,\n            // #if DIM3\n            rawAv,\n            rawPrincipalInertia,\n            rawInertiaFrame,\n            desc.translationsEnabledX,\n            desc.translationsEnabledY,\n            desc.translationsEnabledZ,\n            desc.rotationsEnabledX,\n            desc.rotationsEnabledY,\n            desc.rotationsEnabledZ,\n            // #endif\n            desc.linearDamping,\n            desc.angularDamping,\n            desc.status,\n            desc.canSleep,\n            desc.sleeping,\n            desc.ccdEnabled,\n            desc.dominanceGroup,\n        );\n\n        rawTra.free();\n        rawRot.free();\n        rawLv.free();\n        rawCom.free();\n\n        // #if DIM3\n        rawAv.free();\n        rawPrincipalInertia.free();\n        rawInertiaFrame.free();\n        // #endif\n\n        const body = new RigidBody(this.raw, colliderSet, handle);\n        body.userData = desc.userData;\n\n        this.map.set(handle, body);\n\n        return body;\n    }\n\n    /**\n     * Removes a rigid-body from this set.\n     *\n     * This will also remove all the colliders and joints attached to the rigid-body.\n     *\n     * @param handle - The integer handle of the rigid-body to remove.\n     * @param colliders - The set of colliders that may contain colliders attached to the removed rigid-body.\n     * @param impulseJoints - The set of impulse joints that may contain joints attached to the removed rigid-body.\n     * @param multibodyJoints - The set of multibody joints that may contain joints attached to the removed rigid-body.\n     */\n    public remove(\n        handle: RigidBodyHandle,\n        islands: IslandManager,\n        colliders: ColliderSet,\n        impulseJoints: ImpulseJointSet,\n        multibodyJoints: MultibodyJointSet,\n    ) {\n        // Unmap the entities that will be removed automatically because of the rigid-body removals.\n        for (let i = 0; i < this.raw.rbNumColliders(handle); i += 1) {\n            colliders.unmap(this.raw.rbCollider(handle, i));\n        }\n\n        impulseJoints.forEachJointHandleAttachedToRigidBody(handle, (handle) =>\n            impulseJoints.unmap(handle),\n        );\n        multibodyJoints.forEachJointHandleAttachedToRigidBody(\n            handle,\n            (handle) => multibodyJoints.unmap(handle),\n        );\n\n        // Remove the rigid-body.\n        this.raw.remove(\n            handle,\n            islands.raw,\n            colliders.raw,\n            impulseJoints.raw,\n            multibodyJoints.raw,\n        );\n        this.map.delete(handle);\n    }\n\n    /**\n     * The number of rigid-bodies on this set.\n     */\n    public len(): number {\n        return this.map.len();\n    }\n\n    /**\n     * Does this set contain a rigid-body with the given handle?\n     *\n     * @param handle - The rigid-body handle to check.\n     */\n    public contains(handle: RigidBodyHandle): boolean {\n        return this.get(handle) != null;\n    }\n\n    /**\n     * Gets the rigid-body with the given handle.\n     *\n     * @param handle - The handle of the rigid-body to retrieve.\n     */\n    public get(handle: RigidBodyHandle): RigidBody | null {\n        return this.map.get(handle);\n    }\n\n    /**\n     * Applies the given closure to each rigid-body contained by this set.\n     *\n     * @param f - The closure to apply.\n     */\n    public forEach(f: (body: RigidBody) => void) {\n        this.map.forEach(f);\n    }\n\n    /**\n     * Applies the given closure to each active rigid-bodies contained by this set.\n     *\n     * A rigid-body is active if it is not sleeping, i.e., if it moved recently.\n     *\n     * @param f - The closure to apply.\n     */\n    public forEachActiveRigidBody(\n        islands: IslandManager,\n        f: (body: RigidBody) => void,\n    ) {\n        islands.forEachActiveRigidBodyHandle((handle) => {\n            f(this.get(handle));\n        });\n    }\n\n    /**\n     * Gets all rigid-bodies in the list.\n     *\n     * @returns rigid-bodies list.\n     */\n    public getAll(): RigidBody[] {\n        return this.map.getAll();\n    }\n}\n","import {RawIntegrationParameters} from \"../raw\";\n\nexport class IntegrationParameters {\n    raw: RawIntegrationParameters;\n\n    constructor(raw?: RawIntegrationParameters) {\n        this.raw = raw || new RawIntegrationParameters();\n    }\n\n    /**\n     * Free the WASM memory used by these integration parameters.\n     */\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n    }\n\n    /**\n     * The timestep length (default: `1.0 / 60.0`)\n     */\n    get dt(): number {\n        return this.raw.dt;\n    }\n\n    /**\n     * The Error Reduction Parameter in `[0, 1]` is the proportion of\n     * the positional error to be corrected at each time step (default: `0.2`).\n     */\n    get erp(): number {\n        return this.raw.erp;\n    }\n\n    /**\n     * Amount of penetration the engine wont attempt to correct (default: `0.001m`).\n     */\n    get allowedLinearError(): number {\n        return this.raw.allowedLinearError;\n    }\n\n    /**\n     * The maximal distance separating two objects that will generate predictive contacts (default: `0.002`).\n     */\n    get predictionDistance(): number {\n        return this.raw.predictionDistance;\n    }\n\n    /**\n     * Maximum number of iterations performed by the velocity constraints solver (default: `4`).\n     */\n    get maxVelocityIterations(): number {\n        return this.raw.maxVelocityIterations;\n    }\n\n    /**\n     * Maximum number of friction iterations performed by the position-based constraints solver (default: `1`).\n     */\n    get maxVelocityFrictionIterations(): number {\n        return this.raw.maxVelocityFrictionIterations;\n    }\n\n    /**\n     * Maximum number of stabilization iterations performed by the position-based constraints solver (default: `1`).\n     */\n    get maxStabilizationIterations(): number {\n        return this.raw.maxStabilizationIterations;\n    }\n\n    /**\n     * Minimum number of dynamic bodies in each active island (default: `128`).\n     */\n    get minIslandSize(): number {\n        return this.raw.minIslandSize;\n    }\n\n    /**\n     * Maximum number of substeps performed by the  solver (default: `1`).\n     */\n    get maxCcdSubsteps(): number {\n        return this.raw.maxCcdSubsteps;\n    }\n\n    set dt(value: number) {\n        this.raw.dt = value;\n    }\n\n    set erp(value: number) {\n        this.raw.erp = value;\n    }\n\n    set allowedLinearError(value: number) {\n        this.raw.allowedLinearError = value;\n    }\n\n    set predictionDistance(value: number) {\n        this.raw.predictionDistance = value;\n    }\n\n    set maxVelocityIterations(value: number) {\n        this.raw.maxVelocityIterations = value;\n    }\n\n    set maxVelocityFrictionIterations(value: number) {\n        this.raw.maxVelocityFrictionIterations = value;\n    }\n\n    set maxStabilizationIterations(value: number) {\n        this.raw.maxStabilizationIterations = value;\n    }\n\n    set minIslandSize(value: number) {\n        this.raw.minIslandSize = value;\n    }\n\n    set maxCcdSubsteps(value: number) {\n        this.raw.maxCcdSubsteps = value;\n    }\n}\n","import {RawImpulseJointSet} from \"../raw\";\nimport {Coarena} from \"../coarena\";\nimport {RigidBodySet} from \"./rigid_body_set\";\nimport {\n    RevoluteImpulseJoint,\n    FixedImpulseJoint,\n    ImpulseJoint,\n    ImpulseJointHandle,\n    JointData,\n    JointType,\n    PrismaticImpulseJoint,\n    // #if DIM3\n    SphericalImpulseJoint,\n    // #endif\n} from \"./impulse_joint\";\nimport {IslandManager} from \"./island_manager\";\nimport {RigidBodyHandle} from \"./rigid_body\";\nimport {Collider, ColliderHandle} from \"../geometry\";\n\n/**\n * A set of joints.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `jointSet.free()`\n * once you are done using it (and all the joints it created).\n */\nexport class ImpulseJointSet {\n    raw: RawImpulseJointSet;\n    private map: Coarena<ImpulseJoint>;\n\n    /**\n     * Release the WASM memory occupied by this joint set.\n     */\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n        this.map.clear();\n        this.map = undefined;\n    }\n\n    constructor(raw?: RawImpulseJointSet) {\n        this.raw = raw || new RawImpulseJointSet();\n        this.map = new Coarena<ImpulseJoint>();\n        // Initialize the map with the existing elements, if any.\n        if (raw) {\n            raw.forEachJointHandle((handle: ImpulseJointHandle) => {\n                this.map.set(handle, ImpulseJoint.newTyped(raw, null, handle));\n            });\n        }\n    }\n\n    /** @internal */\n    public finalizeDeserialization(bodies: RigidBodySet) {\n        this.map.forEach((joint) => joint.finalizeDeserialization(bodies));\n    }\n\n    /**\n     * Creates a new joint and return its integer handle.\n     *\n     * @param bodies - The set of rigid-bodies containing the bodies the joint is attached to.\n     * @param desc - The joint's parameters.\n     * @param parent1 - The handle of the first rigid-body this joint is attached to.\n     * @param parent2 - The handle of the second rigid-body this joint is attached to.\n     * @param wakeUp - Should the attached rigid-bodies be awakened?\n     */\n    public createJoint(\n        bodies: RigidBodySet,\n        desc: JointData,\n        parent1: RigidBodyHandle,\n        parent2: RigidBodyHandle,\n        wakeUp: boolean,\n    ): ImpulseJoint {\n        const rawParams = desc.intoRaw();\n        const handle = this.raw.createJoint(\n            rawParams,\n            parent1,\n            parent2,\n            wakeUp,\n        );\n        rawParams.free();\n        let joint = ImpulseJoint.newTyped(this.raw, bodies, handle);\n        this.map.set(handle, joint);\n        return joint;\n    }\n\n    /**\n     * Remove a joint from this set.\n     *\n     * @param handle - The integer handle of the joint.\n     * @param wakeUp - If `true`, the rigid-bodies attached by the removed joint will be woken-up automatically.\n     */\n    public remove(handle: ImpulseJointHandle, wakeUp: boolean) {\n        this.raw.remove(handle, wakeUp);\n        this.unmap(handle);\n    }\n\n    /**\n     * Calls the given closure with the integer handle of each impulse joint attached to this rigid-body.\n     *\n     * @param f - The closure called with the integer handle of each impulse joint attached to the rigid-body.\n     */\n    public forEachJointHandleAttachedToRigidBody(\n        handle: RigidBodyHandle,\n        f: (handle: ImpulseJointHandle) => void,\n    ) {\n        this.raw.forEachJointAttachedToRigidBody(handle, f);\n    }\n\n    /**\n     * Internal function, do not call directly.\n     * @param handle\n     */\n    public unmap(handle: ImpulseJointHandle) {\n        this.map.delete(handle);\n    }\n\n    /**\n     * The number of joints on this set.\n     */\n    public len(): number {\n        return this.map.len();\n    }\n\n    /**\n     * Does this set contain a joint with the given handle?\n     *\n     * @param handle - The joint handle to check.\n     */\n    public contains(handle: ImpulseJointHandle): boolean {\n        return this.get(handle) != null;\n    }\n\n    /**\n     * Gets the joint with the given handle.\n     *\n     * Returns `null` if no joint with the specified handle exists.\n     *\n     * @param handle - The integer handle of the joint to retrieve.\n     */\n    public get(handle: ImpulseJointHandle): ImpulseJoint | null {\n        return this.map.get(handle);\n    }\n\n    /**\n     * Applies the given closure to each joint contained by this set.\n     *\n     * @param f - The closure to apply.\n     */\n    public forEach(f: (joint: ImpulseJoint) => void) {\n        this.map.forEach(f);\n    }\n\n    /**\n     * Gets all joints in the list.\n     *\n     * @returns joint list.\n     */\n    public getAll(): ImpulseJoint[] {\n        return this.map.getAll();\n    }\n}\n","import {RawImpulseJointSet, RawJointAxis, RawMultibodyJointSet} from \"../raw\";\nimport {\n    FixedImpulseJoint,\n    ImpulseJointHandle,\n    JointType,\n    MotorModel,\n    PrismaticImpulseJoint,\n    RevoluteImpulseJoint,\n} from \"./impulse_joint\";\n\n// #if DIM3\nimport {Quaternion} from \"../math\";\nimport {SphericalImpulseJoint} from \"./impulse_joint\";\n// #endif\n\n/**\n * The integer identifier of a collider added to a `ColliderSet`.\n */\nexport type MultibodyJointHandle = number;\n\nexport class MultibodyJoint {\n    protected rawSet: RawMultibodyJointSet; // The MultibodyJoint won't need to free this.\n    handle: MultibodyJointHandle;\n\n    constructor(rawSet: RawMultibodyJointSet, handle: MultibodyJointHandle) {\n        this.rawSet = rawSet;\n        this.handle = handle;\n    }\n\n    public static newTyped(\n        rawSet: RawMultibodyJointSet,\n        handle: MultibodyJointHandle,\n    ): MultibodyJoint {\n        switch (rawSet.jointType(handle)) {\n            case JointType.Revolute:\n                return new RevoluteMultibodyJoint(rawSet, handle);\n            case JointType.Prismatic:\n                return new PrismaticMultibodyJoint(rawSet, handle);\n            case JointType.Fixed:\n                return new FixedMultibodyJoint(rawSet, handle);\n            // #if DIM3\n            case JointType.Spherical:\n                return new SphericalMultibodyJoint(rawSet, handle);\n            // #endif\n            default:\n                return new MultibodyJoint(rawSet, handle);\n        }\n    }\n\n    /**\n     * Checks if this joint is still valid (i.e. that it has\n     * not been deleted from the joint set yet).\n     */\n    public isValid(): boolean {\n        return this.rawSet.contains(this.handle);\n    }\n\n    // /**\n    //  * The unique integer identifier of the first rigid-body this joint it attached to.\n    //  */\n    // public bodyHandle1(): RigidBodyHandle {\n    //     return this.rawSet.jointBodyHandle1(this.handle);\n    // }\n    //\n    // /**\n    //  * The unique integer identifier of the second rigid-body this joint is attached to.\n    //  */\n    // public bodyHandle2(): RigidBodyHandle {\n    //     return this.rawSet.jointBodyHandle2(this.handle);\n    // }\n    //\n    // /**\n    //  * The type of this joint given as a string.\n    //  */\n    // public type(): JointType {\n    //     return this.rawSet.jointType(this.handle);\n    // }\n    //\n    // // #if DIM3\n    // /**\n    //  * The rotation quaternion that aligns this joint's first local axis to the `x` axis.\n    //  */\n    // public frameX1(): Rotation {\n    //     return RotationOps.fromRaw(this.rawSet.jointFrameX1(this.handle));\n    // }\n    //\n    // // #endif\n    //\n    // // #if DIM3\n    // /**\n    //  * The rotation matrix that aligns this joint's second local axis to the `x` axis.\n    //  */\n    // public frameX2(): Rotation {\n    //     return RotationOps.fromRaw(this.rawSet.jointFrameX2(this.handle));\n    // }\n    //\n    // // #endif\n    //\n    // /**\n    //  * The position of the first anchor of this joint.\n    //  *\n    //  * The first anchor gives the position of the points application point on the\n    //  * local frame of the first rigid-body it is attached to.\n    //  */\n    // public anchor1(): Vector {\n    //     return VectorOps.fromRaw(this.rawSet.jointAnchor1(this.handle));\n    // }\n    //\n    // /**\n    //  * The position of the second anchor of this joint.\n    //  *\n    //  * The second anchor gives the position of the points application point on the\n    //  * local frame of the second rigid-body it is attached to.\n    //  */\n    // public anchor2(): Vector {\n    //     return VectorOps.fromRaw(this.rawSet.jointAnchor2(this.handle));\n    // }\n\n    /**\n     * Controls whether contacts are computed between colliders attached\n     * to the rigid-bodies linked by this joint.\n     */\n    public setContactsEnabled(enabled: boolean) {\n        this.rawSet.jointSetContactsEnabled(this.handle, enabled);\n    }\n\n    /**\n     * Indicates if contacts are enabled between colliders attached\n     * to the rigid-bodies linked by this joint.\n     */\n    public contactsEnabled(): boolean {\n        return this.rawSet.jointContactsEnabled(this.handle);\n    }\n}\n\nexport class UnitMultibodyJoint extends MultibodyJoint {\n    /**\n     * The axis left free by this joint.\n     */\n    protected rawAxis?(): RawJointAxis;\n\n    // /**\n    //  * Are the limits enabled for this joint?\n    //  */\n    // public limitsEnabled(): boolean {\n    //     return this.rawSet.jointLimitsEnabled(this.handle, this.rawAxis());\n    // }\n    //\n    // /**\n    //  * The min limit of this joint.\n    //  */\n    // public limitsMin(): number {\n    //     return this.rawSet.jointLimitsMin(this.handle, this.rawAxis());\n    // }\n    //\n    // /**\n    //  * The max limit of this joint.\n    //  */\n    // public limitsMax(): number {\n    //     return this.rawSet.jointLimitsMax(this.handle, this.rawAxis());\n    // }\n    //\n    // public configureMotorModel(model: MotorModel) {\n    //     this.rawSet.jointConfigureMotorModel(this.handle, this.rawAxis(), model);\n    // }\n    //\n    // public configureMotorVelocity(targetVel: number, factor: number) {\n    //     this.rawSet.jointConfigureMotorVelocity(this.handle, this.rawAxis(), targetVel, factor);\n    // }\n    //\n    // public configureMotorPosition(targetPos: number, stiffness: number, damping: number) {\n    //     this.rawSet.jointConfigureMotorPosition(this.handle, this.rawAxis(), targetPos, stiffness, damping);\n    // }\n    //\n    // public configureMotor(targetPos: number, targetVel: number, stiffness: number, damping: number) {\n    //     this.rawSet.jointConfigureMotor(this.handle, this.rawAxis(), targetPos, targetVel, stiffness, damping);\n    // }\n}\n\nexport class FixedMultibodyJoint extends MultibodyJoint {}\n\nexport class PrismaticMultibodyJoint extends UnitMultibodyJoint {\n    public rawAxis(): RawJointAxis {\n        return RawJointAxis.X;\n    }\n}\n\nexport class RevoluteMultibodyJoint extends UnitMultibodyJoint {\n    public rawAxis(): RawJointAxis {\n        return RawJointAxis.AngX;\n    }\n}\n\n// #if DIM3\nexport class SphericalMultibodyJoint extends MultibodyJoint {\n    /* Unsupported by this alpha release.\n    public configureMotorModel(model: MotorModel) {\n        this.rawSet.jointConfigureMotorModel(this.handle, model);\n    }\n\n    public configureMotorVelocity(targetVel: Vector, factor: number) {\n        this.rawSet.jointConfigureBallMotorVelocity(this.handle, targetVel.x, targetVel.y, targetVel.z, factor);\n    }\n\n    public configureMotorPosition(targetPos: Quaternion, stiffness: number, damping: number) {\n        this.rawSet.jointConfigureBallMotorPosition(this.handle, targetPos.w, targetPos.x, targetPos.y, targetPos.z, stiffness, damping);\n    }\n\n    public configureMotor(targetPos: Quaternion, targetVel: Vector, stiffness: number, damping: number) {\n        this.rawSet.jointConfigureBallMotor(this.handle,\n            targetPos.w, targetPos.x, targetPos.y, targetPos.z,\n            targetVel.x, targetVel.y, targetVel.z,\n            stiffness, damping);\n    }\n     */\n}\n// #endif\n","import {RawMultibodyJointSet} from \"../raw\";\nimport {Coarena} from \"../coarena\";\nimport {RigidBodySet} from \"./rigid_body_set\";\nimport {\n    MultibodyJoint,\n    MultibodyJointHandle,\n    RevoluteMultibodyJoint,\n    FixedMultibodyJoint,\n    PrismaticMultibodyJoint,\n    // #if DIM3\n    SphericalMultibodyJoint,\n    // #endif\n} from \"./multibody_joint\";\nimport {ImpulseJointHandle, JointData, JointType} from \"./impulse_joint\";\nimport {IslandManager} from \"./island_manager\";\nimport {ColliderHandle} from \"../geometry\";\nimport {RigidBodyHandle} from \"./rigid_body\";\n\n/**\n * A set of joints.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `jointSet.free()`\n * once you are done using it (and all the joints it created).\n */\nexport class MultibodyJointSet {\n    raw: RawMultibodyJointSet;\n    private map: Coarena<MultibodyJoint>;\n\n    /**\n     * Release the WASM memory occupied by this joint set.\n     */\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n        this.map.clear();\n        this.map = undefined;\n    }\n\n    constructor(raw?: RawMultibodyJointSet) {\n        this.raw = raw || new RawMultibodyJointSet();\n        this.map = new Coarena<MultibodyJoint>();\n        // Initialize the map with the existing elements, if any.\n        if (raw) {\n            raw.forEachJointHandle((handle: MultibodyJointHandle) => {\n                this.map.set(handle, MultibodyJoint.newTyped(this.raw, handle));\n            });\n        }\n    }\n\n    /**\n     * Creates a new joint and return its integer handle.\n     *\n     * @param desc - The joint's parameters.\n     * @param parent1 - The handle of the first rigid-body this joint is attached to.\n     * @param parent2 - The handle of the second rigid-body this joint is attached to.\n     * @param wakeUp - Should the attached rigid-bodies be awakened?\n     */\n    public createJoint(\n        desc: JointData,\n        parent1: RigidBodyHandle,\n        parent2: RigidBodyHandle,\n        wakeUp: boolean,\n    ): MultibodyJoint {\n        const rawParams = desc.intoRaw();\n        const handle = this.raw.createJoint(\n            rawParams,\n            parent1,\n            parent2,\n            wakeUp,\n        );\n        rawParams.free();\n        let joint = MultibodyJoint.newTyped(this.raw, handle);\n        this.map.set(handle, joint);\n        return joint;\n    }\n\n    /**\n     * Remove a joint from this set.\n     *\n     * @param handle - The integer handle of the joint.\n     * @param wake_up - If `true`, the rigid-bodies attached by the removed joint will be woken-up automatically.\n     */\n    public remove(handle: MultibodyJointHandle, wake_up: boolean) {\n        this.raw.remove(handle, wake_up);\n        this.map.delete(handle);\n    }\n\n    /**\n     * Internal function, do not call directly.\n     * @param handle\n     */\n    public unmap(handle: MultibodyJointHandle) {\n        this.map.delete(handle);\n    }\n\n    /**\n     * The number of joints on this set.\n     */\n    public len(): number {\n        return this.map.len();\n    }\n\n    /**\n     * Does this set contain a joint with the given handle?\n     *\n     * @param handle - The joint handle to check.\n     */\n    public contains(handle: MultibodyJointHandle): boolean {\n        return this.get(handle) != null;\n    }\n\n    /**\n     * Gets the joint with the given handle.\n     *\n     * Returns `null` if no joint with the specified handle exists.\n     *\n     * @param handle - The integer handle of the joint to retrieve.\n     */\n    public get(handle: MultibodyJointHandle): MultibodyJoint | null {\n        return this.map.get(handle);\n    }\n\n    /**\n     * Applies the given closure to each joint contained by this set.\n     *\n     * @param f - The closure to apply.\n     */\n    public forEach(f: (joint: MultibodyJoint) => void) {\n        this.map.forEach(f);\n    }\n\n    /**\n     * Calls the given closure with the integer handle of each multibody joint attached to this rigid-body.\n     *\n     * @param f - The closure called with the integer handle of each multibody joint attached to the rigid-body.\n     */\n    public forEachJointHandleAttachedToRigidBody(\n        handle: RigidBodyHandle,\n        f: (handle: MultibodyJointHandle) => void,\n    ) {\n        this.raw.forEachJointAttachedToRigidBody(handle, f);\n    }\n\n    /**\n     * Gets all joints in the list.\n     *\n     * @returns joint list.\n     */\n    public getAll(): MultibodyJoint[] {\n        return this.map.getAll();\n    }\n}\n","import {RawCCDSolver} from \"../raw\";\n\n/**\n * The CCD solver responsible for resolving Continuous Collision Detection.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `ccdSolver.free()`\n * once you are done using it.\n */\nexport class CCDSolver {\n    raw: RawCCDSolver;\n\n    /**\n     * Release the WASM memory occupied by this narrow-phase.\n     */\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawCCDSolver) {\n        this.raw = raw || new RawCCDSolver();\n    }\n}\n","import {RawIslandManager} from \"../raw\";\nimport {RigidBodyHandle} from \"./rigid_body\";\n\n/**\n * The CCD solver responsible for resolving Continuous Collision Detection.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `ccdSolver.free()`\n * once you are done using it.\n */\nexport class IslandManager {\n    raw: RawIslandManager;\n\n    /**\n     * Release the WASM memory occupied by this narrow-phase.\n     */\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawIslandManager) {\n        this.raw = raw || new RawIslandManager();\n    }\n\n    /**\n     * Applies the given closure to the handle of each active rigid-bodies contained by this set.\n     *\n     * A rigid-body is active if it is not sleeping, i.e., if it moved recently.\n     *\n     * @param f - The closure to apply.\n     */\n    public forEachActiveRigidBodyHandle(f: (handle: RigidBodyHandle) => void) {\n        this.raw.forEachActiveRigidBodyHandle(f);\n    }\n}\n","import {RawBroadPhase} from \"../raw\";\n\n/**\n * The broad-phase used for coarse collision-detection.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `broadPhase.free()`\n * once you are done using it.\n */\nexport class BroadPhase {\n    raw: RawBroadPhase;\n\n    /**\n     * Release the WASM memory occupied by this broad-phase.\n     */\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawBroadPhase) {\n        this.raw = raw || new RawBroadPhase();\n    }\n}\n","import {RawNarrowPhase, RawContactManifold} from \"../raw\";\nimport {ColliderHandle} from \"./collider\";\nimport {Vector, VectorOps} from \"../math\";\n\n/**\n * The narrow-phase used for precise collision-detection.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `narrowPhase.free()`\n * once you are done using it.\n */\nexport class NarrowPhase {\n    raw: RawNarrowPhase;\n    tempManifold: TempContactManifold;\n\n    /**\n     * Release the WASM memory occupied by this narrow-phase.\n     */\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawNarrowPhase) {\n        this.raw = raw || new RawNarrowPhase();\n        this.tempManifold = new TempContactManifold(null);\n    }\n\n    /**\n     * Enumerates all the colliders potentially in contact with the given collider.\n     *\n     * @param collider1 - The second collider involved in the contact.\n     * @param f - Closure that will be called on each collider that is in contact with `collider1`.\n     */\n    public contactsWith(\n        collider1: ColliderHandle,\n        f: (collider2: ColliderHandle) => void,\n    ) {\n        this.raw.contacts_with(collider1, f);\n    }\n\n    /**\n     * Enumerates all the colliders intersecting the given colliders, assuming one of them\n     * is a sensor.\n     */\n    public intersectionsWith(\n        collider1: ColliderHandle,\n        f: (collider2: ColliderHandle) => void,\n    ) {\n        this.raw.intersections_with(collider1, f);\n    }\n\n    /**\n     * Iterates through all the contact manifolds between the given pair of colliders.\n     *\n     * @param collider1 - The first collider involved in the contact.\n     * @param collider2 - The second collider involved in the contact.\n     * @param f - Closure that will be called on each contact manifold between the two colliders. If the second argument\n     *            passed to this closure is `true`, then the contact manifold data is flipped, i.e., methods like `localNormal1`\n     *            actually apply to the `collider2` and fields like `localNormal2` apply to the `collider1`.\n     */\n    public contactPair(\n        collider1: ColliderHandle,\n        collider2: ColliderHandle,\n        f: (manifold: TempContactManifold, flipped: boolean) => void,\n    ) {\n        const rawPair = this.raw.contact_pair(collider1, collider2);\n\n        if (!!rawPair) {\n            const flipped = rawPair.collider1() != collider1;\n\n            let i;\n            for (i = 0; i < rawPair.numContactManifolds(); ++i) {\n                this.tempManifold.raw = rawPair.contactManifold(i);\n                if (!!this.tempManifold.raw) {\n                    f(this.tempManifold, flipped);\n                }\n\n                // SAFETY: The RawContactManifold stores a raw pointer that will be invalidated\n                //         at the next timestep. So we must be sure to free the pair here\n                //         to avoid unsoundness in the Rust code.\n                this.tempManifold.free();\n            }\n            rawPair.free();\n        }\n    }\n\n    /**\n     * Returns `true` if `collider1` and `collider2` intersect and at least one of them is a sensor.\n     * @param collider1 − The first collider involved in the intersection.\n     * @param collider2 − The second collider involved in the intersection.\n     */\n    public intersectionPair(\n        collider1: ColliderHandle,\n        collider2: ColliderHandle,\n    ): boolean {\n        return this.raw.intersection_pair(collider1, collider2);\n    }\n}\n\nexport class TempContactManifold {\n    raw: RawContactManifold;\n\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n    }\n\n    constructor(raw: RawContactManifold) {\n        this.raw = raw;\n    }\n\n    public normal(): Vector {\n        return VectorOps.fromRaw(this.raw.normal());\n    }\n\n    public localNormal1(): Vector {\n        return VectorOps.fromRaw(this.raw.local_n1());\n    }\n\n    public localNormal2(): Vector {\n        return VectorOps.fromRaw(this.raw.local_n2());\n    }\n\n    public subshape1(): number {\n        return this.raw.subshape1();\n    }\n\n    public subshape2(): number {\n        return this.raw.subshape2();\n    }\n\n    public numContacts(): number {\n        return this.raw.num_contacts();\n    }\n\n    public localContactPoint1(i: number): Vector | null {\n        return VectorOps.fromRaw(this.raw.contact_local_p1(i));\n    }\n\n    public localContactPoint2(i: number): Vector | null {\n        return VectorOps.fromRaw(this.raw.contact_local_p2(i));\n    }\n\n    public contactDist(i: number): number {\n        return this.raw.contact_dist(i);\n    }\n\n    public contactFid1(i: number): number {\n        return this.raw.contact_fid1(i);\n    }\n\n    public contactFid2(i: number): number {\n        return this.raw.contact_fid2(i);\n    }\n\n    public contactImpulse(i: number): number {\n        return this.raw.contact_impulse(i);\n    }\n\n\n    // #if DIM3\n    public contactTangentImpulseX(i: number): number {\n        return this.raw.contact_tangent_impulse_x(i);\n    }\n\n    public contactTangentImpulseY(i: number): number {\n        return this.raw.contact_tangent_impulse_y(i);\n    }\n    // #endif\n\n    public numSolverContacts(): number {\n        return this.raw.num_solver_contacts();\n    }\n\n    public solverContactPoint(i: number): Vector {\n        return VectorOps.fromRaw(this.raw.solver_contact_point(i));\n    }\n\n    public solverContactDist(i: number): number {\n        return this.raw.solver_contact_dist(i);\n    }\n\n    public solverContactFriction(i: number): number {\n        return this.raw.solver_contact_friction(i);\n    }\n\n    public solverContactRestitution(i: number): number {\n        return this.raw.solver_contact_restitution(i);\n    }\n\n    public solverContactTangentVelocity(i: number): Vector {\n        return VectorOps.fromRaw(this.raw.solver_contact_tangent_velocity(i));\n    }\n}\n","import {Vector, VectorOps} from \"../math\";\nimport {RawShapeContact} from \"../raw\";\n\n/**\n * The contact info between two shapes.\n */\nexport class ShapeContact {\n    /**\n     * Distance between the two contact points.\n     * If this is negative, this contact represents a penetration.\n     */\n    distance: number;\n\n    /**\n     * Position of the contact on the first shape.\n     */\n    point1: Vector;\n\n    /**\n     * Position of the contact on the second shape.\n     */\n    point2: Vector;\n\n    /**\n     * Contact normal, pointing towards the exterior of the first shape.\n     */\n    normal1: Vector;\n\n    /**\n     * Contact normal, pointing towards the exterior of the second shape.\n     * If these contact data are expressed in world-space, this normal is equal to -normal1.\n     */\n    normal2: Vector;\n\n    constructor(\n        dist: number,\n        point1: Vector,\n        point2: Vector,\n        normal1: Vector,\n        normal2: Vector,\n    ) {\n        this.distance = dist;\n        this.point1 = point1;\n        this.point2 = point2;\n        this.normal1 = normal1;\n        this.normal2 = normal2;\n    }\n\n    public static fromRaw(raw: RawShapeContact): ShapeContact {\n        if (!raw) return null;\n\n        const result = new ShapeContact(\n            raw.distance(),\n            VectorOps.fromRaw(raw.point1()),\n            VectorOps.fromRaw(raw.point2()),\n            VectorOps.fromRaw(raw.normal1()),\n            VectorOps.fromRaw(raw.normal2()),\n        );\n        raw.free();\n        return result;\n    }\n}\n","import {Collider, ColliderHandle} from \"./collider\";\nimport {Vector, VectorOps} from \"../math\";\nimport {RawPointColliderProjection, RawPointProjection} from \"../raw\";\nimport {FeatureType} from \"./feature\";\nimport {ColliderSet} from \"./collider_set\";\n\n/**\n * The projection of a point on a collider.\n */\nexport class PointProjection {\n    /**\n     * The projection of the point on the collider.\n     */\n    point: Vector;\n    /**\n     * Is the point inside of the collider?\n     */\n    isInside: boolean;\n\n    constructor(point: Vector, isInside: boolean) {\n        this.point = point;\n        this.isInside = isInside;\n    }\n\n    public static fromRaw(raw: RawPointProjection): PointProjection {\n        if (!raw) return null;\n\n        const result = new PointProjection(\n            VectorOps.fromRaw(raw.point()),\n            raw.isInside(),\n        );\n        raw.free();\n        return result;\n    }\n}\n\n/**\n * The projection of a point on a collider (includes the collider handle).\n */\nexport class PointColliderProjection {\n    /**\n     * The collider hit by the ray.\n     */\n    collider: Collider;\n    /**\n     * The projection of the point on the collider.\n     */\n    point: Vector;\n    /**\n     * Is the point inside of the collider?\n     */\n    isInside: boolean;\n\n    /**\n     * The type of the geometric feature the point was projected on.\n     */\n    featureType = FeatureType.Unknown;\n\n    /**\n     * The id of the geometric feature the point was projected on.\n     */\n    featureId: number | undefined = undefined;\n\n    constructor(\n        collider: Collider,\n        point: Vector,\n        isInside: boolean,\n        featureType?: FeatureType,\n        featureId?: number,\n    ) {\n        this.collider = collider;\n        this.point = point;\n        this.isInside = isInside;\n        if (featureId !== undefined) this.featureId = featureId;\n        if (featureType !== undefined) this.featureType = featureType;\n    }\n\n    public static fromRaw(\n        colliderSet: ColliderSet,\n        raw: RawPointColliderProjection,\n    ): PointColliderProjection {\n        if (!raw) return null;\n\n        const result = new PointColliderProjection(\n            colliderSet.get(raw.colliderHandle()),\n            VectorOps.fromRaw(raw.point()),\n            raw.isInside(),\n            raw.featureType(),\n            raw.featureId(),\n        );\n        raw.free();\n        return result;\n    }\n}\n","import {Vector, VectorOps} from \"../math\";\nimport {\n    RawRayColliderIntersection,\n    RawRayColliderToi,\n    RawRayIntersection,\n} from \"../raw\";\nimport {Collider} from \"./collider\";\nimport {FeatureType} from \"./feature\";\nimport {ColliderSet} from \"./collider_set\";\n\n/**\n * A ray. This is a directed half-line.\n */\nexport class Ray {\n    /**\n     * The starting point of the ray.\n     */\n    public origin: Vector;\n    /**\n     * The direction of propagation of the ray.\n     */\n    public dir: Vector;\n\n    /**\n     * Builds a ray from its origin and direction.\n     *\n     * @param origin - The ray's starting point.\n     * @param dir - The ray's direction of propagation.\n     */\n    constructor(origin: Vector, dir: Vector) {\n        this.origin = origin;\n        this.dir = dir;\n    }\n\n    public pointAt(t: number): Vector {\n        return {\n            x: this.origin.x + this.dir.x * t,\n            y: this.origin.y + this.dir.y * t,\n            // #if DIM3\n            z: this.origin.z + this.dir.z * t,\n            // #endif\n        };\n    }\n}\n\n/**\n * The intersection between a ray and a collider.\n */\nexport class RayIntersection {\n    /**\n     * The time-of-impact of the ray with the collider.\n     *\n     * The hit point is obtained from the ray's origin and direction: `origin + dir * toi`.\n     */\n    toi: number;\n    /**\n     * The normal of the collider at the hit point.\n     */\n    normal: Vector;\n\n    /**\n     * The type of the geometric feature the point was projected on.\n     */\n    featureType = FeatureType.Unknown;\n\n    /**\n     * The id of the geometric feature the point was projected on.\n     */\n    featureId: number | undefined = undefined;\n\n    constructor(\n        toi: number,\n        normal: Vector,\n        featureType?: FeatureType,\n        featureId?: number,\n    ) {\n        this.toi = toi;\n        this.normal = normal;\n        if (featureId !== undefined) this.featureId = featureId;\n        if (featureType !== undefined) this.featureType = featureType;\n    }\n\n    public static fromRaw(raw: RawRayIntersection): RayIntersection {\n        if (!raw) return null;\n\n        const result = new RayIntersection(\n            raw.toi(),\n            VectorOps.fromRaw(raw.normal()),\n            raw.featureType(),\n            raw.featureId(),\n        );\n        raw.free();\n        return result;\n    }\n}\n\n/**\n * The intersection between a ray and a collider (includes the collider handle).\n */\nexport class RayColliderIntersection {\n    /**\n     * The collider hit by the ray.\n     */\n    collider: Collider;\n    /**\n     * The time-of-impact of the ray with the collider.\n     *\n     * The hit point is obtained from the ray's origin and direction: `origin + dir * toi`.\n     */\n    toi: number;\n    /**\n     * The normal of the collider at the hit point.\n     */\n    normal: Vector;\n\n    /**\n     * The type of the geometric feature the point was projected on.\n     */\n    featureType = FeatureType.Unknown;\n\n    /**\n     * The id of the geometric feature the point was projected on.\n     */\n    featureId: number | undefined = undefined;\n\n    constructor(\n        collider: Collider,\n        toi: number,\n        normal: Vector,\n        featureType?: FeatureType,\n        featureId?: number,\n    ) {\n        this.collider = collider;\n        this.toi = toi;\n        this.normal = normal;\n        if (featureId !== undefined) this.featureId = featureId;\n        if (featureType !== undefined) this.featureType = featureType;\n    }\n\n    public static fromRaw(\n        colliderSet: ColliderSet,\n        raw: RawRayColliderIntersection,\n    ): RayColliderIntersection {\n        if (!raw) return null;\n\n        const result = new RayColliderIntersection(\n            colliderSet.get(raw.colliderHandle()),\n            raw.toi(),\n            VectorOps.fromRaw(raw.normal()),\n            raw.featureType(),\n            raw.featureId(),\n        );\n        raw.free();\n        return result;\n    }\n}\n\n/**\n * The time of impact between a ray and a collider.\n */\nexport class RayColliderToi {\n    /**\n     * The handle of the collider hit by the ray.\n     */\n    collider: Collider;\n    /**\n     * The time-of-impact of the ray with the collider.\n     *\n     * The hit point is obtained from the ray's origin and direction: `origin + dir * toi`.\n     */\n    toi: number;\n\n    constructor(collider: Collider, toi: number) {\n        this.collider = collider;\n        this.toi = toi;\n    }\n\n    public static fromRaw(\n        colliderSet: ColliderSet,\n        raw: RawRayColliderToi,\n    ): RayColliderToi {\n        if (!raw) return null;\n\n        const result = new RayColliderToi(\n            colliderSet.get(raw.colliderHandle()),\n            raw.toi(),\n        );\n        raw.free();\n        return result;\n    }\n}\n","import {Collider} from \"./collider\";\nimport {Vector, VectorOps} from \"../math\";\nimport {RawShapeTOI, RawShapeColliderTOI} from \"../raw\";\nimport {ColliderSet} from \"./collider_set\";\n\n/**\n * The intersection between a ray and a collider.\n */\nexport class ShapeTOI {\n    /**\n     * The time of impact of the two shapes.\n     */\n    toi: number;\n    /**\n     * The local-space contact point on the first shape, at\n     * the time of impact.\n     */\n    witness1: Vector;\n    /**\n     * The local-space contact point on the second shape, at\n     * the time of impact.\n     */\n    witness2: Vector;\n    /**\n     * The local-space normal on the first shape, at\n     * the time of impact.\n     */\n    normal1: Vector;\n    /**\n     * The local-space normal on the second shape, at\n     * the time of impact.\n     */\n    normal2: Vector;\n\n    constructor(\n        toi: number,\n        witness1: Vector,\n        witness2: Vector,\n        normal1: Vector,\n        normal2: Vector,\n    ) {\n        this.toi = toi;\n        this.witness1 = witness1;\n        this.witness2 = witness2;\n        this.normal1 = normal1;\n        this.normal2 = normal2;\n    }\n\n    public static fromRaw(\n        colliderSet: ColliderSet,\n        raw: RawShapeTOI,\n    ): ShapeTOI {\n        if (!raw) return null;\n\n        const result = new ShapeTOI(\n            raw.toi(),\n            VectorOps.fromRaw(raw.witness1()),\n            VectorOps.fromRaw(raw.witness2()),\n            VectorOps.fromRaw(raw.normal1()),\n            VectorOps.fromRaw(raw.normal2()),\n        );\n        raw.free();\n        return result;\n    }\n}\n\n/**\n * The intersection between a ray and a collider.\n */\nexport class ShapeColliderTOI extends ShapeTOI {\n    /**\n     * The handle of the collider hit by the ray.\n     */\n    collider: Collider;\n\n    constructor(\n        collider: Collider,\n        toi: number,\n        witness1: Vector,\n        witness2: Vector,\n        normal1: Vector,\n        normal2: Vector,\n    ) {\n        super(toi, witness1, witness2, normal1, normal2);\n        this.collider = collider;\n    }\n\n    public static fromRaw(\n        colliderSet: ColliderSet,\n        raw: RawShapeColliderTOI,\n    ): ShapeColliderTOI {\n        if (!raw) return null;\n\n        const result = new ShapeColliderTOI(\n            colliderSet.get(raw.colliderHandle()),\n            raw.toi(),\n            VectorOps.fromRaw(raw.witness1()),\n            VectorOps.fromRaw(raw.witness2()),\n            VectorOps.fromRaw(raw.normal1()),\n            VectorOps.fromRaw(raw.normal2()),\n        );\n        raw.free();\n        return result;\n    }\n}\n","import {RawColliderSet} from \"../raw\";\nimport {Coarena} from \"../coarena\";\nimport {RotationOps, VectorOps} from \"../math\";\nimport {Collider, ColliderDesc, ColliderHandle} from \"./collider\";\nimport {ImpulseJointHandle, IslandManager, RigidBodyHandle} from \"../dynamics\";\nimport {RigidBodySet} from \"../dynamics\";\n\n/**\n * A set of rigid bodies that can be handled by a physics pipeline.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `colliderSet.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nexport class ColliderSet {\n    raw: RawColliderSet;\n    private map: Coarena<Collider>;\n\n    /**\n     * Release the WASM memory occupied by this collider set.\n     */\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n        this.map.clear();\n        this.map = undefined;\n    }\n\n    constructor(raw?: RawColliderSet) {\n        this.raw = raw || new RawColliderSet();\n        this.map = new Coarena<Collider>();\n        // Initialize the map with the existing elements, if any.\n        if (raw) {\n            raw.forEachColliderHandle((handle: ColliderHandle) => {\n                this.map.set(handle, new Collider(this, handle, null));\n            });\n        }\n    }\n\n    /** @internal */\n    public finalizeDeserialization(bodies: RigidBodySet) {\n        this.map.forEach((collider) =>\n            collider.finalizeDeserialization(bodies),\n        );\n    }\n\n    /**\n     * Creates a new collider and return its integer handle.\n     *\n     * @param bodies - The set of bodies where the collider's parent can be found.\n     * @param desc - The collider's description.\n     * @param parentHandle - The integer handle of the rigid-body this collider is attached to.\n     */\n    public createCollider(\n        bodies: RigidBodySet,\n        desc: ColliderDesc,\n        parentHandle: RigidBodyHandle,\n    ): Collider {\n        let hasParent = parentHandle != undefined && parentHandle != null;\n\n        if (hasParent && isNaN(parentHandle))\n            throw Error(\n                \"Cannot create a collider with a parent rigid-body handle that is not a number.\",\n            );\n\n        let rawShape = desc.shape.intoRaw();\n        let rawTra = VectorOps.intoRaw(desc.translation);\n        let rawRot = RotationOps.intoRaw(desc.rotation);\n        let rawCom = VectorOps.intoRaw(desc.centerOfMass);\n\n        // #if DIM3\n        let rawPrincipalInertia = VectorOps.intoRaw(\n            desc.principalAngularInertia,\n        );\n        let rawInertiaFrame = RotationOps.intoRaw(\n            desc.angularInertiaLocalFrame,\n        );\n        // #endif\n\n        let handle = this.raw.createCollider(\n            rawShape,\n            rawTra,\n            rawRot,\n            desc.massPropsMode,\n            desc.mass,\n            rawCom,\n            // #if DIM3\n            rawPrincipalInertia,\n            rawInertiaFrame,\n            // #endif\n            desc.density,\n            desc.friction,\n            desc.restitution,\n            desc.frictionCombineRule,\n            desc.restitutionCombineRule,\n            desc.isSensor,\n            desc.collisionGroups,\n            desc.solverGroups,\n            desc.activeCollisionTypes,\n            desc.activeHooks,\n            desc.activeEvents,\n            desc.contactForceEventThreshold,\n            hasParent,\n            hasParent ? parentHandle : 0,\n            bodies.raw,\n        );\n\n        rawShape.free();\n        rawTra.free();\n        rawRot.free();\n        rawCom.free();\n\n        // #if DIM3\n        rawPrincipalInertia.free();\n        rawInertiaFrame.free();\n        // #endif\n\n        let parent = hasParent ? bodies.get(parentHandle) : null;\n        let collider = new Collider(this, handle, parent, desc.shape);\n        this.map.set(handle, collider);\n        return collider;\n    }\n\n    /**\n     * Remove a collider from this set.\n     *\n     * @param handle - The integer handle of the collider to remove.\n     * @param bodies - The set of rigid-body containing the rigid-body the collider is attached to.\n     * @param wakeUp - If `true`, the rigid-body the removed collider is attached to will be woken-up automatically.\n     */\n    public remove(\n        handle: ColliderHandle,\n        islands: IslandManager,\n        bodies: RigidBodySet,\n        wakeUp: boolean,\n    ) {\n        this.raw.remove(handle, islands.raw, bodies.raw, wakeUp);\n        this.unmap(handle);\n    }\n\n    /**\n     * Internal function, do not call directly.\n     * @param handle\n     */\n    public unmap(handle: ImpulseJointHandle) {\n        this.map.delete(handle);\n    }\n\n    /**\n     * Gets the rigid-body with the given handle.\n     *\n     * @param handle - The handle of the rigid-body to retrieve.\n     */\n    public get(handle: ColliderHandle): Collider | null {\n        return this.map.get(handle);\n    }\n\n    /**\n     * The number of colliders on this set.\n     */\n    public len(): number {\n        return this.map.len();\n    }\n\n    /**\n     * Does this set contain a collider with the given handle?\n     *\n     * @param handle - The collider handle to check.\n     */\n    public contains(handle: ColliderHandle): boolean {\n        return this.get(handle) != null;\n    }\n\n    /**\n     * Applies the given closure to each collider contained by this set.\n     *\n     * @param f - The closure to apply.\n     */\n    public forEach(f: (collider: Collider) => void) {\n        this.map.forEach(f);\n    }\n\n    /**\n     * Gets all colliders in the list.\n     *\n     * @returns collider list.\n     */\n    public getAll(): Collider[] {\n        return this.map.getAll();\n    }\n}\n","import {RawPhysicsPipeline} from \"../raw\";\nimport {Vector, VectorOps} from \"../math\";\nimport {\n    IntegrationParameters,\n    ImpulseJointSet,\n    MultibodyJointSet,\n    RigidBodyHandle,\n    RigidBodySet,\n    CCDSolver,\n    IslandManager,\n} from \"../dynamics\";\nimport {\n    BroadPhase,\n    ColliderHandle,\n    ColliderSet,\n    NarrowPhase,\n} from \"../geometry\";\nimport {EventQueue} from \"./event_queue\";\nimport {PhysicsHooks} from \"./physics_hooks\";\n\nexport class PhysicsPipeline {\n    raw: RawPhysicsPipeline;\n\n    public free() {\n        this.raw.free();\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawPhysicsPipeline) {\n        this.raw = raw || new RawPhysicsPipeline();\n    }\n\n    public step(\n        gravity: Vector,\n        integrationParameters: IntegrationParameters,\n        islands: IslandManager,\n        broadPhase: BroadPhase,\n        narrowPhase: NarrowPhase,\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        impulseJoints: ImpulseJointSet,\n        multibodyJoints: MultibodyJointSet,\n        ccdSolver: CCDSolver,\n        eventQueue?: EventQueue,\n        hooks?: PhysicsHooks,\n    ) {\n        let rawG = VectorOps.intoRaw(gravity);\n\n        if (!!eventQueue) {\n            this.raw.stepWithEvents(\n                rawG,\n                integrationParameters.raw,\n                islands.raw,\n                broadPhase.raw,\n                narrowPhase.raw,\n                bodies.raw,\n                colliders.raw,\n                impulseJoints.raw,\n                multibodyJoints.raw,\n                ccdSolver.raw,\n                eventQueue.raw,\n                hooks,\n                !!hooks ? hooks.filterContactPair : null,\n                !!hooks ? hooks.filterIntersectionPair : null,\n            );\n        } else {\n            this.raw.step(\n                rawG,\n                integrationParameters.raw,\n                islands.raw,\n                broadPhase.raw,\n                narrowPhase.raw,\n                bodies.raw,\n                colliders.raw,\n                impulseJoints.raw,\n                multibodyJoints.raw,\n                ccdSolver.raw,\n            );\n        }\n\n        rawG.free();\n    }\n}\n","import {RawSerializationPipeline} from \"../raw\";\nimport {Vector, VectorOps} from \"../math\";\nimport {\n    IntegrationParameters,\n    IslandManager,\n    ImpulseJointSet,\n    MultibodyJointSet,\n    RigidBodySet,\n} from \"../dynamics\";\nimport {BroadPhase, ColliderSet, NarrowPhase} from \"../geometry\";\nimport {World} from \"./world\";\n\n/**\n * A pipeline for serializing the physics scene.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `queryPipeline.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nexport class SerializationPipeline {\n    raw: RawSerializationPipeline;\n\n    /**\n     * Release the WASM memory occupied by this serialization pipeline.\n     */\n    free() {\n        this.raw.free();\n        this.raw = undefined;\n    }\n\n    constructor(raw?: RawSerializationPipeline) {\n        this.raw = raw || new RawSerializationPipeline();\n    }\n\n    /**\n     * Serialize a complete physics state into a single byte array.\n     * @param gravity - The current gravity affecting the simulation.\n     * @param integrationParameters - The integration parameters of the simulation.\n     * @param broadPhase - The broad-phase of the simulation.\n     * @param narrowPhase - The narrow-phase of the simulation.\n     * @param bodies - The rigid-bodies taking part into the simulation.\n     * @param colliders - The colliders taking part into the simulation.\n     * @param impulseJoints - The impulse joints taking part into the simulation.\n     * @param multibodyJoints - The multibody joints taking part into the simulation.\n     */\n    public serializeAll(\n        gravity: Vector,\n        integrationParameters: IntegrationParameters,\n        islands: IslandManager,\n        broadPhase: BroadPhase,\n        narrowPhase: NarrowPhase,\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        impulseJoints: ImpulseJointSet,\n        multibodyJoints: MultibodyJointSet,\n    ): Uint8Array {\n        let rawGra = VectorOps.intoRaw(gravity);\n\n        const res = this.raw.serializeAll(\n            rawGra,\n            integrationParameters.raw,\n            islands.raw,\n            broadPhase.raw,\n            narrowPhase.raw,\n            bodies.raw,\n            colliders.raw,\n            impulseJoints.raw,\n            multibodyJoints.raw,\n        );\n        rawGra.free();\n\n        return res;\n    }\n\n    /**\n     * Deserialize the complete physics state from a single byte array.\n     *\n     * @param data - The byte array to deserialize.\n     */\n    public deserializeAll(data: Uint8Array): World {\n        return World.fromRaw(this.raw.deserializeAll(data));\n    }\n}\n","import {RawDebugRenderPipeline} from \"../raw\";\nimport {Vector, VectorOps} from \"../math\";\nimport {\n    IntegrationParameters,\n    IslandManager,\n    ImpulseJointSet,\n    MultibodyJointSet,\n    RigidBodySet,\n} from \"../dynamics\";\nimport {BroadPhase, ColliderSet, NarrowPhase} from \"../geometry\";\n\n/**\n * The vertex and color buffers for debug-redering the physics scene.\n */\nexport class DebugRenderBuffers {\n    /**\n     * The lines to render. This is a flat array containing all the lines\n     * to render. Each line is described as two consecutive point. Each\n     * point is described as two (in 2D) or three (in 3D) consecutive\n     * floats. For example, in 2D, the array: `[1, 2, 3, 4, 5, 6, 7, 8]`\n     * describes the two segments `[[1, 2], [3, 4]]` and `[[5, 6], [7, 8]]`.\n     */\n    public vertices: Float32Array;\n    /**\n     * The color buffer. There is one color per vertex, and each color\n     * has four consecutive components (in RGBA format).\n     */\n    public colors: Float32Array;\n\n    constructor(vertices: Float32Array, colors: Float32Array) {\n        this.vertices = vertices;\n        this.colors = colors;\n    }\n}\n\n/**\n * A pipeline for rendering the physics scene.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `debugRenderPipeline.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nexport class DebugRenderPipeline {\n    raw: RawDebugRenderPipeline;\n    public vertices: Float32Array;\n    public colors: Float32Array;\n\n    /**\n     * Release the WASM memory occupied by this serialization pipeline.\n     */\n    free() {\n        this.raw.free();\n        this.raw = undefined;\n        this.vertices = undefined;\n        this.colors = undefined;\n    }\n\n    constructor(raw?: RawDebugRenderPipeline) {\n        this.raw = raw || new RawDebugRenderPipeline();\n    }\n\n    public render(\n        bodies: RigidBodySet,\n        colliders: ColliderSet,\n        impulse_joints: ImpulseJointSet,\n        multibody_joints: MultibodyJointSet,\n        narrow_phase: NarrowPhase,\n    ) {\n        this.raw.render(\n            bodies.raw,\n            colliders.raw,\n            impulse_joints.raw,\n            multibody_joints.raw,\n            narrow_phase.raw,\n        );\n        this.vertices = this.raw.vertices();\n        this.colors = this.raw.colors();\n    }\n}\n","import {\n    RawBroadPhase,\n    RawCCDSolver,\n    RawColliderSet,\n    RawDeserializedWorld,\n    RawIntegrationParameters,\n    RawIslandManager,\n    RawImpulseJointSet,\n    RawMultibodyJointSet,\n    RawNarrowPhase,\n    RawPhysicsPipeline,\n    RawQueryPipeline,\n    RawRigidBodySet,\n    RawSerializationPipeline,\n    RawDebugRenderPipeline,\n} from \"../raw\";\n\nimport {\n    BroadPhase,\n    Collider,\n    ColliderDesc,\n    ColliderHandle,\n    ColliderSet,\n    InteractionGroups,\n    NarrowPhase,\n    PointColliderProjection,\n    Ray,\n    RayColliderIntersection,\n    RayColliderToi,\n    Shape,\n    ShapeColliderTOI,\n    TempContactManifold,\n} from \"../geometry\";\nimport {\n    CCDSolver,\n    IntegrationParameters,\n    IslandManager,\n    ImpulseJoint,\n    ImpulseJointHandle,\n    MultibodyJoint,\n    MultibodyJointHandle,\n    JointData,\n    ImpulseJointSet,\n    MultibodyJointSet,\n    RigidBody,\n    RigidBodyDesc,\n    RigidBodyHandle,\n    RigidBodySet,\n} from \"../dynamics\";\nimport {Rotation, Vector, VectorOps} from \"../math\";\nimport {PhysicsPipeline} from \"./physics_pipeline\";\nimport {QueryFilterFlags, QueryPipeline} from \"./query_pipeline\";\nimport {SerializationPipeline} from \"./serialization_pipeline\";\nimport {EventQueue} from \"./event_queue\";\nimport {PhysicsHooks} from \"./physics_hooks\";\nimport {DebugRenderBuffers, DebugRenderPipeline} from \"./debug_render_pipeline\";\n\n/**\n * The physics world.\n *\n * This contains all the data-structures necessary for creating and simulating\n * bodies with contacts, joints, and external forces.\n */\nexport class World {\n    public gravity: Vector;\n    integrationParameters: IntegrationParameters;\n    islands: IslandManager;\n    broadPhase: BroadPhase;\n    narrowPhase: NarrowPhase;\n    bodies: RigidBodySet;\n    colliders: ColliderSet;\n    impulseJoints: ImpulseJointSet;\n    multibodyJoints: MultibodyJointSet;\n    ccdSolver: CCDSolver;\n    queryPipeline: QueryPipeline;\n    physicsPipeline: PhysicsPipeline;\n    serializationPipeline: SerializationPipeline;\n    debugRenderPipeline: DebugRenderPipeline;\n\n    /**\n     * Release the WASM memory occupied by this physics world.\n     *\n     * All the fields of this physics world will be freed as well,\n     * so there is no need to call their `.free()` methods individually.\n     */\n    public free() {\n        this.integrationParameters.free();\n        this.islands.free();\n        this.broadPhase.free();\n        this.narrowPhase.free();\n        this.bodies.free();\n        this.colliders.free();\n        this.impulseJoints.free();\n        this.multibodyJoints.free();\n        this.ccdSolver.free();\n        this.queryPipeline.free();\n        this.physicsPipeline.free();\n        this.serializationPipeline.free();\n        this.debugRenderPipeline.free();\n\n        this.integrationParameters = undefined;\n        this.islands = undefined;\n        this.broadPhase = undefined;\n        this.narrowPhase = undefined;\n        this.bodies = undefined;\n        this.colliders = undefined;\n        this.ccdSolver = undefined;\n        this.impulseJoints = undefined;\n        this.multibodyJoints = undefined;\n        this.queryPipeline = undefined;\n        this.physicsPipeline = undefined;\n        this.serializationPipeline = undefined;\n        this.debugRenderPipeline = undefined;\n    }\n\n    constructor(\n        gravity: Vector,\n        rawIntegrationParameters?: RawIntegrationParameters,\n        rawIslands?: RawIslandManager,\n        rawBroadPhase?: RawBroadPhase,\n        rawNarrowPhase?: RawNarrowPhase,\n        rawBodies?: RawRigidBodySet,\n        rawColliders?: RawColliderSet,\n        rawImpulseJoints?: RawImpulseJointSet,\n        rawMultibodyJoints?: RawMultibodyJointSet,\n        rawCCDSolver?: RawCCDSolver,\n        rawQueryPipeline?: RawQueryPipeline,\n        rawPhysicsPipeline?: RawPhysicsPipeline,\n        rawSerializationPipeline?: RawSerializationPipeline,\n        rawDebugRenderPipeline?: RawDebugRenderPipeline,\n    ) {\n        this.gravity = gravity;\n        this.integrationParameters = new IntegrationParameters(\n            rawIntegrationParameters,\n        );\n        this.islands = new IslandManager(rawIslands);\n        this.broadPhase = new BroadPhase(rawBroadPhase);\n        this.narrowPhase = new NarrowPhase(rawNarrowPhase);\n        this.bodies = new RigidBodySet(rawBodies);\n        this.colliders = new ColliderSet(rawColliders);\n        this.impulseJoints = new ImpulseJointSet(rawImpulseJoints);\n        this.multibodyJoints = new MultibodyJointSet(rawMultibodyJoints);\n        this.ccdSolver = new CCDSolver(rawCCDSolver);\n        this.queryPipeline = new QueryPipeline(rawQueryPipeline);\n        this.physicsPipeline = new PhysicsPipeline(rawPhysicsPipeline);\n        this.serializationPipeline = new SerializationPipeline(\n            rawSerializationPipeline,\n        );\n        this.debugRenderPipeline = new DebugRenderPipeline(\n            rawDebugRenderPipeline,\n        );\n\n        this.impulseJoints.finalizeDeserialization(this.bodies);\n        this.bodies.finalizeDeserialization(this.colliders);\n        this.colliders.finalizeDeserialization(this.bodies);\n    }\n\n    public static fromRaw(raw: RawDeserializedWorld): World {\n        if (!raw) return null;\n\n        return new World(\n            VectorOps.fromRaw(raw.takeGravity()),\n            raw.takeIntegrationParameters(),\n            raw.takeIslandManager(),\n            raw.takeBroadPhase(),\n            raw.takeNarrowPhase(),\n            raw.takeBodies(),\n            raw.takeColliders(),\n            raw.takeImpulseJoints(),\n            raw.takeMultibodyJoints(),\n        );\n    }\n\n    /**\n     * Takes a snapshot of this world.\n     *\n     * Use `World.restoreSnapshot` to create a new physics world with a state identical to\n     * the state when `.takeSnapshot()` is called.\n     */\n    public takeSnapshot(): Uint8Array {\n        return this.serializationPipeline.serializeAll(\n            this.gravity,\n            this.integrationParameters,\n            this.islands,\n            this.broadPhase,\n            this.narrowPhase,\n            this.bodies,\n            this.colliders,\n            this.impulseJoints,\n            this.multibodyJoints,\n        );\n    }\n\n    /**\n     * Creates a new physics world from a snapshot.\n     *\n     * This new physics world will be an identical copy of the snapshoted physics world.\n     */\n    public static restoreSnapshot(data: Uint8Array): World {\n        let deser = new SerializationPipeline();\n        return deser.deserializeAll(data);\n    }\n\n    /**\n     * Computes all the lines (and their colors) needed to render the scene.\n     */\n    public debugRender(): DebugRenderBuffers {\n        this.debugRenderPipeline.render(\n            this.bodies,\n            this.colliders,\n            this.impulseJoints,\n            this.multibodyJoints,\n            this.narrowPhase,\n        );\n        return new DebugRenderBuffers(\n            this.debugRenderPipeline.vertices,\n            this.debugRenderPipeline.colors,\n        );\n    }\n\n    /**\n     * Advance the simulation by one time step.\n     *\n     * All events generated by the physics engine are ignored.\n     *\n     * @param EventQueue - (optional) structure responsible for collecting\n     *   events generated by the physics engine.\n     */\n    public step(eventQueue?: EventQueue, hooks?: PhysicsHooks) {\n        this.physicsPipeline.step(\n            this.gravity,\n            this.integrationParameters,\n            this.islands,\n            this.broadPhase,\n            this.narrowPhase,\n            this.bodies,\n            this.colliders,\n            this.impulseJoints,\n            this.multibodyJoints,\n            this.ccdSolver,\n            eventQueue,\n            hooks,\n        );\n        this.queryPipeline.update(this.islands, this.bodies, this.colliders);\n    }\n\n    /**\n     * The current simulation timestep.\n     */\n    get timestep(): number {\n        return this.integrationParameters.dt;\n    }\n\n    /**\n     * Sets the new simulation timestep.\n     *\n     * The simulation timestep governs by how much the physics state of the world will\n     * be integrated. A simulation timestep should:\n     * - be as small as possible. Typical values evolve around 0.016 (assuming the chosen unit is milliseconds,\n     * corresponds to the time between two frames of a game running at 60FPS).\n     * - not vary too much during the course of the simulation. A timestep with large variations may\n     * cause instabilities in the simulation.\n     *\n     * @param dt - The timestep length, in seconds.\n     */\n    set timestep(dt: number) {\n        this.integrationParameters.dt = dt;\n    }\n\n    /**\n     * The maximum velocity iterations the velocity-based force constraint solver can make.\n     */\n    get maxVelocityIterations(): number {\n        return this.integrationParameters.maxVelocityIterations;\n    }\n\n    /**\n     * Sets the maximum number of velocity iterations (default: 4).\n     *\n     * The greater this value is, the most rigid and realistic the physics simulation will be.\n     * However a greater number of iterations is more computationally intensive.\n     *\n     * @param niter - The new maximum number of velocity iterations.\n     */\n    set maxVelocityIterations(niter: number) {\n        this.integrationParameters.maxVelocityIterations = niter;\n    }\n\n    /**\n     * The maximum velocity iterations the velocity-based friction constraint solver can make.\n     */\n    get maxVelocityFrictionIterations(): number {\n        return this.integrationParameters.maxVelocityFrictionIterations;\n    }\n\n    /**\n     * Sets the maximum number of velocity iterations for friction (default: 8).\n     *\n     * The greater this value is, the most realistic friction will be.\n     * However a greater number of iterations is more computationally intensive.\n     *\n     * @param niter - The new maximum number of velocity iterations.\n     */\n    set maxVelocityFrictionIterations(niter: number) {\n        this.integrationParameters.maxVelocityFrictionIterations = niter;\n    }\n\n    /**\n     * The maximum velocity iterations the velocity-based constraint solver can make to attempt to remove\n     * the energy introduced by constraint stabilization.\n     */\n    get maxStabilizationIterations(): number {\n        return this.integrationParameters.maxStabilizationIterations;\n    }\n\n    /**\n     * Sets the maximum number of velocity iterations for stabilization (default: 1).\n     *\n     * @param niter - The new maximum number of velocity iterations.\n     */\n    set maxStabilizationIterations(niter: number) {\n        this.integrationParameters.maxStabilizationIterations = niter;\n    }\n\n    /**\n     * Creates a new rigid-body from the given rigd-body descriptior.\n     *\n     * @param body - The description of the rigid-body to create.\n     */\n    public createRigidBody(body: RigidBodyDesc): RigidBody {\n        return this.bodies.createRigidBody(this.colliders, body);\n    }\n\n    /**\n     * Creates a new collider.\n     *\n     * @param desc - The description of the collider.\n     * @param parent - The rigid-body this collider is attached to.\n     */\n    public createCollider(desc: ColliderDesc, parent?: RigidBody): Collider {\n        let parentHandle = parent ? parent.handle : undefined;\n        return this.colliders.createCollider(this.bodies, desc, parentHandle);\n    }\n\n    /**\n     * Creates a new impulse joint from the given joint descriptor.\n     *\n     * @param params - The description of the joint to create.\n     * @param parent1 - The first rigid-body attached to this joint.\n     * @param parent2 - The second rigid-body attached to this joint.\n     * @param wakeUp - Should the attached rigid-bodies be awakened?\n     */\n    public createImpulseJoint(\n        params: JointData,\n        parent1: RigidBody,\n        parent2: RigidBody,\n        wakeUp: boolean,\n    ): ImpulseJoint {\n        return this.impulseJoints.createJoint(\n            this.bodies,\n            params,\n            parent1.handle,\n            parent2.handle,\n            wakeUp,\n        );\n    }\n\n    /**\n     * Creates a new multibody joint from the given joint descriptor.\n     *\n     * @param params - The description of the joint to create.\n     * @param parent1 - The first rigid-body attached to this joint.\n     * @param parent2 - The second rigid-body attached to this joint.\n     * @param wakeUp - Should the attached rigid-bodies be awakened?\n     */\n    public createMultibodyJoint(\n        params: JointData,\n        parent1: RigidBody,\n        parent2: RigidBody,\n        wakeUp: boolean,\n    ): MultibodyJoint {\n        return this.multibodyJoints.createJoint(\n            params,\n            parent1.handle,\n            parent2.handle,\n            wakeUp,\n        );\n    }\n\n    /**\n     * Retrieves a rigid-body from its handle.\n     *\n     * @param handle - The integer handle of the rigid-body to retrieve.\n     */\n    public getRigidBody(handle: RigidBodyHandle): RigidBody {\n        return this.bodies.get(handle);\n    }\n\n    /**\n     * Retrieves a collider from its handle.\n     *\n     * @param handle - The integer handle of the collider to retrieve.\n     */\n    public getCollider(handle: ColliderHandle): Collider {\n        return this.colliders.get(handle);\n    }\n\n    /**\n     * Retrieves an impulse joint from its handle.\n     *\n     * @param handle - The integer handle of the impulse joint to retrieve.\n     */\n    public getImpulseJoint(handle: ImpulseJointHandle): ImpulseJoint {\n        return this.impulseJoints.get(handle);\n    }\n\n    /**\n     * Retrieves an multibody joint from its handle.\n     *\n     * @param handle - The integer handle of the multibody joint to retrieve.\n     */\n    public getMultibodyJoint(handle: MultibodyJointHandle): MultibodyJoint {\n        return this.multibodyJoints.get(handle);\n    }\n\n    /**\n     * Removes the given rigid-body from this physics world.\n     *\n     * This will remove this rigid-body as well as all its attached colliders and joints.\n     * Every other bodies touching or attached by joints to this rigid-body will be woken-up.\n     *\n     * @param body - The rigid-body to remove.\n     */\n    public removeRigidBody(body: RigidBody) {\n        if (this.bodies) {\n            this.bodies.remove(\n                body.handle,\n                this.islands,\n                this.colliders,\n                this.impulseJoints,\n                this.multibodyJoints,\n            );\n        }\n    }\n\n    /**\n     * Removes the given collider from this physics world.\n     *\n     * @param collider - The collider to remove.\n     * @param wakeUp - If set to `true`, the rigid-body this collider is attached to will be awaken.\n     */\n    public removeCollider(collider: Collider, wakeUp: boolean) {\n        if (this.colliders) {\n            this.colliders.remove(\n                collider.handle,\n                this.islands,\n                this.bodies,\n                wakeUp,\n            );\n        }\n    }\n\n    /**\n     * Removes the given impulse joint from this physics world.\n     *\n     * @param joint - The impulse joint to remove.\n     * @param wakeUp - If set to `true`, the rigid-bodies attached by this joint will be awaken.\n     */\n    public removeImpulseJoint(joint: ImpulseJoint, wakeUp: boolean) {\n        if (this.impulseJoints) {\n            this.impulseJoints.remove(joint.handle, wakeUp);\n        }\n    }\n\n    /**\n     * Removes the given multibody joint from this physics world.\n     *\n     * @param joint - The multibody joint to remove.\n     * @param wakeUp - If set to `true`, the rigid-bodies attached by this joint will be awaken.\n     */\n    public removeMultibodyJoint(joint: MultibodyJoint, wakeUp: boolean) {\n        if (this.impulseJoints) {\n            this.multibodyJoints.remove(joint.handle, wakeUp);\n        }\n    }\n\n    /**\n     * Applies the given closure to each collider managed by this physics world.\n     *\n     * @param f(collider) - The function to apply to each collider managed by this physics world. Called as `f(collider)`.\n     */\n    public forEachCollider(f: (collider: Collider) => void) {\n        this.colliders.forEach(f);\n    }\n\n    /**\n     * Applies the given closure to each rigid-body managed by this physics world.\n     *\n     * @param f(body) - The function to apply to each rigid-body managed by this physics world. Called as `f(collider)`.\n     */\n    public forEachRigidBody(f: (body: RigidBody) => void) {\n        this.bodies.forEach(f);\n    }\n\n    /**\n     * Applies the given closure to each active rigid-body managed by this physics world.\n     *\n     * After a short time of inactivity, a rigid-body is automatically deactivated (\"asleep\") by\n     * the physics engine in order to save computational power. A sleeping rigid-body never moves\n     * unless it is moved manually by the user.\n     *\n     * @param f - The function to apply to each active rigid-body managed by this physics world. Called as `f(collider)`.\n     */\n    public forEachActiveRigidBody(f: (body: RigidBody) => void) {\n        this.bodies.forEachActiveRigidBody(this.islands, f);\n    }\n\n    /**\n     * Find the closest intersection between a ray and the physics world.\n     *\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n     * @param filter - The callback to filter out which collider will be hit.\n     */\n    public castRay(\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ): RayColliderToi | null {\n        return this.queryPipeline.castRay(\n            this.bodies,\n            this.colliders,\n            ray,\n            maxToi,\n            solid,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            castClosure(this.colliders, filterPredicate),\n        );\n    }\n\n    /**\n     * Find the closest intersection between a ray and the physics world.\n     *\n     * This also computes the normal at the hit point.\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n     */\n    public castRayAndGetNormal(\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ): RayColliderIntersection | null {\n        return this.queryPipeline.castRayAndGetNormal(\n            this.bodies,\n            this.colliders,\n            ray,\n            maxToi,\n            solid,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            castClosure(this.colliders, filterPredicate),\n        );\n    }\n\n    /**\n     * Cast a ray and collects all the intersections between a ray and the scene.\n     *\n     * @param ray - The ray to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n     * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n     *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n     *   whereas `false` implies that all shapes are hollow for this ray-cast.\n     * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n     * @param callback - The callback called once per hit (in no particular order) between a ray and a collider.\n     *   If this callback returns `false`, then the cast will stop and no further hits will be detected/reported.\n     */\n    public intersectionsWithRay(\n        ray: Ray,\n        maxToi: number,\n        solid: boolean,\n        callback: (intersect: RayColliderIntersection) => boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ) {\n        this.queryPipeline.intersectionsWithRay(\n            this.bodies,\n            this.colliders,\n            ray,\n            maxToi,\n            solid,\n            callback,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            castClosure(this.colliders, filterPredicate),\n        );\n    }\n\n    /**\n     * Gets the handle of up to one collider intersecting the given shape.\n     *\n     * @param shapePos - The position of the shape used for the intersection test.\n     * @param shapeRot - The orientation of the shape used for the intersection test.\n     * @param shape - The shape used for the intersection test.\n     * @param groups - The bit groups and filter associated to the ray, in order to only\n     *   hit the colliders with collision groups compatible with the ray's group.\n     */\n    public intersectionWithShape(\n        shapePos: Vector,\n        shapeRot: Rotation,\n        shape: Shape,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ): Collider | null {\n        let handle = this.queryPipeline.intersectionWithShape(\n            this.bodies,\n            this.colliders,\n            shapePos,\n            shapeRot,\n            shape,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            castClosure(this.colliders, filterPredicate),\n        );\n        return handle != null ? this.colliders.get(handle) : null;\n    }\n\n    /**\n     * Find the projection of a point on the closest collider.\n     *\n     * @param point - The point to project.\n     * @param solid - If this is set to `true` then the collider shapes are considered to\n     *   be plain (if the point is located inside of a plain shape, its projection is the point\n     *   itself). If it is set to `false` the collider shapes are considered to be hollow\n     *   (if the point is located inside of an hollow shape, it is projected on the shape's\n     *   boundary).\n     * @param groups - The bit groups and filter associated to the point to project, in order to only\n     *   project on colliders with collision groups compatible with the ray's group.\n     */\n    public projectPoint(\n        point: Vector,\n        solid: boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ): PointColliderProjection | null {\n        return this.queryPipeline.projectPoint(\n            this.bodies,\n            this.colliders,\n            point,\n            solid,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            castClosure(this.colliders, filterPredicate),\n        );\n    }\n\n    /**\n     * Find the projection of a point on the closest collider.\n     *\n     * @param point - The point to project.\n     * @param groups - The bit groups and filter associated to the point to project, in order to only\n     *   project on colliders with collision groups compatible with the ray's group.\n     */\n    public projectPointAndGetFeature(\n        point: Vector,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ): PointColliderProjection | null {\n        return this.queryPipeline.projectPointAndGetFeature(\n            this.bodies,\n            this.colliders,\n            point,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            castClosure(this.colliders, filterPredicate),\n        );\n    }\n\n    /**\n     * Find all the colliders containing the given point.\n     *\n     * @param point - The point used for the containment test.\n     * @param groups - The bit groups and filter associated to the point to test, in order to only\n     *   test on colliders with collision groups compatible with the ray's group.\n     * @param callback - A function called with the handles of each collider with a shape\n     *   containing the `point`.\n     */\n    public intersectionsWithPoint(\n        point: Vector,\n        callback: (handle: Collider) => boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ) {\n        this.queryPipeline.intersectionsWithPoint(\n            this.bodies,\n            this.colliders,\n            point,\n            castClosure(this.colliders, callback),\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            castClosure(this.colliders, filterPredicate),\n        );\n    }\n\n    /**\n     * Casts a shape at a constant linear velocity and retrieve the first collider it hits.\n     * This is similar to ray-casting except that we are casting a whole shape instead of\n     * just a point (the ray origin).\n     *\n     * @param shapePos - The initial position of the shape to cast.\n     * @param shapeRot - The initial rotation of the shape to cast.\n     * @param shapeVel - The constant velocity of the shape to cast (i.e. the cast direction).\n     * @param shape - The shape to cast.\n     * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n     *   limits the distance traveled by the shape to `shapeVel.norm() * maxToi`.\n     * @param groups - The bit groups and filter associated to the shape to cast, in order to only\n     *   test on colliders with collision groups compatible with this group.\n     */\n    public castShape(\n        shapePos: Vector,\n        shapeRot: Rotation,\n        shapeVel: Vector,\n        shape: Shape,\n        maxToi: number,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ): ShapeColliderTOI | null {\n        return this.queryPipeline.castShape(\n            this.bodies,\n            this.colliders,\n            shapePos,\n            shapeRot,\n            shapeVel,\n            shape,\n            maxToi,\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            castClosure(this.colliders, filterPredicate),\n        );\n    }\n\n    /**\n     * Retrieve all the colliders intersecting the given shape.\n     *\n     * @param shapePos - The position of the shape to test.\n     * @param shapeRot - The orientation of the shape to test.\n     * @param shape - The shape to test.\n     * @param groups - The bit groups and filter associated to the shape to test, in order to only\n     *   test on colliders with collision groups compatible with this group.\n     * @param callback - A function called with the handles of each collider intersecting the `shape`.\n     */\n    public intersectionsWithShape(\n        shapePos: Vector,\n        shapeRot: Rotation,\n        shape: Shape,\n        callback: (collider: Collider) => boolean,\n        filterFlags?: QueryFilterFlags,\n        filterGroups?: InteractionGroups,\n        filterExcludeCollider?: Collider,\n        filterExcludeRigidBody?: RigidBody,\n        filterPredicate?: (collider: Collider) => boolean,\n    ) {\n        this.queryPipeline.intersectionsWithShape(\n            this.bodies,\n            this.colliders,\n            shapePos,\n            shapeRot,\n            shape,\n            castClosure(this.colliders, callback),\n            filterFlags,\n            filterGroups,\n            filterExcludeCollider ? filterExcludeCollider.handle : null,\n            filterExcludeRigidBody ? filterExcludeRigidBody.handle : null,\n            castClosure(this.colliders, filterPredicate),\n        );\n    }\n\n    /**\n     * Finds the handles of all the colliders with an AABB intersecting the given AABB.\n     *\n     * @param aabbCenter - The center of the AABB to test.\n     * @param aabbHalfExtents - The half-extents of the AABB to test.\n     * @param callback - The callback that will be called with the handles of all the colliders\n     *                   currently intersecting the given AABB.\n     */\n    public collidersWithAabbIntersectingAabb(\n        aabbCenter: Vector,\n        aabbHalfExtents: Vector,\n        callback: (handle: Collider) => boolean,\n    ) {\n        this.queryPipeline.collidersWithAabbIntersectingAabb(\n            aabbCenter,\n            aabbHalfExtents,\n            castClosure(this.colliders, callback),\n        );\n    }\n\n    /**\n     * Enumerates all the colliders potentially in contact with the given collider.\n     *\n     * @param collider1 - The second collider involved in the contact.\n     * @param f - Closure that will be called on each collider that is in contact with `collider1`.\n     */\n    public contactsWith(collider1: Collider, f: (collider2: Collider) => void) {\n        this.narrowPhase.contactsWith(\n            collider1.handle,\n            castClosure(this.colliders, f),\n        );\n    }\n\n    /**\n     * Enumerates all the colliders intersecting the given colliders, assuming one of them\n     * is a sensor.\n     */\n    public intersectionsWith(\n        collider1: Collider,\n        f: (collider2: Collider) => void,\n    ) {\n        this.narrowPhase.intersectionsWith(\n            collider1.handle,\n            castClosure(this.colliders, f),\n        );\n    }\n\n    /**\n     * Iterates through all the contact manifolds between the given pair of colliders.\n     *\n     * @param collider1 - The first collider involved in the contact.\n     * @param collider2 - The second collider involved in the contact.\n     * @param f - Closure that will be called on each contact manifold between the two colliders. If the second argument\n     *            passed to this closure is `true`, then the contact manifold data is flipped, i.e., methods like `localNormal1`\n     *            actually apply to the `collider2` and fields like `localNormal2` apply to the `collider1`.\n     */\n    public contactPair(\n        collider1: Collider,\n        collider2: Collider,\n        f: (manifold: TempContactManifold, flipped: boolean) => void,\n    ) {\n        this.narrowPhase.contactPair(collider1.handle, collider2.handle, f);\n    }\n\n    /**\n     * Returns `true` if `collider1` and `collider2` intersect and at least one of them is a sensor.\n     * @param collider1 − The first collider involved in the intersection.\n     * @param collider2 − The second collider involved in the intersection.\n     */\n    public intersectionPair(collider1: Collider, collider2: Collider): boolean {\n        return this.narrowPhase.intersectionPair(\n            collider1.handle,\n            collider2.handle,\n        );\n    }\n}\n\nfunction castClosure<Res>(\n    set: ColliderSet,\n    f?: (collider: Collider) => Res,\n): (handle: ColliderHandle) => Res | undefined {\n    return (handle) => {\n        if (!!f) {\n            return f(set.get(handle));\n        } else {\n            return undefined;\n        }\n    };\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","// @ts-ignore\nimport wasmBase64 from \"../pkg3d/rapier_wasm3d_bg.wasm\";\nimport wasmInit from \"../pkg3d/rapier_wasm3d\";\nimport base64 from \"base64-js\";\n\n/**\n * Initializes RAPIER.\n * Has to be called and awaited before using any library methods.\n */\nexport async function init() {\n    await wasmInit(base64.toByteArray(wasmBase64 as unknown as string).buffer);\n}\n","import {version as vers} from \"./raw\";\n\nexport function version(): string {\n    return vers();\n}\n\nexport * from \"./math\";\nexport * from \"./dynamics\";\nexport * from \"./geometry\";\nexport * from \"./pipeline\";\nexport * from \"./init\";\n"]},"metadata":{},"sourceType":"module"}
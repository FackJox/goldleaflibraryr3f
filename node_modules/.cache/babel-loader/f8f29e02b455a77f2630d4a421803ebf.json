{"ast":null,"code":"import _toConsumableArray from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"scope\", \"children\"];\nimport * as e from \"react\";\nexport function createContext(t, n) {\n  var o = /*#__PURE__*/e.createContext(n);\n  function r(t) {\n    var n = t.children,\n      r = _objectWithoutProperties(t, _excluded),\n      c = e.useMemo(function () {\n        return r;\n      }, Object.values(r)); /*#__PURE__*/\n    return e.createElement(o.Provider, {\n      value: c\n    }, n);\n  }\n  return r.displayName = t + \"Provider\", [r, function (r) {\n    var c = e.useContext(o);\n    if (c) return c;\n    if (void 0 !== n) return n;\n    throw new Error(\"`\".concat(r, \"` must be used within `\").concat(t, \"`\"));\n  }];\n}\nexport function createContextScope(n) {\n  var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var r = [];\n  var c = function c() {\n    var t = r.map(function (t) {\n      return /*#__PURE__*/e.createContext(t);\n    });\n    return function (o) {\n      var r = (null == o ? void 0 : o[n]) || t;\n      return e.useMemo(function () {\n        return _defineProperty({}, \"__scope\".concat(n), _objectSpread(_objectSpread({}, o), {}, _defineProperty({}, n, r)));\n      }, [o, r]);\n    };\n  };\n  return c.scopeName = n, [function (t, o) {\n    var c = /*#__PURE__*/e.createContext(o),\n      u = r.length;\n    function s(t) {\n      var o = t.scope,\n        r = t.children,\n        s = _objectWithoutProperties(t, _excluded2),\n        i = (null == o ? void 0 : o[n][u]) || c,\n        a = e.useMemo(function () {\n          return s;\n        }, Object.values(s)); /*#__PURE__*/\n      return e.createElement(i.Provider, {\n        value: a\n      }, r);\n    }\n    return r = [].concat(_toConsumableArray(r), [o]), s.displayName = t + \"Provider\", [s, function (r, s) {\n      var i = (null == s ? void 0 : s[n][u]) || c,\n        a = e.useContext(i);\n      if (a) return a;\n      if (void 0 !== o) return o;\n      throw new Error(\"`\".concat(r, \"` must be used within `\").concat(t, \"`\"));\n    }];\n  }, t.apply(void 0, [c].concat(_toConsumableArray(o)))];\n}\nfunction t() {\n  for (var _len = arguments.length, t = new Array(_len), _key = 0; _key < _len; _key++) {\n    t[_key] = arguments[_key];\n  }\n  var n = t[0];\n  if (1 === t.length) return n;\n  var o = function o() {\n    var o = t.map(function (e) {\n      return {\n        useScope: e(),\n        scopeName: e.scopeName\n      };\n    });\n    return function (t) {\n      var r = o.reduce(function (e, _ref2) {\n        var n = _ref2.useScope,\n          o = _ref2.scopeName;\n        return _objectSpread(_objectSpread({}, e), n(t)[\"__scope\".concat(o)]);\n      }, {});\n      return e.useMemo(function () {\n        return _defineProperty({}, \"__scope\".concat(n.scopeName), r);\n      }, [r]);\n    };\n  };\n  return o.scopeName = n.scopeName, o;\n}","map":{"version":3,"sources":["packages/react/context/src/createContext.tsx"],"names":["createContext","rootComponentName","defaultContext","Context","React","Provider","props","children","context","value","useMemo","Object","values","_react","consumerName","useContext","undefined","Error","displayName","createContextScope","scopeName","createContextScopeDeps","defaultContexts","BaseContext","index","length","scope","createScope","scopeContexts","map","contexts","composeContextScopes","scopes","baseScope","scopeHooks","useScope","overrideScopes","nextScopes","reduce"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nfunction createContext<ContextValueType extends object | null>(\n  rootComponentName: string,\n  defaultContext?: ContextValueType\n) {\n  const Context = React.createContext<ContextValueType | undefined>(defaultContext);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...context } = props;\n    // Only re-memoize when prop values change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== undefined) return defaultContext;\n    // if a defaultContext wasn't specified, it's a required context.\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * createContextScope\n * -----------------------------------------------------------------------------------------------*/\n\ntype Scope<C = any> = { [scopeName: string]: React.Context<C>[] } | undefined;\ntype ScopeHook = (scope: Scope) => { [__scopeProp: string]: Scope };\ninterface CreateScope {\n  scopeName: string;\n  (): ScopeHook;\n}\n\nfunction createContextScope(scopeName: string, createContextScopeDeps: CreateScope[] = []) {\n  let defaultContexts: any[] = [];\n\n  /* -----------------------------------------------------------------------------------------------\n   * createContext\n   * ---------------------------------------------------------------------------------------------*/\n\n  function createContext<ContextValueType extends object | null>(\n    rootComponentName: string,\n    defaultContext?: ContextValueType\n  ) {\n    const BaseContext = React.createContext<ContextValueType | undefined>(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n\n    function Provider(\n      props: ContextValueType & { scope: Scope<ContextValueType>; children: React.ReactNode }\n    ) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      // Only re-memoize when prop values change\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\n      return <Context.Provider value={value}>{children}</Context.Provider>;\n    }\n\n    function useContext(consumerName: string, scope: Scope<ContextValueType | undefined>) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== undefined) return defaultContext;\n      // if a defaultContext wasn't specified, it's a required context.\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n\n    Provider.displayName = rootComponentName + 'Provider';\n    return [Provider, useContext] as const;\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * createScope\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createScope: CreateScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope: Scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n\n  createScope.scopeName = scopeName;\n  return [createContext, composeContextScopes(createScope, ...createContextScopeDeps)] as const;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * composeContextScopes\n * -----------------------------------------------------------------------------------------------*/\n\nfunction composeContextScopes(...scopes: CreateScope[]) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n\n  const createScope: CreateScope = () => {\n    const scopeHooks = scopes.map((createScope) => ({\n      useScope: createScope(),\n      scopeName: createScope.scopeName,\n    }));\n\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {\n        // We are calling a hook inside a callback which React warns against to avoid inconsistent\n        // renders, however, scoping doesn't have render side effects so we ignore the rule.\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes, ...currentScope };\n      }, {});\n\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { createContext, createContextScope };\nexport type { CreateScope, Scope };\n"]},"metadata":{},"sourceType":"module"}
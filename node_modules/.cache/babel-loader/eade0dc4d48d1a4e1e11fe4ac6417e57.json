{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmbeddedActionsParser = exports.CstParser = exports.Parser = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.DEFAULT_RULE_CONFIG = exports.DEFAULT_PARSER_CONFIG = exports.END_OF_FILE = void 0;\nvar isEmpty_1 = __importDefault(require(\"lodash/isEmpty\"));\nvar map_1 = __importDefault(require(\"lodash/map\"));\nvar forEach_1 = __importDefault(require(\"lodash/forEach\"));\nvar values_1 = __importDefault(require(\"lodash/values\"));\nvar has_1 = __importDefault(require(\"lodash/has\"));\nvar clone_1 = __importDefault(require(\"lodash/clone\"));\nvar utils_1 = require(\"@chevrotain/utils\");\nvar follow_1 = require(\"../grammar/follow\");\nvar tokens_public_1 = require(\"../../scan/tokens_public\");\nvar errors_public_1 = require(\"../errors_public\");\nvar gast_resolver_public_1 = require(\"../grammar/gast/gast_resolver_public\");\nvar recoverable_1 = require(\"./traits/recoverable\");\nvar looksahead_1 = require(\"./traits/looksahead\");\nvar tree_builder_1 = require(\"./traits/tree_builder\");\nvar lexer_adapter_1 = require(\"./traits/lexer_adapter\");\nvar recognizer_api_1 = require(\"./traits/recognizer_api\");\nvar recognizer_engine_1 = require(\"./traits/recognizer_engine\");\nvar error_handler_1 = require(\"./traits/error_handler\");\nvar context_assist_1 = require(\"./traits/context_assist\");\nvar gast_recorder_1 = require(\"./traits/gast_recorder\");\nvar perf_tracer_1 = require(\"./traits/perf_tracer\");\nvar apply_mixins_1 = require(\"./utils/apply_mixins\");\nexports.END_OF_FILE = (0, tokens_public_1.createTokenInstance)(tokens_public_1.EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(exports.END_OF_FILE);\nexports.DEFAULT_PARSER_CONFIG = Object.freeze({\n  recoveryEnabled: false,\n  maxLookahead: 3,\n  dynamicTokensEnabled: false,\n  outputCst: true,\n  errorMessageProvider: errors_public_1.defaultParserErrorProvider,\n  nodeLocationTracking: \"none\",\n  traceInitPerf: false,\n  skipValidations: false\n});\nexports.DEFAULT_RULE_CONFIG = Object.freeze({\n  recoveryValueFunc: function recoveryValueFunc() {\n    return undefined;\n  },\n  resyncEnabled: true\n});\nvar ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n  ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType = exports.ParserDefinitionErrorType || (exports.ParserDefinitionErrorType = {}));\nfunction EMPTY_ALT(value) {\n  if (value === void 0) {\n    value = undefined;\n  }\n  return function () {\n    return value;\n  };\n}\nexports.EMPTY_ALT = EMPTY_ALT;\nvar Parser = /** @class */function () {\n  function Parser(tokenVocabulary, config) {\n    this.definitionErrors = [];\n    this.selfAnalysisDone = false;\n    var that = this;\n    that.initErrorHandler(config);\n    that.initLexerAdapter();\n    that.initLooksAhead(config);\n    that.initRecognizerEngine(tokenVocabulary, config);\n    that.initRecoverable(config);\n    that.initTreeBuilder(config);\n    that.initContentAssist();\n    that.initGastRecorder(config);\n    that.initPerformanceTracer(config);\n    if ((0, has_1.default)(config, \"ignoredIssues\")) {\n      throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" + \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" + \"For further details.\");\n    }\n    this.skipValidations = (0, has_1.default)(config, \"skipValidations\") ? config.skipValidations // casting assumes the end user passing the correct type\n    : exports.DEFAULT_PARSER_CONFIG.skipValidations;\n  }\n  /**\n   *  @deprecated use the **instance** method with the same name instead\n   */\n  Parser.performSelfAnalysis = function (parserInstance) {\n    throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" + \"\\t\\nUse the **instance** method with the same name instead.\");\n  };\n  Parser.prototype.performSelfAnalysis = function () {\n    var _this = this;\n    this.TRACE_INIT(\"performSelfAnalysis\", function () {\n      var defErrorsMsgs;\n      _this.selfAnalysisDone = true;\n      var className = _this.className;\n      _this.TRACE_INIT(\"toFastProps\", function () {\n        // Without this voodoo magic the parser would be x3-x4 slower\n        // It seems it is better to invoke `toFastProperties` **before**\n        // Any manipulations of the `this` object done during the recording phase.\n        (0, utils_1.toFastProperties)(_this);\n      });\n      _this.TRACE_INIT(\"Grammar Recording\", function () {\n        try {\n          _this.enableRecording();\n          // Building the GAST\n          (0, forEach_1.default)(_this.definedRulesNames, function (currRuleName) {\n            var wrappedRule = _this[currRuleName];\n            var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n            var recordedRuleGast;\n            _this.TRACE_INIT(\"\".concat(currRuleName, \" Rule\"), function () {\n              recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n            });\n            _this.gastProductionsCache[currRuleName] = recordedRuleGast;\n          });\n        } finally {\n          _this.disableRecording();\n        }\n      });\n      var resolverErrors = [];\n      _this.TRACE_INIT(\"Grammar Resolving\", function () {\n        resolverErrors = (0, gast_resolver_public_1.resolveGrammar)({\n          rules: (0, values_1.default)(_this.gastProductionsCache)\n        });\n        _this.definitionErrors = _this.definitionErrors.concat(resolverErrors);\n      });\n      _this.TRACE_INIT(\"Grammar Validations\", function () {\n        // only perform additional grammar validations IFF no resolving errors have occurred.\n        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n        if ((0, isEmpty_1.default)(resolverErrors) && _this.skipValidations === false) {\n          var validationErrors = (0, gast_resolver_public_1.validateGrammar)({\n            rules: (0, values_1.default)(_this.gastProductionsCache),\n            maxLookahead: _this.maxLookahead,\n            tokenTypes: (0, values_1.default)(_this.tokensMap),\n            errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider,\n            grammarName: className\n          });\n          _this.definitionErrors = _this.definitionErrors.concat(validationErrors);\n        }\n      });\n      // this analysis may fail if the grammar is not perfectly valid\n      if ((0, isEmpty_1.default)(_this.definitionErrors)) {\n        // The results of these computations are not needed unless error recovery is enabled.\n        if (_this.recoveryEnabled) {\n          _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\n            var allFollows = (0, follow_1.computeAllProdsFollows)((0, values_1.default)(_this.gastProductionsCache));\n            _this.resyncFollows = allFollows;\n          });\n        }\n        _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\n          _this.preComputeLookaheadFunctions((0, values_1.default)(_this.gastProductionsCache));\n        });\n      }\n      if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING && !(0, isEmpty_1.default)(_this.definitionErrors)) {\n        defErrorsMsgs = (0, map_1.default)(_this.definitionErrors, function (defError) {\n          return defError.message;\n        });\n        throw new Error(\"Parser Definition Errors detected:\\n \".concat(defErrorsMsgs.join(\"\\n-------------------------------\\n\")));\n      }\n    });\n  };\n  // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n  // (normally during the parser's constructor).\n  // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n  // for example: duplicate rule names, referencing an unresolved subrule, ect...\n  // This flag should not be enabled during normal usage, it is used in special situations, for example when\n  // needing to display the parser definition errors in some GUI(online playground).\n  Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n  return Parser;\n}();\nexports.Parser = Parser;\n(0, apply_mixins_1.applyMixins)(Parser, [recoverable_1.Recoverable, looksahead_1.LooksAhead, tree_builder_1.TreeBuilder, lexer_adapter_1.LexerAdapter, recognizer_engine_1.RecognizerEngine, recognizer_api_1.RecognizerApi, error_handler_1.ErrorHandler, context_assist_1.ContentAssist, gast_recorder_1.GastRecorder, perf_tracer_1.PerformanceTracer]);\nvar CstParser = /** @class */function (_super) {\n  __extends(CstParser, _super);\n  function CstParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = exports.DEFAULT_PARSER_CONFIG;\n    }\n    var configClone = (0, clone_1.default)(config);\n    configClone.outputCst = true;\n    return _super.call(this, tokenVocabulary, configClone) || this;\n  }\n  return CstParser;\n}(Parser);\nexports.CstParser = CstParser;\nvar EmbeddedActionsParser = /** @class */function (_super) {\n  __extends(EmbeddedActionsParser, _super);\n  function EmbeddedActionsParser(tokenVocabulary, config) {\n    if (config === void 0) {\n      config = exports.DEFAULT_PARSER_CONFIG;\n    }\n    var configClone = (0, clone_1.default)(config);\n    configClone.outputCst = false;\n    return _super.call(this, tokenVocabulary, configClone) || this;\n  }\n  return EmbeddedActionsParser;\n}(Parser);\nexports.EmbeddedActionsParser = EmbeddedActionsParser;","map":{"version":3,"sources":["../../../../src/parse/parser/parser.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmbeddedActionsParser = exports.CstParser = exports.Parser = exports.EMPTY_ALT = exports.ParserDefinitionErrorType = exports.DEFAULT_RULE_CONFIG = exports.DEFAULT_PARSER_CONFIG = exports.END_OF_FILE = void 0;\nvar isEmpty_1 = __importDefault(require(\"lodash/isEmpty\"));\nvar map_1 = __importDefault(require(\"lodash/map\"));\nvar forEach_1 = __importDefault(require(\"lodash/forEach\"));\nvar values_1 = __importDefault(require(\"lodash/values\"));\nvar has_1 = __importDefault(require(\"lodash/has\"));\nvar clone_1 = __importDefault(require(\"lodash/clone\"));\nvar utils_1 = require(\"@chevrotain/utils\");\nvar follow_1 = require(\"../grammar/follow\");\nvar tokens_public_1 = require(\"../../scan/tokens_public\");\nvar errors_public_1 = require(\"../errors_public\");\nvar gast_resolver_public_1 = require(\"../grammar/gast/gast_resolver_public\");\nvar recoverable_1 = require(\"./traits/recoverable\");\nvar looksahead_1 = require(\"./traits/looksahead\");\nvar tree_builder_1 = require(\"./traits/tree_builder\");\nvar lexer_adapter_1 = require(\"./traits/lexer_adapter\");\nvar recognizer_api_1 = require(\"./traits/recognizer_api\");\nvar recognizer_engine_1 = require(\"./traits/recognizer_engine\");\nvar error_handler_1 = require(\"./traits/error_handler\");\nvar context_assist_1 = require(\"./traits/context_assist\");\nvar gast_recorder_1 = require(\"./traits/gast_recorder\");\nvar perf_tracer_1 = require(\"./traits/perf_tracer\");\nvar apply_mixins_1 = require(\"./utils/apply_mixins\");\nexports.END_OF_FILE = (0, tokens_public_1.createTokenInstance)(tokens_public_1.EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(exports.END_OF_FILE);\nexports.DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: errors_public_1.defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false\n});\nexports.DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: function () { return undefined; },\n    resyncEnabled: true\n});\nvar ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType = exports.ParserDefinitionErrorType || (exports.ParserDefinitionErrorType = {}));\nfunction EMPTY_ALT(value) {\n    if (value === void 0) { value = undefined; }\n    return function () {\n        return value;\n    };\n}\nexports.EMPTY_ALT = EMPTY_ALT;\nvar Parser = /** @class */ (function () {\n    function Parser(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        var that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if ((0, has_1.default)(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = (0, has_1.default)(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : exports.DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    Parser.performSelfAnalysis = function (parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    };\n    Parser.prototype.performSelfAnalysis = function () {\n        var _this = this;\n        this.TRACE_INIT(\"performSelfAnalysis\", function () {\n            var defErrorsMsgs;\n            _this.selfAnalysisDone = true;\n            var className = _this.className;\n            _this.TRACE_INIT(\"toFastProps\", function () {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                (0, utils_1.toFastProperties)(_this);\n            });\n            _this.TRACE_INIT(\"Grammar Recording\", function () {\n                try {\n                    _this.enableRecording();\n                    // Building the GAST\n                    (0, forEach_1.default)(_this.definedRulesNames, function (currRuleName) {\n                        var wrappedRule = _this[currRuleName];\n                        var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        var recordedRuleGast;\n                        _this.TRACE_INIT(\"\".concat(currRuleName, \" Rule\"), function () {\n                            recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        _this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    _this.disableRecording();\n                }\n            });\n            var resolverErrors = [];\n            _this.TRACE_INIT(\"Grammar Resolving\", function () {\n                resolverErrors = (0, gast_resolver_public_1.resolveGrammar)({\n                    rules: (0, values_1.default)(_this.gastProductionsCache)\n                });\n                _this.definitionErrors = _this.definitionErrors.concat(resolverErrors);\n            });\n            _this.TRACE_INIT(\"Grammar Validations\", function () {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if ((0, isEmpty_1.default)(resolverErrors) && _this.skipValidations === false) {\n                    var validationErrors = (0, gast_resolver_public_1.validateGrammar)({\n                        rules: (0, values_1.default)(_this.gastProductionsCache),\n                        maxLookahead: _this.maxLookahead,\n                        tokenTypes: (0, values_1.default)(_this.tokensMap),\n                        errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider,\n                        grammarName: className\n                    });\n                    _this.definitionErrors = _this.definitionErrors.concat(validationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if ((0, isEmpty_1.default)(_this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (_this.recoveryEnabled) {\n                    _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\n                        var allFollows = (0, follow_1.computeAllProdsFollows)((0, values_1.default)(_this.gastProductionsCache));\n                        _this.resyncFollows = allFollows;\n                    });\n                }\n                _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\n                    _this.preComputeLookaheadFunctions((0, values_1.default)(_this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !(0, isEmpty_1.default)(_this.definitionErrors)) {\n                defErrorsMsgs = (0, map_1.default)(_this.definitionErrors, function (defError) { return defError.message; });\n                throw new Error(\"Parser Definition Errors detected:\\n \".concat(defErrorsMsgs.join(\"\\n-------------------------------\\n\")));\n            }\n        });\n    };\n    // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n    // (normally during the parser's constructor).\n    // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n    // for example: duplicate rule names, referencing an unresolved subrule, ect...\n    // This flag should not be enabled during normal usage, it is used in special situations, for example when\n    // needing to display the parser definition errors in some GUI(online playground).\n    Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n    return Parser;\n}());\nexports.Parser = Parser;\n(0, apply_mixins_1.applyMixins)(Parser, [\n    recoverable_1.Recoverable,\n    looksahead_1.LooksAhead,\n    tree_builder_1.TreeBuilder,\n    lexer_adapter_1.LexerAdapter,\n    recognizer_engine_1.RecognizerEngine,\n    recognizer_api_1.RecognizerApi,\n    error_handler_1.ErrorHandler,\n    context_assist_1.ContentAssist,\n    gast_recorder_1.GastRecorder,\n    perf_tracer_1.PerformanceTracer\n]);\nvar CstParser = /** @class */ (function (_super) {\n    __extends(CstParser, _super);\n    function CstParser(tokenVocabulary, config) {\n        if (config === void 0) { config = exports.DEFAULT_PARSER_CONFIG; }\n        var configClone = (0, clone_1.default)(config);\n        configClone.outputCst = true;\n        return _super.call(this, tokenVocabulary, configClone) || this;\n    }\n    return CstParser;\n}(Parser));\nexports.CstParser = CstParser;\nvar EmbeddedActionsParser = /** @class */ (function (_super) {\n    __extends(EmbeddedActionsParser, _super);\n    function EmbeddedActionsParser(tokenVocabulary, config) {\n        if (config === void 0) { config = exports.DEFAULT_PARSER_CONFIG; }\n        var configClone = (0, clone_1.default)(config);\n        configClone.outputCst = false;\n        return _super.call(this, tokenVocabulary, configClone) || this;\n    }\n    return EmbeddedActionsParser;\n}(Parser));\nexports.EmbeddedActionsParser = EmbeddedActionsParser;\n//# sourceMappingURL=parser.js.map"]},"metadata":{},"sourceType":"script"}
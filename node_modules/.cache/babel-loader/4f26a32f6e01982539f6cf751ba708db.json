{"ast":null,"code":"import _toConsumableArray from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport deepEqual from 'fast-deep-equal';\nvar globalCache = [];\nfunction handleAsset(fn, cache, args) {\n  var lifespan = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var preload = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var _iterator = _createForOfIteratorHelper(cache),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _entry = _step.value;\n      // Find a match\n      if (deepEqual(args, _entry.args)) {\n        // If we're pre-loading and the element is present, just return\n        if (preload) return; // If an error occurred, throw\n\n        if (_entry.error) throw _entry.error; // If a response was successful, return\n\n        if (_entry.response) return _entry.response; // If the promise is still unresolved, throw\n\n        throw _entry.promise;\n      }\n    } // The request is new or has changed.\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var entry = {\n    args: args,\n    promise:\n    // Make the promise request.\n    fn.apply(void 0, _toConsumableArray(args)) // Response can't be undefined or else the loop above wouldn't be able to return it\n    // This is for promises that do not return results (delays for instance)\n    .then(function (response) {\n      return entry.response = response != null ? response : true;\n    }).catch(function (e) {\n      return entry.error = e != null ? e : 'unknown error';\n    }).then(function () {\n      if (lifespan > 0) {\n        setTimeout(function () {\n          var index = cache.indexOf(entry);\n          if (index !== -1) cache.splice(index, 1);\n        }, lifespan);\n      }\n    })\n  };\n  cache.push(entry);\n  if (!preload) throw entry.promise;\n}\nfunction _clear(cache) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  if (args === undefined || args.length === 0) cache.splice(0, cache.length);else {\n    var entry = cache.find(function (entry) {\n      return deepEqual(args, entry.args);\n    });\n    if (entry) {\n      var index = cache.indexOf(entry);\n      if (index !== -1) cache.splice(index, 1);\n    }\n  }\n}\nfunction createAsset(fn) {\n  var lifespan = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var cache = [];\n  return {\n    /**\n     * @throws Suspense Promise if asset is not yet ready\n     * @throws Error if the promise rejected for some reason\n     */\n    read: function read() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return handleAsset(fn, cache, args, lifespan);\n    },\n    preload: function preload() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      return void handleAsset(fn, cache, args, lifespan, true);\n    },\n    clear: function clear() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      return _clear.apply(void 0, [cache].concat(args));\n    },\n    peek: function peek() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      var _cache$find;\n      return (_cache$find = cache.find(function (entry) {\n        return deepEqual(args, entry.args);\n      })) == null ? void 0 : _cache$find.response;\n    }\n  };\n}\nfunction useAsset(fn) {\n  for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n    args[_key6 - 1] = arguments[_key6];\n  }\n  return handleAsset(fn, globalCache, args, useAsset.lifespan);\n}\nuseAsset.lifespan = 0;\nuseAsset.clear = function () {\n  for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    args[_key7] = arguments[_key7];\n  }\n  return _clear.apply(void 0, [globalCache].concat(args));\n};\nuseAsset.preload = function (fn) {\n  for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n    args[_key8 - 1] = arguments[_key8];\n  }\n  return void handleAsset(fn, globalCache, args, useAsset.lifespan, true);\n};\nuseAsset.peek = function () {\n  for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    args[_key9] = arguments[_key9];\n  }\n  var _globalCache$find;\n  return (_globalCache$find = globalCache.find(function (entry) {\n    return deepEqual(args, entry.args);\n  })) == null ? void 0 : _globalCache$find.response;\n};\nexport { createAsset, useAsset };","map":{"version":3,"names":["deepEqual","globalCache","handleAsset","fn","cache","args","lifespan","preload","entry","error","response","promise","then","catch","e","setTimeout","index","indexOf","splice","push","clear","undefined","length","find","createAsset","read","peek","_cache$find","useAsset","_globalCache$find"],"sources":["/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/use-asset/dist/index.js"],"sourcesContent":["import deepEqual from 'fast-deep-equal';\n\nconst globalCache = [];\n\nfunction handleAsset(fn, cache, args, lifespan = 0, preload = false) {\n  for (const entry of cache) {\n    // Find a match\n    if (deepEqual(args, entry.args)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return; // If an error occurred, throw\n\n      if (entry.error) throw entry.error; // If a response was successful, return\n\n      if (entry.response) return entry.response; // If the promise is still unresolved, throw\n\n      throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    args,\n    promise: // Make the promise request.\n    fn(...args) // Response can't be undefined or else the loop above wouldn't be able to return it\n    // This is for promises that do not return results (delays for instance)\n    .then(response => entry.response = response != null ? response : true).catch(e => entry.error = e != null ? e : 'unknown error').then(() => {\n      if (lifespan > 0) {\n        setTimeout(() => {\n          const index = cache.indexOf(entry);\n          if (index !== -1) cache.splice(index, 1);\n        }, lifespan);\n      }\n    })\n  };\n  cache.push(entry);\n  if (!preload) throw entry.promise;\n}\n\nfunction clear(cache, ...args) {\n  if (args === undefined || args.length === 0) cache.splice(0, cache.length);else {\n    const entry = cache.find(entry => deepEqual(args, entry.args));\n\n    if (entry) {\n      const index = cache.indexOf(entry);\n      if (index !== -1) cache.splice(index, 1);\n    }\n  }\n}\n\nfunction createAsset(fn, lifespan = 0) {\n  const cache = [];\n  return {\n    /**\n     * @throws Suspense Promise if asset is not yet ready\n     * @throws Error if the promise rejected for some reason\n     */\n    read: (...args) => handleAsset(fn, cache, args, lifespan),\n    preload: (...args) => void handleAsset(fn, cache, args, lifespan, true),\n    clear: (...args) => clear(cache, ...args),\n    peek: (...args) => {\n      var _cache$find;\n\n      return (_cache$find = cache.find(entry => deepEqual(args, entry.args))) == null ? void 0 : _cache$find.response;\n    }\n  };\n}\n\nfunction useAsset(fn, ...args) {\n  return handleAsset(fn, globalCache, args, useAsset.lifespan);\n}\n\nuseAsset.lifespan = 0;\n\nuseAsset.clear = (...args) => clear(globalCache, ...args);\n\nuseAsset.preload = (fn, ...args) => void handleAsset(fn, globalCache, args, useAsset.lifespan, true);\n\nuseAsset.peek = (...args) => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => deepEqual(args, entry.args))) == null ? void 0 : _globalCache$find.response;\n};\n\nexport { createAsset, useAsset };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
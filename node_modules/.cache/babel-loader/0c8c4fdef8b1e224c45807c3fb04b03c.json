{"ast":null,"code":"import _objectSpread from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"__scopeTooltip\"],\n  _excluded2 = [\"forceMount\"],\n  _excluded3 = [\"__scopeTooltip\", \"children\", \"aria-label\", \"portalled\"],\n  _excluded4 = [\"__scopeTooltip\"];\nimport { useId as e } from \"@radix-ui/react-id\";\nimport * as o from \"@radix-ui/react-visually-hidden\";\nimport { Slottable as t } from \"@radix-ui/react-slot\";\nimport { Portal as r } from \"@radix-ui/react-portal\";\nimport * as n from \"@radix-ui/react-popper\";\nimport { createPopperScope as i } from \"@radix-ui/react-popper\";\nimport { Primitive as a } from \"@radix-ui/react-primitive\";\nimport { Presence as l } from \"@radix-ui/react-presence\";\nimport { useRect as c } from \"@radix-ui/react-use-rect\";\nimport { usePrevious as s } from \"@radix-ui/react-use-previous\";\nimport { useEscapeKeydown as u } from \"@radix-ui/react-use-escape-keydown\";\nimport { useControllableState as p } from \"@radix-ui/react-use-controllable-state\";\nimport { createContextScope as d } from \"@radix-ui/react-context\";\nimport { useComposedRefs as m } from \"@radix-ui/react-compose-refs\";\nimport { composeEventHandlers as f } from \"@radix-ui/primitive\";\nimport * as T from \"react\";\nimport C from \"@babel/runtime/helpers/esm/extends\";\nvar _d = d(\"Tooltip\", [i]),\n  _d2 = _slicedToArray(_d, 2),\n  w = _d2[0],\n  x = _d2[1];\nexport { x as createTooltipScope };\nvar g = i(),\n  E = 700,\n  _w = w(\"TooltipProvider\", {\n    isOpenDelayed: !0,\n    delayDuration: E,\n    onOpen: function onOpen() {},\n    onClose: function onClose() {}\n  }),\n  _w2 = _slicedToArray(_w, 2),\n  v = _w2[0],\n  b = _w2[1];\nexport var TooltipProvider = function TooltipProvider(e) {\n  var o = e.__scopeTooltip,\n    _e$delayDuration = e.delayDuration,\n    t = _e$delayDuration === void 0 ? E : _e$delayDuration,\n    _e$skipDelayDuration = e.skipDelayDuration,\n    r = _e$skipDelayDuration === void 0 ? 300 : _e$skipDelayDuration,\n    n = e.children,\n    _T$useState = T.useState(!0),\n    _T$useState2 = _slicedToArray(_T$useState, 2),\n    i = _T$useState2[0],\n    a = _T$useState2[1],\n    l = T.useRef(0);\n  return T.useEffect(function () {\n    var e = l.current;\n    return function () {\n      return window.clearTimeout(e);\n    };\n  }, []), /*#__PURE__*/T.createElement(v, {\n    scope: o,\n    isOpenDelayed: i,\n    delayDuration: t,\n    onOpen: T.useCallback(function () {\n      window.clearTimeout(l.current), a(!1);\n    }, []),\n    onClose: T.useCallback(function () {\n      window.clearTimeout(l.current), l.current = window.setTimeout(function () {\n        return a(!0);\n      }, r);\n    }, [r])\n  }, n);\n}; /*#__PURE__*/\nvar _w3 = w(\"Tooltip\"),\n  _w4 = _slicedToArray(_w3, 2),\n  y = _w4[0],\n  _ = _w4[1];\nexport var Tooltip = function Tooltip(o) {\n  var t = o.__scopeTooltip,\n    r = o.children,\n    i = o.open,\n    _o$defaultOpen = o.defaultOpen,\n    a = _o$defaultOpen === void 0 ? !1 : _o$defaultOpen,\n    l = o.onOpenChange,\n    c = o.delayDuration,\n    s = b(\"Tooltip\", t),\n    u = g(t),\n    _T$useState3 = T.useState(null),\n    _T$useState4 = _slicedToArray(_T$useState3, 2),\n    d = _T$useState4[0],\n    m = _T$useState4[1],\n    f = e(),\n    C = T.useRef(0),\n    w = null != c ? c : s.delayDuration,\n    x = T.useRef(!1),\n    E = s.onOpen,\n    v = s.onClose,\n    _p = p({\n      prop: i,\n      defaultProp: a,\n      onChange: function onChange(e) {\n        e && (document.dispatchEvent(new CustomEvent(\"tooltip.open\")), E()), null == l || l(e);\n      }\n    }),\n    _p2 = _slicedToArray(_p, 2),\n    _p2$ = _p2[0],\n    _ = _p2$ === void 0 ? !1 : _p2$,\n    h = _p2[1],\n    k = T.useMemo(function () {\n      return _ ? x.current ? \"delayed-open\" : \"instant-open\" : \"closed\";\n    }, [_]),\n    D = T.useCallback(function () {\n      window.clearTimeout(C.current), x.current = !1, h(!0);\n    }, [h]),\n    O = T.useCallback(function () {\n      window.clearTimeout(C.current), C.current = window.setTimeout(function () {\n        x.current = !0, h(!0);\n      }, w);\n    }, [w, h]);\n  return T.useEffect(function () {\n    return function () {\n      return window.clearTimeout(C.current);\n    };\n  }, []), /*#__PURE__*/T.createElement(n.Root, u, /*#__PURE__*/T.createElement(y, {\n    scope: t,\n    contentId: f,\n    open: _,\n    stateAttribute: k,\n    trigger: d,\n    onTriggerChange: m,\n    onTriggerEnter: T.useCallback(function () {\n      s.isOpenDelayed ? O() : D();\n    }, [s.isOpenDelayed, O, D]),\n    onOpen: T.useCallback(D, [D]),\n    onClose: T.useCallback(function () {\n      window.clearTimeout(C.current), h(!1), v();\n    }, [h, v])\n  }, r));\n}; /*#__PURE__*/\nexport var TooltipTrigger = /*#__PURE__*/T.forwardRef(function (e, o) {\n  var t = e.__scopeTooltip,\n    r = _objectWithoutProperties(e, _excluded),\n    i = _(\"TooltipTrigger\", t),\n    l = g(t),\n    c = m(o, i.onTriggerChange),\n    s = T.useRef(!1),\n    u = T.useCallback(function () {\n      return s.current = !1;\n    }, []);\n  return T.useEffect(function () {\n    return function () {\n      return document.removeEventListener(\"mouseup\", u);\n    };\n  }, [u]), /*#__PURE__*/T.createElement(n.Anchor, C({\n    asChild: !0\n  }, l), /*#__PURE__*/T.createElement(a.button, C({\n    \"aria-describedby\": i.open ? i.contentId : void 0,\n    \"data-state\": i.stateAttribute\n  }, r, {\n    ref: c,\n    onMouseEnter: f(e.onMouseEnter, i.onTriggerEnter),\n    onMouseLeave: f(e.onMouseLeave, i.onClose),\n    onMouseDown: f(e.onMouseDown, function () {\n      i.onClose(), s.current = !0, document.addEventListener(\"mouseup\", u, {\n        once: !0\n      });\n    }),\n    onFocus: f(e.onFocus, function () {\n      s.current || i.onOpen();\n    }),\n    onBlur: f(e.onBlur, i.onClose),\n    onClick: f(e.onClick, i.onClose)\n  })));\n}); /*#__PURE__*/\nexport var TooltipContent = /*#__PURE__*/T.forwardRef(function (e, o) {\n  var t = e.forceMount,\n    r = _objectWithoutProperties(e, _excluded2),\n    n = _(\"TooltipContent\", e.__scopeTooltip); /*#__PURE__*/\n  return T.createElement(l, {\n    present: t || n.open\n  }, /*#__PURE__*/T.createElement(h, C({\n    ref: o\n  }, r)));\n});\nvar h = /*#__PURE__*/T.forwardRef(function (e, i) {\n  var a = e.__scopeTooltip,\n    l = e.children,\n    c = e[\"aria-label\"],\n    _e$portalled = e.portalled,\n    s = _e$portalled === void 0 ? !0 : _e$portalled,\n    p = _objectWithoutProperties(e, _excluded3),\n    d = _(\"TooltipContent\", a),\n    m = g(a),\n    f = s ? r : T.Fragment,\n    w = d.onClose;\n  return u(function () {\n    return w();\n  }), T.useEffect(function () {\n    return document.addEventListener(\"tooltip.open\", w), function () {\n      return document.removeEventListener(\"tooltip.open\", w);\n    };\n  }, [w]), /*#__PURE__*/T.createElement(f, null, /*#__PURE__*/T.createElement(k, {\n    __scopeTooltip: a\n  }), /*#__PURE__*/T.createElement(n.Content, C({\n    \"data-state\": d.stateAttribute\n  }, m, p, {\n    ref: i,\n    style: _objectSpread(_objectSpread({}, p.style), {}, {\n      \"--radix-tooltip-content-transform-origin\": \"var(--radix-popper-transform-origin)\"\n    })\n  }), /*#__PURE__*/T.createElement(t, null, l), /*#__PURE__*/T.createElement(o.Root, {\n    id: d.contentId,\n    role: \"tooltip\"\n  }, c || l)));\n}); /*#__PURE__*/\nexport var TooltipArrow = /*#__PURE__*/T.forwardRef(function (e, o) {\n  var t = e.__scopeTooltip,\n    r = _objectWithoutProperties(e, _excluded4),\n    i = g(t); /*#__PURE__*/\n  return T.createElement(n.Arrow, C({}, i, r, {\n    ref: o\n  }));\n}); /*#__PURE__*/\nfunction k(e) {\n  var o = e.__scopeTooltip,\n    t = _(\"CheckTriggerMoved\", o),\n    r = c(t.trigger),\n    n = null == r ? void 0 : r.left,\n    i = s(n),\n    a = null == r ? void 0 : r.top,\n    l = s(a),\n    u = t.onClose;\n  return T.useEffect(function () {\n    (void 0 !== i && i !== n || void 0 !== l && l !== a) && u();\n  }, [u, i, l, n, a]), null;\n}\nexport var Provider = TooltipProvider;\nexport var Root = Tooltip;\nexport var Trigger = TooltipTrigger;\nexport var Content = TooltipContent;\nexport var Arrow = TooltipArrow;","map":{"version":3,"sources":["packages/react/tooltip/src/Tooltip.tsx"],"names":["createTooltipContext","createTooltipScope","createContextScope","createPopperScope","usePopperScope","DEFAULT_DELAY_DURATION","TooltipProviderContextProvider","useTooltipProviderContext","isOpenDelayed","delayDuration","onOpen","onClose","TooltipProvider","props","__scopeTooltip","skipDelayDuration","children","setIsOpenDelayed","React","useState","skipDelayTimerRef","useRef","useEffect","skipDelayTimer","current","window","clearTimeout","_react","$badf5d6f88b7e9fa4e0bb85d71c0396a$var$TooltipProviderContextProvider","scope","useCallback","setTimeout","TooltipContextProvider","useTooltipContext","Tooltip","open","openProp","defaultOpen","onOpenChange","delayDurationProp","context","popperScope","trigger","setTrigger","contentId","useId","openTimerRef","wasOpenDelayedRef","setOpen","useControllableState","prop","defaultProp","onChange","document","dispatchEvent","CustomEvent","stateAttribute","useMemo","handleOpen","handleDelayedOpen","_radixUiReactPopper","Root","$badf5d6f88b7e9fa4e0bb85d71c0396a$var$TooltipContextProvider","onTriggerChange","onTriggerEnter","TooltipTrigger","forwardRef","forwardedRef","triggerProps","composedTriggerRef","useComposedRefs","isMouseDownRef","handleMouseUp","removeEventListener","Anchor","asChild","Primitive","button","undefined","ref","onMouseEnter","composeEventHandlers","onMouseLeave","onMouseDown","addEventListener","once","onFocus","onBlur","onClick","TooltipContent","forceMount","contentProps","Presence","present","$badf5d6f88b7e9fa4e0bb85d71c0396a$var$TooltipContentImpl","TooltipContentImpl","ariaLabel","portalled","PortalWrapper","Portal","Fragment","useEscapeKeydown","$badf5d6f88b7e9fa4e0bb85d71c0396a$var$CheckTriggerMoved","Content","style","Slottable","_radixUiReactVisuallyHidden","id","role","TooltipArrow","arrowProps","Arrow","CheckTriggerMoved","triggerRect","useRect","triggerLeft","left","previousTriggerLeft","usePrevious","triggerTop","top","previousTriggerTop","handleClose","Provider","Trigger"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useRect } from '@radix-ui/react-use-rect';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal } from '@radix-ui/react-portal';\nimport { Slottable } from '@radix-ui/react-slot';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype ScopedProps<P = {}> = P & { __scopeTooltip?: Scope };\nconst [createTooltipContext, createTooltipScope] = createContextScope('Tooltip', [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipProvider\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROVIDER_NAME = 'TooltipProvider';\nconst DEFAULT_DELAY_DURATION = 700;\nconst TOOLTIP_OPEN = 'tooltip.open';\n\ntype TooltipProviderContextValue = {\n  isOpenDelayed: boolean;\n  delayDuration: number;\n  onOpen(): void;\n  onClose(): void;\n};\n\nconst [TooltipProviderContextProvider, useTooltipProviderContext] =\n  createTooltipContext<TooltipProviderContextValue>(PROVIDER_NAME, {\n    isOpenDelayed: true,\n    delayDuration: DEFAULT_DELAY_DURATION,\n    onOpen: () => {},\n    onClose: () => {},\n  });\n\ninterface TooltipProviderProps {\n  /**\n   * The duration from when the mouse enters the trigger until the tooltip gets opened.\n   * @defaultValue 700\n   */\n  delayDuration?: number;\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number;\n  children: React.ReactNode;\n}\n\nconst TooltipProvider: React.FC<TooltipProviderProps> = (\n  props: ScopedProps<TooltipProviderProps>\n) => {\n  const {\n    __scopeTooltip,\n    delayDuration = DEFAULT_DELAY_DURATION,\n    skipDelayDuration = 300,\n    children,\n  } = props;\n  const [isOpenDelayed, setIsOpenDelayed] = React.useState(true);\n  const skipDelayTimerRef = React.useRef(0);\n\n  React.useEffect(() => {\n    const skipDelayTimer = skipDelayTimerRef.current;\n    return () => window.clearTimeout(skipDelayTimer);\n  }, []);\n\n  return (\n    <TooltipProviderContextProvider\n      scope={__scopeTooltip}\n      isOpenDelayed={isOpenDelayed}\n      delayDuration={delayDuration}\n      onOpen={React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        setIsOpenDelayed(false);\n      }, [])}\n      onClose={React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        skipDelayTimerRef.current = window.setTimeout(\n          () => setIsOpenDelayed(true),\n          skipDelayDuration\n        );\n      }, [skipDelayDuration])}\n    >\n      {children}\n    </TooltipProviderContextProvider>\n  );\n};\n\nTooltipProvider.displayName = PROVIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Tooltip\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOOLTIP_NAME = 'Tooltip';\n\ntype TooltipContextValue = {\n  contentId: string;\n  open: boolean;\n  stateAttribute: 'closed' | 'delayed-open' | 'instant-open';\n  trigger: TooltipTriggerElement | null;\n  onTriggerChange(trigger: TooltipTriggerElement | null): void;\n  onTriggerEnter(): void;\n  onOpen(): void;\n  onClose(): void;\n};\n\nconst [TooltipContextProvider, useTooltipContext] =\n  createTooltipContext<TooltipContextValue>(TOOLTIP_NAME);\n\ninterface TooltipProps {\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n\n  /**\n   * The duration from when the mouse enters the trigger until the tooltip gets opened. This will\n   * override the prop with the same name passed to Provider.\n   * @defaultValue 700\n   */\n  delayDuration?: number;\n  children?: React.ReactNode;\n}\n\nconst Tooltip: React.FC<TooltipProps> = (props: ScopedProps<TooltipProps>) => {\n  const {\n    __scopeTooltip,\n    children,\n    open: openProp,\n    defaultOpen = false,\n    onOpenChange,\n    delayDuration: delayDurationProp,\n  } = props;\n  const context = useTooltipProviderContext(TOOLTIP_NAME, __scopeTooltip);\n  const popperScope = usePopperScope(__scopeTooltip);\n  const [trigger, setTrigger] = React.useState<HTMLButtonElement | null>(null);\n  const contentId = useId();\n  const openTimerRef = React.useRef(0);\n  const delayDuration = delayDurationProp ?? context.delayDuration;\n  const wasOpenDelayedRef = React.useRef(false);\n  const { onOpen, onClose } = context;\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: (open) => {\n      if (open) {\n        // we dispatch here so `TooltipProvider` isn't required to\n        // ensure other tooltips are aware of this one opening.\n        document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN));\n        onOpen();\n      }\n      onOpenChange?.(open);\n    },\n  });\n  const stateAttribute = React.useMemo(() => {\n    return open ? (wasOpenDelayedRef.current ? 'delayed-open' : 'instant-open') : 'closed';\n  }, [open]);\n\n  const handleOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    wasOpenDelayedRef.current = false;\n    setOpen(true);\n  }, [setOpen]);\n\n  const handleDelayedOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    openTimerRef.current = window.setTimeout(() => {\n      wasOpenDelayedRef.current = true;\n      setOpen(true);\n    }, delayDuration);\n  }, [delayDuration, setOpen]);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(openTimerRef.current);\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <TooltipContextProvider\n        scope={__scopeTooltip}\n        contentId={contentId}\n        open={open}\n        stateAttribute={stateAttribute}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        onTriggerEnter={React.useCallback(() => {\n          if (context.isOpenDelayed) handleDelayedOpen();\n          else handleOpen();\n        }, [context.isOpenDelayed, handleDelayedOpen, handleOpen])}\n        onOpen={React.useCallback(handleOpen, [handleOpen])}\n        onClose={React.useCallback(() => {\n          window.clearTimeout(openTimerRef.current);\n          setOpen(false);\n          onClose();\n        }, [setOpen, onClose])}\n      >\n        {children}\n      </TooltipContextProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nTooltip.displayName = TOOLTIP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TooltipTrigger';\n\ntype TooltipTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TooltipTriggerProps extends PrimitiveButtonProps {}\n\nconst TooltipTrigger = React.forwardRef<TooltipTriggerElement, TooltipTriggerProps>(\n  (props: ScopedProps<TooltipTriggerProps>, forwardedRef) => {\n    const { __scopeTooltip, ...triggerProps } = props;\n    const context = useTooltipContext(TRIGGER_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const isMouseDownRef = React.useRef(false);\n    const handleMouseUp = React.useCallback(() => (isMouseDownRef.current = false), []);\n\n    React.useEffect(() => {\n      return () => document.removeEventListener('mouseup', handleMouseUp);\n    }, [handleMouseUp]);\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          // We purposefully avoid adding `type=button` here because tooltip triggers are also\n          // commonly anchors and the anchor `type` attribute signifies MIME type.\n          aria-describedby={context.open ? context.contentId : undefined}\n          data-state={context.stateAttribute}\n          {...triggerProps}\n          ref={composedTriggerRef}\n          onMouseEnter={composeEventHandlers(props.onMouseEnter, context.onTriggerEnter)}\n          onMouseLeave={composeEventHandlers(props.onMouseLeave, context.onClose)}\n          onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n            context.onClose();\n            isMouseDownRef.current = true;\n            document.addEventListener('mouseup', handleMouseUp, { once: true });\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            if (!isMouseDownRef.current) context.onOpen();\n          })}\n          onBlur={composeEventHandlers(props.onBlur, context.onClose)}\n          // Handle anything that the browser considers a click for the element type if\n          // not using pointer e.g. Space keyup and Enter keydown\n          onClick={composeEventHandlers(props.onClick, context.onClose)}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nTooltipTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TooltipContent';\n\ntype TooltipContentElement = TooltipContentImplElement;\ninterface TooltipContentProps extends TooltipContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TooltipContent = React.forwardRef<TooltipContentElement, TooltipContentProps>(\n  (props: ScopedProps<TooltipContentProps>, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n    return (\n      <Presence present={forceMount || context.open}>\n        <TooltipContentImpl ref={forwardedRef} {...contentProps} />\n      </Presence>\n    );\n  }\n);\n\ntype TooltipContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype PopperContentProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface TooltipContentImplProps extends PopperContentProps {\n  /**\n   * A more descriptive label for accessibility purpose\n   */\n  'aria-label'?: string;\n\n  /**\n   * Whether the Tooltip should render in a Portal\n   * (default: `true`)\n   */\n  portalled?: boolean;\n}\n\nconst TooltipContentImpl = React.forwardRef<TooltipContentImplElement, TooltipContentImplProps>(\n  (props: ScopedProps<TooltipContentImplProps>, forwardedRef) => {\n    const {\n      __scopeTooltip,\n      children,\n      'aria-label': ariaLabel,\n      portalled = true,\n      ...contentProps\n    } = props;\n    const context = useTooltipContext(CONTENT_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const PortalWrapper = portalled ? Portal : React.Fragment;\n    const { onClose } = context;\n\n    useEscapeKeydown(() => onClose());\n\n    React.useEffect(() => {\n      // Close this tooltip if another one opens\n      document.addEventListener(TOOLTIP_OPEN, onClose);\n      return () => document.removeEventListener(TOOLTIP_OPEN, onClose);\n    }, [onClose]);\n\n    return (\n      <PortalWrapper>\n        <CheckTriggerMoved __scopeTooltip={__scopeTooltip} />\n        <PopperPrimitive.Content\n          data-state={context.stateAttribute}\n          {...popperScope}\n          {...contentProps}\n          ref={forwardedRef}\n          style={{\n            ...contentProps.style,\n            // re-namespace exposed content custom property\n            ['--radix-tooltip-content-transform-origin' as any]:\n              'var(--radix-popper-transform-origin)',\n          }}\n        >\n          <Slottable>{children}</Slottable>\n          <VisuallyHiddenPrimitive.Root id={context.contentId} role=\"tooltip\">\n            {ariaLabel || children}\n          </VisuallyHiddenPrimitive.Root>\n        </PopperPrimitive.Content>\n      </PortalWrapper>\n    );\n  }\n);\n\nTooltipContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'TooltipArrow';\n\ntype TooltipArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface TooltipArrowProps extends PopperArrowProps {}\n\nconst TooltipArrow = React.forwardRef<TooltipArrowElement, TooltipArrowProps>(\n  (props: ScopedProps<TooltipArrowProps>, forwardedRef) => {\n    const { __scopeTooltip, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeTooltip);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nTooltipArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction CheckTriggerMoved(props: ScopedProps<{}>) {\n  const { __scopeTooltip } = props;\n  const context = useTooltipContext('CheckTriggerMoved', __scopeTooltip);\n\n  const triggerRect = useRect(context.trigger);\n  const triggerLeft = triggerRect?.left;\n  const previousTriggerLeft = usePrevious(triggerLeft);\n  const triggerTop = triggerRect?.top;\n  const previousTriggerTop = usePrevious(triggerTop);\n  const handleClose = context.onClose;\n\n  React.useEffect(() => {\n    // checking if the user has scrolled…\n    const hasTriggerMoved =\n      (previousTriggerLeft !== undefined && previousTriggerLeft !== triggerLeft) ||\n      (previousTriggerTop !== undefined && previousTriggerTop !== triggerTop);\n\n    if (hasTriggerMoved) {\n      handleClose();\n    }\n  }, [handleClose, previousTriggerLeft, previousTriggerTop, triggerLeft, triggerTop]);\n\n  return null;\n}\n\nconst Provider = TooltipProvider;\nconst Root = Tooltip;\nconst Trigger = TooltipTrigger;\nconst Content = TooltipContent;\nconst Arrow = TooltipArrow;\n\nexport {\n  createTooltipScope,\n  //\n  TooltipProvider,\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n  TooltipArrow,\n  //\n  Provider,\n  Root,\n  Trigger,\n  Content,\n  Arrow,\n};\nexport type { TooltipProps, TooltipTriggerProps, TooltipContentProps, TooltipArrowProps };\n"]},"metadata":{},"sourceType":"module"}
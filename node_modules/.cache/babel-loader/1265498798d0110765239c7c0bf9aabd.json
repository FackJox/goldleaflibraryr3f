{"ast":null,"code":"import _objectSpread from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/run/media/private/jack/Media/Projects/GoldenLeaf/LibraryR3F/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"__scopePopper\", \"virtualRef\"],\n  _excluded2 = [\"__scopePopper\", \"side\", \"sideOffset\", \"align\", \"alignOffset\", \"collisionTolerance\", \"avoidCollisions\"],\n  _excluded3 = [\"__scopePopper\", \"offset\"];\nimport * as e from \"@radix-ui/react-arrow\";\nimport { Primitive as o } from \"@radix-ui/react-primitive\";\nimport { useSize as r } from \"@radix-ui/react-use-size\";\nimport { useRect as t } from \"@radix-ui/react-use-rect\";\nimport { createContextScope as n } from \"@radix-ui/react-context\";\nimport { useComposedRefs as i } from \"@radix-ui/react-compose-refs\";\nimport { getPlacementData as p } from \"@radix-ui/popper\";\nimport * as s from \"react\";\nimport a from \"@babel/runtime/helpers/esm/extends\";\nvar _n = n(\"Popper\"),\n  _n2 = _slicedToArray(_n, 2),\n  c = _n2[0],\n  l = _n2[1];\nexport { l as createPopperScope };\nvar _c = c(\"Popper\"),\n  _c2 = _slicedToArray(_c, 2),\n  f = _c2[0],\n  d = _c2[1];\nexport var Popper = function Popper(e) {\n  var o = e.__scopePopper,\n    r = e.children,\n    _s$useState = s.useState(null),\n    _s$useState2 = _slicedToArray(_s$useState, 2),\n    t = _s$useState2[0],\n    n = _s$useState2[1]; /*#__PURE__*/\n  return s.createElement(f, {\n    scope: o,\n    anchor: t,\n    onAnchorChange: n\n  }, r);\n}; /*#__PURE__*/\nexport var PopperAnchor = /*#__PURE__*/s.forwardRef(function (e, r) {\n  var t = e.__scopePopper,\n    n = e.virtualRef,\n    p = _objectWithoutProperties(e, _excluded),\n    c = d(\"PopperAnchor\", t),\n    l = s.useRef(null),\n    f = i(r, l);\n  return s.useEffect(function () {\n    c.onAnchorChange((null == n ? void 0 : n.current) || l.current);\n  }), n ? null : /*#__PURE__*/s.createElement(o.div, a({}, p, {\n    ref: f\n  }));\n}); /*#__PURE__*/\nvar _c3 = c(\"PopperContent\"),\n  _c4 = _slicedToArray(_c3, 2),\n  u = _c4[0],\n  m = _c4[1];\nexport var PopperContent = /*#__PURE__*/s.forwardRef(function (e, n) {\n  var c = e.__scopePopper,\n    _e$side = e.side,\n    l = _e$side === void 0 ? \"bottom\" : _e$side,\n    f = e.sideOffset,\n    _e$align = e.align,\n    m = _e$align === void 0 ? \"center\" : _e$align,\n    w = e.alignOffset,\n    h = e.collisionTolerance,\n    _e$avoidCollisions = e.avoidCollisions,\n    x = _e$avoidCollisions === void 0 ? !0 : _e$avoidCollisions,\n    v = _objectWithoutProperties(e, _excluded2),\n    P = d(\"PopperContent\", c),\n    _s$useState3 = s.useState(),\n    _s$useState4 = _slicedToArray(_s$useState3, 2),\n    A = _s$useState4[0],\n    g = _s$useState4[1],\n    E = t(P.anchor),\n    _s$useState5 = s.useState(null),\n    _s$useState6 = _slicedToArray(_s$useState5, 2),\n    y = _s$useState6[0],\n    C = _s$useState6[1],\n    S = r(y),\n    _s$useState7 = s.useState(null),\n    _s$useState8 = _slicedToArray(_s$useState7, 2),\n    R = _s$useState8[0],\n    O = _s$useState8[1],\n    _ = r(R),\n    b = i(n, function (e) {\n      return C(e);\n    }),\n    z = function () {\n      var _s$useState9 = s.useState(void 0),\n        _s$useState10 = _slicedToArray(_s$useState9, 2),\n        e = _s$useState10[0],\n        o = _s$useState10[1];\n      return s.useEffect(function () {\n        var e;\n        function r() {\n          o({\n            width: window.innerWidth,\n            height: window.innerHeight\n          });\n        }\n        function t() {\n          window.clearTimeout(e), e = window.setTimeout(r, 100);\n        }\n        return r(), window.addEventListener(\"resize\", t), function () {\n          return window.removeEventListener(\"resize\", t);\n        };\n      }, []), e;\n    }(),\n    T = z ? DOMRect.fromRect(_objectSpread(_objectSpread({}, z), {}, {\n      x: 0,\n      y: 0\n    })) : void 0,\n    _p = p({\n      anchorRect: E,\n      popperSize: S,\n      arrowSize: _,\n      arrowOffset: A,\n      side: l,\n      sideOffset: f,\n      align: m,\n      alignOffset: w,\n      shouldAvoidCollisions: x,\n      collisionBoundariesRect: T,\n      collisionTolerance: h\n    }),\n    k = _p.popperStyles,\n    L = _p.arrowStyles,\n    B = _p.placedSide,\n    D = _p.placedAlign,\n    H = void 0 !== B; /*#__PURE__*/\n  return s.createElement(\"div\", {\n    style: k,\n    \"data-radix-popper-content-wrapper\": \"\"\n  }, /*#__PURE__*/s.createElement(u, {\n    scope: c,\n    arrowStyles: L,\n    onArrowChange: O,\n    onArrowOffsetChange: g\n  }, /*#__PURE__*/s.createElement(o.div, a({\n    \"data-side\": B,\n    \"data-align\": D\n  }, v, {\n    style: _objectSpread(_objectSpread({}, v.style), {}, {\n      animation: H ? void 0 : \"none\"\n    }),\n    ref: b\n  }))));\n}); /*#__PURE__*/\nexport var PopperArrow = /*#__PURE__*/s.forwardRef(function (o, r) {\n  var t = o.__scopePopper,\n    n = o.offset,\n    i = _objectWithoutProperties(o, _excluded3),\n    p = m(\"PopperArrow\", t),\n    c = p.onArrowOffsetChange;\n  return s.useEffect(function () {\n    return c(n);\n  }, [c, n]), /*#__PURE__*/s.createElement(\"span\", {\n    style: _objectSpread(_objectSpread({}, p.arrowStyles), {}, {\n      pointerEvents: \"none\"\n    })\n  }, /*#__PURE__*/s.createElement(\"span\", {\n    ref: p.onArrowChange,\n    style: {\n      display: \"inline-block\",\n      verticalAlign: \"top\",\n      pointerEvents: \"auto\"\n    }\n  }, /*#__PURE__*/s.createElement(e.Root, a({}, i, {\n    ref: r,\n    style: _objectSpread(_objectSpread({}, i.style), {}, {\n      display: \"block\"\n    })\n  }))));\n}); /*#__PURE__*/\nexport var Root = Popper;\nexport var Anchor = PopperAnchor;\nexport var Content = PopperContent;\nexport var Arrow = PopperArrow;","map":{"version":3,"sources":["packages/react/popper/src/Popper.tsx"],"names":["createPopperContext","createPopperScope","createContextScope","PopperProvider","usePopperContext","Popper","props","__scopePopper","children","anchor","setAnchor","React","useState","_react","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperProvider","scope","onAnchorChange","PopperAnchor","forwardRef","forwardedRef","virtualRef","anchorProps","context","ref","useRef","composedRefs","useComposedRefs","useEffect","current","Primitive","div","PopperContentProvider","useContentContext","PopperContent","side","sideOffset","align","alignOffset","collisionTolerance","avoidCollisions","contentProps","arrowOffset","setArrowOffset","anchorRect","useRect","content","setContent","contentSize","useSize","arrow","setArrow","arrowSize","node","windowSize","useWindowSize","collisionBoundariesRect","DOMRect","fromRect","x","y","undefined","popperStyles","arrowStyles","placedSide","placedAlign","getPlacementData","popperSize","shouldAvoidCollisions","isPlaced","style","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperContentProvider","onArrowChange","onArrowOffsetChange","animation","PopperArrow","offset","arrowProps","pointerEvents","display","verticalAlign","_radixUiReactArrow","Root","setWindowSize","debounceTimerId","updateWindowSize","width","window","innerWidth","height","innerHeight","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","Anchor","Content","Arrow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getPlacementData } from '@radix-ui/popper';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useRect } from '@radix-ui/react-use-rect';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Side, Align } from '@radix-ui/popper';\nimport type { Measurable } from '@radix-ui/rect';\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  arrowStyles: React.CSSProperties;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  onArrowOffsetChange(offset?: number): void;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  collisionTolerance?: number;\n  avoidCollisions?: boolean;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset,\n      align = 'center',\n      alignOffset,\n      collisionTolerance,\n      avoidCollisions = true,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n    const [arrowOffset, setArrowOffset] = React.useState<number>();\n    const anchorRect = useRect(context.anchor);\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const contentSize = useSize(content);\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const windowSize = useWindowSize();\n    const collisionBoundariesRect = windowSize\n      ? DOMRect.fromRect({ ...windowSize, x: 0, y: 0 })\n      : undefined;\n\n    const { popperStyles, arrowStyles, placedSide, placedAlign } = getPlacementData({\n      anchorRect,\n      popperSize: contentSize,\n      arrowSize,\n\n      // config\n      arrowOffset,\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      shouldAvoidCollisions: avoidCollisions,\n      collisionBoundariesRect,\n      collisionTolerance,\n    });\n    const isPlaced = placedSide !== undefined;\n\n    return (\n      <div style={popperStyles} data-radix-popper-content-wrapper=\"\">\n        <PopperContentProvider\n          scope={__scopePopper}\n          arrowStyles={arrowStyles}\n          onArrowChange={setArrow}\n          onArrowOffsetChange={setArrowOffset}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPlaced ? 'none' : undefined,\n            }}\n            ref={composedRefs}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = Radix.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {\n  offset?: number;\n}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, offset, ...arrowProps } = props;\n  const context = useContentContext(ARROW_NAME, __scopePopper);\n  const { onArrowOffsetChange } = context;\n\n  // send the Arrow's offset up to Popper\n  React.useEffect(() => onArrowOffsetChange(offset), [onArrowOffsetChange, offset]);\n\n  return (\n    <span style={{ ...context.arrowStyles, pointerEvents: 'none' }}>\n      <span\n        // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n        // doesn't report size as we'd expect on SVG elements.\n        // it reports their bounding box which is effectively the largest path inside the SVG.\n        ref={context.onArrowChange}\n        style={{\n          display: 'inline-block',\n          verticalAlign: 'top',\n          pointerEvents: 'auto',\n        }}\n      >\n        <ArrowPrimitive.Root\n          {...arrowProps}\n          ref={forwardedRef}\n          style={{\n            ...arrowProps.style,\n            // ensures the element can be measured correctly (mostly for if SVG)\n            display: 'block',\n          }}\n        />\n      </span>\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS = 100;\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = React.useState<{ width: number; height: number } | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    let debounceTimerId: number;\n\n    function updateWindowSize() {\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    function handleResize() {\n      window.clearTimeout(debounceTimerId);\n      debounceTimerId = window.setTimeout(updateWindowSize, WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS);\n    }\n\n    updateWindowSize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n"]},"metadata":{},"sourceType":"module"}